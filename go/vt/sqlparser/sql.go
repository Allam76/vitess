// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const ROUTINE = 57589
const TABLESPACE = 57590
const CLIENT = 57591
const SLAVE = 57592
const EVENT = 57593
const EXECUTE = 57594
const FILE = 57595
const RELOAD = 57596
const REPLICATION = 57597
const SHUTDOWN = 57598
const SUPER = 57599
const USAGE = 57600
const BEGIN = 57601
const START = 57602
const TRANSACTION = 57603
const COMMIT = 57604
const ROLLBACK = 57605
const SAVEPOINT = 57606
const WORK = 57607
const RELEASE = 57608
const BIT = 57609
const TINYINT = 57610
const SMALLINT = 57611
const MEDIUMINT = 57612
const INT = 57613
const INTEGER = 57614
const BIGINT = 57615
const INTNUM = 57616
const SERIAL = 57617
const REAL = 57618
const DOUBLE = 57619
const FLOAT_TYPE = 57620
const DECIMAL = 57621
const NUMERIC = 57622
const DEC = 57623
const FIXED = 57624
const PRECISION = 57625
const TIME = 57626
const TIMESTAMP = 57627
const DATETIME = 57628
const YEAR = 57629
const CHAR = 57630
const VARCHAR = 57631
const BOOL = 57632
const CHARACTER = 57633
const VARBINARY = 57634
const NCHAR = 57635
const NVARCHAR = 57636
const NATIONAL = 57637
const VARYING = 57638
const TEXT = 57639
const TINYTEXT = 57640
const MEDIUMTEXT = 57641
const LONGTEXT = 57642
const LONG = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const LOCAL = 57658
const LOW_PRIORITY = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const COLLATION = 57666
const DATABASES = 57667
const SCHEMAS = 57668
const TABLES = 57669
const FULL = 57670
const PROCESSLIST = 57671
const COLUMNS = 57672
const FIELDS = 57673
const ENGINES = 57674
const PLUGINS = 57675
const NAMES = 57676
const CHARSET = 57677
const GLOBAL = 57678
const SESSION = 57679
const ISOLATION = 57680
const LEVEL = 57681
const READ = 57682
const WRITE = 57683
const ONLY = 57684
const REPEATABLE = 57685
const COMMITTED = 57686
const UNCOMMITTED = 57687
const SERIALIZABLE = 57688
const CURRENT_TIMESTAMP = 57689
const DATABASE = 57690
const CURRENT_DATE = 57691
const CURRENT_USER = 57692
const CURRENT_TIME = 57693
const LOCALTIME = 57694
const LOCALTIMESTAMP = 57695
const UTC_DATE = 57696
const UTC_TIME = 57697
const UTC_TIMESTAMP = 57698
const REPLACE = 57699
const CONVERT = 57700
const CAST = 57701
const SUBSTR = 57702
const SUBSTRING = 57703
const TRIM = 57704
const LEADING = 57705
const TRAILING = 57706
const BOTH = 57707
const GROUP_CONCAT = 57708
const SEPARATOR = 57709
const TIMESTAMPADD = 57710
const TIMESTAMPDIFF = 57711
const OVER = 57712
const WINDOW = 57713
const GROUPING = 57714
const GROUPS = 57715
const CURRENT = 57716
const ROWS = 57717
const RANGE = 57718
const AVG = 57719
const BIT_AND = 57720
const BIT_OR = 57721
const BIT_XOR = 57722
const COUNT = 57723
const JSON_ARRAYAGG = 57724
const JSON_OBJECTAGG = 57725
const MAX = 57726
const MIN = 57727
const STDDEV_POP = 57728
const STDDEV = 57729
const STD = 57730
const STDDEV_SAMP = 57731
const SUM = 57732
const VAR_POP = 57733
const VARIANCE = 57734
const VAR_SAMP = 57735
const CUME_DIST = 57736
const DENSE_RANK = 57737
const FIRST_VALUE = 57738
const LAG = 57739
const LAST_VALUE = 57740
const LEAD = 57741
const NTH_VALUE = 57742
const NTILE = 57743
const ROW_NUMBER = 57744
const PERCENT_RANK = 57745
const RANK = 57746
const MATCH = 57747
const AGAINST = 57748
const BOOLEAN = 57749
const LANGUAGE = 57750
const WITH = 57751
const QUERY = 57752
const EXPANSION = 57753
const UNUSED = 57754
const ARRAY = 57755
const DESCRIPTION = 57756
const EMPTY = 57757
const JSON_TABLE = 57758
const LATERAL = 57759
const MEMBER = 57760
const RECURSIVE = 57761
const ACTIVE = 57762
const BUCKETS = 57763
const CLONE = 57764
const COMPONENT = 57765
const DEFINITION = 57766
const ENFORCED = 57767
const EXCLUDE = 57768
const FOLLOWING = 57769
const GEOMCOLLECTION = 57770
const GET_MASTER_PUBLIC_KEY = 57771
const HISTOGRAM = 57772
const HISTORY = 57773
const INACTIVE = 57774
const INVISIBLE = 57775
const LOCKED = 57776
const MASTER_COMPRESSION_ALGORITHMS = 57777
const MASTER_PUBLIC_KEY_PATH = 57778
const MASTER_TLS_CIPHERSUITES = 57779
const MASTER_ZSTD_COMPRESSION_LEVEL = 57780
const NESTED = 57781
const NETWORK_NAMESPACE = 57782
const NOWAIT = 57783
const NULLS = 57784
const OJ = 57785
const OLD = 57786
const ORDINALITY = 57787
const ORGANIZATION = 57788
const OTHERS = 57789
const PATH = 57790
const PERSIST = 57791
const PERSIST_ONLY = 57792
const PRECEDING = 57793
const PRIVILEGE_CHECKS_USER = 57794
const PROCESS = 57795
const REFERENCE = 57796
const REQUIRE_ROW_FORMAT = 57797
const RESOURCE = 57798
const RESPECT = 57799
const RESTART = 57800
const RETAIN = 57801
const SECONDARY = 57802
const SECONDARY_ENGINE = 57803
const SECONDARY_LOAD = 57804
const SECONDARY_UNLOAD = 57805
const SKIP = 57806
const SRID = 57807
const THREAD_PRIORITY = 57808
const TIES = 57809
const VCPU = 57810
const VISIBLE = 57811
const SYSTEM = 57812
const INFILE = 57813

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 1009,
	-1, 42,
	141, 1073,
	142, 1091,
	-2, 230,
	-1, 48,
	181, 653,
	182, 653,
	-2, 643,
	-1, 500,
	128, 1101,
	-2, 1095,
	-1, 501,
	128, 1102,
	-2, 1096,
	-1, 605,
	98, 1366,
	128, 1366,
	-2, 1057,
	-1, 606,
	98, 1480,
	128, 1480,
	-2, 1058,
	-1, 611,
	98, 1389,
	128, 1389,
	-2, 1059,
	-1, 612,
	98, 1435,
	128, 1435,
	-2, 1060,
	-1, 613,
	98, 1436,
	128, 1436,
	-2, 1061,
	-1, 614,
	98, 1319,
	128, 1319,
	-2, 1065,
	-1, 616,
	98, 1412,
	128, 1412,
	-2, 1067,
	-1, 1106,
	1, 741,
	5, 741,
	12, 741,
	13, 741,
	14, 741,
	15, 741,
	17, 741,
	19, 741,
	30, 741,
	31, 741,
	56, 741,
	57, 741,
	58, 741,
	59, 741,
	60, 741,
	62, 741,
	63, 741,
	66, 741,
	67, 741,
	69, 741,
	70, 741,
	490, 741,
	-2, 771,
	-1, 1110,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1348,
	128, 1104,
	-2, 1100,
	-1, 1513,
	44, 502,
	-2, 1331,
	-1, 1517,
	68, 502,
	-2, 1281,
	-1, 1520,
	68, 498,
	72, 498,
	-2, 1203,
	-1, 1521,
	68, 499,
	72, 499,
	-2, 1213,
	-1, 1636,
	44, 545,
	148, 547,
	150, 545,
	151, 545,
	-2, 580,
	-1, 1706,
	5, 50,
	-2, 837,
	-1, 2004,
	69, 1257,
	70, 1257,
	128, 1257,
	-2, 684,
	-1, 2027,
	1, 792,
	5, 792,
	12, 792,
	13, 792,
	14, 792,
	15, 792,
	17, 792,
	19, 792,
	30, 792,
	31, 792,
	56, 792,
	57, 792,
	58, 792,
	59, 792,
	60, 792,
	62, 792,
	63, 792,
	66, 792,
	67, 792,
	69, 792,
	70, 792,
	490, 792,
	-2, 771,
	-1, 2128,
	148, 548,
	-2, 546,
	-1, 2189,
	5, 50,
	-2, 1029,
	-1, 2389,
	41, 1111,
	-2, 1109,
	-1, 2518,
	5, 50,
	-2, 1032,
}

const yyPrivate = 57344

const yyLast = 31290

var yyAct = [...]int{
	563, 78, 2707, 2656, 2671, 2680, 2670, 503, 2535, 2599,
	2534, 2658, 2201, 2438, 3, 2597, 407, 2409, 2521, 2572,
	2503, 814, 2508, 2441, 7, 2021, 2440, 6, 1565, 2439,
	5, 2442, 8, 2296, 1141, 501, 2336, 1774, 2389, 2040,
	1745, 1231, 1563, 506, 1930, 1921, 1057, 1466, 1472, 492,
	630, 1522, 1575, 2391, 2089, 2248, 1505, 2254, 2232, 81,
	1997, 2522, 1795, 1326, 1470, 2277, 1998, 2041, 390, 393,
	485, 1514, 2216, 846, 2113, 2122, 1855, 519, 91, 78,
	1230, 1929, 125, 469, 1746, 125, 1504, 432, 432, 1659,
	1994, 125, 484, 2013, 104, 1635, 1319, 1554, 562, 480,
	1966, 435, 435, 1503, 1373, 508, 2006, 1538, 1601, 1940,
	1233, 1445, 1510, 125, 1899, 1334, 1275, 1449, 1211, 1838,
	1382, 830, 1550, 607, 125, 959, 2217, 1248, 125, 633,
	1456, 625, 125, 610, 1437, 966, 1103, 896, 1121, 1102,
	1350, 962, 1617, 1106, 624, 488, 125, 435, 875, 633,
	626, 970, 1120, 813, 1493, 603, 1075, 125, 604, 979,
	479, 599, 1280, 410, 409, 596, 83, 874, 1112, 801,
	2729, 1076, 2725, 2715, 425, 2697, 419, 430, 413, 2695,
	2675, 2651, 2580, 80, 1273, 477, 67, 2637, 2634, 2226,
	2688, 2566, 2368, 35, 628, 35, 35, 35, 2669, 420,
	2516, 2381, 1866, 85, 86, 87, 88, 89, 2366, 2074,
	2639, 2636, 2633, 2551, 2086, 2565, 2233, 1740, 1987, 2562,
	2563, 2483, 1681, 2369, 2235, 35, 2181, 70, 38, 39,
	800, 2036, 2037, 1122, 1741, 1123, 2321, 1468, 1588, 1588,
	2515, 2420, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 402, 79, 1005, 79, 79, 79,
	70, 38, 39, 1616, 834, 835, 2035, 1783, 837, 803,
	1782, 806, 807, 1784, 1279, 1490, 1491, 952, 620, 1315,
	1316, 1489, 40, 849, 850, 851, 1276, 79, 2603, 2603,
	1296, 924, 401, 2238, 400, 932, 1821, 1277, 1278, 412,
	411, 414, 836, 1524, 2598, 116, 112, 113, 1615, 114,
	418, 107, 893, 1539, 1530, 1532, 578, 1531, 584, 586,
	585, 582, 583, 581, 580, 579, 1544, 422, 1539, 1813,
	2168, 426, 2236, 2237, 2239, 2240, 2241, 587, 588, 2166,
	2604, 2604, 118, 117, 1818, 1817, 429, 384, 399, 476,
	928, 929, 2249, 1526, 97, 1861, 1889, 1526, 2664, 2394,
	2252, 2112, 2582, 2305, 2581, 404, 1814, 2255, 2256, 2257,
	2258, 1551, 1894, 2250, 2251, 856, 1628, 2096, 2541, 2487,
	2266, 1819, 2273, 1806, 1576, 1629, 1307, 78, 78, 1807,
	2588, 1260, 125, 1863, 119, 110, 120, 2264, 2684, 859,
	863, 867, 2539, 2477, 2360, 2577, 2361, 99, 2359, 2367,
	864, 96, 2358, 866, 2575, 2576, 865, 109, 108, 1643,
	1637, 1638, 908, 1636, 2087, 1639, 1640, 2357, 2371, 2355,
	2090, 2091, 2092, 2093, 2094, 2356, 125, 415, 416, 417,
	423, 1286, 427, 428, 431, 2635, 857, 858, 1816, 847,
	2523, 848, 850, 851, 939, 2473, 2474, 940, 1865, 2203,
	105, 1644, 2090, 2091, 2092, 2093, 2094, 1570, 2485, 1766,
	106, 2385, 2099, 948, 2436, 2600, 2600, 394, 908, 1281,
	391, 956, 845, 111, 2363, 385, 2569, 2570, 906, 842,
	833, 2653, 1880, 1881, 931, 1569, 101, 841, 102, 2666,
	1014, 2479, 2721, 1016, 2631, 2662, 843, 844, 2657, 805,
	804, 2434, 82, 2504, 125, 1283, 1924, 1450, 1282, 395,
	2278, 2279, 2660, 2127, 1140, 1140, 1905, 2730, 1907, 2647,
	982, 115, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	2421, 2234, 1055, 2073, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1056, 1074, 1077,
	1077, 1077, 1083, 1077, 1077, 1083, 1077, 1083, 1092, 1093,
	1094, 1095, 1096, 1097, 71, 1107, 2114, 1622, 1279, 1828,
	1539, 1261, 2514, 1529, 1553, 2601, 2601, 403, 1015, 860,
	1864, 908, 2382, 1867, 77, 2372, 77, 77, 77, 907,
	1967, 1277, 1278, 2478, 1642, 2540, 392, 71, 2727, 125,
	125, 125, 2484, 98, 392, 2384, 2098, 1815, 945, 421,
	2364, 918, 1101, 941, 1113, 633, 77, 610, 2716, 387,
	2698, 392, 610, 35, 36, 70, 38, 39, 107, 947,
	2659, 2661, 1969, 2044, 954, 392, 1856, 58, 1140, 2711,
	2156, 1140, 1907, 76, 1139, 802, 816, 40, 62, 63,
	1134, 1475, 1477, 2489, 59, 388, 475, 915, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	1109, 904, 1857, 2288, 2289, 1888, 1885, 1939, 1869, 1868,
	2337, 49, 1623, 1219, 1217, 79, 861, 1800, 1204, 1800,
	1773, 1800, 1772, 1771, 2339, 798, 1883, 1125, 951, 808,
	1585, 1918, 1126, 356, 2292, 1584, 1078, 1080, 1082, 1084,
	1086, 1088, 1089, 1091, 1803, 2482, 913, 1716, 2153, 1713,
	2145, 1079, 1081, 1800, 1085, 1087, 1138, 1090, 1017, 1018,
	1494, 1111, 1887, 1476, 109, 108, 1116, 2063, 1886, 1787,
	1779, 2108, 914, 1676, 910, 1005, 1664, 903, 42, 72,
	45, 44, 47, 1649, 1800, 1329, 1133, 1118, 1135, 1858,
	1859, 985, 826, 1971, 2709, 2338, 1249, 2710, 1975, 2708,
	1970, 995, 1968, 1485, 1005, 1258, 1322, 1973, 911, 912,
	48, 75, 74, 1922, 1799, 832, 1799, 46, 1799, 2064,
	1972, 978, 1200, 1905, 1213, 2287, 1440, 1140, 852, 432,
	1906, 1907, 64, 1592, 633, 1974, 1976, 2293, 839, 976,
	2011, 1232, 435, 435, 2010, 2573, 432, 2612, 1212, 2611,
	1799, 125, 1268, 1917, 125, 1131, 978, 1914, 868, 435,
	435, 809, 125, 56, 57, 1017, 1018, 1017, 1018, 1357,
	1384, 125, 125, 125, 125, 1438, 1989, 1235, 94, 2714,
	65, 1799, 66, 2648, 1355, 1356, 1354, 1913, 1905, 1206,
	2667, 435, 1910, 1250, 2265, 1909, 1912, 1256, 1438, 2259,
	1729, 909, 916, 917, 919, 920, 921, 922, 923, 831,
	925, 926, 927, 2722, 930, 1844, 933, 934, 935, 936,
	937, 2051, 854, 93, 50, 73, 432, 52, 53, 60,
	1593, 61, 977, 976, 79, 840, 977, 976, 1271, 435,
	435, 435, 2537, 2718, 633, 1353, 474, 1289, 973, 78,
	978, 1236, 1327, 1328, 978, 2544, 494, 2701, 2681, 2700,
	1305, 92, 1313, 1245, 1246, 2536, 1247, 2723, 998, 999,
	1000, 1001, 1002, 995, 435, 1252, 1005, 1253, 1214, 435,
	435, 1221, 963, 2519, 1287, 964, 1311, 125, 2538, 125,
	977, 976, 633, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 1239, 1240, 1005, 1712, 2379, 978, 2378,
	125, 977, 976, 1320, 977, 976, 982, 78, 2650, 2480,
	2377, 2376, 71, 2370, 1310, 1377, 1378, 2225, 2224, 978,
	1056, 498, 978, 593, 594, 2184, 1348, 1263, 1264, 1331,
	1843, 1266, 1347, 1841, 1822, 994, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 1269, 2624, 1005,
	1059, 899, 633, 1332, 1284, 2481, 1333, 1285, 1288, 898,
	977, 976, 2623, 1416, 77, 994, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 1351, 978, 1005,
	1374, 1312, 1375, 2610, 1352, 1711, 1346, 1710, 1340, 1342,
	1343, 2585, 1306, 1602, 1341, 1309, 977, 976, 1469, 2583,
	1423, 1426, 2573, 1107, 1317, 977, 976, 1107, 1439, 977,
	976, 1056, 2550, 872, 978, 1785, 2574, 1786, 633, 633,
	1661, 1662, 1663, 978, 2476, 125, 2475, 978, 977, 976,
	1344, 2433, 2386, 125, 125, 1991, 871, 2354, 125, 125,
	2315, 2262, 125, 125, 125, 1391, 978, 2261, 2260, 1395,
	1480, 2222, 2056, 610, 1482, 1839, 1612, 1265, 1237, 1235,
	2609, 2486, 633, 633, 2431, 2403, 1803, 2397, 2285, 1380,
	2141, 2137, 2129, 1388, 1348, 1465, 2100, 2084, 958, 2083,
	1498, 2082, 1397, 1398, 626, 1874, 1873, 1606, 1590, 1589,
	1376, 1262, 1259, 1408, 1229, 1500, 1228, 1412, 1474, 1227,
	1226, 1215, 1209, 1109, 1208, 1207, 1205, 894, 1109, 828,
	398, 396, 1109, 1435, 1720, 2328, 2640, 1775, 1478, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 2212, 2630, 1005,
	125, 1220, 1582, 938, 1499, 815, 2557, 958, 2212, 2555,
	125, 2396, 125, 125, 435, 435, 435, 2348, 1083, 125,
	1580, 1581, 2212, 2553, 1518, 1540, 1541, 1542, 1543, 1511,
	2212, 2435, 2328, 2427, 2347, 1487, 1608, 1492, 1486, 1483,
	2079, 1501, 1508, 958, 1453, 125, 125, 125, 2328, 2344,
	2328, 958, 1556, 1557, 1558, 1559, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 2328, 2327, 1005,
	125, 957, 125, 2212, 2211, 1552, 633, 2193, 958, 1646,
	633, 2395, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 1200, 82, 1005, 1648, 958, 2147,
	1775, 2057, 633, 2071, 2070, 633, 2067, 2068, 1665, 2067,
	2066, 1674, 958, 1453, 958, 1625, 1624, 82, 967, 1324,
	818, 819, 820, 821, 822, 823, 824, 1114, 986, 1775,
	1594, 1414, 1609, 1414, 958, 1600, 1614, 1137, 1136, 2148,
	1348, 1458, 1461, 1462, 1463, 1459, 1347, 1460, 1464, 1414,
	1114, 2014, 2015, 1560, 1561, 1995, 1290, 2148, 2009, 1293,
	1294, 1295, 1574, 1297, 1298, 1452, 1479, 1299, 1113, 904,
	1323, 1674, 1613, 1300, 1604, 943, 1607, 1301, 1302, 942,
	1303, 1304, 902, 1115, 1109, 1117, 2009, 1620, 524, 523,
	526, 527, 528, 529, 1058, 2009, 901, 525, 530, 902,
	1499, 2559, 1573, 2187, 1453, 1588, 1115, 1073, 1113, 1627,
	1742, 1744, 1630, 1351, 1107, 1107, 1107, 1107, 1107, 2080,
	1352, 1653, 1645, 1743, 1632, 1651, 1652, 1670, 2069, 2023,
	1469, 1898, 1767, 904, 1789, 1458, 1461, 1462, 1463, 1459,
	1107, 1460, 1464, 1416, 1488, 1674, 1734, 1733, 621, 125,
	125, 125, 125, 125, 1267, 1666, 1747, 1587, 1325, 1680,
	1682, 125, 953, 1748, 1308, 125, 1274, 1218, 1216, 125,
	1692, 1693, 1694, 1695, 1119, 125, 79, 2567, 1777, 2554,
	1778, 2022, 2402, 1770, 1704, 2400, 2227, 1776, 1526, 2199,
	1555, 610, 2050, 2014, 2015, 406, 1551, 1793, 908, 633,
	1571, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1546,
	79, 1545, 1201, 891, 1564, 1603, 2692, 2690, 2672, 1109,
	1109, 1109, 1109, 1109, 2078, 1762, 78, 2017, 1995, 1845,
	1223, 1728, 944, 1769, 905, 1109, 900, 1758, 1756, 1847,
	1802, 1804, 1759, 1757, 1760, 1109, 1462, 1463, 1660, 2020,
	1790, 1750, 1751, 1749, 1753, 1761, 1752, 2019, 1755, 1754,
	633, 2606, 468, 489, 490, 2564, 1927, 1650, 1335, 435,
	2594, 1125, 971, 972, 2190, 1212, 1658, 1657, 2318, 1525,
	1879, 2284, 2215, 125, 435, 432, 1788, 1780, 2136, 1872,
	1871, 2135, 1805, 2055, 2054, 1823, 1824, 1797, 2046, 435,
	1792, 969, 1830, 1798, 1801, 2491, 2494, 78, 504, 2549,
	2548, 2390, 1837, 2584, 2388, 2472, 2471, 397, 1877, 435,
	1056, 633, 2373, 2374, 1832, 960, 1840, 435, 1132, 889,
	873, 870, 869, 829, 2619, 2185, 1842, 961, 2407, 2406,
	1327, 1328, 1947, 2294, 633, 633, 1611, 2267, 1567, 1222,
	125, 2542, 1862, 1831, 2268, 1833, 1834, 1835, 1836, 2392,
	633, 1848, 1599, 1238, 1890, 1925, 1926, 94, 1200, 971,
	972, 2618, 1896, 1318, 436, 436, 1203, 633, 949, 950,
	1876, 1932, 1656, 1254, 2617, 1875, 482, 1348, 1882, 2616,
	1655, 1884, 2351, 1347, 855, 486, 2587, 2586, 2546, 2495,
	2411, 2303, 2000, 78, 487, 82, 2410, 2297, 1897, 1902,
	1775, 2117, 1908, 1895, 1919, 1920, 2001, 1893, 1923, 1892,
	436, 1717, 1058, 1900, 1911, 1916, 1714, 2025, 1903, 1850,
	1851, 1852, 2029, 2030, 2031, 1631, 1934, 1933, 633, 1251,
	633, 1996, 974, 2008, 1747, 1626, 1988, 1942, 2694, 2693,
	2693, 1748, 2694, 1948, 2424, 1938, 1951, 1952, 1953, 1320,
	2053, 1956, 1321, 633, 621, 471, 473, 2452, 51, 2454,
	19, 2453, 18, 1978, 2034, 84, 1977, 54, 2028, 2455,
	20, 2456, 21, 633, 1, 633, 1621, 633, 1291, 633,
	2451, 15, 2450, 14, 2032, 2444, 10, 2465, 33, 2003,
	1999, 2464, 32, 2247, 1932, 2246, 2018, 1337, 1338, 2463,
	28, 2462, 27, 2461, 26, 2459, 23, 2458, 22, 1389,
	1390, 2048, 2460, 24, 2049, 2024, 2045, 2253, 2047, 2085,
	1400, 1401, 1402, 1403, 2026, 2088, 2076, 2077, 2039, 1860,
	2095, 125, 2263, 1413, 1415, 432, 1255, 2449, 13, 1210,
	1420, 2081, 2362, 2038, 2446, 12, 2445, 11, 812, 435,
	2443, 9, 1572, 895, 125, 435, 2547, 2490, 2492, 2387,
	2269, 2102, 2231, 2230, 1854, 1853, 890, 1272, 2097, 125,
	1901, 435, 1904, 633, 435, 1583, 1641, 2502, 435, 435,
	1058, 435, 1512, 2060, 1502, 1421, 1422, 623, 90, 1591,
	838, 364, 1509, 1811, 2493, 892, 1810, 633, 1820, 1523,
	1809, 125, 633, 1808, 2488, 1812, 1145, 561, 1143, 633,
	633, 1144, 1142, 2125, 1147, 1146, 2107, 2146, 368, 2111,
	1127, 2529, 975, 2115, 2116, 100, 2118, 55, 2058, 2059,
	2149, 2286, 1915, 95, 103, 2062, 370, 2119, 2179, 1560,
	2105, 1561, 2065, 1013, 2120, 2140, 2126, 2103, 1654, 1781,
	608, 609, 1497, 601, 955, 2561, 2568, 2155, 965, 2505,
	1727, 1072, 1436, 507, 1765, 2507, 1339, 522, 521, 1349,
	520, 517, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 518, 2602, 1598,
	1330, 125, 2207, 2208, 2209, 1739, 987, 617, 2072, 505,
	496, 629, 1105, 1747, 1098, 1610, 1457, 1455, 633, 1454,
	1748, 1224, 597, 2218, 2016, 633, 633, 633, 2194, 2164,
	2012, 817, 1562, 1467, 633, 1104, 2205, 68, 78, 853,
	386, 2180, 2419, 37, 472, 1605, 633, 2186, 491, 25,
	17, 2228, 862, 16, 2195, 1634, 810, 41, 43, 1849,
	1429, 1200, 1568, 2210, 2528, 2655, 2206, 876, 2679, 1441,
	2571, 31, 30, 29, 125, 2457, 2466, 2243, 2244, 2245,
	2448, 2447, 2642, 2641, 4, 1790, 946, 482, 69, 34,
	619, 2219, 2, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 983, 0, 0, 1647, 0, 1107, 0,
	0, 0, 0, 435, 0, 0, 0, 2242, 2280, 2281,
	0, 0, 0, 0, 0, 0, 0, 0, 2282, 0,
	0, 0, 0, 0, 2221, 0, 2223, 0, 0, 2270,
	0, 633, 2271, 125, 0, 0, 2272, 0, 2000, 633,
	0, 2000, 2323, 2299, 2300, 2298, 967, 2276, 2274, 2283,
	2045, 2275, 2295, 1672, 2025, 2322, 2290, 0, 1675, 0,
	1932, 0, 2326, 1677, 1678, 2220, 0, 2291, 1683, 1684,
	1685, 1686, 1687, 1688, 0, 0, 1691, 0, 0, 633,
	0, 1696, 1697, 1698, 1699, 633, 1701, 1702, 1703, 0,
	125, 0, 125, 1706, 1707, 1708, 1709, 0, 633, 0,
	0, 2320, 1715, 1109, 2319, 1718, 1719, 2350, 0, 2352,
	1724, 1725, 0, 633, 0, 2325, 1731, 2349, 1732, 2330,
	2304, 1735, 1736, 2335, 1737, 1738, 1199, 2341, 2342, 2343,
	2340, 0, 0, 0, 0, 1705, 1999, 0, 0, 1999,
	2353, 0, 0, 1763, 1764, 2408, 0, 0, 0, 0,
	0, 0, 2329, 2365, 1474, 0, 2331, 0, 0, 1730,
	0, 2375, 0, 0, 2380, 0, 0, 0, 2383, 0,
	0, 0, 2000, 1560, 78, 633, 2393, 0, 0, 0,
	0, 1446, 2398, 2399, 0, 0, 2412, 2426, 0, 0,
	0, 0, 0, 0, 0, 0, 2401, 0, 0, 2413,
	2414, 0, 0, 78, 0, 0, 0, 2405, 0, 0,
	0, 2437, 0, 0, 633, 0, 0, 0, 0, 0,
	0, 0, 2430, 0, 0, 0, 2345, 0, 2346, 0,
	2429, 0, 2425, 0, 2432, 1943, 1944, 1667, 1668, 1669,
	0, 0, 1949, 1950, 0, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 1957, 1958, 1959, 1960, 0, 1962,
	1963, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 125, 0, 0, 2496, 0, 633, 958, 633, 0,
	2498, 0, 2500, 2497, 2499, 0, 2510, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 436, 0, 2511, 0,
	0, 0, 1721, 1722, 1723, 2517, 2524, 0, 1747, 0,
	125, 78, 436, 436, 2512, 1748, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 0,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1937, 1109, 0, 0, 436, 633, 1945, 0, 0, 0,
	0, 0, 0, 0, 2543, 0, 1954, 1955, 0, 0,
	0, 0, 0, 0, 0, 0, 2533, 1961, 2560, 2545,
	0, 1965, 0, 0, 0, 2552, 0, 0, 0, 0,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 436, 436, 0, 0, 0, 0, 2430,
	0, 617, 0, 0, 2578, 0, 617, 1128, 0, 2002,
	0, 0, 2590, 0, 2592, 78, 0, 0, 2593, 2605,
	2607, 78, 2595, 0, 0, 2615, 2589, 436, 0, 2622,
	633, 2613, 436, 436, 2591, 0, 0, 2608, 0, 0,
	1990, 0, 482, 633, 0, 2628, 0, 2629, 2632, 0,
	432, 0, 2638, 78, 0, 633, 0, 0, 78, 0,
	0, 0, 0, 2649, 435, 0, 0, 0, 2652, 983,
	0, 2654, 2646, 0, 1878, 2645, 2620, 0, 2644, 0,
	2643, 0, 0, 0, 0, 2152, 2033, 0, 78, 2665,
	0, 78, 78, 2154, 0, 0, 78, 0, 2674, 0,
	2622, 2676, 2157, 2158, 2682, 0, 0, 2686, 0, 2159,
	2673, 0, 0, 0, 633, 2689, 78, 2687, 2691, 78,
	0, 2685, 0, 0, 2622, 2702, 432, 2704, 0, 2699,
	0, 0, 0, 0, 0, 0, 78, 2712, 78, 0,
	435, 0, 78, 1936, 2622, 0, 2622, 0, 0, 0,
	0, 0, 2717, 0, 0, 0, 78, 0, 0, 78,
	0, 2174, 0, 0, 2622, 0, 78, 0, 0, 2726,
	78, 0, 0, 0, 2622, 0, 0, 0, 2622, 0,
	0, 0, 0, 0, 0, 1979, 1980, 0, 1981, 1982,
	0, 0, 1983, 0, 0, 0, 1202, 482, 0, 0,
	2150, 0, 0, 0, 0, 1992, 1993, 0, 1527, 1528,
	0, 1533, 1534, 1535, 1536, 1537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1199, 1547,
	1548, 1549, 2142, 2160, 0, 0, 0, 0, 0, 0,
	2027, 494, 0, 0, 2169, 2170, 0, 379, 0, 0,
	2175, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 0, 0, 1005, 0, 2188, 2189, 0,
	2191, 463, 0, 2192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 0, 0, 0, 0,
	0, 0, 2128, 2204, 0, 0, 0, 0, 0, 0,
	0, 0, 2182, 0, 0, 0, 1292, 436, 436, 436,
	0, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2196, 2197, 0, 0, 2198, 0, 0, 2200, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 357, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 2104,
	0, 0, 0, 0, 629, 369, 377, 378, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 1140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 1108, 0, 0, 0, 0, 0,
	0, 366, 0, 0, 367, 0, 0, 375, 376, 0,
	0, 457, 0, 0, 0, 0, 0, 2151, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 2302, 0, 1379, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 2310, 2311, 2312, 0, 2314, 372, 0,
	0, 0, 0, 0, 0, 94, 2176, 2177, 2178, 0,
	0, 0, 123, 0, 0, 383, 0, 0, 0, 373,
	0, 123, 617, 598, 2332, 2333, 2334, 622, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	1442, 1443, 0, 481, 0, 811, 1475, 1477, 0, 0,
	0, 495, 0, 0, 600, 618, 825, 0, 123, 0,
	0, 0, 123, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 0, 358, 0, 0, 123, 0, 0, 0,
	0, 629, 0, 0, 629, 629, 0, 123, 0, 0,
	0, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 0, 482, 1005, 371, 361, 362, 0,
	382, 0, 482, 0, 363, 365, 0, 359, 381, 380,
	0, 0, 0, 2415, 2416, 2417, 2418, 0, 1476, 0,
	0, 0, 0, 2422, 2423, 0, 0, 0, 0, 1825,
	1826, 1827, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 374, 1058, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 2306, 2307, 2308, 2309, 0, 1167, 0,
	0, 2313, 0, 0, 2173, 2316, 2317, 0, 0, 0,
	0, 0, 436, 0, 0, 994, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 436, 1619, 1005,
	0, 0, 1619, 0, 0, 0, 2513, 2579, 0, 2183,
	0, 0, 436, 2518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 1619, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	436, 2506, 2509, 0, 0, 0, 0, 629, 0, 994,
	993, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 827, 1154, 1005, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 0, 0, 1005, 0,
	463, 2172, 0, 0, 0, 0, 0, 0, 0, 2556,
	0, 0, 123, 0, 0, 0, 0, 2121, 2525, 2526,
	0, 2123, 0, 0, 1168, 897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 1386, 1387, 0, 0, 0, 0, 1392, 1393, 1394,
	0, 1396, 0, 0, 1399, 0, 123, 0, 0, 1404,
	1405, 1406, 1407, 0, 1409, 1410, 1411, 0, 2596, 0,
	0, 0, 1417, 1418, 1419, 0, 0, 0, 1425, 1428,
	0, 1433, 1434, 0, 0, 0, 0, 0, 0, 0,
	617, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 0, 0, 1005, 1444, 0, 1447, 1448,
	2509, 0, 0, 0, 0, 0, 0, 0, 2501, 0,
	0, 0, 2043, 0, 2614, 617, 0, 0, 2061, 0,
	457, 0, 0, 0, 481, 0, 0, 0, 0, 0,
	0, 629, 0, 1181, 1184, 1185, 1186, 1187, 1188, 1189,
	0, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 0,
	1169, 1170, 1171, 1172, 1148, 1152, 1182, 1149, 1155, 1151,
	1153, 1150, 0, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 436, 0, 0, 0, 0, 0, 436, 2171,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2719, 2720, 436, 0, 0, 436, 1100, 0,
	1110, 436, 436, 0, 436, 0, 0, 0, 2124, 0,
	0, 0, 2703, 0, 0, 1796, 0, 0, 2131, 2133,
	0, 0, 0, 0, 0, 0, 0, 0, 2124, 123,
	123, 123, 0, 0, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 1891, 618, 0, 0, 2161, 2162, 0,
	2163, 0, 0, 2165, 0, 2167, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 629, 629, 0, 994,
	993, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 0, 629, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 1946,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2663, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 2213, 2214, 437, 438, 439, 440, 441, 445,
	446, 450, 451, 460, 459, 458, 461, 462, 465, 464,
	466, 442, 443, 444, 447, 448, 449, 452, 453, 456,
	454, 455, 0, 0, 0, 0, 0, 0, 617, 0,
	629, 0, 2007, 0, 0, 0, 0, 35, 0, 70,
	38, 39, 1673, 0, 0, 0, 0, 1986, 2705, 0,
	1679, 58, 0, 0, 0, 2007, 0, 76, 0, 1689,
	1690, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 0, 629, 0, 629, 0, 629,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 1225, 0, 0, 436, 1726, 0, 79,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 1242, 1243, 1244, 0, 1985, 0, 0, 0, 0,
	2124, 123, 0, 2467, 123, 0, 2678, 2681, 2677, 0,
	1984, 0, 1234, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 123, 123, 123, 994, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 0, 0, 1005,
	0, 0, 42, 72, 45, 44, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 2110, 0, 0, 2468, 0,
	0, 0, 0, 482, 0, 482, 0, 0, 0, 0,
	0, 2043, 0, 0, 48, 75, 74, 0, 0, 2134,
	0, 46, 0, 0, 2139, 0, 2043, 0, 0, 0,
	0, 2143, 2144, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 0, 1314, 1005, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	0, 0, 1005, 0, 0, 0, 1935, 56, 57, 1336,
	2469, 0, 0, 0, 0, 0, 0, 123, 0, 481,
	0, 0, 0, 0, 65, 0, 66, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 0,
	123, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1234, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2470, 73,
	2202, 52, 53, 60, 0, 61, 0, 2202, 2202, 2202,
	0, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 1385, 1385, 1385, 0, 2202, 0,
	1385, 1385, 1385, 1385, 1385, 1385, 0, 0, 1385, 0,
	0, 0, 0, 1385, 1385, 1385, 1385, 0, 1385, 1385,
	1385, 0, 0, 0, 0, 0, 1385, 1385, 1385, 0,
	0, 436, 1385, 1385, 1451, 1385, 1385, 0, 0, 2043,
	618, 2043, 0, 0, 0, 0, 0, 0, 1481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 1385, 1385, 1385, 0, 123, 71, 0, 0, 0,
	0, 0, 0, 123, 481, 0, 0, 0, 123, 123,
	0, 0, 123, 1484, 1234, 618, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 0, 1234,
	0, 629, 0, 0, 0, 35, 0, 70, 38, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 58,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 2324, 0, 0, 0, 0, 0, 2202, 0, 1577,
	0, 1578, 1579, 0, 0, 0, 0, 0, 1586, 0,
	2042, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	123, 0, 0, 0, 0, 2042, 1671, 0, 0, 0,
	123, 0, 123, 123, 0, 0, 1597, 0, 0, 123,
	0, 2467, 0, 2043, 0, 0, 2728, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 897,
	0, 1005, 0, 0, 463, 1595, 1596, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 0, 0,
	42, 72, 45, 44, 47, 2123, 0, 2404, 0, 0,
	123, 0, 481, 0, 0, 0, 2468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 0, 0, 0, 0, 0, 2428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 57, 0, 2469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 65, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 1385, 0, 2042, 0,
	2042, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 1385, 1385, 0, 0, 0, 0, 0,
	0, 0, 617, 0, 1385, 0, 2470, 73, 1385, 52,
	53, 60, 463, 61, 0, 0, 0, 0, 1167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 629, 618, 123,
	123, 123, 123, 123, 0, 0, 0, 0, 0, 0,
	0, 481, 0, 0, 0, 123, 0, 0, 0, 481,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 2558, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 0, 2202, 0, 0, 0, 0,
	0, 989, 1870, 992, 1168, 0, 77, 629, 0, 0,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 0, 990, 991,
	988, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 123, 0, 1005, 0, 0, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 2668, 0, 0, 1928,
	0, 0, 0, 0, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1198, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	1385, 0, 1234, 1181, 1184, 1185, 1186, 1187, 1188, 1189,
	0, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 0,
	1169, 1170, 1171, 1172, 1148, 1152, 1182, 1149, 1155, 1151,
	1153, 1150, 463, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 0, 2132, 0, 0, 0, 1140, 35, 0,
	70, 38, 39, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 40, 0, 0, 457, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 35, 0, 70, 38, 39, 0,
	2075, 0, 0, 1183, 2467, 0, 0, 0, 58, 2724,
	0, 0, 0, 0, 76, 0, 0, 0, 40, 0,
	0, 0, 457, 2101, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 2106, 0,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 0, 0, 0, 123, 0, 79, 0, 0, 2468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	2138, 0, 463, 0, 0, 48, 75, 74, 0, 0,
	2467, 0, 46, 0, 0, 2713, 0, 0, 0, 0,
	0, 0, 0, 2130, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 42,
	72, 45, 44, 47, 0, 0, 0, 0, 56, 57,
	0, 2469, 0, 0, 0, 2468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 65, 0, 66, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 0, 2470,
	73, 481, 52, 53, 60, 618, 61, 0, 0, 0,
	0, 0, 457, 0, 56, 57, 0, 2469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 65, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2229, 0, 0, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 123, 2470, 73, 0, 52, 53,
	60, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	481, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 2527, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 123, 731, 777, 683, 733, 735, 638, 730, 2520,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 0, 0,
	618, 0, 0, 0, 0, 0, 672, 0, 725, 0,
	123, 0, 653, 646, 0, 0, 704, 0, 0, 0,
	658, 637, 673, 749, 0, 635, 185, 233, 142, 754,
	771, 701, 197, 348, 775, 698, 697, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 746, 289,
	685, 636, 758, 669, 681, 164, 677, 281, 252, 337,
	0, 722, 259, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 2530, 2531, 2532, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 338, 751, 272, 294, 323, 149, 311, 678, 679,
	684, 748, 283, 759, 769, 782, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 643, 0, 309, 340,
	355, 151, 665, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 663, 664, 661, 0, 662, 717,
	718, 785, 786, 787, 750, 655, 0, 766, 767, 0,
	0, 0, 0, 0, 756, 773, 774, 739, 795, 693,
	694, 660, 295, 275, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 686, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 632, 0, 1506, 1507, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 1791, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 725, 0, 0, 0, 653, 646, 0, 0,
	704, 0, 0, 0, 658, 637, 673, 749, 0, 635,
	185, 233, 142, 754, 771, 701, 197, 348, 775, 698,
	697, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 746, 289, 685, 636, 758, 669, 681, 164,
	677, 281, 252, 337, 0, 722, 259, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 338, 751, 272, 294, 323,
	149, 311, 678, 679, 684, 748, 283, 759, 769, 782,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	643, 0, 309, 340, 355, 151, 665, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 663, 664,
	661, 0, 662, 717, 718, 785, 786, 787, 750, 655,
	0, 766, 767, 0, 0, 0, 0, 0, 756, 773,
	774, 739, 795, 693, 694, 660, 295, 275, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 686, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 632,
	0, 1506, 1507, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 725, 0, 0, 0,
	653, 646, 0, 0, 704, 0, 0, 0, 658, 637,
	673, 749, 0, 635, 185, 233, 142, 754, 771, 701,
	197, 348, 775, 698, 697, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 746, 289, 685, 636,
	758, 669, 681, 164, 677, 281, 252, 337, 0, 722,
	259, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 338,
	751, 272, 294, 323, 149, 311, 678, 679, 684, 748,
	283, 759, 769, 782, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 643, 0, 309, 340, 355, 151,
	665, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 663, 664, 661, 0, 662, 717, 718, 785,
	786, 787, 750, 655, 0, 766, 767, 0, 0, 0,
	0, 0, 756, 773, 774, 739, 795, 693, 694, 660,
	295, 275, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 686, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 2004, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 79,
	0, 958, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	725, 0, 0, 0, 653, 646, 0, 0, 704, 0,
	0, 0, 658, 637, 673, 749, 0, 635, 185, 233,
	142, 754, 771, 701, 197, 348, 775, 698, 697, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	746, 289, 685, 636, 758, 669, 681, 164, 677, 281,
	252, 337, 0, 722, 259, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 338, 751, 272, 294, 323, 149, 311,
	678, 679, 684, 748, 283, 759, 769, 782, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 643, 0,
	309, 340, 355, 151, 665, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 663, 664, 661, 0,
	662, 717, 718, 785, 786, 787, 750, 655, 0, 766,
	767, 0, 0, 0, 0, 0, 756, 773, 774, 739,
	795, 693, 694, 660, 295, 275, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 2005, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 686, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 0, 0, 0, 0, 0, 0,
	2301, 0, 672, 0, 725, 0, 0, 0, 653, 646,
	0, 0, 704, 0, 0, 0, 658, 637, 673, 749,
	0, 635, 185, 233, 142, 754, 771, 701, 197, 348,
	775, 698, 697, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 746, 289, 685, 636, 758, 669,
	681, 164, 677, 281, 252, 337, 0, 722, 259, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 338, 751, 272,
	294, 323, 149, 311, 678, 679, 684, 748, 283, 759,
	769, 782, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 643, 0, 309, 340, 355, 151, 665, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	663, 664, 661, 0, 662, 717, 718, 785, 786, 787,
	750, 655, 0, 766, 767, 0, 0, 0, 0, 0,
	756, 773, 774, 739, 795, 693, 694, 660, 295, 275,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	686, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 0, 0,
	0, 0, 0, 0, 1941, 0, 672, 0, 725, 0,
	0, 0, 653, 646, 0, 0, 704, 0, 0, 0,
	658, 637, 673, 749, 0, 635, 185, 233, 142, 754,
	771, 701, 197, 348, 775, 698, 697, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 746, 289,
	685, 636, 758, 669, 681, 164, 677, 281, 252, 337,
	0, 722, 259, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 338, 751, 272, 294, 323, 149, 311, 678, 679,
	684, 748, 283, 759, 769, 782, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 643, 0, 309, 340,
	355, 151, 665, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 663, 664, 661, 0, 662, 717,
	718, 785, 786, 787, 750, 655, 0, 766, 767, 0,
	0, 0, 0, 0, 756, 773, 774, 739, 795, 693,
	694, 660, 295, 275, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 686, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 0, 0, 0, 0, 0, 0, 1931, 0,
	672, 0, 725, 0, 0, 0, 653, 646, 0, 0,
	704, 0, 0, 0, 658, 637, 673, 749, 0, 635,
	185, 233, 142, 754, 771, 701, 197, 348, 775, 698,
	697, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 746, 289, 685, 636, 758, 669, 681, 164,
	677, 281, 252, 337, 0, 722, 259, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 338, 751, 272, 294, 323,
	149, 311, 678, 679, 684, 748, 283, 759, 769, 782,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	643, 0, 309, 340, 355, 151, 665, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 663, 664,
	661, 0, 662, 717, 718, 785, 786, 787, 750, 655,
	0, 766, 767, 0, 0, 0, 0, 0, 756, 773,
	774, 739, 795, 693, 694, 660, 295, 275, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 686, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 0, 0, 0, 0,
	0, 0, 1485, 0, 672, 0, 725, 0, 0, 0,
	653, 646, 0, 0, 704, 0, 0, 0, 658, 637,
	673, 749, 0, 635, 185, 233, 142, 754, 771, 701,
	197, 348, 775, 698, 697, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 746, 289, 685, 636,
	758, 669, 681, 164, 677, 281, 252, 337, 0, 722,
	259, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 338,
	751, 272, 294, 323, 149, 311, 678, 679, 684, 748,
	283, 759, 769, 782, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 643, 0, 309, 340, 355, 151,
	665, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 663, 664, 661, 0, 662, 717, 718, 785,
	786, 787, 750, 655, 0, 766, 767, 0, 0, 0,
	0, 0, 756, 773, 774, 739, 795, 693, 694, 660,
	295, 275, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 686, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	0, 0, 0, 0, 0, 0, 1345, 0, 672, 0,
	725, 0, 0, 0, 653, 646, 0, 0, 704, 0,
	0, 0, 658, 637, 673, 749, 0, 635, 185, 233,
	142, 754, 771, 701, 197, 348, 775, 698, 697, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	746, 289, 685, 636, 758, 669, 681, 164, 677, 281,
	252, 337, 0, 722, 259, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 338, 751, 272, 294, 323, 149, 311,
	678, 679, 684, 748, 283, 759, 769, 782, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 643, 0,
	309, 340, 355, 151, 665, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 663, 664, 661, 0,
	662, 717, 718, 785, 786, 787, 750, 655, 0, 766,
	767, 0, 0, 0, 0, 0, 756, 773, 774, 739,
	795, 693, 694, 660, 295, 275, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 686, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 725, 0, 0, 0, 653, 646,
	0, 0, 704, 0, 0, 0, 658, 637, 673, 749,
	0, 635, 185, 233, 142, 754, 771, 701, 197, 348,
	775, 698, 697, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 746, 289, 685, 636, 758, 669,
	681, 164, 677, 281, 252, 337, 0, 722, 259, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 338, 751, 272,
	294, 323, 149, 311, 678, 679, 684, 748, 283, 759,
	769, 782, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 643, 0, 309, 340, 355, 151, 665, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	663, 664, 661, 0, 662, 717, 718, 785, 786, 787,
	750, 655, 0, 766, 767, 0, 0, 0, 0, 0,
	756, 773, 774, 739, 795, 693, 694, 660, 295, 275,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	686, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 0, 725, 0,
	0, 0, 653, 646, 0, 0, 704, 0, 0, 0,
	658, 637, 673, 749, 0, 635, 185, 233, 142, 754,
	771, 701, 197, 348, 775, 698, 697, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 746, 289,
	685, 636, 758, 669, 681, 164, 677, 281, 252, 337,
	0, 722, 259, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 338, 751, 272, 294, 323, 149, 311, 678, 679,
	684, 748, 283, 759, 769, 782, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 643, 0, 309, 340,
	355, 151, 665, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 663, 664, 661, 0, 662, 717,
	718, 785, 786, 787, 750, 655, 0, 766, 767, 0,
	0, 0, 0, 0, 756, 773, 774, 739, 795, 693,
	694, 660, 295, 275, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 686, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 1517, 1521, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 725, 0, 0, 0, 653, 646, 0, 0,
	704, 0, 0, 0, 658, 637, 673, 749, 0, 635,
	185, 233, 142, 754, 771, 1520, 197, 348, 775, 698,
	697, 1515, 0, 1516, 187, 207, 631, 126, 140, 1513,
	1519, 244, 746, 289, 685, 636, 758, 669, 681, 164,
	677, 281, 252, 337, 0, 722, 259, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 338, 751, 272, 294, 323,
	149, 311, 678, 679, 684, 748, 283, 759, 769, 782,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	643, 0, 309, 340, 355, 151, 665, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 663, 664,
	661, 0, 662, 717, 718, 785, 786, 787, 750, 655,
	0, 766, 767, 0, 0, 0, 0, 0, 756, 773,
	774, 739, 795, 693, 694, 660, 295, 275, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 686, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 725, 0, 0, 0,
	653, 646, 0, 0, 704, 0, 0, 0, 658, 637,
	673, 749, 0, 635, 185, 233, 142, 754, 771, 701,
	197, 348, 775, 698, 697, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 746, 289, 685, 636,
	758, 669, 681, 164, 677, 281, 252, 337, 0, 722,
	259, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 338,
	751, 272, 294, 323, 149, 311, 678, 679, 684, 748,
	283, 759, 769, 782, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 643, 0, 309, 340, 355, 151,
	665, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 663, 664, 661, 0, 662, 717, 718, 785,
	786, 787, 750, 655, 0, 766, 767, 0, 0, 0,
	0, 0, 756, 773, 774, 739, 795, 693, 694, 660,
	295, 275, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 686, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	725, 0, 0, 0, 653, 646, 0, 0, 704, 0,
	0, 0, 658, 637, 673, 749, 0, 635, 185, 233,
	142, 754, 771, 701, 197, 348, 775, 698, 697, 269,
	0, 313, 187, 207, 631, 126, 140, 627, 186, 244,
	746, 289, 685, 636, 758, 669, 681, 164, 677, 281,
	252, 337, 0, 722, 259, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 338, 751, 272, 294, 323, 149, 311,
	678, 679, 684, 748, 283, 759, 769, 782, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 643, 0,
	309, 340, 355, 151, 665, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 663, 664, 661, 0,
	662, 717, 718, 785, 786, 787, 750, 655, 0, 766,
	767, 0, 0, 0, 0, 0, 756, 773, 774, 739,
	795, 693, 694, 660, 295, 275, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 686, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 173, 499, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	577, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 564, 565, 0, 0, 0, 0, 0, 0, 1495,
	0, 79, 0, 0, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 0, 525, 530, 559, 560, 1496,
	0, 0, 497, 515, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 513, 0, 0,
	0, 0, 591, 0, 514, 0, 0, 509, 510, 511,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 567, 0, 0, 197, 348, 0, 0,
	589, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 574, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 566, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 568,
	569, 570, 571, 572, 0, 0, 0, 575, 0, 587,
	588, 0, 0, 0, 0, 0, 295, 275, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 35, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 173, 499, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 577, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 564, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 0, 525, 530, 559,
	560, 0, 0, 0, 497, 515, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 0, 591, 0, 514, 0, 0, 509,
	510, 511, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 567, 0, 0, 197, 348,
	0, 0, 589, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 574, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 566, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 568, 569, 570, 571, 572, 0, 0, 0, 575,
	0, 587, 588, 0, 0, 0, 0, 0, 295, 275,
	531, 532, 533, 534, 535, 539, 540, 544, 545, 553,
	552, 551, 554, 555, 557, 556, 558, 536, 537, 538,
	541, 542, 543, 546, 547, 550, 548, 549, 573, 129,
	138, 208, 77, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 173, 499, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 577, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 500, 524,
	523, 526, 527, 528, 529, 0, 0, 0, 525, 530,
	559, 560, 0, 0, 0, 497, 515, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 493, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 0, 0, 0,
	575, 0, 587, 588, 0, 0, 0, 0, 0, 295,
	275, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 173, 499, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 577, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 564, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 958, 0, 500,
	524, 523, 526, 527, 528, 529, 0, 0, 0, 525,
	530, 559, 560, 0, 0, 0, 497, 515, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 513, 0, 0, 0, 0, 591, 0, 514, 0,
	0, 509, 510, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 567, 0, 0,
	197, 348, 0, 0, 589, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 574, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 566, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 568, 569, 570, 571, 572, 0, 0,
	0, 575, 0, 587, 588, 0, 0, 0, 0, 0,
	295, 275, 531, 532, 533, 534, 535, 539, 540, 544,
	545, 553, 552, 551, 554, 555, 557, 556, 558, 536,
	537, 538, 541, 542, 543, 546, 547, 550, 548, 549,
	573, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 173, 499, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 577, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	500, 524, 523, 526, 527, 528, 529, 0, 0, 0,
	525, 530, 559, 560, 0, 0, 0, 497, 515, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 1383, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 578, 590, 584, 586, 585, 582, 583,
	581, 580, 579, 592, 568, 569, 570, 571, 572, 0,
	0, 0, 575, 0, 587, 588, 0, 0, 0, 0,
	0, 295, 275, 531, 532, 533, 534, 535, 539, 540,
	544, 545, 553, 552, 551, 554, 555, 557, 556, 558,
	536, 537, 538, 541, 542, 543, 546, 547, 550, 548,
	549, 573, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 173, 499, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 577, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 500, 524, 1427, 526, 527, 528, 529, 0, 0,
	0, 525, 530, 559, 560, 0, 0, 0, 497, 515,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 1383, 0, 0, 0, 591, 0,
	514, 0, 0, 509, 510, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 567,
	0, 0, 197, 348, 0, 0, 589, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	574, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	566, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 568, 569, 570, 571, 572,
	0, 0, 0, 575, 0, 587, 588, 0, 0, 0,
	0, 0, 295, 275, 531, 532, 533, 534, 535, 539,
	540, 544, 545, 553, 552, 551, 554, 555, 557, 556,
	558, 536, 537, 538, 541, 542, 543, 546, 547, 550,
	548, 549, 573, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 173, 499,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 577, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 564, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 500, 524, 1424, 526, 527, 528, 529, 0,
	0, 0, 525, 530, 559, 560, 0, 0, 0, 497,
	515, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 513, 1383, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	567, 0, 0, 197, 348, 0, 0, 589, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 574, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 566, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 578, 590, 584, 586, 585,
	582, 583, 581, 580, 579, 592, 568, 569, 570, 571,
	572, 0, 0, 0, 575, 0, 587, 588, 0, 0,
	0, 0, 0, 295, 275, 531, 532, 533, 534, 535,
	539, 540, 544, 545, 553, 552, 551, 554, 555, 557,
	556, 558, 536, 537, 538, 541, 542, 543, 546, 547,
	550, 548, 549, 573, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 173,
	499, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 577, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 1270, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 0, 525, 530, 559, 560, 0, 0, 0,
	497, 515, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 513, 0, 0, 0, 0,
	591, 0, 514, 0, 0, 509, 510, 511, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 567, 0, 0, 197, 348, 0, 0, 589, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 574, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 566, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 568, 569, 570,
	571, 572, 0, 0, 0, 575, 0, 587, 588, 0,
	0, 0, 0, 0, 295, 275, 531, 532, 533, 534,
	535, 539, 540, 544, 545, 553, 552, 551, 554, 555,
	557, 556, 558, 536, 537, 538, 541, 542, 543, 546,
	547, 550, 548, 549, 573, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	173, 499, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 577,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	564, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 500, 524, 523, 526, 527, 528,
	529, 0, 0, 0, 525, 530, 559, 560, 0, 0,
	0, 497, 515, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 567, 0, 0, 197, 348, 0, 0, 589,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 574, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 566, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 578, 590, 584,
	586, 585, 582, 583, 581, 580, 579, 592, 568, 569,
	570, 571, 572, 0, 0, 0, 575, 0, 587, 588,
	0, 0, 0, 0, 0, 295, 275, 531, 532, 533,
	534, 535, 539, 540, 544, 545, 553, 552, 551, 554,
	555, 557, 556, 558, 536, 537, 538, 541, 542, 543,
	546, 547, 550, 548, 549, 573, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	577, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 564, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 0, 525, 530, 559, 560, 0,
	0, 0, 0, 515, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 513, 0, 0,
	0, 0, 591, 0, 514, 0, 0, 509, 510, 511,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 567, 0, 0, 197, 348, 0, 0,
	589, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 574, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 566, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 568,
	569, 570, 571, 572, 1430, 1431, 1432, 575, 0, 587,
	588, 0, 0, 0, 0, 0, 295, 275, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 577, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 564, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 500, 524, 523, 526,
	527, 528, 529, 0, 0, 0, 525, 530, 559, 560,
	0, 0, 0, 0, 515, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 0, 591, 0, 514, 0, 0, 509, 510,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 567, 0, 0, 197, 348, 0,
	0, 589, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 574, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 566, 2706, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 578,
	590, 584, 586, 585, 582, 583, 581, 580, 579, 592,
	568, 569, 570, 571, 572, 0, 0, 0, 575, 0,
	587, 588, 0, 0, 0, 0, 0, 295, 275, 531,
	532, 533, 534, 535, 539, 540, 544, 545, 553, 552,
	551, 554, 555, 557, 556, 558, 536, 537, 538, 541,
	542, 543, 546, 547, 550, 548, 549, 573, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 577, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 564, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 958, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 0, 525, 530, 559,
	560, 0, 0, 0, 0, 515, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 0, 591, 0, 514, 0, 0, 509,
	510, 511, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 567, 0, 0, 197, 348,
	0, 0, 589, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 574, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 566, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 568, 569, 570, 571, 572, 0, 0, 0, 575,
	0, 587, 588, 0, 0, 0, 0, 0, 295, 275,
	531, 532, 533, 534, 535, 539, 540, 544, 545, 553,
	552, 551, 554, 555, 557, 556, 558, 536, 537, 538,
	541, 542, 543, 546, 547, 550, 548, 549, 573, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 577, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 500, 524,
	523, 526, 527, 528, 529, 0, 0, 0, 525, 530,
	559, 560, 0, 0, 0, 0, 515, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 0, 0, 0,
	575, 0, 587, 588, 0, 0, 0, 0, 0, 295,
	275, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 425, 319, 419, 430, 413, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 467,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 420,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	411, 414, 0, 0, 0, 185, 233, 142, 0, 0,
	418, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 422, 289, 0,
	0, 426, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 429, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 470, 294, 323, 149, 311, 415, 416, 417,
	423, 424, 427, 428, 431, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 275, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 421,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 425, 319, 419, 430,
	413, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 420, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 412, 411, 414, 0, 0, 0, 185, 233, 142,
	0, 0, 418, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 422,
	289, 0, 0, 426, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 429, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 408, 294, 323, 149, 311, 415,
	416, 417, 423, 424, 427, 428, 431, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 275, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 421, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1475, 1477, 0, 0, 0,
	0, 0, 0, 124, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 1476, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 275, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 1473, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1475, 1477, 0, 0,
	0, 0, 0, 0, 124, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 1476, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 1471, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 275, 437, 438, 439,
	440, 441, 445, 446, 450, 451, 460, 459, 458, 461,
	462, 465, 464, 466, 442, 443, 444, 447, 448, 449,
	452, 453, 456, 454, 455, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 981, 0, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	977, 976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 2627, 0, 0, 0, 0,
	0, 0, 173, 2625, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	2626, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 275, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 275,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 478, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	1768, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	275, 437, 438, 439, 440, 441, 445, 446, 450, 451,
	460, 459, 458, 461, 462, 465, 464, 466, 442, 443,
	444, 447, 448, 449, 452, 453, 456, 454, 455, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 275, 437, 438, 439, 440, 441, 445, 446, 450,
	451, 460, 459, 458, 461, 462, 465, 464, 466, 442,
	443, 444, 447, 448, 449, 452, 453, 456, 454, 455,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 275, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 275, 437, 438, 439, 440, 441, 445,
	446, 450, 451, 460, 459, 458, 461, 462, 465, 464,
	466, 442, 443, 444, 447, 448, 449, 452, 453, 456,
	454, 455, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 0, 984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 275, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 275, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 35, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 295, 275, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 1468, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 79,
	273, 180, 341, 124, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 1130,
	0, 0, 0, 206, 295, 275, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 77, 273,
	180, 341, 632, 171, 1129, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 295, 275, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 79, 273, 180,
	341, 124, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 295, 275, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 79, 273, 180,
	341, 632, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 173, 0, 0,
	0, 0, 206, 295, 275, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 0, 273, 180,
	341, 124, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 319, 0, 0, 0, 595,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 295, 275, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 0,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	124, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 295, 275, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 0, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 208, 0, 273, 180, 341, 124,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 121, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 0, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	295, 275, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 632, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 295,
	275, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 124, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 295, 275,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 500, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 295, 275, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 0, 273, 180, 341, 500, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 615, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 611, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 616, 614, 605, 606, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 295, 275, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 500, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	612, 613, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 1124, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 295, 275, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 500, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	602, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	615, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 611, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 616, 614, 605, 606, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 612, 613,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 35,
	0, 70, 38, 39, 0, 0, 0, 35, 0, 70,
	38, 39, 0, 58, 0, 0, 0, 0, 0, 76,
	0, 58, 0, 40, 0, 0, 0, 76, 0, 0,
	0, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 79,
	2683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2467, 0, 0, 0, 0,
	2696, 0, 0, 2467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 72, 45, 44, 47, 0,
	0, 0, 42, 72, 45, 44, 47, 0, 0, 0,
	2468, 0, 0, 0, 0, 0, 0, 0, 2468, 0,
	0, 0, 0, 0, 0, 0, 48, 75, 74, 0,
	0, 0, 0, 46, 48, 75, 74, 0, 0, 0,
	35, 46, 70, 38, 39, 0, 0, 0, 35, 0,
	70, 38, 39, 0, 58, 0, 0, 0, 0, 0,
	76, 0, 58, 0, 40, 0, 0, 0, 76, 0,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 56,
	57, 0, 2469, 0, 0, 0, 0, 56, 57, 0,
	2469, 0, 0, 0, 0, 0, 65, 0, 66, 0,
	0, 0, 79, 0, 65, 0, 66, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2467, 0, 0, 0,
	0, 2621, 0, 0, 2467, 0, 0, 0, 0, 0,
	2470, 73, 0, 52, 53, 60, 0, 61, 2470, 73,
	0, 52, 53, 60, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 72, 45, 44, 47,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 2468, 0, 0, 0, 0, 0, 0, 0, 2468,
	0, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 48, 75, 74, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	56, 57, 0, 2469, 0, 0, 0, 0, 56, 57,
	0, 2469, 0, 0, 0, 0, 0, 65, 0, 66,
	0, 0, 0, 0, 0, 65, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2470, 73, 0, 52, 53, 60, 0, 61, 2470,
	73, 0, 52, 53, 60, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 77,
}

var yyPact = [...]int{
	647, -1000, -307, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1730, -1000, -1000, -1000, -1000, -1000,
	-1000, 855, 267, -1000, 254, 165, 28047, 592, 2774, 28765,
	-1000, -1000, -1000, 202, 514, 28765, 408, 447, 1149, 1621,
	1148, 66, -51, -53, 179, 18800, 18318, -1000, 1799, 1801,
	-1000, -1000, 540, 70, -1000, -1000, -1000, 21205, 191, -1000,
	-1000, 1718, 1728, 1549, -1000, 13026, 540, 540, 27688, 30201,
	-1000, 1798, 28765, 11581, -1000, 583, 28765, -145, 528, 528,
	332, 528, 528, 588, -1000, 763, -1000, -1000, -1000, -1000,
	28765, 22648, 529, 28406, 529, 529, 529, 529, 529, 529,
	529, 28765, -1000, 664, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28765, 1147, 1643, 803,
	124, -1000, -1000, -1000, 827, -1000, 316, 308, 325, 301,
	104, 816, 1715, -1000, 1448, 1718, 1718, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 327, 571, 219, 191, 760, -1000,
	1642, 1641, 1072, 1640, 484, 1639, 1485, -22, -1000, 1145,
	28765, -1000, -1000, 994, 986, 1510, 1370, 632, 1508, -1000,
	-1000, 354, 543, 1470, 410, 1470, 1470, 1470, 1470, 1470,
	-54, 1470, 1470, 1470, 83, 1470, 151, 1470, 1470, 1470,
	1470, 1470, 1172, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 388, 1353, 1404,
	1506, -1000, 1482, 1697, 587, -1000, -81, 1433, 23129, -1000,
	1448, -1000, -1000, -1000, 1118, 1646, 907, 15912, 1591, -1000,
	-1000, 868, 1771, -1000, 20243, 663, -1000, 15912, 4442, 1448,
	-1000, -1000, 1448, -1000, -1000, -1000, 629, -1000, -1000, 17836,
	17836, 17836, 17836, 17836, 17836, 17836, 17836, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
	1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
	1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, -1000,
	-1000, 1448, -1000, 12545, 1448, 1448, 1448, 1448, 1448, 1448,
	1448, 1448, 1448, 1448, 1448, 1448, 15912, 1448, 1448, 1448,
	1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
	1448, 1448, 1448, 27329, 25649, 28765, 1379, 1356, -1000, -1000,
	659, 1445, -123, 29842, -1000, -1000, -1000, -1000, 29124, 25290,
	757, -1000, -1000, -1000, -1000, 1638, -1000, -1000, 658, -1000,
	1730, -1000, -1000, 1308, 518, -1000, 4368, 4554, -1000, -1000,
	-1000, 1484, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28406, 1693,
	574, 1144, 800, 1143, 1142, 1140, 22648, 22648, 528, 1139,
	1439, 569, 1438, 568, 1170, 28765, 1665, 1504, 28765, 1138,
	1137, 1134, 1132, 22648, 22648, -1000, 11097, -1000, -1000, 803,
	-1000, 1094, 15912, 528, 528, 28765, 28765, 28765, 28765, -1000,
	-1000, 803, 803, -1000, 803, 785, 1768, 785, -1000, 785,
	-1000, -1000, 15912, -1000, 17836, 22167, 690, -1000, -1000, -1000,
	1130, 319, -1000, -1000, -1000, -1000, -1000, -1000, 1129, 484,
	484, -1000, 1093, 484, 1425, -1000, 754, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 484,
	-1000, 15431, -305, -1000, -1000, 1437, -1000, 263, -1000, -1000,
	338, 338, 168, 22648, 22648, 22648, -1000, 1470, 28406, -1000,
	1470, 1470, 1470, -55, 1470, 1470, -1000, -1000, 1470, -1000,
	-1000, -1000, -1000, -1000, 1470, -1000, -1000, -1000, 1470, 1470,
	-1000, 1470, 1470, -1000, -1000, -1000, -1000, -1000, 22648, 338,
	153, 1435, 338, 22648, 22648, 1549, -1000, -1000, 191, -1000,
	-1000, 28765, -80, 23129, 1433, 1690, 9645, -1000, -1000, -1000,
	1793, 698, 1341, -1000, -1000, 1429, -1000, 927, 657, 988,
	1559, -1000, -1000, -1000, 28765, -1000, 15912, 15912, 1015, -1000,
	23610, -1000, -1000, -1000, -1000, 9161, 716, 17836, 866, 778,
	17836, 17836, 17836, 17836, 17836, 17836, 17836, 17836, 17836, 17836,
	17836, 17836, 17836, 17836, 17836, 1018, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1128, -1000, 191, 1355, 1355, 652,
	652, 652, 652, 652, 652, 652, 24572, 1688, 13988, 13988,
	13988, 1688, 1118, 1118, 13988, 13988, 13988, 13988, 13988, 13988,
	1688, 1688, 13988, 1118, 1118, 1118, 1118, 13988, 13988, 13988,
	13988, 1688, 13988, 13988, 13988, 1688, 1118, 1304, 903, 12545,
	13988, 13988, 13988, 1118, 15912, 15912, 14950, 14469, 16393, 13988,
	13988, 1688, 782, 903, 29124, -1000, -1000, 17355, -1000, -1000,
	-1000, -1000, -1000, 1118, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 28406, 28406, 13988, 13988, 13988, 13988, 344, 28765,
	-1000, 1375, 1419, -1000, -1000, -1000, 1684, 24931, 19762, -1000,
	344, 1339, 25649, 28765, -1000, -1000, 25649, 28765, 8677, 29483,
	1415, -1000, -76, -84, -123, -1000, -1000, 637, -1000, -1000,
	-1000, 12063, -1000, 10129, 1718, 1549, 6257, 10613, -1000, 4554,
	1484, -1000, -37, -1000, -1000, -1000, 1460, -1000, 1460, 289,
	8, 1460, 1460, 1460, 1460, 1460, 4, 4, 4, 4,
	19, -1000, -1000, -1000, -1000, -1000, 1483, 1481, -1000, 1460,
	1460, 1460, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1468, 303, 1462, 1462, 1462, 1462, 1462, 372, 372,
	-1000, 15912, 1487, -1000, 28765, -1000, 1664, -1000, 305, 1472,
	1373, -1000, 154, 1340, 28765, -1000, 28765, 28765, 22648, 22648,
	22648, 575, -1000, 28765, 1428, -1000, -1000, -1000, -1000, -1000,
	1376, -1000, 1340, -1000, -1000, -1000, -1000, -1000, 903, 1127,
	1126, -1000, -1000, -1000, 822, -1000, -1000, -1000, 803, 28765,
	28765, 28765, 1679, 803, 903, 936, 1488, 1448, 1118, -1000,
	-1000, 1125, -1000, 1425, 1425, -1000, 1425, 484, 1355, 1425,
	-1000, 1302, 1659, 1092, 28765, -1000, 23129, -26, -1000, -96,
	26970, -1000, -1000, -1000, 26970, -1000, 83, 170, -1000, 567,
	-1000, 1286, -1000, -1000, -1000, -1000, 1470, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 26970, 125, 152, 26970,
	1376, 1764, 1688, 1118, 287, -1000, -1000, -1000, 1448, 1268,
	655, -1000, 1555, 907, 907, 15912, -1000, -1000, -1000, 10129,
	1711, -1000, 1570, 1569, 1531, -1000, -1000, 716, 751, -1000,
	-1000, 1047, -1000, -1000, -1000, -1000, 648, 1448, -1000, 3116,
	-1000, -1000, -1000, -1000, 866, 17836, 17836, 17836, 936, 3116,
	4098, 882, 1186, 652, 853, 853, 681, 681, 681, 681,
	681, 1116, 1116, -1000, -1000, -1000, 1118, -1000, -1000, -1000,
	13988, 1282, -1000, -1000, 903, 645, 1282, 1282, 13988, -166,
	-166, 1118, 1282, 1282, 1282, 1118, 1282, 13988, 13988, 1282,
	-166, -166, -166, -166, 1282, 1282, 1282, 1282, 13988, 1282,
	1282, 1282, 13988, -1000, 15912, -1000, 1118, 1282, 1282, 1282,
	-1000, 1028, 983, 738, 1755, 1282, 736, 1750, 1282, 1213,
	17836, 17836, 17836, 1282, 1282, 13988, 805, -1000, 15912, 1118,
	-1000, 2367, 1418, 1417, 1282, 1118, 1416, 1282, 1282, 187,
	1448, -1000, 10129, 25649, 25649, 25649, 25649, 25649, -1000, 1543,
	1542, -1000, 1522, 1521, 1528, 23129, 1284, 1118, 280, 24931,
	-1000, 1448, -1000, 21686, 617, 581, 580, 578, 1738, 25649,
	1215, -1000, 1215, -1000, 642, -1000, -1000, 29124, -123, -91,
	-1000, -1000, 1415, -1000, 1053, -1000, -1000, 903, -1000, 641,
	1646, 1688, 1405, 5773, -1000, -1000, -1000, -1000, 518, -1000,
	-1000, -1000, 1469, 4341, -1000, 1592, 676, 672, 1104, 1587,
	-1000, -1000, 300, -45, -1000, -1000, 969, 4, 4, 1460,
	1460, 285, 1460, -1000, 4, -1000, -1000, -1000, 637, 1634,
	637, 637, 637, 637, 4, 1091, 1091, -1000, -1000, -1000,
	-1000, 968, -1000, 1468, -1000, 965, -1000, -1000, -1000, -1000,
	-1000, -1000, 845, 1503, 28406, 191, 1678, -1000, 1761, -1000,
	-1000, 594, 92, 22648, 162, 370, 186, -1000, 564, -1000,
	563, -1000, -1000, -1000, -1000, -1000, -1000, 28765, 22648, -1000,
	-1000, 1738, 1124, 1123, -1000, -1000, -1000, 785, 803, 1624,
	-1000, -1000, 17836, 22648, -1000, 309, -1000, -1000, -1000, -1000,
	344, 585, -1000, -1000, -61, -1000, -1000, 561, 640, 634,
	560, -1000, 102, 22648, -1000, 28406, -1000, 1748, 1746, 121,
	1742, 22648, 1559, -1000, 1402, -1000, 674, 739, 708, 377,
	377, -1000, 715, 377, 343, -1000, 190, -1000, 9645, 9645,
	1553, -1000, -1000, -1000, 28765, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8193, 13988, -1000, 936, 3116, 3828,
	-1000, 17836, -1000, 1282, 13988, -166, 7709, -166, -166, 1282,
	-1000, 26489, -1000, -166, -166, -166, -166, -166, -166, 1282,
	1282, -166, -1000, -1000, -1000, -1000, -166, -166, -166, -166,
	1282, -166, -166, -166, 1118, 903, -1000, -1000, -1000, -1000,
	496, 1018, 496, 17836, 17836, -1000, 17836, 17836, -1000, -1000,
	17836, 3789, 3774, 3706, -206, -1000, 1342, 779, -1000, 15912,
	1051, -1000, -1000, 17836, 17836, -1000, -1000, -1000, -1000, 1502,
	10129, 1448, 6741, -1000, 28406, 1357, -1000, 746, 742, 1419,
	1467, 1501, 1325, -1000, -1000, -1000, -1000, 1541, -1000, 1533,
	-1000, -1000, 1453, -1000, -1000, 1400, 1448, 28406, 17836, 617,
	-1000, 1448, 1448, 1448, 1730, 15912, 1215, -1000, -1000, 688,
	-1000, -1000, -92, -131, -1000, -1000, -1000, 9645, -1000, 6257,
	-1000, 6257, -1000, 24091, 515, 1594, 371, -1000, 1104, -1000,
	-1000, 1104, -1000, -1000, -1000, 1464, -1000, 838, -1000, -1000,
	-1000, -1000, -1000, 17836, 1791, -1000, 1589, -1000, 1588, 1088,
	-1000, -1000, 1271, 637, 637, 4, -1000, -1000, 1460, -1000,
	637, -1000, 695, -1000, -1000, -1000, -1000, 637, 1280, -1000,
	1277, 1399, -1000, 1274, 120, 28765, -1000, -1000, -1000, 1498,
	-1000, -1000, -1000, 1210, 1390, -1000, 4368, 1119, 1117, 1115,
	-213, 188, -1000, 22648, 136, 154, 398, 1114, 28765, 22648,
	-1000, -1000, -1000, -1000, -1000, 803, -1000, 17836, 3116, 1340,
	-1000, -1000, 4, 28765, -1000, 22648, 656, 26130, 22648, 110,
	169, -1000, 22648, 22648, 1740, 22648, 1376, 1531, 287, 3269,
	1104, 614, -1000, -1000, 375, -1000, 2780, 1587, 1110, 4811,
	4631, 28406, 1586, 1583, 1109, 28765, 28406, -1000, -1000, 4173,
	1108, 15912, -1000, 28406, 28406, 622, -1000, -1000, -1000, 1328,
	13026, -1000, -1000, 1118, -1000, 17836, 3116, -166, -1000, -1000,
	-1000, -1000, 620, -1000, -1000, -166, -1000, 497, -1000, -1000,
	-1000, -1000, -1000, -1000, -166, -166, -1000, -1000, -1000, -1000,
	-1000, -166, -1000, -1000, -1000, -1000, 1118, 1460, 1460, -1000,
	1460, 1462, -1000, 1460, 49, 1460, 40, 1118, 1118, 3500,
	3302, 3195, 2702, 2367, 17836, 17836, 17836, 1448, -159, -1000,
	903, 15912, 3180, 966, -1000, 1647, 1329, 1374, -1000, -1000,
	13507, 1118, 1567, 1268, -1000, 21205, 1248, -1000, 1730, 10129,
	15912, 15912, -1000, -1000, 15912, 1461, -1000, 15912, -1000, -1000,
	-1000, -1000, 28406, 270, -1000, 15912, 1248, 2992, -1000, 28406,
	28406, 28406, 1718, 903, -1000, -1000, -1000, -1000, 5773, -1000,
	1244, -1000, 1460, 1460, 1577, -1000, 676, -1000, -1000, -1000,
	28406, -1000, 3116, -49, -1000, -1000, -1000, -1000, -1000, -1000,
	637, -1000, -1000, -1000, -1000, -1000, 4, 1087, 4, 953,
	-1000, 952, -1000, -1000, -254, 1458, -1000, 191, 28765, 135,
	594, -1000, 4368, 4368, 4368, 113, 111, -1000, 811, -1000,
	-1000, -1000, 1084, 1083, 1077, 1340, 167, 806, 141, -1000,
	1671, -1000, -1000, -1000, 3116, -64, -1000, 169, -1000, -1000,
	-1000, 169, -1000, -1000, 149, 1376, 1376, 22648, 1376, -1000,
	-1000, 4173, 359, 4368, 4368, 1487, 676, 1576, 371, -1000,
	-1000, -1000, -1000, -1000, -1000, 1106, -1000, 680, -1000, 559,
	359, 4173, 903, 704, 1656, 9645, 1734, 25649, -1000, -1000,
	-1000, 3116, -1000, 7225, -1000, 1118, 1725, -1000, -1000, -1000,
	-1000, -1000, 291, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17836, 17836, 17836, 17836, -1000, 2367, 2367, 2367, 17836,
	1118, 1076, 903, 17836, 17836, 1573, -1000, 1448, -1000, -1000,
	1448, 189, -1000, 28406, 1718, -1000, 903, 903, 903, 28406,
	903, 1238, -1000, 1448, 19281, -1000, 23129, 1221, 1221, 1221,
	-1000, 643, 24091, 1655, 1655, -1000, 1104, -1000, 1219, -1000,
	-1000, 637, -1000, 637, 1204, 1187, -1000, 24091, -1000, 1713,
	-1000, 135, -1000, 1073, 228, 238, -1000, 226, 211, 207,
	203, 204, -1000, -1000, -1000, -1000, 403, 113, -1000, -40,
	948, 353, 1631, 111, -1000, 946, 945, 934, 932, 220,
	-1000, -1000, -1000, -1000, 185, 154, -1000, 397, 1068, 1616,
	1612, 1676, 1676, 108, 1376, 1310, 1181, -1000, -1000, 1105,
	-1000, -1000, 1457, 1104, 1454, -1000, 1103, -1000, -1000, 28406,
	-1000, 359, 1650, 1649, 1448, -1000, 1732, 1724, 1215, 13026,
	-1000, -1000, -1000, 15912, -1000, -1000, 2367, 2367, 2367, 2367,
	-1000, -1000, -1000, 133, -1000, -1000, 2367, 2367, 1785, -1000,
	1374, 1448, -1000, 191, -1000, -1000, 1203, -1000, 28406, -1000,
	-1000, 617, -1000, -1000, -1000, 643, -1000, 1102, 715, 1067,
	-1000, -1000, -1000, -1000, 352, -1000, -1000, -1000, -1000, 1201,
	-1000, 286, 30862, -1000, -1000, -1000, -1000, -1000, -1000, 1620,
	1619, 262, -1000, 1062, 1060, -1000, 374, 990, 618, -171,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 394, 1099, -1000, 140, -1000, -1000, 537, 1602, 1604,
	1723, -1000, 22648, -1000, -1000, 25649, -1000, -1000, 300, 300,
	24091, 1487, 24091, -1000, -1000, -1000, 17836, -1000, 340, -1000,
	15912, 15912, 1734, -1000, 1320, -1000, -1000, -1000, -1000, 1118,
	177, -228, -1000, -1000, 10129, 1374, 1118, -1000, -1000, -1000,
	-1000, -1000, 908, -1000, 28765, 643, 261, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15912, 15912, 5289,
	30862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 890,
	-1000, -1000, 913, 373, 139, -1000, 1668, -1000, 1453, 880,
	1612, 1722, 1610, 1608, -1000, 1048, -214, 1215, 1193, 1451,
	1179, 3116, 1177, -1000, 28406, -1000, 903, 1372, -1000, 903,
	1732, -1000, -174, -1000, 1552, -211, -238, 1366, -1000, -1000,
	1449, -1000, 643, 295, -1000, 1019, 1032, 194, 180, 3178,
	-1000, -1000, -1000, -1000, -308, -1000, 114, -1000, 112, -1000,
	-1000, -1000, 1035, -1000, 1615, -1000, 1027, -1000, 1721, 1720,
	-1000, 159, 1734, 643, 24091, 643, -1000, 340, 1563, 15912,
	-1000, 1118, 213, 213, -1000, 1548, -1000, 28406, -1000, 1098,
	1021, 752, -1000, 15912, 30862, 1710, 1705, 1692, 1645, 9645,
	30854, -1000, -1000, -1000, -1000, -1000, 998, 984, 20724, 1732,
	-1000, 1168, -1000, -1000, 329, -1000, -1000, -1000, 214, -1000,
	-257, 256, -258, -1000, 1355, -1000, -217, 1156, 252, -1000,
	-1000, 791, 30862, -1000, 924, -309, 416, 191, 433, 17836,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 105, 1340, -1000,
	643, 323, 802, -1000, -1000, -1000, -1000, -1000, 28406, -230,
	1492, -1000, -1000, -1000, -1000, -1000, -1000, 30862, -1000, -310,
	30862, 3701, -1000, -1000, -1000, 30691, -1000, -1000, -1000, -1000,
	172, -1000, -1000, 3116, 22648, -1000, 1448, 214, -1000, -239,
	1491, 1490, 1779, -1000, -311, 30683, -315, 503, 30862, 862,
	-1000, 15912, -1000, 433, -1000, 1340, 16874, -1000, -1000, -1000,
	1783, -1000, 1780, 639, 639, 4778, 787, 30862, -1000, -317,
	501, 30862, -1000, 849, -1000, 2367, 1118, -1000, -1000, -1000,
	348, 884, -1000, -1000, -1000, 4702, -1000, -318, 30862, -1000,
	-1000, -1000, -1000, -1000, 481, 4109, -320, -1000, 380, 30862,
	-1000,
}

var yyPgo = [...]int{
	0, 2132, 2130, 13, 2129, 186, 2128, 2126, 2124, 29,
	26, 23, 31, 2123, 1900, 1896, 1894, 1887, 1862, 2122,
	8, 2121, 2120, 1857, 2116, 2115, 1855, 1853, 1851, 1849,
	2113, 2112, 2111, 1841, 1837, 10, 2110, 19, 2108, 5,
	148, 167, 2107, 3, 2105, 2104, 11, 2102, 2099, 1835,
	2098, 2097, 2096, 95, 2095, 1832, 1830, 2093, 1821, 1819,
	2092, 2090, 1811, 1809, 1807, 2089, 166, 2088, 2084, 2083,
	151, 89, 145, 2082, 2081, 2080, 108, 81, 2331, 111,
	49, 120, 870, 2079, 22, 47, 185, 2077, 139, 136,
	2075, 160, 2073, 143, 105, 93, 2070, 2064, 165, 2062,
	2061, 2059, 130, 2057, 2056, 2944, 2055, 2054, 161, 2052,
	64, 48, 37, 2050, 2049, 2048, 2046, 2045, 7, 1031,
	2040, 2039, 141, 2038, 2037, 77, 2021, 2020, 171, 2018,
	2017, 2016, 140, 46, 2015, 60, 2014, 98, 66, 2013,
	43, 2012, 134, 2011, 2010, 33, 17, 2009, 59, 2008,
	65, 2006, 135, 109, 707, 2005, 15, 9, 28, 44,
	63, 70, 125, 96, 2004, 12, 25, 117, 106, 90,
	40, 2003, 152, 2001, 84, 158, 123, 138, 155, 2000,
	1999, 1998, 946, 1993, 127, 73, 1986, 121, 1245, 169,
	115, 1984, 94, 1983, 1982, 1981, 78, 114, 1977, 1975,
	50, 35, 1648, 1957, 56, 159, 1972, 42, 1971, 1970,
	2975, 110, 99, 104, 1968, 100, 34, 51, 1965, 1964,
	1962, 1961, 1958, 1956, 1619, 1955, 1954, 1953, 1950, 107,
	154, 1949, 1948, 122, 97, 1946, 1945, 1944, 1943, 119,
	75, 144, 1942, 112, 131, 126, 1941, 72, 1940, 1939,
	62, 45, 1938, 1937, 1934, 103, 86, 1932, 67, 39,
	36, 61, 18, 71, 194, 1927, 20, 1926, 2, 6,
	4, 1925, 1922, 1920, 1917, 1916, 1915, 1914, 76, 1913,
	1912, 58, 1910, 1909, 1908, 38, 1907, 1906, 1903, 137,
	116, 41, 163, 80, 16, 1902, 1898, 21, 1892, 118,
	1889, 52, 1882, 54, 1879, 1875, 57, 1869, 1867, 55,
	1845, 1843, 164, 1535, 488, 1828, 162, 142, 53, 74,
	1826, 1824, 0, 826, 168, 156, 1817, 1815,
}

var yyR1 = [...]int{
	0, 321, 321, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 87, 86, 86, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 324, 324, 100, 100, 98, 98, 99, 99,
	167, 167, 12, 12, 12, 172, 172, 177, 177, 177,
	180, 180, 180, 180, 158, 159, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 295, 295,
	304, 304, 304, 305, 305, 303, 303, 303, 303, 303,
	307, 307, 308, 308, 306, 306, 306, 306, 310, 310,
	311, 311, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 298, 298, 298, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	313, 313, 314, 314, 315, 315, 316, 316, 316, 316,
	317, 317, 317, 317, 317, 318, 318, 318, 318, 318,
	318, 318, 319, 319, 320, 320, 2, 276, 276, 277,
	277, 278, 278, 278, 278, 279, 279, 280, 280, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 24,
	199, 199, 297, 297, 297, 297, 291, 291, 291, 293,
	293, 292, 292, 292, 294, 294, 299, 299, 299, 299,
	299, 301, 301, 301, 301, 301, 301, 302, 302, 302,
	300, 300, 47, 47, 48, 48, 48, 151, 151, 151,
	13, 13, 13, 13, 13, 19, 21, 21, 36, 36,
	37, 22, 22, 22, 22, 38, 38, 39, 25, 25,
	25, 25, 25, 25, 45, 45, 45, 44, 44, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 46,
	46, 41, 41, 40, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 26, 26, 26, 26,
	26, 26, 18, 275, 275, 275, 35, 35, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 51, 252, 253,
	253, 253, 253, 253, 253, 253, 253, 240, 240, 241,
	217, 217, 217, 217, 217, 217, 217, 217, 216, 216,
	216, 216, 220, 220, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 219, 219, 219, 219, 219, 219,
	219, 219, 221, 221, 221, 221, 221, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 223, 223, 223, 223, 223, 223, 223, 223,
	239, 239, 224, 224, 233, 233, 234, 234, 234, 231,
	231, 232, 232, 227, 228, 235, 229, 229, 229, 230,
	230, 230, 238, 238, 238, 238, 225, 242, 242, 262,
	262, 261, 261, 260, 260, 260, 251, 251, 257, 257,
	257, 257, 257, 257, 257, 246, 246, 246, 245, 245,
	247, 247, 250, 250, 259, 259, 258, 258, 243, 243,
	243, 263, 263, 263, 263, 263, 244, 244, 244, 244,
	264, 248, 248, 249, 249, 249, 269, 270, 268, 268,
	268, 268, 268, 115, 115, 115, 254, 254, 254, 255,
	255, 255, 256, 256, 256, 273, 273, 272, 272, 49,
	50, 54, 54, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 150, 150, 150,
	197, 197, 267, 265, 265, 266, 266, 15, 15, 52,
	52, 296, 296, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 271, 271, 271, 17, 17, 55, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 83, 186, 186, 185, 185, 184, 184, 184,
	187, 187, 187, 214, 214, 214, 57, 57, 61, 61,
	64, 64, 64, 62, 63, 27, 28, 28, 28, 28,
	29, 198, 198, 59, 59, 60, 60, 60, 60, 75,
	75, 326, 326, 58, 327, 66, 67, 67, 68, 68,
	68, 190, 190, 72, 72, 72, 70, 70, 70, 71,
	71, 77, 77, 81, 81, 81, 81, 80, 80, 80,
	80, 153, 153, 153, 154, 154, 155, 155, 155, 156,
	156, 157, 157, 157, 157, 157, 123, 123, 206, 206,
	206, 205, 205, 205, 205, 85, 85, 88, 88, 89,
	89, 89, 89, 92, 136, 136, 109, 109, 110, 110,
	110, 110, 110, 121, 121, 166, 166, 165, 165, 168,
	168, 90, 90, 90, 90, 95, 95, 96, 96, 97,
	97, 196, 196, 212, 212, 212, 101, 101, 101, 103,
	102, 102, 102, 102, 104, 104, 106, 107, 107, 105,
	105, 108, 111, 111, 111, 111, 112, 112, 82, 82,
	82, 82, 82, 82, 82, 183, 183, 114, 114, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 131,
	131, 131, 131, 131, 131, 116, 116, 116, 116, 116,
	116, 116, 76, 76, 132, 132, 132, 94, 93, 93,
	79, 79, 78, 78, 133, 133, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 126, 126, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 325,
	325, 128, 127, 127, 127, 127, 127, 127, 73, 73,
	73, 73, 73, 213, 213, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 143, 143,
	74, 74, 141, 141, 142, 144, 144, 140, 140, 140,
	118, 118, 118, 118, 118, 118, 118, 118, 120, 120,
	120, 145, 145, 134, 134, 84, 146, 146, 147, 148,
	148, 149, 149, 152, 160, 160, 160, 161, 161, 161,
	161, 122, 122, 162, 162, 162, 117, 117, 117, 117,
	117, 117, 117, 164, 164, 163, 163, 163, 163, 169,
	169, 135, 135, 138, 138, 137, 139, 170, 170, 174,
	174, 171, 171, 175, 175, 175, 175, 178, 178, 179,
	179, 179, 176, 176, 176, 173, 173, 173, 209, 209,
	209, 181, 181, 191, 191, 188, 188, 189, 189, 182,
	182, 226, 226, 195, 195, 194, 194, 194, 192, 192,
	192, 193, 193, 207, 207, 203, 203, 208, 208, 204,
	204, 210, 210, 211, 211, 274, 274, 236, 236, 284,
	284, 237, 237, 285, 285, 287, 287, 282, 282, 283,
	283, 286, 286, 30, 288, 288, 289, 289, 290, 290,
	290, 290, 31, 32, 32, 32, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	322, 323,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 3, 1, 3, 4, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	0, 3, 1, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 2, 1, 2, 1, 2, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 3, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 4, 8, 0, 1, 0, 2, 2, 4,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 1,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 3, 2, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -321, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 131, -50, 134, 133, 170, 135, 163, 64,
	277, -64, 280, 281, -326, -198, 216, 217, 20, 37,
	282, 284, 31, 32, 185, 233, 235, -5, -87, -6,
	8, 375, 132, 278, 165, 164, 26, 427, -322, 68,
	490, -148, 15, -66, -327, -66, -66, -66, -66, -66,
	-252, -196, 106, 68, 23, -193, 144, 87, 366, 140,
	-199, 229, 231, -191, -192, 193, 203, 44, 151, 150,
	141, 229, 141, 142, 144, 366, 140, 178, 177, 229,
	231, 141, -105, -210, 72, -201, 154, 438, 254, 424,
	241, 190, 277, 291, 293, 285, 320, 308, 425, 439,
	155, 211, 139, 306, 309, 353, 153, 244, 204, 267,
	440, 342, 348, 214, 280, 362, 441, 156, 208, 210,
	209, 198, 215, 36, 166, 304, 250, 297, 219, 193,
	442, 432, 295, 28, 188, 443, 350, 325, 253, 444,
	429, 248, 349, 300, 296, 137, 157, 151, 446, 326,
	330, 447, 354, 234, 448, 449, 450, 143, 240, 289,
	290, 451, 194, 356, 245, 324, 33, 152, 426, 48,
	175, 357, 38, 328, 37, 334, 452, 323, 318, 335,
	453, 454, 455, 456, 258, 256, 257, 259, 322, 288,
	317, 206, 53, 138, 332, 331, 333, 207, 352, 313,
	311, 457, 458, 249, 158, 459, 460, 298, 18, 461,
	462, 360, 169, 251, 252, 42, 463, 464, 465, 173,
	466, 467, 468, 351, 327, 329, 192, 469, 301, 148,
	470, 255, 264, 428, 238, 394, 358, 294, 472, 284,
	174, 168, 361, 273, 473, 217, 474, 475, 476, 160,
	477, 232, 231, 281, 265, 393, 282, 344, 212, 478,
	479, 480, 481, 202, 187, 364, 355, 52, 216, 339,
	482, 268, 287, 150, 218, 483, 242, 278, 43, 7,
	205, 246, 345, 266, 213, 203, 315, 176, 484, 485,
	302, 303, 321, 286, 316, 279, 179, 170, 262, 363,
	340, 430, 229, 310, 307, 182, 314, 486, 144, 487,
	183, 283, 359, 243, 305, 341, 141, 124, 309, 353,
	131, 343, 344, 350, -246, 351, 177, 180, -214, 141,
	-186, 342, 234, 255, 399, 183, 184, 142, 143, 33,
	355, 354, 346, -210, 145, 283, -75, 135, 171, -105,
	-46, 72, 218, -46, 30, 72, 72, 36, 72, 282,
	345, 345, 75, 428, 186, 21, -313, -294, 264, -312,
	-292, 132, 131, 10, 133, 269, 270, 271, 142, 8,
	31, 471, 159, 272, 273, 6, 163, 274, 275, 178,
	9, 276, -297, 74, 72, -201, -202, 395, 396, 397,
	398, 399, 412, 413, 414, 400, 401, 415, 416, 417,
	402, 403, 418, 419, 421, 422, 420, 181, 406, 405,
	404, 407, 408, 51, 410, 409, 411, 21, -313, -294,
	264, 6, -68, 5, -182, 146, 279, -86, 437, -91,
	-212, -210, -202, 74, -3, -161, 17, 16, -72, 54,
	55, -67, -80, 115, -82, -210, -113, 89, -119, 29,
	72, -201, 24, -118, -202, -114, -140, -139, -94, 124,
	125, 126, 113, 114, 121, 90, 127, -126, -124, -125,
	-127, -129, -130, 74, 73, 82, 75, 76, 77, 78,
	83, 395, 396, 397, 398, 399, 412, 413, 414, 400,
	401, 415, 416, 417, 402, 403, 418, 419, 421, 422,
	420, 406, 405, 404, 407, 408, 410, 409, 411, 84,
	85, -203, -137, -322, 58, 59, 171, 140, 376, 377,
	378, 379, 380, 423, 161, 384, 92, 47, 365, 374,
	373, 372, 370, 371, 367, 369, 368, 386, 387, 147,
	366, 119, 375, -182, -182, 11, -98, -99, -105, -108,
	-210, -171, 279, -178, -175, 354, 355, -176, -179, -173,
	-140, 334, 467, 468, 353, 309, 352, -203, -210, -2,
	-5, 6, -105, -253, -241, -244, -204, 156, -264, -203,
	-200, 153, 72, -201, 247, 136, 162, 132, 88, 431,
	23, 25, 237, 337, 395, 91, 124, 396, 397, 398,
	16, 20, 92, 123, 81, 376, 186, 399, 131, 62,
	392, 367, 369, 365, 366, 343, 29, 10, 26, 164,
	197, 22, 117, 133, 95, 96, 97, 167, 269, 270,
	24, 165, 260, 85, 271, 161, 445, 19, 65, 11,
	180, 233, 13, 390, 391, 14, 230, 147, 146, 108,
	195, 142, 60, 8, 127, 27, 105, 56, 400, 401,
	434, 45, 185, 435, 58, 106, 17, 370, 371, 31,
	423, 402, 172, 436, 403, 119, 200, 63, 50, 236,
	89, 83, 34, 86, 66, 87, 15, 196, 61, 388,
	239, 261, 177, 471, 199, 437, 159, 107, 272, 134,
	375, 263, 235, 59, 140, 6, 385, 30, 163, 274,
	406, 405, 404, 407, 201, 57, 378, 379, 408, 275,
	488, 141, 94, 386, 387, 145, 178, 84, 5, 44,
	32, 9, 276, 64, 67, 372, 373, 374, 47, 51,
	410, 409, 411, 93, 12, 389, 427, 181, 142, -105,
	375, -189, 147, -189, 178, 177, -189, -189, 141, 98,
	-52, -105, -296, -291, -297, -188, 147, -203, -188, -188,
	-188, -188, -188, -188, -188, -105, 128, -105, 72, 30,
	-187, 106, 12, 366, 140, 141, 178, 144, -248, 11,
	108, 181, 181, 181, 182, 181, -185, 345, 347, 179,
	348, 349, 12, -83, 106, 19, -322, -161, -161, 72,
	282, 145, -60, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -41, -40, -42, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 30,
	-275, 68, -236, 334, 72, -288, -289, -105, 75, 75,
	66, 66, 69, 145, 69, 66, -314, 265, 68, -314,
	231, 265, 266, 203, 229, 144, -314, -314, 231, -314,
	-314, -314, -314, -314, 345, -314, -314, -314, 267, 268,
	-314, 343, 144, -314, -314, -314, -314, -314, 71, 66,
	69, 255, 66, 11, 66, -66, -7, -5, -322, 21,
	22, 141, 358, 69, -86, -164, -322, -323, 70, -162,
	19, 31, -122, 75, 78, -149, -152, -82, -210, 50,
	-70, 21, 22, 80, 11, -206, 88, 87, 105, -205,
	23, 72, -201, -202, 74, 128, -82, -116, 108, 89,
	106, 107, 91, 110, 109, 120, 113, 114, 115, 116,
	117, 118, 119, 111, 112, 123, 98, 99, 100, 101,
	102, 103, 104, -183, -322, -94, -322, 129, 130, -119,
	-119, -119, -119, -119, -119, -119, -119, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -3, -133, -82, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -143, -82, -322, -325, -128, -322, -325, -128,
	-325, -128, -325, -322, -325, -128, -325, -128, -325, -325,
	-128, -325, -322, -322, -322, -322, -322, -322, -107, 27,
	-105, -85, -88, -89, -90, -109, -93, -322, -105, -94,
	-105, -98, -324, 69, 11, 67, -324, 69, 128, 69,
	-172, -177, 356, 358, 279, -176, -176, -209, -203, 74,
	29, 98, 30, 128, -148, -66, 70, 69, -244, 156,
	153, -216, -220, -222, -221, -223, -218, -219, 306, 309,
	313, 311, 307, 312, 124, 310, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 30, 166, 302,
	303, 304, 305, 326, 327, 328, 329, 330, 331, 332,
	333, 285, 308, 425, 286, 287, 288, 289, 290, 291,
	293, 294, 295, 296, 297, 298, 299, 300, 72, -202,
	-264, 68, -203, 23, 144, 72, 89, 72, 72, 72,
	-300, -299, -291, -294, -189, 72, 69, 145, 69, 145,
	71, -98, 24, 66, -100, -105, 72, 72, 72, 72,
	-293, -291, -294, -211, -210, -200, -187, 74, -82, -189,
	-189, -105, -105, -105, -105, -187, -187, -187, -184, 11,
	108, 11, -184, -184, -82, -119, -291, 368, 115, 72,
	72, 282, 72, -41, -41, 74, -41, 69, 98, -41,
	70, -133, -274, 489, 69, -290, 23, 358, 359, 335,
	-316, 141, 180, 177, -316, -312, 273, -293, -292, -291,
	-314, -315, -203, -314, -314, -314, 345, -314, -314, -314,
	-314, -314, -314, -314, -314, -297, -316, 233, 69, -316,
	-293, -291, -72, -3, -105, 359, 360, -91, 23, -163,
	-204, 9, 108, 69, 18, 69, -160, 25, 26, 128,
	-120, 51, 75, 78, -190, 49, -105, -82, -82, -131,
	83, 89, 84, 85, -205, 115, -211, -204, -200, -119,
	-132, -137, -94, 79, 108, 106, 107, 91, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -213, 72, 74, 72, -118, -118, -203,
	-70, -78, -81, 115, -82, -210, -78, -78, -70, -323,
	-323, -81, -78, -78, -78, -81, -78, -70, -70, -78,
	-323, -323, -323, -323, -78, -78, -78, -78, -70, -78,
	-78, -78, -70, -323, 69, -323, -3, -78, -78, -78,
	-323, -82, -82, -140, 74, -78, -140, 74, -78, -119,
	381, 382, 383, -78, -78, -70, -141, -142, 93, -140,
	-323, -119, -203, -203, -78, -79, -78, -78, -78, -167,
	173, -105, 30, 69, -101, -103, -102, -104, 56, 60,
	62, 57, 58, 59, 63, -196, -85, -92, 47, -322,
	-110, 173, -111, 23, -212, 64, 146, 65, -167, 67,
	-85, -105, -85, -108, -210, 115, -175, -178, 69, 357,
	359, 360, -172, -230, 123, 66, 86, -82, -204, -211,
	-161, -72, -254, -255, -256, -204, 74, 75, -241, -242,
	-243, -244, -257, 156, -263, 148, 150, 44, -245, 157,
	142, 45, -217, -231, 340, -224, 68, -224, -224, 314,
	306, 309, 307, -224, -224, -224, -224, -224, -229, 309,
	-229, -229, -229, -229, 307, 68, 68, -224, -224, -224,
	-233, 68, -233, 301, -234, 68, -234, -234, -234, -234,
	-264, -264, -82, -207, 67, -158, -105, 24, -47, 190,
	162, 68, -295, 69, 29, -301, 230, -105, -105, -105,
	-291, -291, -297, -271, 160, 155, -105, 69, 69, 72,
	72, -249, 11, 108, -187, -210, -210, -105, -121, 23,
	-187, -76, 167, 67, -325, -323, 72, -40, -118, 70,
	-106, 27, 74, -289, -212, 334, 359, -317, 115, -203,
	-317, -320, 427, 145, 70, 69, -314, -317, 251, 233,
	-317, 11, -70, -323, -54, -53, 136, 133, 134, 138,
	139, -267, 337, 132, 174, -93, -322, -323, 69, 128,
	52, -122, -122, -152, -181, 19, 11, 47, 47, -71,
	57, 83, 84, 85, 128, -322, -132, -119, -119, -119,
	-76, 88, -323, -78, 69, -323, 128, -323, -323, -78,
	-153, 388, -153, -323, -323, -323, -323, -323, -323, -78,
	-78, -323, -153, -153, -153, -153, -323, -323, -323, -323,
	-78, -323, -323, -323, -79, -82, -323, -323, -323, -323,
	69, 67, 23, 11, 11, -323, 11, 11, -323, -323,
	11, -119, -119, -119, -323, -323, -78, -144, -142, 95,
	-82, -323, -323, 69, 69, -323, -323, -323, -323, -117,
	30, 47, -322, -3, -322, -170, -174, -140, -200, -88,
	-89, -89, -88, -89, 56, 56, 56, 61, 56, 61,
	56, -102, -212, -323, -323, -136, 189, -322, 34, -212,
	-111, 142, 142, 142, -112, 12, -85, -112, -112, 128,
	-177, -180, 361, 358, 364, 72, 74, 128, -162, 69,
	-256, 98, -244, 68, 72, -250, -202, 45, -245, 142,
	45, -245, -250, 72, -250, 45, 83, 89, -227, -228,
	-235, -238, -225, 29, 66, 337, 148, 45, 44, 81,
	-232, 341, 75, -229, -229, -224, -224, -224, 314, -224,
	-229, -230, 30, -230, -230, -230, -230, -229, -239, 74,
	-239, 75, -233, 75, 70, 66, -203, -3, 23, -48,
	8, 9, 10, -276, -277, -278, 72, 108, 195, 196,
	-304, 263, -299, 231, 240, 88, 16, 427, 145, 145,
	-105, -291, -112, 72, 72, -184, -187, 34, -119, -294,
	183, 184, -167, 141, -290, 145, 128, 128, 145, 254,
	-293, -203, 11, 11, 251, 11, -293, -190, 69, -197,
	-245, -273, -243, -244, -272, 149, 156, 157, -197, 156,
	153, -245, 157, 148, 149, -194, -245, 145, 23, -197,
	-197, -251, 98, -197, 173, -204, -204, 53, -105, -77,
	-159, 115, -204, -79, -76, 88, -119, -323, -81, -154,
	-153, 115, -211, -154, -154, -323, -203, -322, -153, -154,
	-154, -153, -153, -153, -323, -323, -153, -154, -154, -154,
	-154, -323, -154, -154, -154, -323, -215, 124, 306, 166,
	304, 297, 324, 311, 339, 302, 340, -213, -215, -119,
	-119, -119, -119, -119, 11, 11, 11, 424, -148, 97,
	-82, 94, -119, -119, -169, 66, -170, -135, -138, -137,
	-322, -3, -323, -163, 6, 427, -168, -203, -112, 69,
	98, 98, -96, -95, 66, 67, -97, 66, -95, 56,
	56, -166, 68, 69, -137, -322, -168, -119, -111, -322,
	-322, -322, -148, -82, -112, 358, 362, 363, -255, -256,
	-259, -258, -203, -202, 148, -263, 44, -263, -250, -250,
	68, 83, -119, 9, 45, 45, 74, 70, -230, -230,
	-229, -224, -230, 72, 124, -230, 70, 69, 70, 69,
	70, 69, -115, 443, 89, -105, -158, -158, 66, 70,
	69, -216, 72, 72, 72, -307, 427, 236, -305, -303,
	242, 243, 244, 245, 246, -294, 241, -301, 238, 74,
	72, -105, -291, -187, -119, -229, -105, -293, 115, 115,
	-203, -293, 251, -319, 427, -293, -293, 11, -293, -71,
	-53, 68, -240, 72, -202, -250, -192, 148, 72, 72,
	72, -202, 72, -202, -203, 45, 45, 72, -105, -203,
	-240, 72, -82, -203, -203, 128, -112, 11, 69, -80,
	-323, -119, -154, 128, -154, -148, 173, -154, -154, -154,
	-323, -224, -224, -224, -234, -224, 290, -224, 290, -323,
	-323, 19, 19, 19, 19, -323, -119, -119, -119, -322,
	-74, 385, -82, 69, 69, 28, -169, 69, -323, -323,
	47, -323, -323, 69, -148, -174, -82, -82, -82, 68,
	-82, -165, -203, 189, -323, -111, -196, -165, -165, -165,
	-161, 70, 69, -224, -224, 45, -247, -245, -165, -125,
	-230, -229, 74, -229, 75, 75, 443, 68, -3, -105,
	-279, -280, -281, 81, 426, 89, 197, 198, 158, 199,
	200, 201, -278, -216, -216, -216, -310, -311, -309, 239,
	260, 261, 247, -308, -306, 256, 257, 258, 259, 88,
	74, 74, 74, -302, 230, 88, 239, 16, 23, -282,
	-185, -319, -319, 233, -293, -77, -240, -150, 161, 162,
	-216, -216, -207, -247, 45, 72, -195, 145, 23, 145,
	-150, -240, 30, 133, 27, -204, -145, 13, -85, -159,
	-159, 115, -323, 16, -229, 72, -119, -119, -119, -119,
	-323, -323, -323, -119, -323, 74, -119, -119, 45, -138,
	-135, 47, -3, -322, -203, -161, -165, 70, 69, -137,
	-110, -212, -323, -323, -323, -261, -260, 67, 152, 81,
	-258, -160, -160, -250, 70, -230, -230, 70, 70, -259,
	-158, 19, -158, -281, 74, 201, 197, 201, 201, 201,
	201, 202, -298, 81, 237, -309, 248, 449, 232, 263,
	75, 75, 262, 31, 32, -306, 75, 75, 75, 75,
	-303, 16, 427, -301, 238, 74, 74, -283, 38, -285,
	39, -318, 23, -318, 251, 11, 70, 72, -217, -217,
	68, -250, 68, 72, -203, -150, 29, 29, -322, -146,
	14, 16, -112, -80, -133, -323, -323, -323, -323, -73,
	108, 427, -323, -323, 9, -135, -3, 70, -203, -111,
	-260, 72, -251, 74, 159, 70, 188, -20, -3, -9,
	-10, -11, -12, -14, -49, -15, -16, -21, -22, -17,
	-55, -56, -64, -62, -63, -59, -58, -25, -23, -26,
	-18, -27, -28, -29, -33, -34, -24, 92, 147, 219,
	277, 36, 36, 193, 194, 74, 74, 29, 249, 127,
	29, 75, 127, 392, 238, 74, 72, 239, -226, 146,
	-286, 43, -284, -237, 42, 16, -291, -85, -259, -207,
	-259, -119, -265, -266, 173, -147, -82, -134, -84, -82,
	-145, -159, -148, -323, 425, 63, 428, -170, -323, 75,
	-105, -262, -261, 189, -158, -82, -82, 72, -45, -208,
	222, 223, 224, -204, -35, -20, 75, 29, 75, 29,
	252, 239, 23, -166, 75, -285, 16, -287, 40, 41,
	74, 427, -112, 70, 68, 70, -323, 69, -203, 69,
	-146, -155, 393, 394, 53, 426, 429, 68, -151, 191,
	192, -36, -37, 93, 94, 220, 221, 225, -216, 69,
	490, 250, 250, 74, 38, 74, 16, 16, 231, -145,
	-262, -259, -262, -266, 47, -84, -323, -156, 91, -157,
	262, 392, -123, 75, 127, -156, 53, -165, -158, 72,
	72, 97, 95, -37, -82, -35, 19, 19, 19, 29,
	-204, 97, -20, 74, 74, 29, 236, 21, -294, -146,
	70, 175, -157, 469, 445, 189, 469, 445, -118, 427,
	70, -13, -19, -12, -9, -10, -11, 277, 92, -35,
	94, 490, -46, 75, -3, -44, -43, 75, -46, 227,
	89, 228, 72, -119, 253, -262, 176, 88, -203, 428,
	-269, -270, 66, -158, -35, 490, -35, 97, 95, -38,
	-39, 96, -20, 69, 226, -294, -322, -157, 429, -270,
	66, -269, 66, 10, 9, 490, 97, 490, 147, -35,
	97, 95, -39, -82, -43, -119, 172, -268, 160, 155,
	158, 30, -268, 97, 92, 490, 147, -35, 94, -323,
	-323, 154, 29, 83, 97, 490, -35, 147, 97, 490,
	147,
}

var yyDef = [...]int{
	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 684, 684, 684, 684, 684,
	684, 771, -2, 549, 0, 0, 0, 0, -2, 657,
	658, 659, 663, 664, 679, 681, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1079, 0, 682, 671, 672, 0, 0, 1560,
	2, 1017, 0, 693, 686, 0, 1079, 1079, 0, 0,
	86, 0, 0, 0, 772, 0, 0, 0, 1077, 1077,
	0, 1077, 1077, 0, 1092, 0, 1074, 1088, 1089, 1090,
	0, 0, 1075, 0, 1075, 1075, 1075, 1075, 1075, 1075,
	1075, 0, 606, 789, 1101, 1102, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 0, 0, 0, 650,
	0, 616, 617, 618, 0, 620, 0, 0, 0, 0,
	0, 630, 633, 637, 0, 1017, 1017, 495, 496, 497,
	654, 655, 644, 656, 0, 0, 0, 0, 0, 683,
	305, 307, 0, 327, 0, 330, 333, 1107, 665, 0,
	0, 1132, 1133, 0, 0, 0, 0, 0, 1446, 180,
	244, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	0, 182, 182, 182, 1457, 182, 0, 182, 182, 182,
	182, 182, 243, 232, 233, 234, 235, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 0, 0, 0,
	1446, 684, 0, 688, 0, 1080, 660, 44, 0, 46,
	1033, 773, 774, 775, 0, 1023, 0, 0, 696, 694,
	695, 685, 0, 707, 728, 0, 798, 0, 803, 805,
	-2, -2, 0, 846, 847, 848, 849, 850, 851, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 876, 877,
	878, 879, 880, 990, 991, 992, 993, 994, 995, 996,
	997, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 807,
	808, 987, 1046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 949, 949,
	949, 949, 949, 949, 949, 949, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 68,
	789, 72, 1509, 0, 1051, -2, -2, 1053, 0, 0,
	0, -2, -2, -2, -2, 1318, -2, 987, 0, 87,
	1009, 684, 88, 0, 369, 370, 0, 1331, 519, 1099,
	1100, 1320, 1095, 1096, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	587, 0, 588, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 0, 607, 608, 650,
	610, 0, 0, 1077, 1077, 0, 0, 0, 0, 521,
	522, 650, 650, 623, 650, 647, 0, 647, 627, 647,
	645, 646, 0, 632, 0, 0, 0, 640, 641, 666,
	0, 0, 673, 675, 676, 677, 678, 674, 0, 0,
	0, 309, 0, 0, 329, 311, 0, 314, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 325, 0,
	332, 0, 1105, 1108, 670, 1123, 1124, 0, 1134, 1135,
	186, 186, 0, 0, 0, 0, 149, 182, 0, 151,
	182, 182, 182, 0, 182, 182, 158, 159, 182, 161,
	162, 163, 164, 165, 182, 167, 168, 169, 182, 182,
	172, 182, 182, 175, 176, 177, 178, 179, 242, 186,
	0, 0, 186, 0, 0, 693, 41, 51, 0, 689,
	690, 0, 0, 0, 45, 0, 0, 50, 1561, 36,
	0, 0, 1018, 1021, 1022, 1010, 1011, 1014, 0, 0,
	691, 697, 698, 687, 0, 708, 0, 0, 0, 729,
	0, 731, 732, 733, 734, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 825, 826, 827, 828,
	829, 830, 831, 804, 0, 818, 0, 0, 0, 867,
	868, 869, 870, 871, 872, 873, 0, 696, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 696, 0, 0, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 979, 0, 932, 941, 0, 933, 942,
	934, 943, 935, 0, 936, 944, 937, 945, 938, 939,
	946, 940, 0, 0, 0, 840, 0, 0, 70, 0,
	788, 0, 735, 737, 738, 739, -2, 0, 792, 838,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 0,
	73, 75, 0, 0, 1509, 1054, 1055, 469, 1068, 1069,
	1070, 0, 1066, 0, 1017, 693, 536, 0, 371, 0,
	0, 380, 459, 389, 390, 391, 452, 393, 452, 452,
	0, 452, 452, 452, 452, 452, 466, 466, 466, 466,
	466, 435, 436, 437, 438, 439, 0, 0, 412, 452,
	452, 452, 416, 442, 443, 444, 445, 446, 447, 448,
	449, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 454, 454, 456, 456, 456, 456, 456, 0, 0,
	518, 0, 1093, 84, 0, 92, 0, 93, 0, 0,
	98, 260, 246, 97, 0, 231, 0, 0, 0, 0,
	237, 602, 1076, 0, 595, 64, 596, 597, 598, 599,
	600, 239, 601, 790, 1103, 1104, 609, 651, 652, 0,
	0, 613, 614, 615, 523, 621, 622, 629, 650, 0,
	0, 0, 753, 650, 631, 832, 634, 949, 0, 668,
	667, 0, 680, 306, 308, 310, 328, 0, 0, 331,
	334, 0, 0, 0, 0, 1126, 0, 1128, 1130, 0,
	0, 187, 188, 189, 0, 181, 0, 204, 245, 0,
	150, 0, 184, 152, 153, 154, 182, 156, 157, 160,
	166, 170, 171, 173, 174, 241, 0, 0, 0, 0,
	147, 0, 696, 0, 0, 661, 662, 47, 0, 0,
	1035, 1024, 0, 0, 0, 0, 1013, 1015, 1016, 0,
	0, 998, 0, 0, 699, 692, 38, 799, 800, 802,
	819, 0, 821, 823, 730, 709, 0, 988, -2, 809,
	810, 834, 835, 836, 0, 0, 0, 0, 832, 814,
	0, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 866, 963, 964, 0, 864, 865, 874,
	0, 0, 842, 703, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 840, 837, 0, 1045, 0, 0, 0, 0,
	914, 0, 0, 849, 990, 0, 849, 990, 0, 0,
	0, 0, 0, 0, 0, 0, 985, 982, 0, 0,
	950, 0, 0, 0, 0, 0, 841, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 776, 0,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 1433, 748, 0, 792, 0, 0, 0, 796, 0,
	796, 67, 796, 69, 0, 791, 1052, 0, 0, 0,
	78, 79, 74, 1056, 0, 1062, 1063, 1064, 988, 0,
	1023, 696, 368, 537, 539, 542, 543, 544, 372, 374,
	375, 376, 0, -2, 510, 1443, 1487, -2, 502, 1360,
	-2, -2, 379, 461, 460, 392, 0, 466, 466, 452,
	452, 452, 452, 421, 466, 424, 427, 428, 469, 0,
	469, 469, 469, 469, 466, 0, 0, 413, 414, 415,
	404, 0, 405, 454, 407, 0, 408, 409, 410, 411,
	516, 517, 0, 0, 0, 0, 0, 1078, 0, 262,
	263, 207, 100, 0, 0, 247, 0, 367, 0, 589,
	0, 591, 236, 593, 603, 604, 594, 0, 0, 611,
	612, 796, 0, 0, 624, 648, 649, 647, 650, 0,
	628, 642, 0, 0, 635, 0, 669, 312, 313, 335,
	70, 0, 1106, 1125, 0, 1129, 1131, 0, 190, 192,
	0, 141, 0, 0, 183, 0, 155, 0, 0, 0,
	0, 0, 691, 52, 550, 551, -2, 580, 1085, 580,
	580, 568, 486, 580, 0, 48, 0, 1034, 0, 0,
	0, 1019, 1020, 1012, 0, 1071, 1072, 999, 1000, 85,
	700, 820, 822, 824, 0, 840, 811, 832, 815, 0,
	812, 0, 806, 0, 0, 714, 0, 714, 714, 0,
	900, 0, 901, 0, 714, 714, 0, 0, 0, 0,
	0, 0, 907, 908, 909, 910, 714, 714, 714, 714,
	0, 714, 714, 714, 0, 845, -2, 911, 912, 913,
	0, 0, 0, 0, 0, 956, 0, 0, 957, 922,
	0, 0, 0, 0, 0, 928, 1009, 0, 983, 0,
	0, 931, 951, 0, 0, 952, 953, 954, 955, 1039,
	0, 0, 0, 1028, 0, 796, 1047, 0, 0, 736,
	767, 769, 0, 764, 777, 778, 780, 0, 782, 0,
	784, 785, 755, 742, 839, 743, 0, 0, 0, 792,
	752, 0, 0, 0, 1009, 0, 796, 60, 61, 0,
	76, 77, 0, 0, 83, 470, 471, 0, 206, 0,
	540, 0, 373, 0, 503, 0, 0, 488, 502, 498,
	499, 502, 493, 503, 494, 0, 381, 0, 383, 384,
	385, 386, 387, 0, 0, 465, 0, 473, 475, 0,
	388, 462, 0, 469, 469, 466, 419, 420, 452, 425,
	469, 429, 0, 430, 431, 432, 433, 469, 0, 450,
	0, 0, 406, 0, 533, 0, 1094, 84, 84, 0,
	264, 265, 266, 0, 208, 209, 0, 0, 0, 0,
	110, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	65, 240, 619, 524, 525, 650, 626, 0, 833, 636,
	638, 639, 466, 0, 1127, 0, 0, 0, 0, 0,
	202, 185, 0, 0, 0, 0, 148, 699, 0, 0,
	502, 0, 569, 570, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 1087, 0,
	0, 0, 487, 0, 0, 1037, 1036, 1025, 37, 796,
	0, 710, 989, 0, 813, 0, 816, 714, 843, 885,
	715, 705, 0, 886, 887, 714, 711, 1009, 902, 889,
	890, 903, 904, 905, 714, 714, 906, 894, 893, 892,
	895, 714, 898, 897, 899, 881, 0, 452, 452, 968,
	452, 456, 971, 452, 973, 452, 976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 980, 930,
	986, 0, 0, 0, 53, 0, 1039, 1026, 1041, 1043,
	0, 0, 0, 0, -2, 1298, 0, 759, 1009, 0,
	0, 0, 761, 768, 0, 0, 762, 0, 763, 781,
	783, 740, 0, 0, 744, 0, 0, -2, 751, 0,
	0, 0, 1017, 797, 59, 80, 81, 82, 538, 541,
	0, 504, 452, 452, 0, 508, 500, 509, 490, 492,
	0, 382, 463, 0, 472, 474, 476, 453, 417, 418,
	469, 426, 422, 467, 468, 434, 466, 0, 466, 0,
	457, 0, 520, 534, 0, 0, 90, 0, 0, 215,
	0, 211, 0, 0, 0, 118, 0, 101, 102, 103,
	105, 106, 0, 0, 0, 99, 0, 249, 0, 252,
	253, 590, 592, 625, 754, 1117, 786, 202, 191, 193,
	194, 202, 205, 142, 0, 143, 145, 0, 144, 85,
	552, 0, 577, 0, 0, 1093, 500, 0, -2, 555,
	560, 561, 562, 563, 564, 0, 575, 0, 557, 0,
	577, 0, 572, 0, 0, 0, 1001, 0, 85, 85,
	882, 817, 884, 0, 888, 0, 0, 883, 891, 896,
	915, 965, 466, 969, 970, 972, 974, 975, 977, 917,
	916, 0, 0, 0, 0, 923, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 54, 0, 1044, -2,
	0, 0, 71, 0, 1017, 1048, 1049, 1050, 765, 0,
	770, 0, 757, 0, 792, 749, 0, 0, 0, 0,
	58, 478, 0, 1014, 1014, 489, 502, 501, 0, 464,
	423, 469, 451, 469, 0, 0, 535, 0, 84, 0,
	84, 216, 217, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 210, 212, 213, 214, 136, 119, 120, 0,
	0, 0, 0, 111, 112, 0, 0, 0, 0, 0,
	107, 108, 109, 248, 0, 0, 251, 0, 0, 1119,
	1113, 195, 195, 0, 146, 0, 0, 554, 578, 0,
	380, 380, 0, 502, 0, 571, 0, 1083, 1084, 0,
	566, 577, 0, 0, 0, 1038, 1006, 0, 796, 0,
	701, 706, 712, 0, 966, 967, 0, 0, 0, 0,
	924, 925, 926, 958, 929, 981, 0, 0, 0, 1042,
	1027, 0, 1031, 0, 760, 57, 0, 756, 0, 745,
	747, 792, 793, 794, 795, 477, 481, 0, 486, 0,
	505, 506, 507, 491, 0, 440, 441, 455, 458, 0,
	91, 0, 0, 218, 219, 220, 221, 223, 224, 0,
	0, 0, 96, 0, 0, 121, 0, 0, 0, 0,
	131, 132, 133, 134, 135, 113, 114, 115, 116, 117,
	104, 0, 0, 250, 0, 255, 256, 1081, 1121, -2,
	0, 139, 0, 140, 203, 0, 553, 579, 377, 378,
	0, 1093, 0, 556, 565, 567, 0, 574, 0, 42,
	0, 0, 1001, 85, 1009, 918, 920, 919, 921, 0,
	0, 0, 947, 948, 0, 1030, 0, 766, 758, 750,
	482, 483, 0, 485, 0, 479, 0, 84, 338, 339,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 0, 0, 0,
	0, 225, 226, 227, 228, 137, 138, 122, 123, 0,
	125, 126, 0, 0, 0, 258, 0, 254, 755, 0,
	1113, 0, 1115, 0, 1112, 0, 196, 796, 0, 0,
	0, 573, 0, 583, 0, 1007, 1008, 1002, 1003, 1005,
	1006, 702, 716, 927, 0, 0, 0, 1040, -2, 484,
	0, 89, 480, 267, 95, 0, 0, 1095, 0, 0,
	294, 295, 296, 1097, 0, 336, 0, 127, 0, 129,
	130, 257, 0, 35, 0, 1120, 0, 1118, 0, 0,
	1114, 0, 1001, 479, 0, 479, 582, 0, 0, 0,
	43, 0, 0, 0, 959, 0, 962, 0, 84, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 292, 0,
	0, 124, 128, 259, 1082, 1122, 0, 0, 0, 1006,
	558, 0, 576, 584, 0, 1004, 713, 717, 0, 720,
	0, 0, 0, 726, 0, 718, 960, 0, 0, 268,
	269, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	1098, 229, 337, 1116, 1110, 197, 198, 199, 201, 40,
	479, 0, 0, 721, 722, 723, 724, 725, 0, 0,
	511, 84, 270, 271, 272, 273, 274, 0, 276, 0,
	0, 0, 288, 289, 290, 0, 297, 299, 300, 301,
	0, 303, 304, 293, 0, 559, 0, 0, 727, 0,
	512, 513, 0, 94, 0, 0, 0, 0, 0, 0,
	285, 0, 291, 0, 302, 200, 0, 719, 961, 514,
	0, 515, 0, 0, 0, 0, 0, 280, 281, 0,
	0, 0, 286, 0, 298, 0, 0, 526, 528, 529,
	0, 0, 527, 275, 277, 0, 283, 0, 0, 585,
	586, 530, 531, 532, 0, 0, 0, 282, 0, 287,
	284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 490,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:472
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:513
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:519
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:525
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:532
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:538
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:549
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:556
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:578
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:582
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:592
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:598
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:604
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:608
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:624
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:636
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:648
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:658
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:668
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:672
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:676
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:715
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:719
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:729
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:736
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:749
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:786
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:791
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:806
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:820
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:824
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:836
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:844
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:848
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:852
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:871
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:897
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:913
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:917
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:934
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:958
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:971
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:999
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1011
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1015
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1019
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1023
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1048
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1063
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1068
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1072
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1076
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1082
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1087
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1091
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1095
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1099
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1103
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1193
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.strs = nil
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantAssumption = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1331
		{
			yyVAL.boolean = false
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.boolean = true
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.procedureParams = nil
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1383
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1396
		{
			yyVAL.characteristics = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1410
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1436
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1458
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1499
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1563
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1567
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1571
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1577
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1589
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1593
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1597
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1603
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1611
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1650
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1674
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1694
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1700
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1706
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1711
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1716
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1722
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1746
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1750
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1758
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1766
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1791
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1948
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2006
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2022
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2045
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2049
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2076
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = ColumnType{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.sqlVal = nil
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2460
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2478
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2486
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.colKeyOpt = colKey
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2573
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2577
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2582
		{
			yyVAL.indexOptions = nil
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2631
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2639
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = yyDollar[1].str
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2738
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 512:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2742
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 513:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2746
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 514:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2750
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 515:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2754
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2778
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.boolean = true
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.boolean = true
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.boolean = false
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = yyDollar[1].str
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string("")
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2918
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2941
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2948
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2959
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2968
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 559:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2972
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3000
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3004
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3011
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3038
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3042
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3054
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.columnOrder = nil
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3069
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3074
		{
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
		}
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3080
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3096
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3100
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3120
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3132
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3138
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3146
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3158
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3166
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3174
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3182
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3190
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3198
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3207
		{

		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3225
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3241
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3249
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3253
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3257
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3261
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3265
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3281
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3289
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3293
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3297
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3301
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3305
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3310
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3319
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3323
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3327
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3331
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3354
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3358
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3367
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3371
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3391
		{
			yyVAL.boolean = false
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.boolean = true
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = ""
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3425
		{
			yyVAL.showFilter = nil
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3433
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = SessionStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = GlobalStr
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &Begin{}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.statement = &Begin{}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3477
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3481
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3487
		{
			yyVAL.statement = &Commit{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.statement = &Rollback{}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3529
		{
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3566
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3571
		{
			setAllowComments(yylex, true)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3581
		{
			yyVAL.bytes2 = nil
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = UnionStr
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = UnionAllStr
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = UnionDistinctStr
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3604
		{
			yyVAL.byt = 0
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.byt = 1
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3613
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3621
		{
			yyVAL.str = SQLCacheStr
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.str = DistinctStr
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = StraightJoinHint
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3649
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3657
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3680
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3698
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3708
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 713:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3712
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3718
		{
			yyVAL.over = nil
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.over = yyDollar[1].over
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.frame = nil
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3742
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3784
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3818
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3854
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3868
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3900
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3911
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3926
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3930
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3934
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3938
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3949
		{
			yyVAL.expr = nil
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3953
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3958
		{
			yyVAL.columns = nil
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3995
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3999
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4003
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4007
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4013
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4015
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = JoinStr
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = JoinStr
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = JoinStr
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = StraightJoinStr
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = LeftJoinStr
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = LeftJoinStr
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4075
		{
			yyVAL.str = RightJoinStr
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.str = RightJoinStr
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4085
		{
			yyVAL.str = NaturalJoinStr
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4119
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4125
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4130
		{
			yyVAL.indexHints = nil
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4134
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4138
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4142
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.expr = nil
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4161
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4165
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = ""
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4215
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4219
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4223
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4231
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4235
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4239
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = IsNullStr
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = IsNotNullStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.str = IsTrueStr
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = IsNotTrueStr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = IsFalseStr
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = IsNotFalseStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = EqualStr
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = LessThanStr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = GreaterThanStr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = LessEqualStr
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = GreaterEqualStr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = NotEqualStr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = nil
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.selectExprs = nil
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4403
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4431
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4455
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4459
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4463
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4475
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4489
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4497
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4531
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4535
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4539
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4543
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4547
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4555
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4571
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4675
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4679
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 918:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4683
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4687
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4691
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4699
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4703
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 924:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4707
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4711
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4715
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 927:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4719
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 929:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4727
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4745
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4779
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4788
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4796
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4815
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4819
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4840
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = ""
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.str = BooleanModeStr
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4874
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 961:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.str = QueryExpansionStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4892
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4918
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4928
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4953
		{
			yyVAL.expr = nil
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4962
		{
			yyVAL.str = string("")
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4966
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4982
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = nil
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5005
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.expr = &NullVal{}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5058
		{
			yyVAL.exprs = nil
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5062
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = nil
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5098
		{
			yyVAL.orderBy = nil
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5102
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5118
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5123
		{
			yyVAL.str = AscScr
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.str = AscScr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.str = DescScr
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5136
		{
			yyVAL.limit = nil
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5140
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5144
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5148
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5167
		{
			yyVAL.str = ForUpdateStr
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5171
		{
			yyVAL.str = ShareModeStr
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5188
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5196
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5201
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5205
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5209
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5215
		{
			yyVAL.columns = nil
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5219
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5237
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5242
		{
			yyVAL.assignExprs = nil
		}
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5246
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5252
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5256
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5262
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5272
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5288
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5292
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5298
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5328
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5341
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5370
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5388
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5392
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5399
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.expr = &Default{}
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5423
		{
			yyVAL.byt = 0
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5425
		{
			yyVAL.byt = 1
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5428
		{
			yyVAL.byt = 0
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5430
		{
			yyVAL.byt = 1
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5433
		{
			yyVAL.byt = 0
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5435
		{
			yyVAL.byt = 1
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.str = IgnoreStr
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5443
		{
			yyVAL.sqlVal = nil
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5449
		{
			yyVAL.empty = struct{}{}
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.empty = struct{}{}
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5454
		{
			yyVAL.empty = struct{}{}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5456
		{
			yyVAL.empty = struct{}{}
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			yyVAL.empty = struct{}{}
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = UniqueStr
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5464
		{
			yyVAL.str = FulltextStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = SpatialStr
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5469
		{
			yyVAL.str = ""
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5476
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5480
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5484
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5494
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5523
		{
			yyVAL.str = string("")
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5525
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5528
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5533
		{
			yyVAL.EnclosedBy = nil
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5537
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5542
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5551
		{
			yyVAL.sqlVal = nil
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5555
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5560
		{
			yyVAL.sqlVal = nil
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5564
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.Fields = nil
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5573
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5578
		{
			yyVAL.Lines = nil
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5582
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5587
		{
			yyVAL.sqlVal = nil
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5591
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5597
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5603
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5607
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5613
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5617
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5623
		{
			yyVAL.lockType = LockRead
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5627
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5631
		{
			yyVAL.lockType = LockWrite
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5635
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5641
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5647
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5651
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5655
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6109
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
