// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const NULLX = 57606
const AUTO_INCREMENT = 57607
const APPROXNUM = 57608
const SIGNED = 57609
const UNSIGNED = 57610
const ZEROFILL = 57611
const LOCAL = 57612
const COLLATION = 57613
const DATABASES = 57614
const SCHEMAS = 57615
const TABLES = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const NAMES = 57623
const CHARSET = 57624
const GLOBAL = 57625
const SESSION = 57626
const ISOLATION = 57627
const LEVEL = 57628
const READ = 57629
const WRITE = 57630
const ONLY = 57631
const REPEATABLE = 57632
const COMMITTED = 57633
const UNCOMMITTED = 57634
const SERIALIZABLE = 57635
const CURRENT_TIMESTAMP = 57636
const DATABASE = 57637
const CURRENT_DATE = 57638
const CURRENT_USER = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const UTC_DATE = 57643
const UTC_TIME = 57644
const UTC_TIMESTAMP = 57645
const REPLACE = 57646
const CONVERT = 57647
const CAST = 57648
const SUBSTR = 57649
const SUBSTRING = 57650
const GROUP_CONCAT = 57651
const SEPARATOR = 57652
const TIMESTAMPADD = 57653
const TIMESTAMPDIFF = 57654
const OVER = 57655
const WINDOW = 57656
const GROUPING = 57657
const GROUPS = 57658
const AVG = 57659
const BIT_AND = 57660
const BIT_OR = 57661
const BIT_XOR = 57662
const COUNT = 57663
const JSON_ARRAYAGG = 57664
const JSON_OBJECTAGG = 57665
const MAX = 57666
const MIN = 57667
const STDDEV_POP = 57668
const STDDEV = 57669
const STD = 57670
const STDDEV_SAMP = 57671
const SUM = 57672
const VAR_POP = 57673
const VARIANCE = 57674
const VAR_SAMP = 57675
const CUME_DIST = 57676
const DENSE_RANK = 57677
const FIRST_VALUE = 57678
const LAG = 57679
const LAST_VALUE = 57680
const LEAD = 57681
const NTH_VALUE = 57682
const NTILE = 57683
const ROW_NUMBER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const MATCH = 57687
const AGAINST = 57688
const BOOLEAN = 57689
const LANGUAGE = 57690
const WITH = 57691
const QUERY = 57692
const EXPANSION = 57693
const UNUSED = 57694
const ARRAY = 57695
const DESCRIPTION = 57696
const EMPTY = 57697
const EXCEPT = 57698
const JSON_TABLE = 57699
const LATERAL = 57700
const MEMBER = 57701
const RECURSIVE = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const SYSTEM = 57759
const INFILE = 57760

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 31,
	5, 47,
	-2, 837,
	-1, 39,
	140, 898,
	141, 924,
	-2, 118,
	-1, 46,
	180, 494,
	181, 494,
	-2, 484,
	-1, 53,
	1, 1331,
	436, 1331,
	-2, 520,
	-1, 435,
	127, 934,
	-2, 928,
	-1, 436,
	127, 935,
	-2, 929,
	-1, 537,
	97, 1153,
	127, 1153,
	-2, 882,
	-1, 538,
	97, 1254,
	127, 1254,
	-2, 883,
	-1, 543,
	97, 1173,
	127, 1173,
	-2, 884,
	-1, 544,
	97, 1212,
	127, 1212,
	-2, 885,
	-1, 545,
	97, 1213,
	127, 1213,
	-2, 886,
	-1, 546,
	97, 1108,
	127, 1108,
	-2, 890,
	-1, 548,
	97, 1191,
	127, 1191,
	-2, 892,
	-1, 983,
	1, 574,
	5, 574,
	12, 574,
	13, 574,
	14, 574,
	15, 574,
	17, 574,
	19, 574,
	30, 574,
	31, 574,
	56, 574,
	57, 574,
	58, 574,
	59, 574,
	60, 574,
	62, 574,
	63, 574,
	66, 574,
	67, 574,
	69, 574,
	70, 574,
	436, 574,
	-2, 604,
	-1, 987,
	67, 64,
	69, 64,
	-2, 68,
	-1, 1177,
	127, 937,
	-2, 933,
	-1, 1340,
	68, 355,
	-2, 1074,
	-1, 1343,
	68, 351,
	71, 351,
	-2, 1009,
	-1, 1344,
	68, 352,
	71, 352,
	-2, 1019,
	-1, 1428,
	68, 429,
	71, 429,
	-2, 395,
	-1, 1473,
	5, 48,
	-2, 670,
	-1, 1789,
	1, 625,
	5, 625,
	12, 625,
	13, 625,
	14, 625,
	15, 625,
	17, 625,
	19, 625,
	30, 625,
	31, 625,
	56, 625,
	57, 625,
	58, 625,
	59, 625,
	60, 625,
	62, 625,
	63, 625,
	66, 625,
	67, 625,
	69, 625,
	70, 625,
	436, 625,
	-2, 604,
	-1, 1913,
	5, 48,
	-2, 857,
	-1, 2048,
	41, 944,
	-2, 942,
	-1, 2156,
	5, 48,
	-2, 860,
}

const yyPrivate = 57344

const yyLast = 25898

var yyAct = [...]int{

	469, 76, 433, 2257, 2303, 2173, 2278, 2269, 2159, 2259,
	2268, 2094, 7, 2062, 1923, 2199, 1387, 2145, 2093, 6,
	2092, 5, 1802, 2095, 8, 2022, 2172, 1016, 2139, 80,
	1783, 1291, 389, 736, 1986, 1565, 440, 1537, 2048, 76,
	1690, 1700, 427, 1968, 1590, 1385, 468, 1763, 1345, 1950,
	1297, 1295, 1154, 2160, 1803, 1337, 1699, 420, 1764, 908,
	1644, 746, 1538, 387, 453, 1852, 1289, 1760, 1426, 368,
	371, 2091, 3, 362, 101, 1457, 1326, 76, 1769, 1327,
	1377, 558, 983, 1775, 1147, 1711, 1241, 555, 1202, 1413,
	560, 1666, 1667, 76, 1096, 1273, 1333, 1163, 1373, 1627,
	1341, 1215, 998, 1179, 1233, 980, 1280, 1116, 539, 1361,
	90, 816, 423, 438, 812, 775, 554, 535, 536, 858,
	997, 531, 386, 989, 924, 542, 2325, 556, 363, 364,
	2321, 849, 367, 774, 925, 2311, 2293, 528, 2291, 2273,
	2252, 2207, 79, 1138, 1944, 1833, 65, 1318, 419, 82,
	2072, 873, 872, 882, 883, 875, 876, 877, 878, 879,
	880, 881, 874, 1236, 552, 884, 2284, 723, 442, 2192,
	2267, 32, 32, 979, 32, 2153, 2240, 2191, 1728, 1503,
	1898, 700, 32, 84, 85, 86, 87, 88, 701, 92,
	32, 734, 1798, 1799, 1574, 1532, 1951, 1573, 1315, 1316,
	1575, 999, 1797, 1000, 1953, 1314, 366, 748, 749, 750,
	365, 793, 1533, 1610, 1347, 32, 1362, 68, 35, 36,
	1889, 1993, 1349, 2007, 728, 68, 35, 36, 1349, 1887,
	1125, 1293, 2152, 77, 93, 377, 77, 32, 33, 68,
	35, 36, 1353, 1355, 77, 1354, 1367, 37, 1362, 1374,
	384, 61, 77, 356, 757, 2282, 2204, 74, 2202, 2203,
	1744, 37, 56, 57, 2263, 369, 2045, 2258, 62, 2044,
	2043, 91, 2254, 1956, 2042, 1712, 2041, 77, 2039, 104,
	2040, 2261, 2161, 1217, 2089, 372, 1745, 703, 2124, 2125,
	2196, 2197, 727, 731, 1394, 47, 733, 1925, 482, 77,
	488, 490, 489, 486, 487, 485, 484, 483, 1557, 1954,
	1955, 1957, 1958, 1959, 745, 491, 492, 1714, 742, 1393,
	751, 96, 752, 749, 750, 741, 373, 743, 744, 729,
	732, 2266, 730, 705, 704, 2239, 2140, 735, 735, 1693,
	357, 1015, 1274, 2087, 1014, 359, 1645, 1969, 1970, 735,
	2317, 1015, 1857, 1015, 1672, 1806, 2326, 1979, 2323, 76,
	76, 39, 70, 43, 42, 45, 2312, 58, 429, 2294,
	762, 702, 711, 1584, 98, 2127, 1649, 764, 95, 763,
	798, 360, 1646, 1072, 106, 105, 81, 383, 806, 1126,
	382, 1077, 383, 46, 73, 72, 1716, 1086, 54, 55,
	44, 1720, 759, 1715, 1564, 1713, 1362, 370, 370, 2073,
	1718, 1563, 370, 758, 1978, 1617, 2260, 2262, 1562, 698,
	1662, 1352, 802, 1717, 102, 706, 331, 107, 1880, 1376,
	761, 765, 2307, 1015, 103, 893, 1719, 1721, 895, 767,
	768, 1832, 2248, 59, 60, 1873, 898, 899, 900, 901,
	902, 903, 904, 905, 1015, 818, 48, 71, 104, 50,
	51, 63, 862, 64, 1015, 726, 1647, 1648, 906, 370,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 1952, 923, 926, 926, 926, 932, 926, 926, 932,
	926, 932, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 797, 984, 795, 737,
	69, 75, 75, 2151, 75, 1977, 2023, 1578, 69, 1570,
	756, 907, 75, 1903, 112, 108, 109, 97, 110, 2025,
	75, 1439, 69, 1982, 1588, 1476, 2305, 1462, 978, 2306,
	1447, 2304, 1484, 106, 105, 1438, 1300, 1302, 1481, 1158,
	1588, 1010, 542, 896, 897, 75, 995, 542, 1687, 864,
	1588, 114, 113, 807, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 1591, 75, 719, 1822,
	1588, 874, 1319, 884, 884, 1310, 894, 1443, 927, 929,
	931, 933, 935, 937, 938, 940, 1437, 1150, 928, 930,
	2024, 934, 936, 857, 939, 1588, 873, 872, 882, 883,
	875, 876, 877, 878, 879, 880, 881, 874, 1117, 1073,
	884, 1602, 1013, 1186, 1002, 1404, 1691, 1301, 1730, 1003,
	1587, 1823, 739, 993, 725, 1983, 1607, 1606, 1184, 1185,
	1183, 753, 1773, 1155, 1156, 988, 1587, 1435, 1429, 1430,
	1133, 1428, 855, 1431, 1432, 1348, 1587, 2310, 1603, 896,
	897, 1008, 1674, 1672, 1414, 896, 897, 1680, 766, 857,
	1679, 1682, 1608, 1234, 1600, 986, 1587, 707, 2249, 1686,
	1601, 710, 1234, 1683, 1492, 1079, 817, 1675, 1441, 1444,
	877, 878, 879, 880, 881, 874, 865, 111, 884, 856,
	855, 1587, 735, 2318, 856, 855, 2314, 1674, 1672, 735,
	735, 735, 1015, 1810, 1118, 1676, 1673, 857, 852, 856,
	855, 1405, 857, 2236, 735, 735, 2251, 724, 740, 856,
	855, 2175, 1675, 909, 755, 2157, 2201, 857, 1123, 1605,
	868, 2200, 871, 2224, 922, 2223, 381, 857, 2235, 885,
	886, 887, 888, 889, 890, 891, 2319, 869, 870, 867,
	873, 872, 882, 883, 875, 876, 877, 878, 879, 880,
	881, 874, 1436, 77, 884, 2297, 2279, 2296, 1943, 76,
	1942, 856, 855, 1182, 735, 813, 1146, 2200, 814, 1203,
	1098, 1204, 713, 714, 715, 716, 717, 1632, 1434, 857,
	959, 960, 961, 962, 963, 947, 948, 949, 964, 965,
	950, 951, 952, 958, 966, 953, 954, 955, 956, 957,
	969, 968, 967, 970, 971, 973, 972, 974, 1087, 856,
	855, 1136, 525, 526, 2209, 1120, 1121, 1630, 1440, 1169,
	1171, 1172, 1459, 1460, 1461, 1170, 1611, 857, 2181, 1178,
	1140, 1157, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1576, 1145, 1577,
	1100, 2086, 862, 2038, 1604, 1083, 76, 772, 1176, 808,
	2000, 1940, 1480, 1128, 1129, 1442, 1815, 1131, 1139, 1112,
	1113, 910, 1628, 1099, 1180, 1103, 1104, 1421, 1130, 771,
	1105, 1106, 1107, 1134, 1101, 1851, 2222, 1144, 1853, 1237,
	2014, 2241, 1934, 2238, 808, 1114, 1115, 873, 872, 882,
	883, 875, 876, 877, 878, 879, 880, 881, 874, 1141,
	1479, 884, 1478, 1223, 1226, 1177, 2221, 856, 855, 1175,
	1235, 2186, 808, 2051, 1732, 856, 855, 907, 2084, 856,
	855, 2032, 1633, 2031, 986, 857, 1934, 2183, 1838, 1173,
	1934, 2088, 1213, 857, 2056, 1294, 1591, 857, 856, 855,
	984, 2014, 2080, 1816, 984, 1143, 882, 883, 875, 876,
	877, 878, 879, 880, 881, 874, 857, 2052, 884, 1102,
	1206, 1207, 875, 876, 877, 878, 879, 880, 881, 874,
	1901, 1305, 884, 1853, 1160, 1307, 2014, 2028, 2014, 808,
	2014, 2013, 1386, 542, 1975, 1868, 1181, 1122, 1209, 1934,
	1933, 1916, 808, 1772, 1323, 1328, 556, 1161, 1864, 1299,
	1162, 1247, 1231, 1249, 1446, 808, 907, 1861, 1860, 873,
	872, 882, 883, 875, 876, 877, 878, 879, 880, 881,
	874, 1210, 1212, 884, 1858, 909, 1843, 1220, 1842, 735,
	1841, 735, 1656, 1303, 1830, 1829, 1098, 1655, 1875, 1566,
	1256, 1257, 1826, 1827, 81, 1261, 1073, 1415, 1264, 1402,
	1334, 1177, 1401, 1269, 1205, 1324, 1826, 1825, 1474, 808,
	2188, 1245, 1246, 1127, 1312, 1311, 1308, 1124, 1252, 1253,
	1254, 1255, 1317, 458, 457, 460, 461, 462, 463, 1331,
	1277, 808, 459, 464, 1211, 1418, 1211, 808, 1566, 1166,
	1167, 1095, 1363, 1364, 1365, 1366, 1876, 76, 1211, 1379,
	1380, 1381, 1382, 986, 1383, 1094, 1093, 1092, 986, 1084,
	1082, 1900, 986, 991, 1081, 1375, 872, 882, 883, 875,
	876, 877, 878, 879, 880, 881, 874, 1463, 1080, 884,
	1078, 1012, 1011, 77, 794, 721, 818, 1465, 1466, 1467,
	376, 374, 1176, 2050, 909, 1277, 81, 1911, 1221, 1222,
	873, 872, 882, 883, 875, 876, 877, 878, 879, 880,
	881, 874, 1761, 1276, 884, 1772, 1566, 1152, 907, 992,
	1304, 994, 990, 1839, 1828, 1895, 1785, 991, 1664, 1579,
	1180, 873, 872, 882, 883, 875, 876, 877, 878, 879,
	880, 881, 874, 1313, 1474, 884, 1497, 1417, 1416, 1177,
	1474, 1876, 1277, 1324, 1424, 1496, 1282, 1285, 1286, 1287,
	1283, 1132, 1284, 1288, 1400, 1451, 1449, 1450, 1151, 799,
	1389, 1422, 1391, 1772, 1535, 1536, 990, 1468, 984, 984,
	984, 984, 984, 992, 1406, 990, 1153, 1464, 1085, 1412,
	996, 804, 1322, 805, 2194, 1294, 1471, 1558, 2184, 1784,
	2054, 1945, 1349, 1921, 1423, 984, 1378, 1809, 1776, 1777,
	1458, 1445, 1374, 1539, 873, 872, 882, 883, 875, 876,
	877, 878, 879, 880, 881, 874, 1583, 1395, 884, 1369,
	1368, 77, 1074, 791, 2288, 2286, 1567, 1491, 77, 2270,
	1837, 1568, 1779, 1569, 1761, 1534, 1634, 1089, 1782, 542,
	1561, 1549, 1181, 1553, 1547, 1781, 1550, 1546, 1384, 1548,
	1328, 1551, 1560, 1286, 1287, 1545, 1213, 424, 425, 1470,
	2218, 2190, 1697, 1448, 1164, 2216, 1456, 1473, 1475, 1455,
	850, 851, 2005, 1477, 1541, 1542, 1592, 1544, 76, 1483,
	1593, 1863, 1486, 1487, 1488, 1552, 1814, 1813, 1585, 1494,
	735, 1495, 735, 735, 1498, 1499, 1580, 1500, 1501, 848,
	2129, 1505, 1506, 1507, 1508, 1509, 1571, 1660, 1073, 1582,
	2132, 1002, 1516, 1517, 1518, 2180, 1520, 1521, 2179, 1523,
	1524, 1525, 1526, 2049, 1528, 1529, 1530, 817, 2208, 1654,
	1586, 1589, 2047, 2123, 2122, 375, 986, 986, 986, 986,
	986, 1540, 1659, 810, 1543, 1554, 1555, 1621, 1009, 1636,
	1612, 1613, 789, 986, 2231, 811, 773, 1619, 770, 1629,
	769, 722, 1706, 986, 2060, 1631, 2059, 1626, 1909, 1155,
	1156, 1390, 1984, 1420, 1724, 1725, 1088, 1726, 1727, 1694,
	850, 851, 2230, 1637, 1411, 1472, 1702, 1290, 1076, 1733,
	1734, 1665, 800, 801, 1736, 2229, 2228, 2035, 421, 1620,
	1176, 1622, 1623, 1624, 1625, 1661, 1671, 1657, 1493, 1729,
	1663, 1677, 1678, 1688, 1689, 1670, 2211, 1692, 2210, 1668,
	1681, 1685, 1502, 1504, 1766, 1454, 76, 2177, 2133, 1510,
	1511, 1512, 1513, 1453, 2064, 2004, 422, 81, 2063, 1987,
	1703, 1566, 1894, 2290, 2289, 1704, 1485, 1482, 1787, 1639,
	1640, 1641, 1789, 1791, 1792, 1793, 1723, 1177, 1722, 1539,
	1762, 1710, 1119, 1771, 853, 2289, 1708, 2290, 1658, 1242,
	1765, 2077, 1812, 1149, 378, 380, 2105, 49, 2107, 19,
	83, 1650, 52, 1652, 1653, 1794, 2106, 18, 2108, 20,
	2109, 21, 78, 1796, 1786, 1811, 1, 1767, 2104, 15,
	2178, 1790, 1702, 1328, 2128, 1328, 2103, 14, 2097, 10,
	1768, 2130, 436, 2116, 30, 2115, 29, 1780, 2114, 28,
	2046, 1807, 2112, 25, 1808, 1707, 1964, 1788, 2111, 24,
	1805, 873, 872, 882, 883, 875, 876, 877, 878, 879,
	880, 881, 874, 1835, 1836, 884, 1800, 2113, 26, 2102,
	13, 1801, 1846, 2099, 12, 1949, 1383, 119, 2098, 11,
	119, 2096, 9, 1840, 1948, 1643, 119, 1642, 1742, 1743,
	790, 1137, 1669, 1748, 1433, 2138, 1751, 1335, 1325, 553,
	89, 1756, 1403, 738, 1973, 1146, 339, 1332, 119, 1350,
	1351, 1598, 1356, 1357, 1358, 1359, 1360, 2131, 1879, 792,
	119, 1597, 1594, 1855, 119, 1609, 563, 1346, 119, 1596,
	1370, 1371, 1372, 1595, 1819, 2126, 1599, 1290, 1020, 1896,
	119, 1018, 563, 1850, 1019, 1874, 1017, 1022, 119, 1849,
	1021, 1854, 343, 1877, 1856, 1004, 2167, 854, 99, 53,
	1976, 1684, 1859, 1427, 1867, 94, 100, 747, 1073, 345,
	1817, 1818, 892, 1452, 1572, 540, 1902, 1821, 1300, 1302,
	541, 1847, 533, 809, 1824, 2195, 1731, 1872, 1746, 1747,
	815, 1749, 1750, 2141, 1752, 1753, 1754, 1755, 1490, 1757,
	1758, 1759, 1737, 1738, 1739, 1740, 1741, 1885, 921, 1232,
	441, 1917, 1556, 2144, 1168, 456, 1929, 1930, 1931, 1539,
	455, 454, 873, 872, 882, 883, 875, 876, 877, 878,
	879, 880, 881, 874, 1936, 1845, 884, 451, 452, 1410,
	1910, 1159, 1531, 866, 1328, 1918, 1831, 76, 439, 431,
	1927, 982, 975, 1419, 1281, 1279, 1278, 1090, 529, 1301,
	1795, 1778, 1932, 1774, 1292, 981, 1928, 385, 66, 754,
	358, 1897, 2071, 986, 34, 379, 426, 1878, 27, 1961,
	1962, 1963, 17, 760, 22, 1881, 984, 1937, 16, 1425,
	1580, 1971, 708, 38, 41, 40, 1890, 1891, 1638, 1392,
	2166, 2256, 776, 2277, 2198, 1994, 1995, 1996, 1997, 1998,
	1960, 1972, 2110, 2001, 2002, 2117, 1966, 1988, 1946, 1965,
	2101, 1980, 1766, 1805, 1702, 2009, 2100, 1967, 1989, 1990,
	2243, 23, 2242, 4, 796, 67, 1787, 31, 2, 0,
	1912, 1913, 1914, 1915, 1981, 1939, 2012, 1941, 0, 1383,
	1282, 1285, 1286, 1287, 1283, 0, 1284, 1288, 0, 0,
	1776, 1777, 1926, 0, 119, 0, 0, 1974, 1765, 563,
	563, 0, 0, 2034, 0, 2036, 0, 1938, 2033, 0,
	2006, 563, 2015, 0, 1869, 2011, 0, 0, 2016, 0,
	0, 0, 0, 0, 429, 2061, 2008, 2021, 2027, 2026,
	1299, 0, 2017, 1992, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 1904, 1905, 119, 0, 0, 1766, 1906,
	76, 0, 1907, 0, 0, 0, 1899, 1908, 2055, 0,
	2053, 0, 0, 0, 2065, 2058, 0, 0, 1614, 1615,
	1616, 1618, 2066, 0, 1893, 0, 0, 76, 0, 0,
	0, 0, 2090, 0, 986, 0, 467, 2083, 0, 0,
	909, 984, 861, 0, 1765, 2078, 0, 1919, 0, 0,
	1920, 1999, 2137, 1922, 2076, 2085, 2003, 0, 2082, 0,
	0, 909, 0, 0, 0, 0, 0, 2135, 0, 0,
	0, 2079, 2134, 0, 1892, 0, 0, 2029, 0, 2030,
	0, 0, 0, 2018, 2019, 2020, 2143, 2147, 0, 0,
	2148, 2136, 0, 0, 0, 0, 2154, 2162, 2149, 0,
	0, 0, 0, 0, 1539, 2155, 0, 0, 0, 0,
	0, 0, 76, 873, 872, 882, 883, 875, 876, 877,
	878, 879, 880, 881, 874, 549, 0, 884, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 119, 119,
	119, 0, 0, 0, 2171, 0, 712, 2174, 2067, 2068,
	2069, 2070, 2189, 0, 563, 2074, 2075, 2176, 0, 0,
	2182, 0, 0, 873, 872, 882, 883, 875, 876, 877,
	878, 879, 880, 881, 874, 0, 2083, 884, 0, 0,
	0, 0, 2213, 0, 0, 2205, 0, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 2217, 2214, 76, 2219,
	0, 0, 2220, 2234, 2225, 2215, 0, 2212, 0, 986,
	0, 2147, 0, 0, 0, 76, 2237, 0, 2227, 0,
	76, 0, 2247, 0, 2264, 2150, 0, 0, 2253, 2246,
	2232, 2245, 0, 2156, 2244, 0, 0, 2265, 0, 76,
	0, 2250, 76, 76, 0, 0, 0, 76, 2234, 2271,
	0, 0, 2280, 0, 0, 0, 0, 2283, 0, 0,
	0, 0, 0, 429, 76, 2272, 2285, 76, 2274, 2234,
	2287, 0, 0, 0, 2298, 2300, 2301, 0, 909, 0,
	0, 0, 76, 1820, 76, 2308, 0, 2234, 76, 2234,
	0, 2255, 2185, 2295, 0, 0, 0, 0, 0, 0,
	0, 351, 76, 0, 0, 76, 0, 2234, 2193, 0,
	0, 563, 76, 0, 2313, 0, 76, 2234, 0, 0,
	0, 2234, 0, 119, 0, 0, 119, 0, 0, 0,
	0, 2322, 119, 0, 563, 0, 0, 2142, 2146, 348,
	0, 563, 563, 563, 119, 119, 119, 0, 0, 0,
	0, 119, 0, 0, 0, 0, 563, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 985,
	0, 0, 0, 559, 559, 0, 0, 0, 1882, 1883,
	0, 1884, 0, 0, 1886, 559, 1888, 0, 0, 0,
	0, 332, 2163, 2164, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 349,
	350, 1705, 0, 0, 116, 119, 563, 119, 0, 563,
	0, 0, 0, 361, 0, 0, 0, 0, 1042, 0,
	0, 0, 873, 872, 882, 883, 875, 876, 877, 878,
	879, 880, 881, 874, 341, 0, 884, 342, 0, 0,
	347, 0, 0, 0, 0, 2315, 2316, 530, 0, 0,
	0, 551, 2146, 0, 0, 699, 119, 2206, 0, 1469,
	1935, 0, 861, 0, 2226, 0, 0, 709, 0, 0,
	0, 1214, 1219, 0, 0, 718, 1225, 1228, 1229, 1230,
	873, 872, 882, 883, 875, 876, 877, 878, 879, 880,
	881, 874, 0, 0, 884, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 0, 1243, 1244, 0, 563, 0,
	1248, 1029, 1250, 1251, 333, 0, 0, 0, 0, 0,
	1258, 1259, 1260, 0, 1262, 1263, 0, 1265, 1266, 1267,
	1268, 0, 1270, 1271, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 2299, 563, 563, 346, 336, 337, 0,
	354, 0, 0, 1043, 338, 340, 0, 334, 353, 352,
	0, 0, 549, 0, 0, 0, 0, 549, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 119, 119, 0,
	0, 0, 119, 119, 0, 0, 119, 119, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 563, 0, 0, 0, 0,
	0, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 0, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 0, 1044, 1045, 1046,
	1047, 1023, 1027, 1057, 1024, 1030, 1026, 1028, 1025, 0,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 563, 0, 563, 0, 0, 119, 0, 119, 119,
	0, 720, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 0, 68, 35, 36, 0,
	119, 119, 119, 0, 0, 1075, 0, 0, 61, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 37, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 1058, 0, 0, 559, 559, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 559, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 2118,
	0, 0, 2276, 2279, 2275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 1515, 0, 0,
	0, 1519, 0, 0, 1522, 0, 0, 0, 0, 1527,
	559, 0, 0, 1148, 0, 0, 0, 0, 39, 70,
	43, 42, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 73, 72, 0, 0, 0, 0, 44, 0, 0,
	119, 119, 119, 119, 119, 977, 0, 987, 0, 0,
	0, 559, 119, 0, 0, 0, 0, 119, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 60, 0, 2120, 0, 0, 0, 0, 0, 563,
	0, 0, 1208, 2121, 71, 0, 50, 51, 63, 0,
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1238, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 32, 0, 68, 35, 36, 0, 0, 0,
	0, 0, 563, 119, 563, 563, 61, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 37, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 559, 559, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	563, 0, 0, 0, 77, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 0,
	530, 0, 0, 1091, 75, 0, 0, 2118, 0, 0,
	0, 0, 2324, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 1109, 1110, 0, 0, 0, 0, 1111, 0,
	0, 0, 0, 0, 0, 559, 563, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 39, 70, 43, 42,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 563, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 73,
	72, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 563, 1142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 563, 0, 563, 559, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 60,
	0, 2120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2121, 71, 1165, 50, 51, 63, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 0, 0, 119, 563, 0,
	0, 0, 0, 0, 0, 563, 563, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 75, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 32,
	355, 68, 35, 36, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 61, 0, 0, 0, 563, 0, 74,
	0, 0, 0, 37, 563, 563, 563, 0, 388, 0,
	0, 0, 0, 563, 0, 0, 0, 430, 0, 0,
	532, 550, 563, 1635, 117, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 559, 559,
	117, 77, 0, 0, 0, 0, 0, 1388, 117, 0,
	119, 0, 0, 1396, 0, 1397, 1398, 0, 0, 1399,
	0, 0, 0, 0, 2118, 0, 0, 0, 0, 2320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 1696, 0, 563, 0, 119, 1409,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 39, 70, 43, 42, 45, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 2119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 0, 0, 563, 46, 73, 72, 0, 119,
	1735, 119, 44, 0, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 1148, 1770, 0, 0, 0, 0, 0, 0,
	32, 0, 68, 35, 36, 59, 60, 0, 2120, 0,
	0, 0, 563, 0, 61, 1770, 0, 0, 2121, 71,
	74, 50, 51, 63, 37, 64, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 559, 0, 559, 0,
	1804, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 32, 0, 68, 35, 36,
	0, 0, 0, 119, 117, 2118, 0, 563, 0, 61,
	2309, 0, 0, 0, 0, 74, 0, 0, 0, 37,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	119, 0, 0, 0, 39, 70, 43, 42, 45, 0,
	0, 0, 0, 0, 0, 117, 0, 77, 1862, 0,
	2119, 0, 1866, 0, 0, 0, 0, 0, 0, 1870,
	1871, 0, 0, 563, 0, 0, 46, 73, 72, 75,
	2118, 0, 0, 44, 0, 2292, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 0, 0, 0, 0, 0, 0, 0, 0, 39,
	70, 43, 42, 45, 0, 0, 59, 60, 0, 2120,
	0, 0, 0, 0, 0, 2119, 0, 563, 0, 2121,
	71, 0, 50, 51, 63, 0, 64, 563, 0, 549,
	0, 46, 73, 72, 0, 0, 0, 0, 44, 563,
	0, 1924, 1698, 0, 0, 0, 0, 0, 1924, 1924,
	1924, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 117,
	117, 59, 60, 0, 2120, 0, 0, 0, 550, 0,
	0, 0, 0, 550, 2121, 71, 0, 50, 51, 63,
	0, 64, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 32,
	0, 68, 35, 36, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 61, 0, 0, 0, 559, 0, 74,
	0, 0, 0, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 1924, 0,
	0, 77, 2281, 0, 0, 0, 0, 0, 0, 0,
	69, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 2057, 0, 0, 1844,
	0, 0, 0, 39, 70, 43, 42, 45, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 2119,
	0, 0, 0, 117, 0, 0, 117, 0, 0, 0,
	0, 2081, 1097, 0, 1865, 46, 73, 72, 0, 0,
	0, 0, 44, 0, 117, 117, 117, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 60, 0, 2120, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 2121, 71,
	0, 50, 51, 63, 0, 64, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 117, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2187, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 1029, 0, 0, 0,
	0, 1924, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 1218, 1218, 0, 0, 0, 1218,
	1218, 1218, 1218, 0, 0, 0, 550, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 0,
	0, 0, 0, 0, 0, 0, 1218, 1218, 1218, 1218,
	0, 0, 1218, 1218, 1218, 1218, 1218, 0, 0, 0,
	0, 0, 0, 1218, 1218, 1218, 0, 1218, 1218, 0,
	1218, 1218, 1218, 1218, 0, 1218, 1218, 1218, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 117, 388, 0,
	0, 0, 117, 117, 0, 0, 117, 1309, 1097, 550,
	0, 0, 0, 0, 0, 0, 1056, 1059, 1060, 1061,
	1062, 1063, 1064, 1097, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 0, 1044, 1045, 1046, 1047, 1023, 1027, 1057, 1024,
	1030, 1026, 1028, 1025, 0, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 32, 0, 68,
	35, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 61, 0, 0, 0, 0, 117, 74, 117, 117,
	0, 37, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 1408, 117, 0, 0, 0, 0, 2158, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 0, 0, 0, 0, 2233, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 32, 0, 68, 35, 36,
	0, 39, 70, 43, 42, 45, 0, 0, 0, 61,
	0, 0, 0, 0, 0, 74, 0, 2119, 0, 37,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 46, 73, 72, 0, 0, 0, 0,
	44, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1218,
	1218, 0, 0, 0, 1218, 0, 0, 1218, 0, 0,
	2118, 0, 1218, 59, 60, 0, 2120, 0, 0, 550,
	117, 117, 117, 117, 117, 0, 2121, 71, 0, 50,
	51, 63, 388, 64, 0, 0, 0, 117, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 117, 0, 39,
	70, 43, 42, 45, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 46, 73, 72, 0, 0, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 0, 2120, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 2121, 71, 0, 50, 51, 63,
	0, 64, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1218, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 117, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	550, 0, 0, 2165, 0, 0, 0, 0, 0, 0,
	117, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	2168, 2169, 2170, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 1329, 1330, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 1581,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 1329, 1330, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 1991, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 1709, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 1701, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	77, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 1310, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 1174, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 1340, 1344, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 1343, 187, 324, 679, 614, 613, 1338,
	0, 1339, 177, 195, 561, 121, 133, 1336, 1342, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 681, 661, 296,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	230, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 682, 627, 0, 690,
	197, 0, 643, 318, 285, 215, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 216,
	135, 660, 675, 617, 187, 324, 679, 614, 613, 250,
	0, 290, 177, 195, 561, 121, 133, 557, 176, 226,
	259, 269, 605, 565, 664, 593, 603, 156, 601, 262,
	234, 313, 0, 637, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 570, 0, 287, 316, 330, 203,
	142, 589, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 254,
	170, 317, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 674, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 164, 434,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 481, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 470, 471,
	0, 0, 0, 0, 0, 0, 1320, 0, 77, 0,
	0, 435, 458, 457, 460, 461, 462, 463, 0, 0,
	145, 459, 464, 465, 466, 1321, 0, 0, 432, 449,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 495, 0,
	448, 0, 0, 443, 444, 445, 450, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 472,
	0, 0, 187, 324, 0, 0, 493, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	478, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 482, 494, 488, 490, 489, 486, 487, 485, 484,
	483, 496, 473, 474, 475, 476, 479, 0, 491, 492,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 508, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 497, 498, 499, 500, 501, 502, 503, 504, 507,
	505, 506, 477, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 32, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 164, 434, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 481, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 435,
	458, 457, 460, 461, 462, 463, 0, 0, 145, 459,
	464, 465, 466, 0, 0, 0, 432, 449, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 495, 0, 448, 0,
	0, 443, 444, 445, 450, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 472, 0, 0,
	187, 324, 0, 0, 493, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 478, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 482,
	494, 488, 490, 489, 486, 487, 485, 484, 483, 496,
	473, 474, 475, 476, 479, 0, 491, 492, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 508,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 497,
	498, 499, 500, 501, 502, 503, 504, 507, 505, 506,
	477, 120, 131, 196, 75, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 164, 434, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 481, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 470, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 435, 458, 457, 460,
	461, 462, 463, 0, 0, 145, 459, 464, 465, 466,
	0, 0, 0, 432, 449, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 447, 428,
	0, 0, 0, 495, 0, 448, 0, 0, 443, 444,
	445, 450, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 472, 0, 0, 187, 324, 0,
	0, 493, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 478, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 482, 494, 488, 490,
	489, 486, 487, 485, 484, 483, 496, 473, 474, 475,
	476, 479, 0, 491, 492, 0, 0, 0, 0, 509,
	510, 511, 512, 513, 514, 515, 508, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 497, 498, 499, 500,
	501, 502, 503, 504, 507, 505, 506, 477, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	164, 434, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 481,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 808, 435, 458, 457, 460, 461, 462, 463,
	0, 0, 145, 459, 464, 465, 466, 0, 0, 0,
	432, 449, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	495, 0, 448, 0, 0, 443, 444, 445, 450, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 472, 0, 0, 187, 324, 0, 0, 493, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 478, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 482, 494, 488, 490, 489, 486, 487,
	485, 484, 483, 496, 473, 474, 475, 476, 479, 0,
	491, 492, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 508, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 497, 498, 499, 500, 501, 502, 503,
	504, 507, 505, 506, 477, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 164, 434, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 481, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 470, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	435, 458, 457, 460, 461, 462, 463, 0, 0, 145,
	459, 464, 465, 466, 0, 0, 0, 432, 449, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 447, 1216, 0, 0, 0, 495, 0, 448,
	0, 0, 443, 444, 445, 450, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 472, 0,
	0, 187, 324, 0, 0, 493, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 478,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	482, 494, 488, 490, 489, 486, 487, 485, 484, 483,
	496, 473, 474, 475, 476, 479, 0, 491, 492, 0,
	0, 0, 0, 509, 510, 511, 512, 513, 514, 515,
	508, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	497, 498, 499, 500, 501, 502, 503, 504, 507, 505,
	506, 477, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 164, 434, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 481, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 435, 458, 1227,
	460, 461, 462, 463, 0, 0, 145, 459, 464, 465,
	466, 0, 0, 0, 432, 449, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 447,
	1216, 0, 0, 0, 495, 0, 448, 0, 0, 443,
	444, 445, 450, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 472, 0, 0, 187, 324,
	0, 0, 493, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 478, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 482, 494, 488,
	490, 489, 486, 487, 485, 484, 483, 496, 473, 474,
	475, 476, 479, 0, 491, 492, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 508, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 497, 498, 499,
	500, 501, 502, 503, 504, 507, 505, 506, 477, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 164, 434, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	481, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 470, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 435, 458, 1224, 460, 461, 462,
	463, 0, 0, 145, 459, 464, 465, 466, 0, 0,
	0, 432, 449, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 447, 1216, 0, 0,
	0, 495, 0, 448, 0, 0, 443, 444, 445, 450,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 472, 0, 0, 187, 324, 0, 0, 493,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 478, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 482, 494, 488, 490, 489, 486,
	487, 485, 484, 483, 496, 473, 474, 475, 476, 479,
	0, 491, 492, 0, 0, 0, 0, 509, 510, 511,
	512, 513, 514, 515, 508, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 497, 498, 499, 500, 501, 502,
	503, 504, 507, 505, 506, 477, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 164, 434,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 481, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	1135, 435, 458, 457, 460, 461, 462, 463, 0, 0,
	145, 459, 464, 465, 466, 0, 0, 0, 432, 449,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 495, 0,
	448, 0, 0, 443, 444, 445, 450, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 472,
	0, 0, 187, 324, 0, 0, 493, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	478, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 482, 494, 488, 490, 489, 486, 487, 485, 484,
	483, 496, 473, 474, 475, 476, 479, 0, 491, 492,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 508, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 497, 498, 499, 500, 501, 502, 503, 504, 507,
	505, 506, 477, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 164, 434, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 481, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 435, 458,
	457, 460, 461, 462, 463, 0, 0, 145, 459, 464,
	465, 466, 0, 0, 0, 432, 449, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 495, 0, 448, 0, 0,
	443, 444, 445, 450, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 472, 0, 0, 187,
	324, 0, 0, 493, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 478, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 482, 494,
	488, 490, 489, 486, 487, 485, 484, 483, 496, 473,
	474, 475, 476, 479, 0, 491, 492, 0, 0, 0,
	0, 509, 510, 511, 512, 513, 514, 515, 508, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 497, 498,
	499, 500, 501, 502, 503, 504, 507, 505, 506, 477,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 164, 434, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 481, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 435, 458, 457, 460, 461,
	462, 463, 0, 0, 145, 459, 464, 465, 466, 0,
	0, 0, 432, 449, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 495, 0, 448, 0, 0, 443, 444, 445,
	450, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 472, 0, 0, 187, 324, 0, 0,
	493, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 478, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 482, 494, 488, 490, 489,
	486, 487, 485, 484, 483, 496, 473, 474, 475, 476,
	479, 0, 491, 492, 0, 0, 0, 0, 819, 820,
	821, 822, 823, 827, 828, 832, 833, 841, 840, 839,
	842, 843, 845, 844, 846, 824, 825, 826, 829, 830,
	831, 834, 835, 838, 836, 837, 477, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 481, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 470,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 435, 458, 457, 460, 461, 462, 463, 0,
	0, 145, 459, 464, 465, 466, 0, 0, 0, 0,
	449, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 495,
	0, 448, 0, 0, 443, 444, 445, 450, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	472, 0, 0, 187, 324, 0, 0, 493, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 478, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 2302, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 482, 494, 488, 490, 489, 486, 487, 485,
	484, 483, 496, 473, 474, 475, 476, 479, 0, 491,
	492, 0, 0, 0, 0, 509, 510, 511, 512, 513,
	514, 515, 508, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 497, 498, 499, 500, 501, 502, 503, 504,
	507, 505, 506, 477, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 481, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 808, 435,
	458, 457, 460, 461, 462, 463, 0, 0, 145, 459,
	464, 465, 466, 0, 0, 0, 0, 449, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 495, 0, 448, 0,
	0, 443, 444, 445, 450, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 472, 0, 0,
	187, 324, 0, 0, 493, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 478, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 482,
	494, 488, 490, 489, 486, 487, 485, 484, 483, 496,
	473, 474, 475, 476, 479, 0, 491, 492, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 508,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 497,
	498, 499, 500, 501, 502, 503, 504, 507, 505, 506,
	477, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 481, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 470, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 435, 458, 457, 460,
	461, 462, 463, 0, 0, 145, 459, 464, 465, 466,
	0, 0, 0, 0, 449, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 495, 0, 448, 0, 0, 443, 444,
	445, 450, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 472, 0, 0, 187, 324, 0,
	0, 493, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 478, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 482, 494, 488, 490,
	489, 486, 487, 485, 484, 483, 496, 473, 474, 475,
	476, 479, 0, 491, 492, 0, 0, 0, 0, 509,
	510, 511, 512, 513, 514, 515, 508, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 497, 498, 499, 500,
	501, 502, 503, 504, 507, 505, 506, 477, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 1302, 0, 0,
	0, 0, 0, 118, 0, 390, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 1301, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 393, 394,
	395, 399, 400, 404, 405, 413, 412, 411, 414, 415,
	417, 416, 418, 396, 397, 398, 401, 402, 403, 406,
	407, 410, 408, 409, 0, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 1302, 0, 0, 0, 0, 0,
	118, 0, 390, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 1301, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 1296, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 393, 394, 395, 399, 400,
	404, 405, 413, 412, 411, 414, 415, 417, 416, 418,
	396, 397, 398, 401, 402, 403, 406, 407, 410, 408,
	409, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 859,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 860, 0, 863,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 856, 855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 393, 394, 395, 399, 400, 404, 405, 413,
	412, 411, 414, 415, 417, 416, 418, 396, 397, 398,
	401, 402, 403, 406, 407, 410, 408, 409, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 1559, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	0, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 0, 390, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 0, 0, 0, 187, 324, 0, 0, 0,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 0, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 393,
	394, 395, 399, 400, 404, 405, 413, 412, 411, 414,
	415, 417, 416, 418, 396, 397, 398, 401, 402, 403,
	406, 407, 410, 408, 409, 0, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 0, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 390, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 0,
	0, 0, 187, 324, 0, 0, 0, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	0, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 393, 394, 395, 399,
	400, 404, 405, 413, 412, 411, 414, 415, 417, 416,
	418, 396, 397, 398, 401, 402, 403, 406, 407, 410,
	408, 409, 0, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 0, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 860, 0,
	863, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 0, 0, 0, 187,
	324, 0, 0, 0, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 0, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 393, 394, 395, 399, 400, 404, 405,
	413, 412, 411, 414, 415, 417, 416, 418, 396, 397,
	398, 401, 402, 403, 406, 407, 410, 408, 409, 0,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 0, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 873, 872, 882, 883, 875, 876, 877, 878,
	879, 880, 881, 874, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 0, 0, 187, 324, 0, 0,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 32, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 1293,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 75, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 32, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 0, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 0,
	0, 0, 187, 324, 0, 0, 0, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	0, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 75, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 1007, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 0, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 0,
	1006, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 0, 0, 0, 187,
	324, 0, 0, 0, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 0, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 0, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 0, 0, 187, 324, 0, 0,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 0, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	0, 0, 0, 187, 324, 0, 0, 0, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 0, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 976, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 0, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 0, 0, 0,
	187, 324, 0, 0, 0, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 0, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 0, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 0, 0, 0, 187, 324, 0,
	0, 0, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 0, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 115, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	0, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 0, 0, 0, 187, 324, 0, 0, 0,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 0, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 0, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 0,
	0, 0, 187, 324, 0, 0, 0, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	0, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 547, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 543, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 548, 546,
	537, 538, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 544,
	545, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 0, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 0, 0, 0, 187,
	324, 0, 0, 0, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 0, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 1001, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 0, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 0, 0, 187, 324, 0, 0,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 534, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	547, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 543, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 548, 546, 537, 538, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 544, 545, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325,
}
var yyPact = [...]int{

	231, -1000, -294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1532, -1000, -1000, -1000, -1000, -1000, -1000, 166, 235,
	-1000, -1000, 287, 405, 22902, 286, 2278, 23756, -1000, -1000,
	-1000, 109, 211, 23756, -1000, -1000, -81, -85, -1000, 194,
	255, 1120, 1409, 1119, 5, -1000, 1578, 1580, -1000, -1000,
	247, 23, -1000, -1000, -1000, 18630, 168, -1000, -1000, -1000,
	1491, 1530, 1313, -1000, 12225, 242, 242, 22475, 25464, -1000,
	-1000, 23756, 168, 10942, 278, 23756, -140, 225, 225, 157,
	285, -1000, 600, -1000, -1000, -1000, -1000, 23756, 226, 23329,
	226, 226, 226, 226, 226, 23756, -1000, 471, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23756, 1114, 1441, 642, 153, 7932, 7932, -1000, 641,
	-1000, 145, 138, 147, 134, 29, 649, -1000, 7932, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 183, 258, 209, 168,
	591, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1440, 1438,
	846, 1436, 384, 1432, 1265, -76, -1000, 1113, -1000, 1263,
	1481, 282, 23756, -1000, -1000, 1222, -1000, 1270, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 864,
	1434, 731, 15214, 1359, -1000, -1000, 659, 1563, -1000, 17776,
	452, -1000, 14787, 672, 1115, -1000, -1000, 1115, -1000, -1000,
	445, -1000, -1000, 16495, 16495, 16495, 16495, 16495, 16495, 16495,
	16495, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1115, -1000, 11798,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	14787, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 22048, 21194, 23756, 1216, 1152,
	-1000, -1000, 449, 1221, -101, 25037, -1000, -1000, -1000, -1000,
	24183, 20767, 584, -1000, -1000, -1000, -1000, 1428, -1000, -1000,
	444, -1000, -1000, 1112, 189, -1000, 4113, 312, -1000, -1000,
	-1000, 1264, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23329, 1475,
	248, 1109, 617, 1107, 1093, 1089, 225, 1088, 1219, 253,
	23756, 1462, 1281, 23756, 1086, 1085, 1084, 1070, -1000, 10512,
	-1000, 7932, 642, -1000, 851, 14787, 225, 225, 7932, 7932,
	7932, 23756, 23756, 23756, -1000, -1000, -1000, -1000, 23756, -1000,
	-1000, 642, 642, 7932, 7932, 627, 1561, 627, 627, -1000,
	-1000, -1000, -1000, 14787, -1000, 16495, -1000, -1000, 1046, 159,
	-1000, -1000, -1000, -1000, -1000, -1000, 1042, -1000, -1000, 384,
	384, -1000, 845, 384, 1192, -1000, 573, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 384,
	-1000, 14360, -292, -1000, -1000, 1313, -1000, -1000, 168, -1000,
	-1000, -1000, 23756, 7932, 18630, 1115, 23329, -1000, -1000, -1000,
	1574, 510, 1199, -1000, -1000, 1217, -1000, 638, 1454, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 442, 973, 1325,
	-1000, -1000, -1000, 23756, -1000, 14787, 14787, 777, -1000, 19057,
	-1000, -1000, -1000, -1000, 8792, 519, 16495, 725, 553, 16495,
	16495, 16495, 16495, 16495, 16495, 16495, 16495, 16495, 16495, 16495,
	16495, 16495, 16495, 16495, 738, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1033, -1000, 168, 1051, 1051, 481, 481,
	481, 481, 481, 481, 481, 19484, 1469, 864, 1067, 763,
	11798, 13079, 13079, 864, 14787, 14787, 13933, 13506, 13079, 13079,
	1469, 601, 763, 24183, -1000, -1000, 16068, -1000, -1000, -1000,
	-1000, -1000, 864, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23329, 23329, 13079, 13079, 13079, 13079, 864, 864, 13079,
	13079, 13079, 13079, 13079, 864, 864, 864, 864, 1469, 1469,
	13079, 13079, 13079, 1469, 13079, 13079, 1469, 13079, 13079, 13079,
	13079, 1469, 13079, 13079, 13079, 170, 23756, -1000, 1183, 1200,
	-1000, -1000, -1000, 1474, 19912, 17349, -1000, 170, 1153, 21194,
	23756, -1000, -1000, 21194, 23756, 8362, 24610, 1174, -1000, -98,
	-107, -101, -1000, -1000, 480, -1000, -1000, -1000, 11370, -1000,
	9652, 6212, 10082, -1000, 312, 1264, -1000, -71, -1000, -1000,
	-1000, 1234, -1000, 1234, 160, -11, 1234, 1234, 1234, 1234,
	1234, -40, -40, -40, -40, -8, -1000, -1000, -1000, -1000,
	-1000, 1262, 1261, -1000, 1234, 1234, 1234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1244, 181, 1238, 1238, 1238,
	1238, 1238, 201, -1000, 14787, 965, -1000, 23756, 7932, 1457,
	7932, 133, 1259, 23756, -1000, 23756, 23756, 1207, -1000, 23756,
	1195, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 763, 1031, 1028, -1000, -1000, -1000, -1000, -1000,
	-1000, 634, -1000, -1000, -1000, -1000, 642, 23756, 23756, 23756,
	1471, 642, 763, 518, -1000, -1000, 1026, -1000, 1192, 1192,
	-1000, 1192, 384, 1051, 1192, -1000, 1065, 1456, 844, 1469,
	864, 1313, 536, -1000, -1000, -1000, 184, 985, 433, -1000,
	1321, 731, 731, 15214, -1000, -1000, -1000, -1000, 9652, 1524,
	-1000, 1332, 1329, 1253, -1000, -1000, 519, 585, -1000, -1000,
	780, -1000, -1000, -1000, -1000, 430, 1115, -1000, 1123, -1000,
	-1000, -1000, -1000, 725, 16495, 16495, 16495, 518, 1123, 2392,
	886, 1057, 481, 596, 596, 482, 482, 482, 482, 482,
	900, 900, -1000, -1000, -1000, 864, -1000, -1000, -1000, 13079,
	-1000, 14787, -1000, 864, 1039, -1000, -1000, 763, 428, 1039,
	-1000, 883, 879, 557, 1546, 1039, 551, 1545, 1039, 1039,
	1039, 13079, 610, -1000, 14787, 864, -1000, 829, 1186, 1177,
	1039, 864, 1175, 1039, 1039, -151, -151, 864, 1039, 864,
	1039, 1039, -151, -151, -151, -151, 13079, 13079, 1039, 1039,
	1039, 13079, 1039, 1039, 13079, 1039, 1039, 1039, 1039, 13079,
	1039, 1039, 1039, 165, 1115, -1000, 24183, 21194, 21194, 21194,
	21194, 21194, -1000, 1309, 1301, -1000, 1298, 1295, 1305, 18630,
	-1000, 1061, 864, 123, 19912, -1000, 1115, -1000, 18203, 502,
	277, 270, 263, 1539, 21194, 1126, -1000, 1126, -1000, 412,
	-1000, -1000, 24183, -101, -110, -1000, -1000, 1174, -1000, 816,
	-1000, -1000, 763, -1000, 410, 1160, 5782, -1000, -1000, -1000,
	-1000, 189, -1000, -1000, -1000, 1258, 302, -1000, 1353, 509,
	525, 915, 1345, -1000, -1000, 612, -73, -1000, -1000, 792,
	-40, -40, 1234, 1234, 154, 1234, -1000, -40, -1000, -1000,
	-1000, 480, 1427, 480, 480, 480, 480, -40, 839, 839,
	-1000, -1000, -1000, -1000, 783, -1000, 1244, -1000, 743, -1000,
	-1000, -1000, -1000, -1000, 902, 1280, 23329, 168, 1470, -1000,
	-1000, -1000, 1551, -1000, -1000, 275, -1000, 232, -1000, 7932,
	23756, 7932, 7932, 1539, 1016, 1011, -1000, -1000, -1000, 627,
	642, 1418, -1000, -1000, 16495, -1000, -1000, -1000, -1000, 170,
	280, -1000, 1325, -1000, 1469, 1159, -1000, -1000, 580, 535,
	555, 206, 206, -1000, 549, 206, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 167, 1466, 23329, 23329, 1319, -1000,
	-1000, -1000, 23756, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7502, 13079, -1000, 518, 1123, 2334, -1000, 16495,
	-1000, 864, 763, -1000, 13079, -1000, 7072, -1000, 152, 738,
	152, 16495, 16495, -1000, 16495, 16495, -1000, -185, -1000, 1181,
	552, -1000, 14787, 871, -1000, -1000, 16495, 16495, -1000, -1000,
	-1000, -1000, -1000, 21621, -1000, -151, -151, -151, -151, -151,
	-1000, -1000, -1000, -1000, 1039, 1039, -151, -151, -151, 1039,
	-151, -151, 1039, -151, -151, -151, -151, 1039, -151, -151,
	-151, 1278, 24183, 1115, -1000, 20340, 23329, 1204, -1000, 565,
	1200, 1242, 1276, 1884, -1000, -1000, -1000, -1000, 1299, -1000,
	1292, -1000, -1000, 1231, -1000, -1000, 1157, 1115, 23329, 16495,
	502, -1000, 1115, 1115, 1115, 1532, 14787, 1126, -1000, -1000,
	491, -1000, -1000, -102, -116, -1000, -1000, -1000, 9222, 6212,
	-1000, 6212, -1000, 23329, 199, -1000, 915, -1000, -1000, 915,
	-1000, -1000, -1000, 1239, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 651, 16495, 1573, -1000, 1352, -1000, 1351, 833, -1000,
	-1000, 923, 480, 480, -40, -1000, -1000, 1234, -1000, 480,
	-1000, 528, -1000, -1000, -1000, -1000, 480, 1037, -1000, 1023,
	1155, -1000, 1015, 57, 23756, -1000, -1000, -1000, 1274, -1000,
	-1000, -1000, 908, 1154, -1000, 4113, 1009, 1007, 1005, 23756,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 642, -1000, 16495,
	1123, -40, 23756, 1253, 536, -1000, 857, -1000, 915, 414,
	-1000, -1000, -1000, 1345, -1000, -1000, 281, 1003, -1000, 987,
	986, 23329, 1346, 977, 23756, 23329, -1000, -1000, 952, 964,
	14787, -1000, 23329, 23329, 1115, 318, -1000, -1000, -1000, 1077,
	12225, -1000, -1000, 864, -1000, 16495, 1123, -1000, -1000, -1000,
	301, 864, 1234, 1234, -1000, 1234, 1238, -1000, 1234, -9,
	1234, -18, 864, 864, 2065, 2015, 1533, 1206, 1115, -147,
	-1000, 763, 14787, 1092, 951, -1000, 371, -1000, -1000, -1000,
	-1000, -1000, -151, -151, -1000, -1000, -1000, -1000, -151, -1000,
	-1000, -151, -1000, -1000, -1000, -1000, -151, -1000, -1000, -1000,
	-1000, 1450, 1146, 1128, -1000, -1000, 12652, 864, 985, 972,
	-1000, 1532, 24183, 14787, -1000, -1000, 14787, 1235, -1000, 14787,
	-1000, -1000, -1000, -1000, 23329, 112, -1000, 14787, 972, 1704,
	-1000, 23329, 23329, 23329, 1491, 763, -1000, -1000, -1000, -1000,
	5782, -1000, 970, -1000, 1234, -1000, 1345, -1000, -1000, 23329,
	-1000, 1123, -13, -1000, -1000, -1000, -1000, -1000, -1000, 480,
	-1000, -1000, -1000, -1000, -1000, -40, 828, -40, 726, -1000,
	724, -1000, -1000, -240, 1233, -1000, 168, 23756, 116, 275,
	-1000, 4113, 4113, 4113, -1000, -1000, 1123, -86, -1000, -1000,
	-1000, 952, 187, 4113, -1000, 965, 509, 199, -1000, -1000,
	-1000, -1000, -1000, 963, 391, -1000, 213, 187, 952, 763,
	523, 1455, -1000, 23329, 1536, 21194, -1000, -1000, -1000, 1123,
	6642, -1000, -1000, 150, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16495, 16495, 16495, 16495, 16495, 864, 827, 763,
	16495, 16495, 864, 1529, -1000, -1000, -1000, -1000, -1000, 1337,
	-1000, 1115, -1000, -1000, 176, -1000, 23329, 1491, -1000, 763,
	763, 23329, 763, 961, -1000, 1115, 16922, -1000, 18630, 959,
	959, 959, -1000, 469, 23329, 1454, 957, -1000, -1000, 480,
	-1000, 480, 903, 901, -1000, 23329, -1000, 1488, -1000, 116,
	-1000, 820, 81, 87, -1000, 79, 77, 73, 72, 68,
	-1000, -1000, -1000, -1000, 1404, 1394, 1182, 893, -1000, -1000,
	936, -1000, 1232, 915, -1000, -1000, 913, -1000, -1000, 23329,
	-1000, 187, 1447, 1445, 1115, -1000, 1534, 1528, 1126, 12225,
	-1000, -1000, -1000, -1000, 829, 829, 829, 829, 43, -1000,
	-1000, 829, 829, -1000, 14787, 1572, -1000, 1115, -1000, 168,
	-1000, -1000, 922, -1000, 23329, -1000, -1000, 502, -1000, -1000,
	-1000, 469, -1000, 897, 549, 818, -1000, -1000, 185, -1000,
	-1000, -1000, -1000, 911, -1000, 100, 4519, -1000, -1000, -1000,
	-1000, -1000, -1000, 1408, 1407, 99, 230, 1367, 1378, 1522,
	21194, -1000, -1000, 612, 23329, 965, -1000, -1000, -1000, 16495,
	-1000, 164, -1000, 15214, 15214, 1536, -1000, -1000, -1000, -1000,
	-1000, 864, 169, -192, -1000, -1000, 1079, 24183, 1128, 864,
	-1000, -1000, -1000, -1000, -1000, 681, -1000, 23756, 469, 97,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14787, 14787,
	5352, 4519, -1000, -1000, -1000, -1000, 1231, 677, 1394, 1521,
	1388, 1384, -1000, 795, 1126, 907, 1230, 1123, 892, -1000,
	23329, -1000, 763, -1000, 1041, -1000, 763, -1000, 1534, -1000,
	-1000, 1318, -188, -199, 864, 974, -1000, -1000, 1226, -1000,
	469, 103, -1000, 715, 663, 42, 35, 2408, -1000, -1000,
	-1000, -1000, -295, -1000, -1000, 1400, -1000, 781, -1000, 1512,
	1510, -1000, 1536, 469, 23329, -1000, 164, 1328, 15214, -1000,
	-1000, 1317, -1000, -1000, 23329, -1000, 885, 855, 669, -1000,
	14787, 4519, 1487, 1486, 1473, 1435, 9222, 4401, -1000, -1000,
	695, 670, 1534, -1000, 863, -1000, 161, -1000, -190, 861,
	217, -1000, -1000, 607, 4519, -1000, 653, -296, 198, 168,
	193, 16495, -1000, -1000, -1000, -1000, -1000, -1000, 469, 156,
	-197, 1273, -1000, -1000, -1000, -1000, -1000, -1000, 4519, -1000,
	-297, 4519, 2728, -1000, -1000, -1000, 3903, -1000, -1000, -1000,
	-1000, 33, -1000, -1000, 1123, -1000, 1115, -202, 1269, 1268,
	1544, -1000, -298, 3659, -300, 223, 4519, 701, -1000, 14787,
	-1000, 193, -1000, 15641, -1000, -1000, 1568, -1000, 1565, 402,
	402, 3584, 586, 4519, -1000, -301, 220, 4519, -1000, 633,
	-1000, 829, 864, -1000, -1000, -1000, 197, 694, -1000, -1000,
	-1000, 3383, -1000, -306, 4519, -1000, -1000, -1000, -1000, -1000,
	212, 3006, -310, -1000, 210, 4519, -1000,
}
var yyPgo = [...]int{

	0, 1928, 71, 1927, 146, 1925, 1924, 1923, 20, 18,
	11, 23, 1922, 1671, 1668, 1663, 1659, 1921, 1657, 1920,
	5, 1916, 1910, 1638, 1905, 1902, 1632, 1628, 1625, 1623,
	26, 1894, 15, 1893, 6, 115, 133, 1892, 3, 1891,
	1890, 9, 1889, 1888, 1618, 1885, 1884, 1883, 1882, 68,
	1879, 1616, 1608, 1878, 1874, 1600, 1598, 1873, 1872, 1596,
	1588, 1586, 1868, 149, 1866, 1865, 1864, 131, 75, 112,
	1862, 1861, 1860, 89, 56, 1579, 86, 42, 101, 283,
	1859, 17, 31, 1858, 1857, 173, 105, 1855, 122, 1854,
	82, 168, 83, 1853, 1851, 137, 1848, 1847, 1846, 106,
	1845, 1844, 2379, 1843, 1842, 121, 1841, 51, 50, 35,
	1839, 1838, 1836, 1833, 1832, 113, 2, 1831, 1829, 114,
	1828, 64, 1827, 1811, 134, 1810, 1805, 1804, 103, 59,
	1803, 47, 1802, 46, 58, 1800, 36, 1799, 104, 1798,
	1788, 34, 13, 1783, 29, 1780, 43, 1775, 111, 286,
	260, 16, 41, 52, 57, 1773, 84, 14, 30, 95,
	78, 67, 37, 1772, 120, 1770, 62, 118, 108, 102,
	117, 1765, 1764, 1763, 766, 1762, 1759, 107, 1757, 61,
	167, 701, 188, 97, 1756, 74, 1755, 1753, 1751, 1750,
	66, 91, 1749, 1748, 73, 191, 90, 1622, 32, 2046,
	33, 119, 1747, 45, 1746, 1745, 3342, 94, 63, 88,
	1742, 85, 27, 48, 1740, 1737, 1736, 1734, 1731, 1728,
	675, 1726, 1725, 1723, 1719, 109, 147, 1717, 1715, 98,
	80, 1712, 1711, 1709, 1707, 1701, 99, 65, 116, 1697,
	96, 87, 100, 1696, 1694, 1693, 1692, 44, 40, 1690,
	1689, 1688, 76, 79, 1687, 54, 22, 25, 53, 8,
	55, 81, 1685, 28, 1684, 92, 4, 10, 7, 1682,
	1681, 1680, 1677, 1675, 60, 1674, 1665, 49, 1636, 1630,
	1621, 38, 1614, 1610, 1606, 1602, 0, 163, 123, 1592,
	1590, 124,
}
var yyR1 = [...]int{

	0, 284, 285, 285, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 62, 2, 2, 7, 3, 3, 3,
	4, 4, 83, 84, 84, 88, 88, 5, 5, 6,
	6, 8, 8, 66, 66, 9, 10, 10, 10, 10,
	288, 288, 97, 97, 95, 95, 96, 96, 159, 159,
	11, 11, 11, 164, 164, 169, 169, 169, 172, 172,
	172, 172, 151, 152, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 272, 272, 273, 273, 274,
	274, 274, 274, 275, 275, 276, 276, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 24, 193, 193,
	42, 42, 43, 43, 43, 147, 147, 147, 12, 12,
	12, 12, 12, 19, 21, 21, 31, 31, 32, 22,
	22, 22, 22, 33, 33, 34, 25, 25, 25, 25,
	25, 25, 40, 40, 40, 39, 39, 38, 38, 38,
	38, 38, 38, 23, 23, 23, 23, 41, 41, 36,
	36, 35, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 26, 26, 26, 26, 26, 26,
	18, 271, 271, 271, 30, 30, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 47, 249, 250, 250, 250, 250, 250,
	250, 250, 250, 237, 238, 213, 213, 213, 213, 213,
	213, 213, 212, 212, 212, 212, 216, 216, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 215, 215, 215,
	215, 215, 215, 215, 215, 217, 217, 217, 217, 217,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 219, 219, 219, 219, 219,
	219, 219, 219, 236, 236, 220, 220, 229, 229, 230,
	230, 230, 227, 227, 228, 228, 231, 231, 223, 224,
	232, 225, 225, 225, 226, 226, 226, 235, 235, 235,
	235, 221, 239, 239, 259, 259, 258, 258, 257, 257,
	257, 248, 248, 254, 254, 254, 254, 254, 243, 243,
	243, 242, 242, 244, 244, 247, 247, 256, 256, 255,
	240, 240, 260, 260, 260, 260, 260, 241, 241, 241,
	261, 245, 245, 246, 246, 246, 267, 268, 266, 266,
	266, 266, 266, 112, 112, 112, 251, 251, 251, 252,
	252, 252, 253, 253, 253, 269, 269, 44, 44, 45,
	50, 50, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 146, 146, 146, 46, 191,
	191, 265, 265, 265, 264, 262, 262, 263, 263, 14,
	48, 48, 15, 15, 15, 15, 15, 15, 15, 16,
	16, 51, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 80, 178, 178, 176, 176, 179, 179, 177, 177,
	177, 180, 180, 180, 210, 210, 210, 53, 53, 58,
	58, 61, 59, 60, 27, 28, 28, 28, 28, 29,
	192, 192, 56, 56, 57, 57, 57, 57, 72, 72,
	289, 289, 55, 55, 54, 54, 54, 54, 17, 290,
	63, 64, 64, 65, 65, 65, 183, 183, 69, 69,
	69, 67, 67, 67, 68, 68, 74, 74, 78, 78,
	78, 78, 77, 77, 77, 77, 149, 149, 149, 150,
	150, 202, 202, 202, 201, 201, 201, 201, 82, 82,
	85, 85, 86, 86, 86, 86, 89, 132, 132, 106,
	106, 107, 107, 107, 107, 107, 118, 118, 158, 158,
	157, 157, 160, 160, 87, 87, 87, 87, 92, 92,
	93, 93, 94, 94, 190, 190, 208, 208, 208, 98,
	98, 98, 100, 99, 99, 99, 99, 101, 101, 103,
	104, 104, 102, 102, 105, 108, 108, 108, 108, 109,
	109, 79, 79, 79, 79, 79, 79, 79, 175, 175,
	111, 111, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 127, 127, 127, 127, 127, 127, 113, 113,
	113, 113, 113, 113, 113, 73, 73, 128, 128, 128,
	91, 90, 90, 76, 76, 75, 75, 129, 129, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 122, 122, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 291, 291, 124, 123, 123,
	123, 123, 123, 123, 70, 70, 70, 70, 70, 209,
	209, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 139, 139, 71, 71, 137, 137,
	138, 140, 140, 136, 136, 136, 115, 115, 115, 115,
	115, 115, 115, 115, 117, 117, 117, 141, 141, 130,
	130, 81, 81, 142, 142, 143, 143, 144, 144, 145,
	145, 148, 148, 153, 153, 153, 154, 154, 154, 154,
	119, 119, 155, 155, 155, 114, 114, 114, 114, 114,
	114, 156, 156, 156, 156, 161, 161, 131, 131, 134,
	134, 133, 135, 162, 162, 166, 163, 163, 167, 167,
	167, 167, 170, 170, 171, 171, 171, 168, 168, 168,
	165, 165, 165, 205, 205, 205, 173, 173, 184, 184,
	181, 181, 182, 182, 174, 174, 222, 222, 187, 187,
	187, 187, 187, 187, 187, 187, 189, 189, 188, 188,
	188, 185, 185, 185, 186, 186, 203, 203, 199, 199,
	204, 204, 200, 200, 206, 206, 207, 207, 270, 270,
	233, 233, 280, 280, 234, 234, 281, 281, 283, 283,
	278, 278, 279, 279, 282, 282, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 286,
	287, 194, 195, 195, 195,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 11, 4, 7, 5, 1, 13, 3,
	10, 12, 2, 1, 3, 3, 6, 1, 3, 1,
	3, 7, 8, 1, 1, 9, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 0, 0, 2, 2, 3, 3, 11, 7,
	9, 5, 5, 15, 11, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 0, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	3, 5, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 4, 3, 2, 4,
	3, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 4, 1, 1, 2, 3, 4,
	3, 3, 3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 1, 2, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 2, 1, 2,
	1, 2, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 2, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 1, 1, 5,
	1, 3, 2, 5, 4, 3, 3, 3, 5, 3,
	8, 10, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 0, 1, 2, 4, 0,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 4, 4, 4, 4, 4, 3,
	2, 3, 4, 4, 3, 6, 6, 4, 4, 4,
	4, 4, 4, 3, 3, 2, 6, 2, 4, 4,
	4, 5, 7, 6, 5, 4, 2, 4, 3, 2,
	3, 3, 1, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 4, 7, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 9, 4, 7, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 1,
	3, 1, 1, 0, 2, 1, 1, 0, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 1, 3, 5, 4,
	6, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -284, -1, -2, -7, -8, -9, -10, -11, -13,
	-44, -14, -15, -16, -51, -52, -53, -58, -59, -60,
	-56, -55, -54, -17, -23, -26, -18, -62, -27, -28,
	-29, -3, 6, 7, -66, 9, 10, 30, -47, 130,
	-45, -46, 133, 132, 169, 134, 162, 64, 225, -61,
	228, 229, -289, -192, 167, 168, 31, 32, 136, 212,
	213, 20, 37, 230, 232, -4, -83, -5, 8, 321,
	131, 226, 164, 163, 26, 366, -286, 68, -285, 436,
	-144, 15, -63, -290, -63, -63, -63, -63, -63, -249,
	-2, 105, 23, 68, -186, 143, 86, 312, 139, -193,
	-184, -185, 189, 199, 44, 150, 149, 140, 140, 141,
	143, 312, 139, 177, 176, 140, -102, -206, 71, -197,
	363, 153, 378, 379, 131, 186, 225, 239, 233, 267,
	255, 364, 380, 154, 207, 138, 253, 256, 299, 152,
	200, 381, 288, 294, 210, 80, 228, 308, 382, 155,
	204, 206, 205, 194, 211, 36, 165, 251, 244, 215,
	189, 383, 371, 242, 28, 184, 384, 296, 272, 385,
	368, 295, 247, 243, 136, 386, 156, 150, 179, 387,
	273, 277, 388, 300, 389, 390, 391, 142, 237, 238,
	392, 190, 302, 271, 33, 151, 365, 48, 174, 303,
	38, 275, 37, 287, 393, 270, 265, 394, 395, 396,
	397, 269, 236, 264, 202, 53, 137, 279, 278, 280,
	203, 298, 260, 258, 398, 399, 157, 400, 401, 245,
	18, 402, 403, 306, 168, 404, 42, 405, 406, 407,
	172, 408, 409, 410, 297, 274, 276, 188, 411, 248,
	147, 412, 176, 413, 367, 414, 304, 241, 415, 158,
	232, 173, 167, 307, 416, 213, 417, 418, 419, 159,
	420, 421, 422, 229, 230, 290, 208, 423, 424, 425,
	426, 198, 183, 310, 301, 52, 212, 284, 427, 235,
	149, 214, 428, 226, 43, 180, 7, 201, 291, 209,
	199, 262, 175, 429, 430, 249, 250, 268, 234, 263,
	227, 177, 178, 169, 431, 309, 285, 369, 51, 257,
	254, 181, 261, 432, 143, 433, 182, 231, 305, 252,
	286, 140, 123, 256, 299, 130, 289, 290, 296, -243,
	297, 176, 179, -210, 140, -176, 288, 182, 71, 141,
	142, 33, 301, 300, 292, -206, 144, 231, -72, 134,
	170, -102, -194, -194, -194, 291, 291, -194, -41, 71,
	214, -41, 30, 71, 71, 36, 71, 230, 6, -65,
	5, -174, 143, 145, 227, -84, -88, -208, -206, -198,
	73, 334, 335, 336, 337, 338, 351, 352, 353, 339,
	340, 354, 355, 356, 341, 342, 357, 358, 360, 361,
	359, 345, 344, 343, 346, 347, 349, 348, 350, -2,
	-154, 17, 16, -69, 54, 55, -64, -77, 114, -79,
	-206, -110, 88, -116, 29, 71, -197, 24, -115, -111,
	-136, -135, -91, 123, 124, 125, 112, 113, 120, 89,
	126, -122, -120, -121, -123, -125, -126, 73, 72, 81,
	74, 75, 76, 77, 82, 83, 84, -199, -133, -286,
	58, 59, 139, 322, 323, 324, 325, 362, 160, 326,
	91, 47, 311, 320, 319, 318, 316, 317, 313, 315,
	314, 328, 329, 146, 312, 118, 321, 351, 352, 353,
	354, 355, 356, 357, 358, 360, 361, 359, 341, 334,
	335, 336, 337, 338, 339, 340, 342, 343, 344, 345,
	346, 347, 348, 349, 350, -174, -174, 11, -95, -96,
	-102, -105, -206, -163, 227, -170, -167, 300, 301, -168,
	-171, -165, -136, 287, 409, 410, 299, 256, 298, -199,
	-206, -102, -2, -250, -238, -241, -200, 155, -261, -199,
	-196, 152, 71, -197, 135, 161, 87, 370, 23, 25,
	282, 334, 90, 123, 335, 336, 337, 16, 20, 91,
	122, 322, 338, 130, 62, 313, 315, 311, 312, 289,
	29, 10, 26, 163, 193, 22, 116, 132, 94, 95,
	96, 166, 24, 164, 84, 160, 19, 65, 11, 13,
	332, 333, 14, 146, 145, 107, 191, 141, 60, 8,
	126, 27, 104, 56, 339, 340, 374, 45, 375, 58,
	105, 17, 316, 317, 31, 362, 341, 171, 376, 342,
	118, 196, 63, 50, 88, 82, 34, 85, 66, 86,
	15, 192, 61, 330, 195, 377, 106, 133, 321, 59,
	139, 6, 327, 30, 162, 345, 344, 343, 346, 197,
	57, 324, 325, 347, 434, 140, 93, 328, 329, 144,
	83, 5, 44, 32, 9, 64, 67, 318, 319, 320,
	47, 349, 348, 350, 92, 12, 331, 366, 141, -102,
	321, -182, 146, -182, 177, 176, 140, 97, -48, -102,
	-181, 146, -199, -181, -181, -181, -181, -181, -102, 127,
	-102, 71, 30, -180, 105, 12, 312, 139, 71, 176,
	179, 140, 177, 143, -195, -286, -200, -195, -245, 11,
	107, 180, 180, 180, 181, 180, -179, -178, 178, 294,
	295, 291, 293, 12, -80, 105, -195, 71, 230, 144,
	-57, -2, -10, -8, -9, -2, 97, -194, -194, 30,
	30, 73, 51, 30, -36, -35, -37, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 30,
	-271, 68, -233, 287, 71, -63, -6, -4, -286, 6,
	21, 22, 140, -102, 69, 23, -286, -287, 70, -155,
	19, 31, -119, 74, 77, -145, -148, -79, -198, 334,
	335, 336, 337, 338, 351, 352, 353, 339, 340, 354,
	355, 356, 341, 342, 357, 358, 360, 361, 359, 345,
	344, 343, 346, 347, 349, 348, 350, -206, 50, -67,
	21, 22, 79, 11, -202, 87, 86, 104, -201, 23,
	71, -197, -198, 73, 127, -79, -113, 107, 88, 105,
	106, 90, 109, 108, 119, 112, 113, 114, 115, 116,
	117, 118, 110, 111, 122, 97, 98, 99, 100, 101,
	102, 103, -175, -286, -91, -286, 128, 129, -116, -116,
	-116, -116, -116, -116, -116, -116, -286, -2, -129, -79,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -139, -79, -286, -291, -124, -286, -291, -124, -291,
	-124, -291, -286, -291, -124, -291, -124, -291, -291, -124,
	-291, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, -286, -286, -104, 27, -102, -82, -85,
	-86, -87, -106, -90, -286, -102, -91, -102, -95, -288,
	69, 11, 67, -288, 69, 127, 69, -164, -169, 302,
	304, 227, -168, -168, -205, -199, 73, 29, 97, 30,
	127, 70, 69, -241, 155, 152, -212, -216, -218, -217,
	-219, -214, -215, 253, 256, 260, 258, 254, 259, 123,
	257, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 30, 165, 249, 250, 251, 252, 273, 274,
	275, 276, 277, 278, 279, 280, 233, 255, 364, 234,
	235, 236, 237, 238, 239, 241, 242, 243, 244, 245,
	246, 247, 71, -261, 68, -199, 23, 143, 71, 88,
	71, 71, 71, -182, 71, 69, 144, -95, 24, 66,
	-97, -102, 71, 71, 71, 71, -207, -206, -196, -195,
	-180, 73, -79, -182, -182, -195, -195, -195, -102, -102,
	-102, -102, -180, -180, -195, -195, -177, 11, 107, 11,
	-177, -177, -79, -116, 71, 71, 230, 71, -36, -36,
	73, -36, 69, 97, -36, 70, -129, -270, 435, -69,
	-2, -63, -102, -195, -88, -90, -286, -156, -199, 9,
	107, 69, 18, 69, -153, 25, 26, -153, 127, -117,
	51, 74, 77, -183, 49, -102, -79, -79, -127, 82,
	88, 83, 84, -201, 114, -207, -200, -196, -116, -128,
	-133, -91, 78, 107, 105, 106, 90, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -209, 71, 73, 71, -115, -115, -199, -67,
	-287, 69, -287, -2, -75, -78, 114, -79, -206, -75,
	-287, -79, -79, -136, 73, -75, -136, 73, -75, -75,
	-75, -67, -137, -138, 92, -136, -287, -116, -199, -199,
	-75, -76, -75, -75, -75, -287, -287, -78, -75, -78,
	-75, -75, -287, -287, -287, -287, -67, -67, -75, -75,
	-75, -67, -75, -75, -67, -75, -75, -75, -75, -67,
	-75, -75, -75, -159, 172, -102, 30, 69, -98, -100,
	-99, -101, 56, 60, 62, 57, 58, 59, 63, -190,
	23, -82, -89, 47, -286, -107, 172, -108, 23, -208,
	64, 145, 65, -159, 67, -82, -102, -82, -105, -206,
	114, -167, -170, 69, 303, 305, 306, -164, -226, 122,
	66, 85, -79, -200, -207, -251, -252, -253, -200, 73,
	74, -238, -239, -240, -241, -254, 155, -260, 147, 149,
	44, -242, 156, 141, 45, -213, -227, 285, -220, 68,
	-220, -220, 261, 253, 256, 254, -220, -220, -220, -220,
	-220, -225, 256, -225, -225, -225, -225, 254, 68, 68,
	-220, -220, -220, -229, 68, -229, 248, -230, 68, -230,
	-230, -230, -230, -261, -79, -203, 67, -151, -102, -195,
	24, -195, -42, 186, 161, 68, -102, -102, -102, -102,
	69, 71, 71, -246, 11, 107, -180, -206, -206, -102,
	-118, 23, -180, -73, 166, 71, -35, -115, 70, -103,
	27, 73, -67, -287, -69, -50, -49, -187, 135, 132,
	133, 137, 138, -264, 282, 131, 256, 80, 29, 15,
	322, 172, 369, 71, 173, -287, 69, 127, 52, -119,
	-119, -148, -173, 19, 11, 47, 47, -68, 57, 82,
	83, 84, 127, -286, -128, -116, -116, -116, -73, 87,
	-287, -76, -79, -287, 69, -287, 127, -287, 69, 67,
	23, 11, 11, -287, 11, 11, -287, -287, -287, -75,
	-140, -138, 94, -79, -287, -287, 69, 69, -287, -287,
	-287, -287, -149, 330, -149, -287, -287, -287, -287, -287,
	-149, -149, -149, -149, -75, -75, -287, -287, -287, -75,
	-287, -287, -75, -287, -287, -287, -287, -75, -287, -287,
	-287, -114, 30, 47, -2, -286, -286, -162, -166, -136,
	-85, -86, -86, -85, -86, 56, 56, 56, 61, 56,
	61, 56, -99, -208, -287, -287, -132, 185, -286, 34,
	-208, -108, 141, 141, 141, -109, 12, -82, -109, -109,
	127, -169, -172, 307, 304, 310, 71, 73, 127, 69,
	-253, 97, -241, 68, 71, 45, -242, 141, 45, -242,
	-247, 71, -247, 45, -231, -223, -224, -232, -235, -221,
	82, 88, 29, 66, 282, 147, 45, 44, 80, -228,
	286, 74, -225, -225, -220, -220, -220, 261, -220, -225,
	-226, 30, -226, -226, -226, -226, -225, -236, 73, -236,
	74, -229, 74, 70, 66, -199, -2, 23, -43, 8,
	9, 10, -272, -273, -274, 71, 107, 191, 192, 144,
	-195, -102, -195, -195, -109, 71, 71, -177, -180, 34,
	-116, -159, 140, -183, 69, -194, -191, -265, -242, -269,
	-240, -241, 148, 156, 147, 172, 155, -191, -265, 155,
	152, -242, 156, 148, -188, -242, 144, 23, -191, -191,
	-248, 97, -191, 172, 23, -199, -199, 53, -102, -74,
	-152, 114, -200, -76, -73, 87, -116, -287, -78, 114,
	-207, -211, 123, 253, 165, 251, 244, 271, 258, 284,
	249, 285, -209, -211, -116, -116, -116, -116, 363, -144,
	96, -79, 93, -116, -116, -199, -286, -149, -149, -149,
	-149, -149, -287, -287, -150, -149, -150, -150, -287, -150,
	-150, -287, -150, -150, -150, -150, -287, -150, -150, -150,
	-161, 66, -162, -131, -134, -133, -286, -2, -156, -160,
	-199, -109, 69, 97, -93, -92, 66, 67, -94, 66,
	-92, 56, 56, -158, 68, 69, -133, -286, -160, -116,
	-108, -286, -286, -286, -144, -79, -109, 304, 308, 309,
	-252, -253, -256, -255, -199, -260, 156, -247, -247, 68,
	82, -116, 9, 45, 45, 73, 70, -226, -226, -225,
	-220, -226, 71, 123, -226, 70, 69, 70, 69, 70,
	69, -112, 384, 88, -102, -151, -151, 66, 70, 69,
	-212, 71, 71, 71, -102, -180, -116, -225, -102, -68,
	-49, 68, -237, 71, -194, -247, -185, 71, 71, -194,
	71, 71, -199, 45, 71, -102, -199, -237, 71, -79,
	-199, -199, -90, 127, -109, 11, 69, -77, -287, -116,
	127, -287, -220, -220, -220, -230, -220, 238, -220, 238,
	-287, -287, 19, 19, 19, 19, -286, -71, 327, -79,
	69, 69, -144, 172, -150, -150, -150, -150, -150, 28,
	-161, 69, -287, -287, -287, -287, 69, -144, -166, -79,
	-79, 68, -79, -157, -199, 185, -287, -108, -190, -157,
	-157, -157, -154, 70, 69, -220, -157, -121, -226, -225,
	73, -225, 74, 74, 384, 68, -2, -102, -275, -276,
	-277, 80, 365, 88, 193, 194, 157, 195, 196, 197,
	-274, -212, -212, -212, -278, -179, -74, -237, -146, 160,
	161, -212, -203, -244, -242, 71, -189, 144, 23, 144,
	-146, -237, 30, 132, 27, -199, -141, 13, -82, -152,
	-152, 114, -225, 71, -116, -116, -116, -116, -116, -287,
	73, -116, -116, -287, 16, 45, -134, 47, -2, -286,
	-199, -154, -157, 70, 69, -133, -107, -208, -287, -287,
	-287, -258, -257, 67, 151, 80, -255, -153, 70, -226,
	-226, 70, 70, -256, -151, 19, -151, -277, 73, 197,
	193, 197, 197, 197, 197, 198, -279, 38, -281, 39,
	11, 70, 71, -213, 68, -247, 71, -199, -146, 29,
	29, -286, -142, 14, 16, -109, -77, -287, -287, -287,
	-287, -70, 107, 366, -287, -287, -129, 9, -131, -2,
	70, -199, -108, -257, 71, -248, 73, 158, 70, 184,
	-20, -2, -8, -9, -10, -11, -13, -44, -14, -15,
	-21, -22, -16, -51, -52, -61, -59, -60, -56, -55,
	-25, -23, -26, -18, -27, -28, -29, -24, 91, 146,
	215, 225, 36, 36, 189, 190, -222, 145, -282, 43,
	-280, -234, 42, 16, -82, -256, -203, -116, -262, -263,
	172, -143, -79, -198, -130, -81, -79, -198, -141, -152,
	-287, 364, 63, 367, -144, -162, -287, 74, -102, -259,
	-258, 185, -151, -79, -79, 71, -40, -204, 218, 219,
	220, -200, -30, -20, -158, 74, -281, 16, -283, 40,
	41, 73, -109, 70, 68, -287, 69, -199, 69, -142,
	53, 365, 368, -287, 68, -147, 187, 188, -31, -32,
	92, 93, 216, 217, 221, -212, 69, 436, 38, 73,
	16, 16, -141, -259, -256, -263, 47, -81, 53, -157,
	-151, 71, 71, 96, 94, -32, -79, -30, 19, 19,
	19, 29, -200, 96, -20, 73, 73, -142, 70, 174,
	366, 70, -12, -19, -11, -8, -9, -10, 225, 91,
	-30, 93, 436, -41, 74, -2, -39, -38, 74, -41,
	223, 88, 224, 71, -116, -259, 175, 367, -267, -268,
	66, -151, -30, 436, -30, 96, 94, -33, -34, 95,
	-20, 69, 222, -286, 368, -268, 66, -267, 66, 10,
	9, 436, 96, 436, 146, -30, 96, 94, -34, -79,
	-38, -116, 171, -266, 159, 154, 157, 30, -266, 96,
	91, 436, 146, -30, 93, -287, -287, 153, 29, 82,
	96, 436, -30, 146, 96, 436, 146,
}
var yyDef = [...]int{

	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, -2, 529, 529, 529, 529, 529, 529, 0, -2,
	397, 398, 0, 0, 0, 0, -2, 498, 499, 500,
	502, 503, 518, -2, 1331, 1331, 0, 0, 1331, 0,
	184, 0, 0, 0, 0, 37, 0, 0, 53, 54,
	904, 0, 521, 510, 511, 0, 0, 1329, 1, 3,
	846, 0, 538, 531, 0, 904, 904, 0, 0, 84,
	85, 0, 0, 1329, 0, 0, 0, 902, 902, 0,
	0, 925, 0, 899, 921, 922, 923, 0, 900, 0,
	900, 900, 900, 900, 900, 0, 450, 622, 934, 935,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 0, 0, 0, 491, 0, 1332, 1332, 465, 0,
	467, 0, 0, 0, 0, 0, 476, 479, 1332, 348,
	349, 350, 495, 496, 485, 497, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 1331, 1331, 528, 163, 165,
	0, 185, 0, 188, 191, 940, 504, 0, 529, 0,
	533, 0, 0, 905, 501, 42, 43, 0, 606, 607,
	608, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 0,
	852, 0, 0, 541, 539, 540, 530, 0, 552, 561,
	0, 631, 0, 636, 638, -2, -2, 0, 679, 680,
	681, 682, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 708, 709, 710, 711, 712, 816, 817, 818,
	819, 820, 821, 822, 823, 640, 641, 813, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 775, 775, 775, 775, 775, 775, 775, 775,
	775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 66, 622, 70, 1280, 0, 876, -2, -2, 878,
	0, 0, 0, -2, -2, -2, -2, 1107, -2, 813,
	0, 86, 87, 0, 225, 226, 0, 1119, 369, 932,
	933, 1109, 928, 929, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	451, 1332, 491, 454, 0, 0, 902, 902, 1332, 1332,
	1332, 0, 0, 0, 463, 1333, 1334, 464, 0, 371,
	372, 491, 491, 1332, 1332, 488, 0, 488, 488, 486,
	487, 482, 483, 0, 478, 0, 480, 505, 0, 0,
	512, 514, 515, 516, 517, 513, 0, 526, 527, 0,
	0, 167, 0, 0, 187, 169, 0, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 0,
	190, 0, 938, 941, 509, 538, 39, 49, 0, 529,
	534, 535, 0, 1332, 0, 0, 0, 48, 1330, 34,
	0, 0, 847, 850, 851, 838, 839, 843, 843, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 0, 0, 536,
	542, 543, 532, 0, 553, 0, 0, 0, 562, 0,
	564, 565, 566, 567, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 659, 660, 661, 662,
	663, 664, 637, 0, 651, 0, 0, 0, 699, 700,
	701, 702, 703, 704, 705, 0, 541, 0, 0, 677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 805, 0, 758, 767, 0, 759, 768, 760,
	769, 761, 0, 762, 770, 763, 771, 764, 765, 772,
	766, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 541,
	0, 0, 0, 541, 0, 0, 541, 0, 0, 0,
	0, 541, 0, 0, 0, 68, 0, 621, 0, 568,
	570, 571, 572, -2, 0, 625, 671, -2, 0, 0,
	0, 60, 61, 0, 0, 0, 0, 71, 73, 0,
	0, 1280, 879, 880, 324, 893, 894, 895, 0, 891,
	0, 386, 0, 227, 0, 0, 235, 312, 243, 244,
	245, 305, 247, 305, 305, 0, 305, 305, 305, 305,
	305, 321, 321, 321, 321, 321, 288, 289, 290, 291,
	292, 0, 0, 265, 305, 305, 305, 269, 295, 296,
	297, 298, 299, 300, 301, 302, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 307, 307, 309, 309, 309,
	309, 309, 0, 368, 0, 926, 82, 0, 1332, 0,
	1332, 0, 0, 0, 119, 0, 0, 442, 901, 0,
	444, 62, 445, 446, 447, 448, 623, 936, 937, 452,
	453, 492, 493, 0, 0, 457, 458, 459, 460, 461,
	462, 373, 468, 469, 470, 475, 491, 0, 0, 0,
	586, 491, 477, 665, 507, 506, 0, 519, 164, 166,
	168, 186, 0, 0, 189, 192, 0, 0, 0, 541,
	0, 538, 0, 428, 44, 45, 0, 0, 861, 853,
	0, 0, 0, 0, 841, 844, 845, 842, 0, 0,
	824, 0, 0, 544, 537, 36, 632, 633, 635, 652,
	0, 654, 656, 563, 554, 0, 814, -2, 642, 643,
	667, 668, 669, 0, 0, 0, 0, 665, 647, 0,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 698, 789, 790, 0, 696, 697, 706, 673,
	670, 0, 871, 0, 0, 675, 548, 549, 0, 0,
	745, 0, 0, 681, 816, 0, 681, 816, 0, 0,
	0, 0, 811, 808, 0, 0, 776, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	0, 0, 609, 0, 0, 612, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 579, 1210, 581, 0, 625,
	0, 0, 0, 629, 0, 629, 65, 629, 67, 0,
	624, 877, 0, 0, 0, 76, 77, 72, 881, 0,
	887, 888, 889, 814, 0, 224, 387, 389, 392, 393,
	394, 228, 230, 231, 232, 0, 1119, 361, 1220, 1260,
	-2, 355, 1146, -2, -2, 234, 314, 313, 246, 0,
	321, 321, 305, 305, 305, 305, 274, 321, 277, 280,
	281, 324, 0, 324, 324, 324, 324, 321, 0, 0,
	266, 267, 268, 257, 0, 258, 307, 260, 0, 261,
	262, 263, 264, 367, 0, 0, 0, 0, 0, 91,
	903, 92, 0, 120, 121, 95, 223, 0, 440, 1332,
	0, 1332, 1332, 629, 0, 0, 471, 489, 490, 488,
	491, 0, 474, 481, 0, 508, 170, 171, 193, 68,
	0, 939, 536, 50, 541, 399, 400, 1331, -2, 429,
	918, 429, 429, 418, 341, 429, 908, 909, 910, 911,
	912, 913, 914, 915, 0, 0, 0, 0, 0, 848,
	849, 840, 0, 896, 897, 825, 826, 83, 545, 653,
	655, 657, 0, 673, 644, 665, 648, 0, 645, 0,
	639, 0, 678, -2, 0, 743, 0, 744, 0, 0,
	0, 0, 0, 782, 0, 0, 783, 0, 754, 837,
	0, 809, 0, 0, 757, 777, 0, 0, 778, 779,
	780, 781, 732, 0, 733, 0, 0, 0, 0, 0,
	739, 740, 741, 742, 0, 0, 559, 559, 559, 0,
	559, 559, 0, 559, 559, 559, 559, 0, 559, 559,
	559, 865, 0, 0, 856, 0, 0, 629, 873, 0,
	569, 600, 602, 0, 597, 610, 611, 613, 0, 615,
	0, 617, 618, 588, 575, 672, 576, 0, 0, 0,
	625, 585, 0, 0, 0, 837, 0, 629, 58, 59,
	0, 74, 75, 0, 0, 81, 325, 326, 0, 0,
	390, 0, 229, 0, 0, 343, 355, 351, 352, 355,
	346, 356, 347, 0, 236, 237, 238, 239, 240, 241,
	316, 0, 0, 0, 320, 0, 328, 330, 0, 242,
	315, 0, 324, 324, 321, 272, 273, 305, 278, 324,
	282, 0, 283, 284, 285, 286, 324, 0, 303, 0,
	0, 259, 0, 383, 0, 927, 82, 82, 0, 122,
	123, 124, 0, 96, 97, 0, 0, 0, 0, 0,
	443, 63, 455, 456, 466, 374, 375, 491, 473, 0,
	666, 321, 0, 544, 0, 402, 0, 1331, 355, 0,
	419, 420, 430, 431, 432, 433, 0, 0, 1331, 0,
	0, 0, 431, 0, 0, 0, 919, 920, 0, 0,
	0, 342, 0, 0, 0, 863, 862, 854, 35, 629,
	0, 555, 815, 0, 646, 0, 649, 713, 676, 550,
	0, 0, 305, 305, 794, 305, 309, 797, 305, 799,
	305, 802, 0, 0, 0, 0, 0, 0, 0, 806,
	756, 812, 0, 0, 0, 556, 837, 734, 735, 736,
	737, 738, 559, 559, 717, 560, 718, 719, 559, 721,
	722, 559, 724, 725, 726, 727, 559, 729, 730, 731,
	51, 0, 865, 855, 867, 869, 0, 0, 0, 0,
	592, 837, 0, 0, 594, 601, 0, 0, 595, 0,
	596, 614, 616, 573, 0, 0, 577, 0, 0, -2,
	584, 0, 0, 0, 846, 630, 57, 78, 79, 80,
	388, 391, 0, 357, 305, 360, 0, 344, 345, 0,
	317, 318, 0, 327, 329, 331, 306, 270, 271, 324,
	279, 275, 322, 323, 287, 321, 0, 321, 0, 310,
	0, 370, 384, 0, 0, 89, 0, 0, 103, 0,
	99, 0, 0, 0, 441, 472, 587, 950, 619, 83,
	401, 0, 425, 0, 405, 926, 353, 396, 406, 407,
	412, 413, 414, 0, 0, 409, 0, 425, 0, 422,
	0, 0, 46, 0, 827, 0, 83, 83, 714, 650,
	0, 746, 791, 321, 795, 796, 798, 800, 801, 803,
	748, 747, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 715, 716, 720, 723, 728, 0,
	52, 0, 870, -2, 0, 69, 0, 846, 874, 875,
	598, 0, 603, 0, 590, 0, 625, 582, 0, 0,
	0, 0, 56, 333, 0, 843, 0, 319, 276, 324,
	304, 324, 0, 0, 385, 0, 82, 0, 82, 104,
	105, 0, 0, 0, 110, 0, 0, 0, 0, 0,
	98, 100, 101, 102, 952, 946, 0, 0, 404, 426,
	0, 235, 0, 355, 354, 421, 0, 916, 917, 0,
	416, 425, 0, 0, 0, 864, 833, 0, 629, 0,
	546, 551, 792, 793, 0, 0, 0, 0, 784, 755,
	807, 0, 0, 557, 0, 0, 868, 0, 859, 0,
	593, 55, 0, 589, 0, 578, 580, 625, 626, 627,
	628, 332, 336, 0, 341, 0, 358, 359, 0, 293,
	294, 308, 311, 0, 90, 0, 0, 106, 107, 108,
	109, 111, 112, 0, 0, 0, 906, 954, -2, 0,
	0, 403, 427, 233, 0, 926, 408, 415, 417, 0,
	424, 0, 40, 0, 0, 827, 83, 749, 751, 750,
	752, 0, 0, 0, 773, 774, 837, 0, 858, 0,
	599, 591, 583, 337, 338, 0, 340, 0, 334, 0,
	82, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 0, 0,
	0, 0, 113, 114, 115, 116, 588, 0, 946, 0,
	948, 0, 945, 0, 629, 0, 0, 423, 0, 435,
	0, 834, 835, 836, 828, 829, 831, 832, 833, 547,
	753, 0, 0, 0, 0, 866, -2, 339, 0, 88,
	335, 125, 94, 0, 0, 928, 0, 0, 152, 153,
	154, 930, 0, 194, 33, 0, 953, 0, 951, 0,
	0, 947, 827, 334, 0, 434, 0, 0, 0, 41,
	785, 0, 788, 558, 0, 82, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 150, 0, 0, 907, 955,
	0, 0, 833, 410, 0, 436, 0, 830, 786, 0,
	0, 126, 127, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 931, 117, 195, 949, 943, 38, 334, 0,
	0, 362, 82, 128, 129, 130, 131, 132, 0, 134,
	0, 0, 0, 146, 147, 148, 0, 155, 157, 158,
	159, 0, 161, 162, 151, 411, 0, 0, 363, 364,
	0, 93, 0, 0, 0, 0, 0, 0, 143, 0,
	149, 0, 160, 0, 787, 365, 0, 366, 0, 0,
	0, 0, 0, 138, 139, 0, 0, 0, 144, 0,
	156, 0, 0, 376, 378, 379, 0, 0, 377, 133,
	135, 0, 141, 0, 0, 437, 438, 380, 381, 382,
	0, 0, 0, 140, 0, 145, 142,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 436,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:416
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:452
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:464
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:495
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:533
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:563
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:575
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:629
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:675
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:725
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:744
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{As: false, Select: yyDollar[2].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{As: true, Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:759
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:763
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:767
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:771
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:779
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:787
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:791
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:796
		{
			yyVAL.procedureParams = nil
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:828
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.characteristics = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:843
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:847
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:853
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:861
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:865
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:869
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:873
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:877
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:889
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:895
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:900
		{
			yyVAL.str = ""
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.str = BeforeStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.str = AfterStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = InsertStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.str = UpdateStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.str = DeleteStr
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:933
		{
			yyVAL.triggerOrder = nil
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:937
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:941
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:947
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:957
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:963
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:967
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:977
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:983
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:989
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 140:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:994
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:999
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 142:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1005
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1023
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1029
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1033
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1037
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1041
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1045
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1049
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1080
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1118
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1150
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1154
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1158
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1162
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1166
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1174
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1182
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.statement = &Resignal{}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1208
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1220
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1231
		{
			yyVAL.exprs = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1287
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1304
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1331
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1360
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1409
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1418
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1440
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1708
		{
			yyVAL.sqlVal = nil
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1717
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1721
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1729
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1739
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1747
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1756
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.colKeyOpt = colKey
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1845
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1849
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1854
		{
			yyVAL.indexOptions = nil
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1878
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1903
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1907
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = yyDollar[1].str
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1989
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 363:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1993
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1997
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2001
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 366:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2005
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2011
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2025
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2087
		{
			yyVAL.boolean = true
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.boolean = true
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.boolean = false
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.str = yyDollar[1].str
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2157
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2191
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2210
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2219
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 411:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2223
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2241
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2245
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2252
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2274
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2283
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2287
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnOrder = nil
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2312
		{
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2323
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2339
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2343
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2359
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2375
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2379
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2395
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2403
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2411
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2425
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2441
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2445
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2449
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2453
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2458
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2462
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2466
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2470
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2474
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2478
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2494
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2502
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2506
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2510
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2514
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2518
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2523
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2537
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2545
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2551
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2569
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = "full "
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2611
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2625
		{
			yyVAL.showFilter = nil
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2639
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.str = SessionStr
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = GlobalStr
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.statement = &Begin{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.statement = &Begin{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.statement = &Commit{}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.statement = &Rollback{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2691
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2701
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2705
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2709
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2725
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2729
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = &OtherRead{}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			setAllowComments(yylex, true)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2800
		{
			yyVAL.bytes2 = nil
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.str = UnionStr
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2814
		{
			yyVAL.str = UnionAllStr
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2818
		{
			yyVAL.str = UnionDistinctStr
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2823
		{
			yyVAL.byt = 0
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.byt = 1
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = SQLCacheStr
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = ""
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = DistinctStr
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = StraightJoinHint
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2876
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2899
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2913
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2917
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2928
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2932
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.over = nil
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.over = yyDollar[1].over
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2996
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3012
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3028
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3039
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3054
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3058
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3062
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = nil
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3086
		{
			yyVAL.columns = nil
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3127
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3131
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3143
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3147
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3153
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3158
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.empty = struct{}{}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = JoinStr
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = JoinStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = JoinStr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = StraightJoinStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = LeftJoinStr
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = LeftJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = RightJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = RightJoinStr
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = NaturalJoinStr
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3217
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3258
		{
			yyVAL.indexHints = nil
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3262
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3266
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3270
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = nil
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3301
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3315
		{
			yyVAL.str = ""
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 650:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = IsNullStr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = IsNotNullStr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = IsTrueStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = IsNotTrueStr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = IsFalseStr
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = IsNotFalseStr
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = EqualStr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = LessThanStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = GreaterThanStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = LessEqualStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = GreaterEqualStr
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = NotEqualStr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = nil
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3472
		{
			yyVAL.selectExprs = nil
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3493
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3641
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3707
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3764
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3795
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 748:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3799
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3803
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3807
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 752:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3815
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 753:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3819
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3823
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 755:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3827
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3831
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3835
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 773:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 774:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3930
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = BooleanModeStr
		}
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = QueryExpansionStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.expr = nil
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.str = string("")
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4082
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.expr = nil
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4101
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4105
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.expr = &NullVal{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			yyVAL.exprs = nil
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.expr = nil
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.orderBy = nil
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4220
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4226
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = AscScr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = AscScr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = DescScr
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.limit = nil
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4256
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4260
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = ForUpdateStr
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = ShareModeStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4309
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4313
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4317
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4336
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.assignExprs = nil
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4345
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4371
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4450
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.setScope = SetScope_Global
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.setScope = SetScope_Session
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.setScope = SetScope_Session
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4495
		{
			yyVAL.bytes = []byte("charset")
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.expr = &Default{}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.byt = 0
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.byt = 1
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.byt = 0
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.byt = 1
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4529
		{
			yyVAL.byt = 0
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.byt = 1
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = ""
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = IgnoreStr
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4539
		{
			yyVAL.sqlVal = nil
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.empty = struct{}{}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4568
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.empty = struct{}{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.empty = struct{}{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = UniqueStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = FulltextStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = SpatialStr
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = yyDollar[1].str
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4588
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4608
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string("")
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.EnclosedBy = nil
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4651
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4665
		{
			yyVAL.sqlVal = nil
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4674
		{
			yyVAL.sqlVal = nil
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.Fields = nil
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4687
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4692
		{
			yyVAL.Lines = nil
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4696
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.sqlVal = nil
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			decNesting(yylex)
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5122
		{
			skipToEnd(yylex)
		}
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5127
		{
			skipToEnd(yylex)
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			skipToEnd(yylex)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
