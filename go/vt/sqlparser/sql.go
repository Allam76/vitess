// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const BEGIN = 57589
const START = 57590
const TRANSACTION = 57591
const COMMIT = 57592
const ROLLBACK = 57593
const SAVEPOINT = 57594
const WORK = 57595
const RELEASE = 57596
const BIT = 57597
const TINYINT = 57598
const SMALLINT = 57599
const MEDIUMINT = 57600
const INT = 57601
const INTEGER = 57602
const BIGINT = 57603
const INTNUM = 57604
const SERIAL = 57605
const REAL = 57606
const DOUBLE = 57607
const FLOAT_TYPE = 57608
const DECIMAL = 57609
const NUMERIC = 57610
const DEC = 57611
const FIXED = 57612
const PRECISION = 57613
const TIME = 57614
const TIMESTAMP = 57615
const DATETIME = 57616
const YEAR = 57617
const CHAR = 57618
const VARCHAR = 57619
const BOOL = 57620
const CHARACTER = 57621
const VARBINARY = 57622
const NCHAR = 57623
const NVARCHAR = 57624
const NATIONAL = 57625
const VARYING = 57626
const TEXT = 57627
const TINYTEXT = 57628
const MEDIUMTEXT = 57629
const LONGTEXT = 57630
const LONG = 57631
const BLOB = 57632
const TINYBLOB = 57633
const MEDIUMBLOB = 57634
const LONGBLOB = 57635
const JSON = 57636
const ENUM = 57637
const GEOMETRY = 57638
const POINT = 57639
const LINESTRING = 57640
const POLYGON = 57641
const GEOMETRYCOLLECTION = 57642
const MULTIPOINT = 57643
const MULTILINESTRING = 57644
const MULTIPOLYGON = 57645
const LOCAL = 57646
const LOW_PRIORITY = 57647
const NULLX = 57648
const AUTO_INCREMENT = 57649
const APPROXNUM = 57650
const SIGNED = 57651
const UNSIGNED = 57652
const ZEROFILL = 57653
const COLLATION = 57654
const DATABASES = 57655
const SCHEMAS = 57656
const TABLES = 57657
const FULL = 57658
const PROCESSLIST = 57659
const COLUMNS = 57660
const FIELDS = 57661
const ENGINES = 57662
const PLUGINS = 57663
const NAMES = 57664
const CHARSET = 57665
const GLOBAL = 57666
const SESSION = 57667
const ISOLATION = 57668
const LEVEL = 57669
const READ = 57670
const WRITE = 57671
const ONLY = 57672
const REPEATABLE = 57673
const COMMITTED = 57674
const UNCOMMITTED = 57675
const SERIALIZABLE = 57676
const CURRENT_TIMESTAMP = 57677
const DATABASE = 57678
const CURRENT_DATE = 57679
const CURRENT_USER = 57680
const CURRENT_TIME = 57681
const LOCALTIME = 57682
const LOCALTIMESTAMP = 57683
const UTC_DATE = 57684
const UTC_TIME = 57685
const UTC_TIMESTAMP = 57686
const REPLACE = 57687
const CONVERT = 57688
const CAST = 57689
const SUBSTR = 57690
const SUBSTRING = 57691
const TRIM = 57692
const LEADING = 57693
const TRAILING = 57694
const BOTH = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const OVER = 57700
const WINDOW = 57701
const GROUPING = 57702
const GROUPS = 57703
const CURRENT = 57704
const ROWS = 57705
const RANGE = 57706
const AVG = 57707
const BIT_AND = 57708
const BIT_OR = 57709
const BIT_XOR = 57710
const COUNT = 57711
const JSON_ARRAYAGG = 57712
const JSON_OBJECTAGG = 57713
const MAX = 57714
const MIN = 57715
const STDDEV_POP = 57716
const STDDEV = 57717
const STD = 57718
const STDDEV_SAMP = 57719
const SUM = 57720
const VAR_POP = 57721
const VARIANCE = 57722
const VAR_SAMP = 57723
const CUME_DIST = 57724
const DENSE_RANK = 57725
const FIRST_VALUE = 57726
const LAG = 57727
const LAST_VALUE = 57728
const LEAD = 57729
const NTH_VALUE = 57730
const NTILE = 57731
const ROW_NUMBER = 57732
const PERCENT_RANK = 57733
const RANK = 57734
const MATCH = 57735
const AGAINST = 57736
const BOOLEAN = 57737
const LANGUAGE = 57738
const WITH = 57739
const QUERY = 57740
const EXPANSION = 57741
const UNUSED = 57742
const ARRAY = 57743
const DESCRIPTION = 57744
const EMPTY = 57745
const JSON_TABLE = 57746
const LATERAL = 57747
const MEMBER = 57748
const RECURSIVE = 57749
const ACTIVE = 57750
const BUCKETS = 57751
const CLONE = 57752
const COMPONENT = 57753
const DEFINITION = 57754
const ENFORCED = 57755
const EXCLUDE = 57756
const FOLLOWING = 57757
const GEOMCOLLECTION = 57758
const GET_MASTER_PUBLIC_KEY = 57759
const HISTOGRAM = 57760
const HISTORY = 57761
const INACTIVE = 57762
const INVISIBLE = 57763
const LOCKED = 57764
const MASTER_COMPRESSION_ALGORITHMS = 57765
const MASTER_PUBLIC_KEY_PATH = 57766
const MASTER_TLS_CIPHERSUITES = 57767
const MASTER_ZSTD_COMPRESSION_LEVEL = 57768
const NESTED = 57769
const NETWORK_NAMESPACE = 57770
const NOWAIT = 57771
const NULLS = 57772
const OJ = 57773
const OLD = 57774
const ORDINALITY = 57775
const ORGANIZATION = 57776
const OTHERS = 57777
const PATH = 57778
const PERSIST = 57779
const PERSIST_ONLY = 57780
const PRECEDING = 57781
const PRIVILEGE_CHECKS_USER = 57782
const PROCESS = 57783
const REFERENCE = 57784
const REQUIRE_ROW_FORMAT = 57785
const RESOURCE = 57786
const RESPECT = 57787
const RESTART = 57788
const RETAIN = 57789
const SECONDARY = 57790
const SECONDARY_ENGINE = 57791
const SECONDARY_LOAD = 57792
const SECONDARY_UNLOAD = 57793
const SKIP = 57794
const SRID = 57795
const THREAD_PRIORITY = 57796
const TIES = 57797
const VCPU = 57798
const VISIBLE = 57799
const SYSTEM = 57800
const INFILE = 57801

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 982,
	-1, 42,
	141, 1044,
	142, 1062,
	-2, 203,
	-1, 48,
	181, 626,
	182, 626,
	-2, 616,
	-1, 480,
	128, 1072,
	-2, 1066,
	-1, 481,
	128, 1073,
	-2, 1067,
	-1, 585,
	98, 1327,
	128, 1327,
	-2, 1028,
	-1, 586,
	98, 1440,
	128, 1440,
	-2, 1029,
	-1, 591,
	98, 1350,
	128, 1350,
	-2, 1030,
	-1, 592,
	98, 1396,
	128, 1396,
	-2, 1031,
	-1, 593,
	98, 1397,
	128, 1397,
	-2, 1032,
	-1, 594,
	98, 1281,
	128, 1281,
	-2, 1036,
	-1, 596,
	98, 1373,
	128, 1373,
	-2, 1038,
	-1, 1048,
	1, 714,
	5, 714,
	12, 714,
	13, 714,
	14, 714,
	15, 714,
	17, 714,
	19, 714,
	30, 714,
	31, 714,
	56, 714,
	57, 714,
	58, 714,
	59, 714,
	60, 714,
	62, 714,
	63, 714,
	66, 714,
	67, 714,
	69, 714,
	70, 714,
	478, 714,
	-2, 744,
	-1, 1052,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1277,
	128, 1075,
	-2, 1071,
	-1, 1442,
	44, 475,
	-2, 1292,
	-1, 1446,
	68, 475,
	-2, 1243,
	-1, 1449,
	68, 471,
	72, 471,
	-2, 1170,
	-1, 1450,
	68, 472,
	72, 472,
	-2, 1180,
	-1, 1564,
	44, 518,
	148, 520,
	150, 518,
	151, 518,
	-2, 553,
	-1, 1632,
	5, 50,
	-2, 810,
	-1, 1931,
	69, 1222,
	70, 1222,
	128, 1222,
	-2, 657,
	-1, 1954,
	1, 765,
	5, 765,
	12, 765,
	13, 765,
	14, 765,
	15, 765,
	17, 765,
	19, 765,
	30, 765,
	31, 765,
	56, 765,
	57, 765,
	58, 765,
	59, 765,
	60, 765,
	62, 765,
	63, 765,
	66, 765,
	67, 765,
	69, 765,
	70, 765,
	478, 765,
	-2, 744,
	-1, 2055,
	148, 521,
	-2, 519,
	-1, 2117,
	5, 50,
	-2, 1002,
	-1, 2317,
	41, 1082,
	-2, 1080,
	-1, 2446,
	5, 50,
	-2, 1005,
}

const yyPrivate = 57344

const yyLast = 30031

var yyAct = [...]int{

	543, 78, 2584, 2608, 2635, 2598, 2449, 784, 2586, 2599,
	2500, 2369, 7, 405, 2337, 1494, 2525, 2436, 2462, 2224,
	2527, 2368, 6, 483, 2367, 5, 2370, 8, 1434, 2463,
	2129, 2431, 1967, 1700, 1671, 481, 1083, 2317, 2264, 81,
	1948, 1492, 610, 486, 1857, 1401, 2205, 2366, 3, 1847,
	542, 1504, 999, 1451, 2319, 1721, 2016, 1173, 472, 2176,
	2182, 1395, 2160, 1422, 1255, 388, 391, 1924, 1968, 2144,
	2450, 1399, 1443, 413, 413, 465, 1925, 2049, 1856, 78,
	450, 1781, 125, 499, 460, 125, 1921, 1433, 91, 608,
	104, 125, 2040, 1585, 1048, 1563, 816, 1933, 1483, 1672,
	1940, 416, 416, 1248, 1175, 488, 800, 1432, 1893, 1867,
	1302, 1374, 1467, 125, 1172, 1439, 1825, 1530, 1263, 1217,
	1378, 1153, 606, 1190, 125, 1311, 464, 901, 125, 613,
	1764, 1479, 125, 590, 587, 1044, 1385, 1063, 1045, 1366,
	908, 866, 845, 1279, 904, 1017, 125, 416, 468, 613,
	1062, 579, 604, 921, 583, 912, 1222, 125, 584, 459,
	605, 407, 576, 408, 83, 1546, 2145, 844, 1054, 783,
	771, 1018, 2657, 2653, 2643, 2625, 2623, 2603, 2579, 2508,
	80, 1215, 2565, 2562, 67, 2154, 35, 35, 70, 38,
	39, 2616, 2296, 35, 35, 35, 2494, 2597, 2001, 2444,
	400, 85, 86, 87, 88, 89, 2564, 2561, 2294, 2309,
	2567, 1666, 2479, 1792, 2013, 2493, 1914, 876, 2490, 2491,
	2411, 1607, 2109, 2297, 2443, 770, 1963, 1964, 1667, 1545,
	35, 1517, 70, 38, 39, 2249, 1397, 1517, 70, 38,
	39, 1064, 1221, 1065, 58, 2161, 1419, 1420, 79, 79,
	76, 1243, 1244, 2163, 40, 79, 79, 79, 1709, 1962,
	40, 1708, 895, 1418, 1710, 1219, 1220, 819, 820, 821,
	773, 2531, 776, 777, 399, 2531, 600, 398, 2348, 936,
	935, 945, 946, 938, 939, 940, 941, 942, 943, 944,
	937, 2526, 79, 947, 1747, 1453, 558, 1218, 564, 566,
	565, 562, 563, 561, 560, 559, 1571, 1565, 1566, 444,
	1564, 402, 1567, 1568, 1544, 863, 2395, 567, 568, 2606,
	2609, 2605, 2166, 2532, 1468, 1459, 1461, 2532, 1460, 1473,
	2055, 1468, 2096, 2094, 397, 457, 1787, 382, 2183, 2184,
	2185, 2186, 2592, 804, 805, 1455, 2177, 807, 1572, 1815,
	2322, 2039, 1455, 1820, 2180, 42, 72, 45, 44, 47,
	1480, 2164, 2165, 2167, 2168, 2169, 1556, 2178, 2179, 2233,
	2510, 2396, 2509, 826, 2023, 116, 112, 113, 2405, 114,
	2469, 806, 2415, 2467, 1202, 78, 78, 48, 75, 74,
	125, 2194, 829, 2014, 46, 2612, 834, 2295, 2201, 2017,
	2018, 2019, 2020, 2021, 1557, 1235, 836, 2516, 1789, 835,
	110, 1082, 118, 117, 2299, 1505, 882, 2289, 2563, 883,
	2192, 817, 2288, 818, 820, 821, 2017, 2018, 2019, 2020,
	2021, 2505, 833, 837, 125, 2287, 2413, 2503, 2504, 438,
	56, 57, 2286, 2397, 2285, 392, 2283, 1791, 2284, 827,
	828, 2313, 2026, 1499, 891, 2401, 2402, 65, 2528, 66,
	2451, 898, 2528, 383, 119, 2131, 120, 2291, 389, 2364,
	2581, 2497, 2498, 82, 1692, 2594, 2407, 1806, 1807, 815,
	956, 1498, 812, 958, 813, 814, 811, 393, 2559, 2398,
	73, 2432, 52, 53, 60, 2575, 61, 1850, 111, 1570,
	775, 774, 1379, 2206, 2207, 2362, 1082, 1831, 1082, 1081,
	924, 2649, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	2000, 401, 997, 71, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 803, 1016, 1019,
	1019, 1019, 1025, 1019, 1019, 1025, 1019, 1025, 1034, 1035,
	1036, 1037, 1038, 1039, 2442, 1049, 2529, 2041, 2162, 1754,
	2529, 1482, 1203, 1551, 1894, 2349, 1458, 71, 957, 115,
	830, 998, 107, 71, 1468, 77, 77, 1221, 2406, 1790,
	2412, 2300, 77, 77, 77, 884, 2468, 2054, 2310, 125,
	125, 125, 1793, 390, 390, 2312, 2025, 888, 1082, 2658,
	1219, 1220, 1833, 2292, 2655, 613, 1896, 590, 878, 879,
	880, 2084, 590, 390, 1055, 97, 1043, 107, 890, 77,
	1076, 418, 419, 420, 421, 422, 426, 427, 431, 432,
	441, 440, 439, 442, 443, 446, 445, 447, 423, 424,
	425, 428, 429, 430, 433, 434, 437, 435, 436, 411,
	2590, 409, 412, 2585, 1971, 2639, 2265, 1223, 385, 1082,
	1051, 2644, 2626, 1833, 772, 786, 1782, 2588, 99, 2217,
	2267, 2417, 96, 1404, 1406, 2216, 456, 1142, 109, 108,
	874, 1814, 1811, 1795, 1794, 1020, 1022, 1024, 1026, 1028,
	1030, 1031, 1033, 1225, 386, 1552, 1224, 1161, 1067, 1159,
	1514, 831, 1783, 1068, 1146, 1513, 1726, 1699, 1698, 1697,
	1726, 1021, 1023, 768, 1027, 1029, 1809, 1032, 1053, 2081,
	894, 105, 778, 109, 108, 1898, 1058, 1739, 354, 2073,
	1902, 106, 1897, 1729, 1895, 1813, 2220, 959, 960, 1900,
	1812, 2266, 1744, 1743, 1713, 1080, 1077, 1705, 1602, 2035,
	1590, 1575, 1899, 1423, 1258, 1405, 873, 101, 1642, 102,
	1075, 1639, 1726, 1060, 1740, 413, 927, 1901, 1903, 796,
	937, 1155, 2410, 947, 947, 1414, 1251, 1200, 1191, 1745,
	2637, 1732, 413, 2638, 613, 2636, 1521, 1733, 1174, 1784,
	1785, 1866, 416, 416, 920, 809, 390, 2215, 1848, 1938,
	1286, 125, 410, 1725, 125, 2587, 2589, 1725, 1990, 416,
	416, 1937, 125, 1210, 1154, 1284, 1285, 1283, 1844, 1177,
	1073, 125, 125, 125, 125, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 1726, 1313, 2221,
	1726, 416, 838, 2629, 2609, 2628, 1742, 936, 935, 945,
	946, 938, 939, 940, 941, 942, 943, 944, 937, 1725,
	1991, 947, 413, 1198, 918, 1839, 1831, 919, 918, 1233,
	1836, 802, 78, 1835, 1838, 1192, 959, 960, 1247, 959,
	960, 920, 98, 1522, 779, 920, 1178, 1916, 94, 416,
	416, 416, 810, 613, 1213, 1256, 1257, 416, 1187, 1188,
	1770, 1189, 416, 416, 1367, 1531, 1655, 1249, 919, 918,
	125, 822, 125, 1230, 613, 2646, 1367, 919, 918, 1241,
	2642, 1194, 1148, 1195, 474, 1239, 920, 2576, 1163, 1156,
	2595, 2193, 125, 93, 1725, 920, 1276, 1725, 924, 78,
	1843, 1831, 2187, 785, 1840, 1082, 1638, 1978, 1832, 1833,
	1277, 915, 1369, 905, 1181, 1182, 906, 919, 918, 919,
	918, 1280, 79, 1306, 1307, 801, 2578, 455, 1228, 2465,
	2472, 92, 1246, 1282, 2552, 920, 2501, 920, 2540, 1260,
	2539, 1238, 1001, 1051, 613, 2408, 998, 1205, 1206, 2464,
	2447, 1208, 945, 946, 938, 939, 940, 941, 942, 943,
	944, 937, 484, 1261, 947, 824, 1262, 1211, 1226, 2307,
	919, 918, 1275, 2306, 1227, 2466, 1281, 1240, 1229, 1234,
	919, 918, 1237, 1741, 1587, 1588, 1589, 2502, 920, 1345,
	1398, 2409, 1352, 1355, 2305, 1049, 1245, 2304, 920, 1049,
	1368, 2298, 938, 939, 940, 941, 942, 943, 944, 937,
	613, 613, 947, 2650, 573, 574, 1273, 125, 788, 789,
	790, 791, 792, 793, 794, 125, 125, 478, 417, 417,
	125, 125, 919, 918, 125, 125, 125, 998, 2501, 2153,
	462, 2152, 1320, 1177, 1427, 590, 1324, 1303, 606, 1304,
	920, 1269, 1271, 1272, 613, 613, 1409, 1270, 1277, 2551,
	1411, 1769, 1767, 1748, 1711, 1309, 1712, 2651, 869, 1317,
	1637, 868, 1636, 2513, 417, 1403, 842, 1394, 1326, 1327,
	940, 941, 942, 943, 944, 937, 2511, 2478, 947, 1337,
	919, 918, 1429, 1341, 2404, 1051, 919, 918, 2403, 841,
	1051, 2361, 2314, 1918, 1051, 2282, 2243, 2190, 920, 1364,
	1511, 1142, 2189, 1407, 920, 2188, 2150, 1983, 1765, 1541,
	1428, 1207, 125, 1179, 2538, 2537, 2414, 2359, 2331, 1729,
	2325, 2213, 125, 2068, 125, 125, 416, 416, 416, 2064,
	1025, 125, 2056, 2027, 2011, 2010, 2009, 1800, 1799, 1535,
	1519, 1412, 1469, 1470, 1471, 1472, 1416, 1421, 1509, 1510,
	1415, 1518, 1305, 94, 1204, 1201, 1430, 125, 125, 125,
	1489, 1490, 1437, 1171, 1537, 1485, 1486, 1487, 1488, 1170,
	1440, 1169, 1168, 1157, 1151, 1150, 1447, 1149, 78, 1147,
	864, 798, 125, 396, 125, 394, 2256, 2568, 613, 2140,
	2558, 900, 613, 1162, 1404, 1406, 1481, 2485, 900, 1646,
	613, 2140, 2483, 613, 2140, 2481, 79, 1591, 881, 504,
	503, 506, 507, 508, 509, 2140, 2363, 1276, 505, 510,
	2256, 2355, 2256, 2272, 1701, 998, 2324, 1523, 2256, 900,
	2276, 1277, 1529, 1543, 2256, 2255, 2140, 2139, 2323, 936,
	935, 945, 946, 938, 939, 940, 941, 942, 943, 944,
	937, 2121, 900, 947, 1574, 900, 909, 2275, 900, 2006,
	2075, 1701, 1998, 1997, 1280, 1984, 928, 1387, 1390, 1391,
	1392, 1388, 874, 1389, 1393, 1533, 1405, 1941, 1942, 1994,
	1995, 1382, 1536, 1994, 1993, 1600, 900, 82, 1542, 1382,
	900, 1554, 1553, 1428, 1343, 1538, 2076, 936, 935, 945,
	946, 938, 939, 940, 941, 942, 943, 944, 937, 1668,
	1670, 947, 82, 1049, 1049, 1049, 1049, 1049, 2076, 1281,
	1343, 900, 1549, 1079, 1078, 1579, 1560, 1577, 1578, 1398,
	1555, 1693, 1000, 1558, 1701, 1596, 1056, 1056, 1503, 1049,
	1922, 1343, 1408, 1936, 1055, 1015, 1381, 886, 125, 125,
	125, 125, 125, 1253, 1674, 1673, 1669, 1592, 1606, 1608,
	125, 1936, 885, 2487, 125, 872, 1600, 899, 125, 1618,
	1619, 1620, 1621, 1703, 125, 1704, 1345, 871, 1502, 1696,
	872, 2115, 1517, 1630, 2007, 1382, 1996, 1950, 1824, 1715,
	590, 1936, 1057, 1057, 1059, 1055, 1417, 1600, 613, 1660,
	1702, 1659, 1209, 1516, 1252, 874, 1254, 1236, 1216, 1688,
	1160, 1158, 1061, 897, 896, 601, 2495, 1695, 1051, 1051,
	1051, 1051, 1051, 2482, 1949, 78, 2330, 925, 2328, 2155,
	1455, 2127, 1728, 1730, 1051, 1654, 1387, 1390, 1391, 1392,
	1388, 1484, 1389, 1393, 1051, 1977, 1480, 1719, 1675, 1500,
	1716, 1678, 1676, 1677, 1475, 1679, 1474, 1143, 79, 613,
	1687, 1757, 1142, 1759, 1760, 1761, 1762, 877, 416, 861,
	413, 1493, 1773, 1941, 1942, 1532, 1805, 79, 404, 2620,
	2618, 1067, 125, 416, 1798, 1706, 2600, 1714, 2005, 1944,
	1154, 1922, 1771, 1165, 887, 875, 870, 1684, 416, 1749,
	1750, 1686, 1685, 1391, 1392, 1797, 1756, 961, 962, 963,
	964, 965, 966, 967, 968, 1586, 1763, 1682, 416, 1947,
	613, 1946, 1683, 1681, 1680, 416, 469, 470, 1718, 2534,
	2492, 1854, 1576, 1852, 1853, 1264, 1766, 2522, 1874, 2118,
	613, 613, 1724, 1727, 1768, 449, 125, 913, 914, 1859,
	1584, 1583, 2246, 2212, 1788, 2143, 613, 2063, 2062, 1731,
	1141, 1276, 1982, 1981, 1802, 1723, 1973, 2419, 2476, 2422,
	2477, 2318, 2512, 613, 2316, 1277, 911, 2400, 2399, 395,
	1801, 1803, 2301, 2302, 902, 1758, 1074, 859, 843, 840,
	1808, 1180, 839, 1810, 799, 2547, 903, 1816, 1927, 78,
	2335, 1454, 2334, 2113, 1822, 1256, 1257, 1496, 2222, 1823,
	1828, 1196, 1834, 1540, 1845, 1846, 1164, 2195, 1849, 2470,
	2320, 1851, 1915, 1952, 2196, 1774, 1528, 1249, 1956, 1957,
	1958, 1923, 94, 1860, 613, 1935, 613, 1869, 1145, 1674,
	1673, 1861, 913, 914, 892, 893, 1928, 900, 1926, 1875,
	1000, 2546, 1878, 1879, 1880, 1829, 1865, 1883, 2545, 613,
	1582, 1826, 1837, 1842, 2544, 2279, 1961, 825, 1581, 466,
	1959, 1955, 1859, 1951, 2515, 2514, 2474, 1905, 1904, 613,
	2423, 613, 2339, 613, 2231, 613, 936, 935, 945, 946,
	938, 939, 940, 941, 942, 943, 944, 937, 467, 82,
	947, 2338, 1930, 2225, 1701, 2622, 2621, 1266, 1267, 1945,
	1975, 2044, 1821, 1976, 1776, 1777, 1778, 2622, 1819, 2003,
	2004, 1953, 1818, 1972, 1643, 1974, 1640, 413, 1559, 417,
	417, 1193, 916, 2022, 2621, 1966, 2352, 125, 1980, 1250,
	1489, 601, 1490, 1985, 1986, 452, 417, 417, 454, 2008,
	1989, 2380, 51, 1965, 84, 416, 54, 1992, 2382, 19,
	125, 416, 2381, 18, 2383, 20, 2384, 21, 2379, 15,
	2378, 14, 1, 2024, 1550, 125, 1231, 416, 417, 613,
	416, 2175, 1247, 2029, 416, 416, 2174, 416, 2372, 10,
	1000, 2181, 541, 2012, 1987, 1350, 1351, 2393, 33, 2392,
	32, 2391, 28, 613, 2390, 27, 2015, 125, 613, 2389,
	26, 1786, 2052, 2387, 23, 613, 613, 2386, 22, 2191,
	2074, 2388, 24, 2377, 13, 1152, 417, 417, 417, 2374,
	12, 2373, 11, 2290, 417, 2371, 9, 782, 2030, 417,
	417, 1501, 1197, 865, 2083, 2107, 2077, 2046, 2053, 462,
	2047, 2032, 1142, 2067, 2475, 2418, 2034, 2420, 2315, 2038,
	2197, 2159, 1426, 2042, 2043, 2158, 2045, 1780, 1779, 860,
	1214, 1827, 1830, 1512, 1569, 925, 2072, 1318, 1319, 2430,
	1441, 1431, 597, 603, 90, 1520, 609, 1051, 1329, 1330,
	1331, 1332, 808, 362, 1438, 1737, 2421, 862, 125, 1736,
	1746, 1342, 1344, 1452, 1735, 2122, 787, 1734, 1349, 1674,
	1673, 2416, 1738, 1087, 1085, 613, 1086, 2135, 2136, 2137,
	1084, 1089, 613, 613, 613, 1088, 366, 2092, 1069, 2457,
	2133, 613, 1491, 917, 100, 78, 55, 2214, 2146, 1841,
	2114, 95, 103, 613, 368, 955, 1580, 1278, 1707, 588,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 2138, 2123, 589, 581, 2489,
	2496, 125, 907, 2134, 2433, 1653, 2171, 2172, 2173, 1014,
	1365, 2148, 2156, 1716, 487, 1691, 2435, 1268, 502, 501,
	500, 497, 498, 2530, 2147, 1527, 1259, 1665, 929, 1999,
	485, 476, 1047, 462, 1040, 1539, 1049, 1386, 1384, 1383,
	416, 1166, 577, 1943, 1939, 1396, 1046, 2208, 2209, 2170,
	458, 68, 823, 384, 2210, 2108, 2347, 37, 1358, 453,
	471, 25, 2223, 17, 1141, 832, 2149, 1370, 2151, 613,
	1859, 125, 16, 909, 2218, 1562, 1927, 613, 780, 1927,
	2251, 2227, 2228, 2211, 41, 2203, 2204, 2199, 1972, 2198,
	43, 2200, 1952, 1775, 1497, 2456, 2583, 2226, 846, 2607,
	2499, 31, 30, 29, 2385, 1489, 2219, 2394, 2376, 2375,
	2570, 2569, 4, 889, 69, 34, 599, 613, 2254, 2202,
	2, 0, 0, 613, 0, 0, 1926, 2250, 125, 1926,
	125, 0, 2278, 1534, 2280, 0, 613, 0, 0, 0,
	0, 1051, 2257, 417, 417, 417, 2248, 0, 2277, 0,
	0, 613, 2247, 0, 0, 0, 0, 0, 2253, 0,
	2271, 0, 1631, 2232, 2258, 0, 2269, 2270, 0, 2268,
	2263, 0, 0, 2273, 1561, 2274, 0, 1403, 0, 2259,
	0, 1573, 2281, 2336, 0, 0, 1656, 0, 0, 0,
	0, 0, 0, 0, 0, 2293, 0, 0, 0, 0,
	0, 462, 2303, 0, 2308, 2311, 0, 0, 0, 0,
	1927, 0, 78, 613, 0, 2321, 0, 0, 0, 0,
	2340, 0, 2326, 2327, 0, 0, 2333, 2329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	0, 78, 0, 1601, 2342, 0, 2341, 0, 1603, 1604,
	0, 0, 613, 1609, 1610, 1611, 1612, 1613, 1614, 2354,
	1926, 1617, 2358, 0, 0, 2357, 1622, 1623, 1624, 1625,
	2365, 1627, 1628, 1629, 0, 0, 2360, 2353, 1632, 1633,
	1634, 1635, 0, 0, 1049, 0, 0, 1641, 0, 0,
	1644, 1645, 0, 0, 0, 1650, 1651, 0, 0, 0,
	0, 1657, 0, 1658, 0, 0, 1661, 1662, 0, 1663,
	1664, 0, 0, 0, 0, 0, 416, 0, 0, 125,
	2438, 2426, 0, 2428, 613, 0, 613, 0, 1689, 1690,
	0, 2427, 1593, 1594, 1595, 0, 0, 0, 2424, 1862,
	0, 2452, 2440, 0, 0, 2425, 2439, 2445, 0, 0,
	0, 0, 0, 0, 0, 1674, 1673, 0, 125, 78,
	936, 935, 945, 946, 938, 939, 940, 941, 942, 943,
	944, 937, 0, 0, 947, 1870, 1871, 462, 0, 0,
	0, 0, 1876, 1877, 0, 462, 2461, 0, 0, 1051,
	2112, 0, 0, 613, 1884, 1885, 1886, 1887, 0, 1889,
	1890, 1891, 0, 0, 0, 0, 597, 1647, 1648, 1649,
	0, 597, 1070, 2488, 0, 0, 2473, 2471, 0, 2480,
	0, 0, 0, 0, 0, 1722, 0, 0, 613, 0,
	936, 935, 945, 946, 938, 939, 940, 941, 942, 943,
	944, 937, 0, 0, 947, 0, 0, 0, 2518, 2358,
	2520, 0, 0, 0, 2506, 0, 0, 0, 0, 0,
	2517, 0, 0, 78, 0, 2523, 0, 0, 2533, 78,
	2541, 0, 2536, 0, 1917, 2519, 0, 2521, 613, 0,
	0, 2543, 0, 0, 413, 417, 2535, 0, 0, 0,
	2556, 613, 2557, 0, 0, 0, 2548, 0, 2550, 0,
	417, 78, 0, 613, 0, 0, 78, 2560, 2574, 0,
	0, 0, 416, 2580, 0, 417, 2566, 0, 2573, 2577,
	1960, 2572, 0, 2571, 0, 2593, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 417, 78, 0, 1872, 78,
	78, 0, 417, 0, 78, 2601, 0, 0, 1881, 1882,
	0, 0, 0, 2582, 2602, 2614, 0, 2604, 0, 1888,
	413, 0, 613, 1892, 78, 2619, 2613, 78, 2617, 2550,
	0, 2630, 0, 2610, 2632, 0, 2615, 0, 0, 1804,
	0, 0, 0, 0, 78, 2627, 78, 2640, 416, 0,
	78, 1144, 0, 2550, 0, 0, 0, 0, 0, 0,
	0, 1929, 0, 0, 78, 0, 0, 78, 2645, 0,
	0, 0, 0, 2550, 78, 2550, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 2654, 377, 0, 0, 0,
	0, 0, 0, 2550, 0, 0, 2080, 0, 0, 0,
	0, 0, 0, 2550, 2082, 1863, 0, 2550, 0, 0,
	0, 0, 0, 2085, 2086, 0, 0, 0, 0, 0,
	2087, 0, 0, 0, 0, 0, 2069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 1907, 0,
	1908, 1909, 0, 0, 1910, 0, 0, 0, 0, 0,
	1232, 0, 1970, 0, 0, 0, 0, 1919, 1920, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 609, 1456, 1457, 358, 1462, 1463, 1464, 1465, 1466,
	0, 0, 0, 0, 367, 375, 376, 2110, 0, 0,
	0, 0, 1954, 1476, 1477, 1478, 1000, 0, 0, 0,
	609, 0, 0, 0, 0, 0, 2124, 2125, 0, 0,
	2126, 0, 0, 2128, 0, 0, 0, 0, 0, 0,
	364, 1000, 417, 365, 0, 0, 373, 374, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 1308, 0, 2078, 417, 0, 0, 417, 0, 0,
	0, 417, 417, 0, 417, 0, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 2058, 2060,
	0, 0, 0, 0, 0, 0, 2088, 370, 2051, 2111,
	0, 0, 0, 0, 0, 0, 0, 2097, 2098, 597,
	0, 0, 0, 2103, 0, 0, 0, 0, 371, 0,
	0, 2031, 0, 0, 0, 0, 0, 1371, 1372, 0,
	2116, 2117, 0, 2119, 1913, 0, 2120, 0, 0, 936,
	935, 945, 946, 938, 939, 940, 941, 942, 943, 944,
	937, 0, 0, 947, 597, 0, 2132, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 910, 609, 0,
	0, 609, 609, 0, 0, 0, 2102, 0, 0, 0,
	2079, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 369, 359, 360, 0, 380, 0, 0,
	0, 361, 363, 0, 357, 379, 378, 1050, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 381, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 2104,
	2105, 2106, 936, 935, 945, 946, 938, 939, 940, 941,
	942, 943, 944, 937, 0, 461, 947, 0, 0, 0,
	372, 0, 0, 475, 122, 0, 580, 598, 0, 0,
	123, 0, 0, 387, 123, 0, 936, 935, 945, 946,
	938, 939, 940, 941, 942, 943, 944, 937, 123, 1375,
	947, 0, 0, 0, 0, 0, 2230, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 578, 417, 0, 0,
	602, 2051, 0, 0, 769, 2101, 0, 2238, 2239, 2240,
	0, 2242, 0, 0, 0, 1548, 474, 0, 781, 1548,
	1000, 2051, 0, 0, 0, 0, 0, 1548, 0, 795,
	1548, 0, 0, 0, 0, 0, 0, 0, 2260, 2261,
	2262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 0, 35, 36, 70, 38, 39, 0, 0,
	1751, 1752, 1753, 1755, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 40, 62, 63,
	0, 0, 0, 0, 59, 462, 0, 462, 1912, 0,
	0, 0, 0, 1970, 0, 936, 935, 945, 946, 938,
	939, 940, 941, 942, 943, 944, 937, 0, 1970, 947,
	0, 49, 0, 0, 0, 79, 0, 2234, 2235, 2236,
	2237, 0, 0, 0, 0, 2241, 0, 2434, 2437, 2244,
	2245, 0, 0, 0, 0, 0, 0, 2343, 2344, 2345,
	2346, 931, 0, 934, 2100, 0, 0, 2350, 2351, 0,
	948, 949, 950, 951, 952, 953, 954, 0, 932, 933,
	930, 936, 935, 945, 946, 938, 939, 940, 941, 942,
	943, 944, 937, 0, 597, 947, 0, 0, 42, 72,
	45, 44, 47, 0, 2453, 2454, 936, 935, 945, 946,
	938, 939, 940, 941, 942, 943, 944, 937, 0, 0,
	947, 2099, 0, 0, 0, 0, 0, 0, 0, 597,
	48, 75, 74, 0, 0, 0, 0, 46, 0, 0,
	0, 0, 123, 1911, 0, 609, 0, 0, 0, 0,
	0, 0, 64, 0, 936, 935, 945, 946, 938, 939,
	940, 941, 942, 943, 944, 937, 0, 0, 947, 0,
	2441, 0, 0, 0, 0, 0, 0, 2446, 0, 0,
	0, 0, 797, 56, 57, 0, 123, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 2437, 0, 0, 0,
	65, 1970, 66, 1970, 0, 0, 1772, 0, 0, 0,
	2542, 936, 935, 945, 946, 938, 939, 940, 941, 942,
	943, 944, 937, 0, 0, 947, 867, 0, 0, 0,
	0, 0, 50, 73, 0, 52, 53, 60, 0, 61,
	0, 936, 935, 945, 946, 938, 939, 940, 941, 942,
	943, 944, 937, 2484, 1109, 947, 935, 945, 946, 938,
	939, 940, 941, 942, 943, 944, 937, 1817, 0, 947,
	0, 0, 2429, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 609, 609, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 0, 0,
	1597, 0, 2524, 0, 0, 609, 0, 0, 2631, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 936, 935, 945, 946, 938, 939, 940, 941, 942,
	943, 944, 937, 0, 0, 947, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 123, 123, 123, 0, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 598, 0, 0, 597,
	0, 609, 77, 1934, 0, 0, 0, 0, 0, 417,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 1052, 0, 0, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2089, 2090, 0, 2091,
	0, 0, 2093, 0, 2095, 0, 609, 0, 609, 0,
	609, 0, 1969, 936, 935, 945, 946, 938, 939, 940,
	941, 942, 943, 944, 937, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 0, 0, 2647, 2648, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2591, 0, 0, 0, 0,
	0, 2141, 2142, 0, 0, 0, 0, 1123, 1126, 1127,
	1128, 1129, 1130, 1131, 0, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 0, 1111, 1112, 1113, 1114, 1090, 1094,
	1124, 1091, 1097, 1093, 1095, 1092, 2037, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 0, 0, 0, 0,
	2061, 0, 2633, 0, 0, 2066, 0, 0, 0, 0,
	0, 0, 2070, 2071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 123, 123, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 1184, 1185, 1186, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2130, 0, 0, 0, 0, 0, 0, 2130,
	2130, 2130, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 123, 0, 461, 0, 0, 0, 0, 0,
	2130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 0, 0, 0,
	0, 2048, 0, 0, 0, 2050, 0, 0, 1314, 1314,
	1314, 0, 0, 0, 1314, 1314, 1314, 1314, 1314, 1314,
	0, 0, 1314, 0, 0, 0, 0, 1314, 1314, 1314,
	1314, 0, 1314, 1314, 1314, 0, 609, 0, 0, 0,
	1314, 1314, 1314, 0, 609, 0, 1314, 1314, 0, 1314,
	1314, 0, 0, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 1314, 1314, 1314, 0, 123,
	0, 0, 0, 0, 2252, 0, 0, 123, 461, 0,
	2130, 0, 123, 123, 0, 0, 123, 1413, 1176, 598,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 438, 0, 0, 0, 1969, 1380,
	1310, 1315, 1316, 0, 0, 0, 0, 1321, 1322, 1323,
	0, 1325, 0, 1410, 1328, 0, 0, 0, 0, 1333,
	1334, 1335, 1336, 0, 1338, 1339, 1340, 0, 0, 0,
	0, 0, 1346, 1347, 1348, 0, 0, 0, 1354, 1357,
	0, 1362, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2332, 0, 0, 0, 123, 0, 1373, 0, 1376, 1377,
	0, 0, 0, 0, 123, 0, 123, 123, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2356,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 1524,
	1525, 123, 0, 0, 1506, 0, 1507, 1508, 0, 0,
	0, 0, 0, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 1969, 867, 1109, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 418, 419, 420, 421,
	422, 426, 427, 431, 432, 441, 440, 439, 442, 443,
	446, 445, 447, 423, 424, 425, 428, 429, 430, 433,
	434, 437, 435, 436, 0, 0, 0, 1314, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 0,
	609, 0, 0, 0, 1314, 1314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 2486, 0, 0, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	123, 123, 123, 123, 123, 0, 0, 0, 0, 0,
	0, 1110, 461, 0, 0, 0, 123, 0, 0, 0,
	461, 0, 0, 0, 0, 1969, 123, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 2130, 1599,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	609, 0, 0, 0, 0, 0, 1615, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1652, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2596,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 1126,
	1127, 1128, 1129, 1130, 1131, 0, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 123, 1111, 1112, 1113, 1114, 1090,
	1094, 1124, 1091, 1097, 1093, 1095, 1092, 0, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 0, 0, 0,
	0, 0, 0, 35, 1796, 70, 38, 39, 0, 0,
	0, 35, 0, 70, 38, 39, 0, 58, 0, 0,
	0, 0, 0, 76, 0, 58, 0, 40, 123, 0,
	0, 76, 0, 0, 0, 40, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 1314, 0,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 1855, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1125, 2395,
	0, 0, 0, 0, 2656, 0, 0, 2395, 0, 0,
	0, 0, 2652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 72,
	45, 44, 47, 0, 0, 0, 42, 72, 45, 44,
	47, 0, 0, 0, 2396, 0, 0, 0, 0, 0,
	0, 0, 2396, 0, 0, 0, 0, 0, 0, 0,
	48, 75, 74, 0, 0, 0, 0, 46, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 56, 57, 0, 2397, 0, 0, 123,
	0, 56, 57, 0, 2397, 0, 0, 0, 0, 0,
	65, 0, 66, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 123, 0, 35, 0, 70, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 58, 2002,
	0, 0, 2398, 73, 76, 52, 53, 60, 40, 61,
	2398, 73, 0, 52, 53, 60, 0, 61, 0, 444,
	0, 0, 2028, 0, 0, 0, 0, 0, 35, 123,
	70, 38, 39, 0, 0, 0, 0, 2033, 0, 0,
	1720, 0, 58, 0, 0, 475, 79, 0, 76, 0,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	2395, 0, 0, 0, 0, 2641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 71, 42,
	72, 45, 44, 47, 2395, 0, 0, 0, 0, 2624,
	461, 1082, 0, 0, 598, 2396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 438,
	0, 0, 77, 42, 72, 45, 44, 47, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 2396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 75, 74, 0, 0,
	0, 0, 46, 123, 56, 57, 0, 2397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 65, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2157, 0, 0, 0, 0, 56, 57,
	0, 2397, 0, 2398, 73, 0, 52, 53, 60, 0,
	61, 0, 0, 0, 0, 65, 0, 66, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2398, 73, 0,
	52, 53, 60, 0, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 419, 420, 421, 422, 426, 427, 431, 432,
	441, 440, 439, 442, 443, 446, 445, 447, 423, 424,
	425, 428, 429, 430, 433, 434, 437, 435, 436, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 729, 317, 679,
	752, 646, 665, 764, 668, 671, 712, 629, 692, 248,
	663, 630, 0, 650, 619, 657, 620, 647, 681, 173,
	645, 731, 695, 751, 206, 708, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 750, 687, 0, 758, 209,
	0, 704, 759, 306, 232, 0, 0, 683, 738, 690,
	727, 678, 714, 638, 703, 753, 664, 710, 754, 0,
	0, 123, 0, 2455, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 0, 707, 748, 660, 709, 711, 617,
	706, 0, 624, 631, 763, 744, 653, 654, 655, 0,
	598, 0, 0, 0, 0, 0, 682, 691, 722, 675,
	123, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	701, 0, 0, 0, 632, 625, 0, 0, 680, 0,
	0, 0, 637, 130, 652, 723, 0, 615, 185, 233,
	143, 728, 743, 677, 197, 346, 747, 674, 673, 269,
	2448, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	721, 289, 661, 616, 732, 648, 658, 164, 656, 282,
	252, 335, 0, 698, 259, 281, 210, 324, 718, 333,
	334, 666, 767, 343, 348, 0, 688, 635, 303, 174,
	0, 132, 0, 266, 169, 202, 676, 713, 649, 161,
	719, 702, 737, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 2458, 2459, 2460, 0, 0, 0, 0,
	340, 672, 292, 291, 667, 193, 726, 705, 621, 275,
	716, 198, 131, 314, 351, 148, 204, 319, 614, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 659, 717, 336, 725, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 622, 0, 308, 338,
	353, 151, 644, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 642, 643, 640, 0, 641, 693,
	694, 755, 756, 757, 724, 634, 0, 739, 740, 0,
	0, 0, 0, 0, 730, 745, 746, 715, 765, 669,
	670, 639, 294, 276, 623, 626, 627, 628, 636, 684,
	685, 697, 700, 735, 734, 733, 736, 741, 761, 760,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 129, 139, 208, 766, 274, 180, 339,
	618, 171, 0, 686, 689, 699, 720, 127, 140, 150,
	156, 170, 175, 179, 662, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 742, 749, 729,
	317, 679, 752, 646, 665, 764, 668, 671, 712, 629,
	692, 248, 663, 630, 0, 650, 619, 657, 620, 647,
	681, 173, 645, 731, 695, 751, 206, 708, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 750, 687, 0,
	758, 209, 0, 704, 759, 306, 232, 0, 0, 683,
	738, 690, 727, 678, 714, 638, 703, 753, 664, 710,
	754, 0, 0, 0, 0, 612, 0, 1435, 1436, 0,
	0, 0, 0, 0, 633, 0, 707, 748, 660, 709,
	711, 617, 706, 0, 624, 631, 763, 744, 653, 654,
	655, 1717, 0, 0, 0, 0, 0, 0, 682, 691,
	722, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 701, 0, 0, 0, 632, 625, 0, 0,
	680, 0, 0, 0, 637, 130, 652, 723, 0, 615,
	185, 233, 143, 728, 743, 677, 197, 346, 747, 674,
	673, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 721, 289, 661, 616, 732, 648, 658, 164,
	656, 282, 252, 335, 0, 698, 259, 281, 210, 324,
	718, 333, 334, 666, 767, 343, 348, 0, 688, 635,
	303, 174, 0, 132, 0, 266, 169, 202, 676, 713,
	649, 161, 719, 702, 737, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 672, 292, 291, 667, 193, 726, 705,
	621, 275, 716, 198, 131, 314, 351, 148, 204, 319,
	614, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 659, 717, 336, 725, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 622, 0,
	308, 338, 353, 151, 644, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 642, 643, 640, 0,
	641, 693, 694, 755, 756, 757, 724, 634, 0, 739,
	740, 0, 0, 0, 0, 0, 730, 745, 746, 715,
	765, 669, 670, 639, 294, 276, 623, 626, 627, 628,
	636, 684, 685, 697, 700, 735, 734, 733, 736, 741,
	761, 760, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 129, 139, 208, 766, 274,
	180, 339, 618, 171, 0, 686, 689, 699, 720, 127,
	140, 150, 156, 170, 175, 179, 662, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 742,
	749, 729, 317, 679, 752, 646, 665, 764, 668, 671,
	712, 629, 692, 248, 663, 630, 0, 650, 619, 657,
	620, 647, 681, 173, 645, 731, 695, 751, 206, 708,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 750,
	687, 0, 758, 209, 0, 704, 759, 306, 232, 0,
	0, 683, 738, 690, 727, 678, 714, 638, 703, 753,
	664, 710, 754, 0, 0, 0, 0, 612, 0, 1435,
	1436, 0, 0, 0, 0, 0, 633, 0, 707, 748,
	660, 709, 711, 617, 706, 0, 624, 631, 763, 744,
	653, 654, 655, 0, 0, 0, 0, 0, 0, 0,
	682, 691, 722, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 0, 701, 0, 0, 0, 632, 625,
	0, 0, 680, 0, 0, 0, 637, 130, 652, 723,
	0, 615, 185, 233, 143, 728, 743, 677, 197, 346,
	747, 674, 673, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 721, 289, 661, 616, 732, 648,
	658, 164, 656, 282, 252, 335, 0, 698, 259, 281,
	210, 324, 718, 333, 334, 666, 767, 343, 348, 0,
	688, 635, 303, 174, 0, 132, 0, 266, 169, 202,
	676, 713, 649, 161, 719, 702, 737, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 672, 292, 291, 667, 193,
	726, 705, 621, 275, 716, 198, 131, 314, 351, 148,
	204, 319, 614, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 659, 717, 336, 725, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	622, 0, 308, 338, 353, 151, 644, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 642, 643,
	640, 0, 641, 693, 694, 755, 756, 757, 724, 634,
	0, 739, 740, 0, 0, 0, 0, 0, 730, 745,
	746, 715, 765, 669, 670, 639, 294, 276, 623, 626,
	627, 628, 636, 684, 685, 697, 700, 735, 734, 733,
	736, 741, 761, 760, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 129, 139, 208,
	766, 274, 180, 339, 618, 171, 0, 686, 689, 699,
	720, 127, 140, 150, 156, 170, 175, 179, 662, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 742, 749, 1931, 317, 679, 752, 646, 665, 764,
	668, 671, 712, 629, 692, 248, 663, 630, 0, 650,
	619, 657, 620, 647, 681, 173, 645, 731, 695, 751,
	206, 708, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 750, 687, 0, 758, 209, 0, 704, 759, 306,
	232, 0, 0, 683, 738, 690, 727, 678, 714, 638,
	703, 753, 664, 710, 754, 79, 0, 900, 0, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	707, 748, 660, 709, 711, 617, 706, 0, 624, 631,
	763, 744, 653, 654, 655, 0, 0, 0, 0, 0,
	0, 0, 682, 691, 722, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 701, 0, 0, 0,
	632, 625, 0, 0, 680, 0, 0, 0, 637, 130,
	652, 723, 0, 615, 185, 233, 143, 728, 743, 677,
	197, 346, 747, 674, 673, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 721, 289, 661, 616,
	732, 648, 658, 164, 656, 282, 252, 335, 0, 698,
	259, 281, 210, 324, 718, 333, 334, 666, 767, 343,
	348, 0, 688, 635, 303, 174, 0, 132, 0, 266,
	169, 202, 676, 713, 649, 161, 719, 702, 737, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 672, 292, 291,
	667, 193, 726, 705, 621, 275, 716, 198, 131, 314,
	351, 148, 204, 319, 614, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 659, 717, 336,
	725, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 622, 0, 308, 338, 353, 151, 644, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	642, 643, 640, 0, 641, 693, 694, 755, 756, 757,
	724, 634, 0, 739, 740, 0, 0, 0, 0, 0,
	730, 745, 746, 715, 765, 669, 670, 639, 294, 276,
	623, 626, 627, 628, 636, 684, 685, 697, 700, 735,
	734, 733, 736, 741, 761, 760, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 129,
	139, 208, 1932, 274, 180, 339, 618, 171, 0, 686,
	689, 699, 720, 127, 140, 150, 156, 170, 175, 179,
	662, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 742, 749, 729, 317, 679, 752, 646,
	665, 764, 668, 671, 712, 629, 692, 248, 663, 630,
	0, 650, 619, 657, 620, 647, 681, 173, 645, 731,
	695, 751, 206, 708, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 750, 687, 0, 758, 209, 0, 704,
	759, 306, 232, 0, 0, 683, 738, 690, 727, 678,
	714, 638, 703, 753, 664, 710, 754, 0, 0, 0,
	0, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 707, 748, 660, 709, 711, 617, 706, 0,
	624, 631, 763, 744, 653, 654, 655, 0, 0, 0,
	0, 0, 0, 0, 682, 691, 722, 675, 0, 0,
	0, 0, 0, 0, 2229, 0, 651, 0, 701, 0,
	0, 0, 632, 625, 0, 0, 680, 0, 0, 0,
	637, 130, 652, 723, 0, 615, 185, 233, 143, 728,
	743, 677, 197, 346, 747, 674, 673, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 721, 289,
	661, 616, 732, 648, 658, 164, 656, 282, 252, 335,
	0, 698, 259, 281, 210, 324, 718, 333, 334, 666,
	767, 343, 348, 0, 688, 635, 303, 174, 0, 132,
	0, 266, 169, 202, 676, 713, 649, 161, 719, 702,
	737, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 672,
	292, 291, 667, 193, 726, 705, 621, 275, 716, 198,
	131, 314, 351, 148, 204, 319, 614, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 659,
	717, 336, 725, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 622, 0, 308, 338, 353, 151,
	644, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 642, 643, 640, 0, 641, 693, 694, 755,
	756, 757, 724, 634, 0, 739, 740, 0, 0, 0,
	0, 0, 730, 745, 746, 715, 765, 669, 670, 639,
	294, 276, 623, 626, 627, 628, 636, 684, 685, 697,
	700, 735, 734, 733, 736, 741, 761, 760, 762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 129, 139, 208, 766, 274, 180, 339, 618, 171,
	0, 686, 689, 699, 720, 127, 140, 150, 156, 170,
	175, 179, 662, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 742, 749, 729, 317, 679,
	752, 646, 665, 764, 668, 671, 712, 629, 692, 248,
	663, 630, 0, 650, 619, 657, 620, 647, 681, 173,
	645, 731, 695, 751, 206, 708, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 750, 687, 0, 758, 209,
	0, 704, 759, 306, 232, 0, 0, 683, 738, 690,
	727, 678, 714, 638, 703, 753, 664, 710, 754, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 0, 707, 748, 660, 709, 711, 617,
	706, 0, 624, 631, 763, 744, 653, 654, 655, 0,
	0, 0, 0, 0, 0, 0, 682, 691, 722, 675,
	0, 0, 0, 0, 0, 0, 1868, 0, 651, 0,
	701, 0, 0, 0, 632, 625, 0, 0, 680, 0,
	0, 0, 637, 130, 652, 723, 0, 615, 185, 233,
	143, 728, 743, 677, 197, 346, 747, 674, 673, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	721, 289, 661, 616, 732, 648, 658, 164, 656, 282,
	252, 335, 0, 698, 259, 281, 210, 324, 718, 333,
	334, 666, 767, 343, 348, 0, 688, 635, 303, 174,
	0, 132, 0, 266, 169, 202, 676, 713, 649, 161,
	719, 702, 737, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 672, 292, 291, 667, 193, 726, 705, 621, 275,
	716, 198, 131, 314, 351, 148, 204, 319, 614, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 659, 717, 336, 725, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 622, 0, 308, 338,
	353, 151, 644, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 642, 643, 640, 0, 641, 693,
	694, 755, 756, 757, 724, 634, 0, 739, 740, 0,
	0, 0, 0, 0, 730, 745, 746, 715, 765, 669,
	670, 639, 294, 276, 623, 626, 627, 628, 636, 684,
	685, 697, 700, 735, 734, 733, 736, 741, 761, 760,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 129, 139, 208, 766, 274, 180, 339,
	618, 171, 0, 686, 689, 699, 720, 127, 140, 150,
	156, 170, 175, 179, 662, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 742, 749, 729,
	317, 679, 752, 646, 665, 764, 668, 671, 712, 629,
	692, 248, 663, 630, 0, 650, 619, 657, 620, 647,
	681, 173, 645, 731, 695, 751, 206, 708, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 750, 687, 0,
	758, 209, 0, 704, 759, 306, 232, 0, 0, 683,
	738, 690, 727, 678, 714, 638, 703, 753, 664, 710,
	754, 0, 0, 0, 0, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 707, 748, 660, 709,
	711, 617, 706, 0, 624, 631, 763, 744, 653, 654,
	655, 0, 0, 0, 0, 0, 0, 0, 682, 691,
	722, 675, 0, 0, 0, 0, 0, 0, 1858, 0,
	651, 0, 701, 0, 0, 0, 632, 625, 0, 0,
	680, 0, 0, 0, 637, 130, 652, 723, 0, 615,
	185, 233, 143, 728, 743, 677, 197, 346, 747, 674,
	673, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 721, 289, 661, 616, 732, 648, 658, 164,
	656, 282, 252, 335, 0, 698, 259, 281, 210, 324,
	718, 333, 334, 666, 767, 343, 348, 0, 688, 635,
	303, 174, 0, 132, 0, 266, 169, 202, 676, 713,
	649, 161, 719, 702, 737, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 672, 292, 291, 667, 193, 726, 705,
	621, 275, 716, 198, 131, 314, 351, 148, 204, 319,
	614, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 659, 717, 336, 725, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 622, 0,
	308, 338, 353, 151, 644, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 642, 643, 640, 0,
	641, 693, 694, 755, 756, 757, 724, 634, 0, 739,
	740, 0, 0, 0, 0, 0, 730, 745, 746, 715,
	765, 669, 670, 639, 294, 276, 623, 626, 627, 628,
	636, 684, 685, 697, 700, 735, 734, 733, 736, 741,
	761, 760, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 129, 139, 208, 766, 274,
	180, 339, 618, 171, 0, 686, 689, 699, 720, 127,
	140, 150, 156, 170, 175, 179, 662, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 742,
	749, 729, 317, 679, 752, 646, 665, 764, 668, 671,
	712, 629, 692, 248, 663, 630, 0, 650, 619, 657,
	620, 647, 681, 173, 645, 731, 695, 751, 206, 708,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 750,
	687, 0, 758, 209, 0, 704, 759, 306, 232, 0,
	0, 683, 738, 690, 727, 678, 714, 638, 703, 753,
	664, 710, 754, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 707, 748,
	660, 709, 711, 617, 706, 0, 624, 631, 763, 744,
	653, 654, 655, 0, 0, 0, 0, 0, 0, 0,
	682, 691, 722, 675, 0, 0, 0, 0, 0, 0,
	1414, 0, 651, 0, 701, 0, 0, 0, 632, 625,
	0, 0, 680, 0, 0, 0, 637, 130, 652, 723,
	0, 615, 185, 233, 143, 728, 743, 677, 197, 346,
	747, 674, 673, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 721, 289, 661, 616, 732, 648,
	658, 164, 656, 282, 252, 335, 0, 698, 259, 281,
	210, 324, 718, 333, 334, 666, 767, 343, 348, 0,
	688, 635, 303, 174, 0, 132, 0, 266, 169, 202,
	676, 713, 649, 161, 719, 702, 737, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 672, 292, 291, 667, 193,
	726, 705, 621, 275, 716, 198, 131, 314, 351, 148,
	204, 319, 614, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 659, 717, 336, 725, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	622, 0, 308, 338, 353, 151, 644, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 642, 643,
	640, 0, 641, 693, 694, 755, 756, 757, 724, 634,
	0, 739, 740, 0, 0, 0, 0, 0, 730, 745,
	746, 715, 765, 669, 670, 639, 294, 276, 623, 626,
	627, 628, 636, 684, 685, 697, 700, 735, 734, 733,
	736, 741, 761, 760, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 129, 139, 208,
	766, 274, 180, 339, 618, 171, 0, 686, 689, 699,
	720, 127, 140, 150, 156, 170, 175, 179, 662, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 742, 749, 729, 317, 679, 752, 646, 665, 764,
	668, 671, 712, 629, 692, 248, 663, 630, 0, 650,
	619, 657, 620, 647, 681, 173, 645, 731, 695, 751,
	206, 708, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 750, 687, 0, 758, 209, 0, 704, 759, 306,
	232, 0, 0, 683, 738, 690, 727, 678, 714, 638,
	703, 753, 664, 710, 754, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	707, 748, 660, 709, 711, 617, 706, 0, 624, 631,
	763, 744, 653, 654, 655, 0, 0, 0, 0, 0,
	0, 0, 682, 691, 722, 675, 0, 0, 0, 0,
	0, 0, 1274, 0, 651, 0, 701, 0, 0, 0,
	632, 625, 0, 0, 680, 0, 0, 0, 637, 130,
	652, 723, 0, 615, 185, 233, 143, 728, 743, 677,
	197, 346, 747, 674, 673, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 721, 289, 661, 616,
	732, 648, 658, 164, 656, 282, 252, 335, 0, 698,
	259, 281, 210, 324, 718, 333, 334, 666, 767, 343,
	348, 0, 688, 635, 303, 174, 0, 132, 0, 266,
	169, 202, 676, 713, 649, 161, 719, 702, 737, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 672, 292, 291,
	667, 193, 726, 705, 621, 275, 716, 198, 131, 314,
	351, 148, 204, 319, 614, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 659, 717, 336,
	725, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 622, 0, 308, 338, 353, 151, 644, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	642, 643, 640, 0, 641, 693, 694, 755, 756, 757,
	724, 634, 0, 739, 740, 0, 0, 0, 0, 0,
	730, 745, 746, 715, 765, 669, 670, 639, 294, 276,
	623, 626, 627, 628, 636, 684, 685, 697, 700, 735,
	734, 733, 736, 741, 761, 760, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 129,
	139, 208, 766, 274, 180, 339, 618, 171, 0, 686,
	689, 699, 720, 127, 140, 150, 156, 170, 175, 179,
	662, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 742, 749, 729, 317, 679, 752, 646,
	665, 764, 668, 671, 712, 629, 692, 248, 663, 630,
	0, 650, 619, 657, 620, 647, 681, 173, 645, 731,
	695, 751, 206, 708, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 750, 687, 0, 758, 209, 0, 704,
	759, 306, 232, 0, 0, 683, 738, 690, 727, 678,
	714, 638, 703, 753, 664, 710, 754, 0, 0, 0,
	0, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 707, 748, 660, 709, 711, 617, 706, 0,
	624, 631, 763, 744, 653, 654, 655, 0, 0, 0,
	0, 0, 0, 0, 682, 691, 722, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 0, 701, 0,
	0, 0, 632, 625, 0, 0, 680, 0, 0, 0,
	637, 130, 652, 723, 0, 615, 185, 233, 143, 728,
	743, 677, 197, 346, 747, 674, 673, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 721, 289,
	661, 616, 732, 648, 658, 164, 656, 282, 252, 335,
	0, 698, 259, 281, 210, 324, 718, 333, 334, 666,
	767, 343, 348, 0, 688, 635, 303, 174, 0, 132,
	0, 266, 169, 202, 676, 713, 649, 161, 719, 702,
	737, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 672,
	292, 291, 667, 193, 726, 705, 621, 275, 716, 198,
	131, 314, 351, 148, 204, 319, 614, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 659,
	717, 336, 725, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 622, 0, 308, 338, 353, 151,
	644, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 642, 643, 640, 0, 641, 693, 694, 755,
	756, 757, 724, 634, 0, 739, 740, 0, 0, 0,
	0, 0, 730, 745, 746, 715, 765, 669, 670, 639,
	294, 276, 623, 626, 627, 628, 636, 684, 685, 697,
	700, 735, 734, 733, 736, 741, 761, 760, 762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 129, 139, 208, 766, 274, 180, 339, 618, 171,
	0, 686, 689, 699, 720, 127, 140, 150, 156, 170,
	175, 179, 662, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 742, 749, 729, 317, 679,
	752, 646, 665, 764, 668, 671, 712, 629, 692, 248,
	663, 630, 0, 650, 619, 657, 620, 647, 681, 173,
	645, 731, 695, 751, 206, 708, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 750, 687, 0, 758, 209,
	0, 704, 759, 306, 232, 0, 0, 683, 738, 690,
	727, 678, 714, 638, 703, 753, 664, 710, 754, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 0, 707, 748, 660, 709, 711, 617,
	706, 0, 624, 631, 763, 744, 653, 654, 655, 0,
	0, 0, 0, 0, 0, 0, 682, 691, 722, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	701, 0, 0, 0, 632, 625, 0, 0, 680, 0,
	0, 0, 637, 130, 652, 723, 0, 615, 185, 233,
	143, 728, 743, 677, 197, 346, 747, 674, 673, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	721, 289, 661, 616, 732, 648, 658, 164, 656, 282,
	252, 335, 0, 698, 259, 281, 210, 324, 718, 333,
	334, 666, 767, 343, 348, 0, 688, 635, 303, 174,
	0, 132, 0, 266, 169, 202, 676, 713, 649, 161,
	719, 702, 737, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 672, 292, 291, 667, 193, 726, 705, 621, 275,
	716, 198, 131, 314, 351, 148, 204, 319, 614, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 659, 717, 336, 725, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 622, 0, 308, 338,
	353, 151, 644, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 642, 643, 640, 0, 641, 693,
	694, 755, 756, 757, 724, 634, 0, 739, 740, 0,
	0, 0, 0, 0, 730, 745, 746, 715, 765, 669,
	670, 639, 294, 276, 623, 626, 627, 628, 636, 684,
	685, 697, 700, 735, 734, 733, 736, 741, 761, 760,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 129, 139, 208, 766, 274, 180, 339,
	618, 171, 0, 686, 689, 699, 720, 127, 140, 150,
	156, 170, 175, 179, 662, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 742, 749, 729,
	317, 679, 752, 646, 665, 764, 668, 671, 712, 629,
	692, 248, 663, 630, 0, 650, 619, 657, 620, 647,
	681, 173, 645, 731, 695, 751, 206, 708, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 1446, 1450, 0,
	758, 209, 0, 704, 759, 306, 232, 0, 0, 683,
	738, 690, 727, 678, 714, 638, 703, 753, 664, 710,
	754, 0, 0, 0, 0, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 707, 748, 660, 709,
	711, 617, 706, 0, 624, 631, 763, 744, 653, 654,
	655, 0, 0, 0, 0, 0, 0, 0, 682, 691,
	722, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 701, 0, 0, 0, 632, 625, 0, 0,
	680, 0, 0, 0, 637, 130, 652, 723, 0, 615,
	185, 233, 143, 728, 743, 1449, 197, 346, 747, 674,
	673, 1444, 0, 1445, 187, 207, 611, 126, 141, 1442,
	1448, 244, 721, 289, 661, 616, 732, 648, 658, 164,
	656, 282, 252, 335, 0, 698, 259, 281, 210, 324,
	718, 333, 334, 666, 767, 343, 348, 0, 688, 635,
	303, 174, 0, 132, 0, 266, 169, 202, 676, 713,
	649, 161, 719, 702, 737, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 672, 292, 291, 667, 193, 726, 705,
	621, 275, 716, 198, 131, 314, 351, 148, 204, 319,
	614, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 659, 717, 336, 725, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 622, 0,
	308, 338, 353, 151, 644, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 642, 643, 640, 0,
	641, 693, 694, 755, 756, 757, 724, 634, 0, 739,
	740, 0, 0, 0, 0, 0, 730, 745, 746, 715,
	765, 669, 670, 639, 294, 276, 623, 626, 627, 628,
	636, 684, 685, 697, 700, 735, 734, 733, 736, 741,
	761, 760, 762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 129, 139, 208, 766, 274,
	180, 339, 618, 171, 0, 686, 689, 699, 720, 127,
	140, 150, 156, 170, 175, 179, 662, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 742,
	749, 729, 317, 679, 752, 646, 665, 764, 668, 671,
	712, 629, 692, 248, 663, 630, 0, 650, 619, 657,
	620, 647, 681, 173, 645, 731, 695, 751, 206, 708,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 750,
	687, 0, 758, 209, 0, 704, 759, 306, 232, 0,
	0, 683, 738, 690, 727, 678, 714, 638, 703, 753,
	664, 710, 754, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 707, 748,
	660, 709, 711, 617, 706, 0, 624, 631, 763, 744,
	653, 654, 655, 0, 0, 0, 0, 0, 0, 0,
	682, 691, 722, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 0, 701, 0, 0, 0, 632, 625,
	0, 0, 680, 0, 0, 0, 637, 130, 652, 723,
	0, 615, 185, 233, 143, 728, 743, 677, 197, 346,
	747, 674, 673, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 721, 289, 661, 616, 732, 648,
	658, 164, 656, 282, 252, 335, 0, 698, 259, 281,
	210, 324, 718, 333, 334, 666, 767, 343, 348, 0,
	688, 635, 303, 174, 0, 132, 0, 266, 169, 202,
	676, 713, 649, 161, 719, 702, 737, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 672, 292, 291, 667, 193,
	726, 705, 621, 275, 716, 198, 131, 314, 351, 148,
	204, 319, 614, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 659, 717, 336, 725, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	622, 0, 308, 338, 353, 151, 644, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 642, 643,
	640, 0, 641, 693, 694, 755, 756, 757, 724, 634,
	0, 739, 740, 0, 0, 0, 0, 0, 730, 745,
	746, 715, 765, 669, 670, 639, 294, 276, 623, 626,
	627, 628, 636, 684, 685, 697, 700, 735, 734, 733,
	736, 741, 761, 760, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 129, 139, 208,
	766, 274, 180, 339, 618, 171, 0, 686, 689, 699,
	720, 127, 140, 150, 156, 170, 175, 179, 662, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 742, 749, 729, 317, 679, 752, 646, 665, 764,
	668, 671, 712, 629, 692, 248, 663, 630, 0, 650,
	619, 657, 620, 647, 681, 173, 645, 731, 695, 751,
	206, 708, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 750, 687, 0, 758, 209, 0, 704, 759, 306,
	232, 0, 0, 683, 738, 690, 727, 678, 714, 638,
	703, 753, 664, 710, 754, 0, 0, 0, 0, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	707, 748, 660, 709, 711, 617, 706, 0, 624, 631,
	763, 744, 653, 654, 655, 0, 0, 0, 0, 0,
	0, 0, 682, 691, 722, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 701, 0, 0, 0,
	632, 625, 0, 0, 680, 0, 0, 0, 637, 130,
	652, 723, 0, 615, 185, 233, 143, 728, 743, 677,
	197, 346, 747, 674, 673, 269, 0, 311, 187, 207,
	611, 126, 141, 607, 186, 244, 721, 289, 661, 616,
	732, 648, 658, 164, 656, 282, 252, 335, 0, 698,
	259, 281, 210, 324, 718, 333, 334, 666, 767, 343,
	348, 0, 688, 635, 303, 174, 0, 132, 0, 266,
	169, 202, 676, 713, 649, 161, 719, 702, 737, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 672, 292, 291,
	667, 193, 726, 705, 621, 275, 716, 198, 131, 314,
	351, 148, 204, 319, 614, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 659, 717, 336,
	725, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 622, 0, 308, 338, 353, 151, 644, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	642, 643, 640, 0, 641, 693, 694, 755, 756, 757,
	724, 634, 0, 739, 740, 0, 0, 0, 0, 0,
	730, 745, 746, 715, 765, 669, 670, 639, 294, 276,
	623, 626, 627, 628, 636, 684, 685, 697, 700, 735,
	734, 733, 736, 741, 761, 760, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 129,
	139, 208, 766, 274, 180, 339, 618, 171, 0, 686,
	689, 699, 720, 127, 140, 150, 156, 170, 175, 179,
	662, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 742, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 173, 479, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 557, 209, 0, 0, 444, 306,
	232, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 0, 0, 1424, 0, 79, 0, 0, 0, 480,
	504, 503, 506, 507, 508, 509, 0, 0, 0, 505,
	510, 539, 540, 1425, 0, 0, 477, 495, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 493, 0, 0, 0, 0, 571, 0, 494, 0,
	0, 489, 490, 491, 496, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 547, 0, 0,
	197, 346, 0, 0, 569, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 554, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 546, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 438, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	558, 570, 564, 566, 565, 562, 563, 561, 560, 559,
	572, 548, 549, 550, 551, 552, 0, 0, 0, 555,
	0, 567, 568, 0, 0, 0, 0, 0, 294, 276,
	511, 512, 513, 514, 515, 519, 520, 524, 525, 533,
	532, 531, 534, 535, 537, 536, 538, 516, 517, 518,
	521, 522, 523, 526, 527, 530, 528, 529, 553, 129,
	139, 208, 0, 274, 180, 339, 0, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 35, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 173, 479, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 557, 209, 0, 0, 444, 306,
	232, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 480,
	504, 503, 506, 507, 508, 509, 0, 0, 0, 505,
	510, 539, 540, 0, 0, 0, 477, 495, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 493, 0, 0, 0, 0, 571, 0, 494, 0,
	0, 489, 490, 491, 496, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 547, 0, 0,
	197, 346, 0, 0, 569, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 554, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 546, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 438, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	558, 570, 564, 566, 565, 562, 563, 561, 560, 559,
	572, 548, 549, 550, 551, 552, 0, 0, 0, 555,
	0, 567, 568, 0, 0, 0, 0, 0, 294, 276,
	511, 512, 513, 514, 515, 519, 520, 524, 525, 533,
	532, 531, 534, 535, 537, 536, 538, 516, 517, 518,
	521, 522, 523, 526, 527, 530, 528, 529, 553, 129,
	139, 208, 77, 274, 180, 339, 0, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 173, 479, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 557, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 544, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 480, 504,
	503, 506, 507, 508, 509, 0, 0, 0, 505, 510,
	539, 540, 0, 0, 0, 477, 495, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 473, 0, 0, 0, 571, 0, 494, 0, 0,
	489, 490, 491, 496, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 547, 0, 0, 197,
	346, 0, 0, 569, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 554, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 546, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 558,
	570, 564, 566, 565, 562, 563, 561, 560, 559, 572,
	548, 549, 550, 551, 552, 0, 0, 0, 555, 0,
	567, 568, 0, 0, 0, 0, 0, 294, 276, 511,
	512, 513, 514, 515, 519, 520, 524, 525, 533, 532,
	531, 534, 535, 537, 536, 538, 516, 517, 518, 521,
	522, 523, 526, 527, 530, 528, 529, 553, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 173, 479, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 557, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 900, 0, 480, 504, 503,
	506, 507, 508, 509, 0, 0, 0, 505, 510, 539,
	540, 0, 0, 0, 477, 495, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 493,
	0, 0, 0, 0, 571, 0, 494, 0, 0, 489,
	490, 491, 496, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 547, 0, 0, 197, 346,
	0, 0, 569, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 554, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 546, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 558, 570,
	564, 566, 565, 562, 563, 561, 560, 559, 572, 548,
	549, 550, 551, 552, 0, 0, 0, 555, 0, 567,
	568, 0, 0, 0, 0, 0, 294, 276, 511, 512,
	513, 514, 515, 519, 520, 524, 525, 533, 532, 531,
	534, 535, 537, 536, 538, 516, 517, 518, 521, 522,
	523, 526, 527, 530, 528, 529, 553, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 173, 479, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 557, 209, 0, 0, 444, 306, 232, 0, 0,
	0, 0, 544, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 480, 504, 503, 506,
	507, 508, 509, 0, 0, 0, 505, 510, 539, 540,
	0, 0, 0, 477, 495, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 493, 1312,
	0, 0, 0, 571, 0, 494, 0, 0, 489, 490,
	491, 496, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 547, 0, 0, 197, 346, 0,
	0, 569, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 554, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 546, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 438, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 558, 570, 564,
	566, 565, 562, 563, 561, 560, 559, 572, 548, 549,
	550, 551, 552, 0, 0, 0, 555, 0, 567, 568,
	0, 0, 0, 0, 0, 294, 276, 511, 512, 513,
	514, 515, 519, 520, 524, 525, 533, 532, 531, 534,
	535, 537, 536, 538, 516, 517, 518, 521, 522, 523,
	526, 527, 530, 528, 529, 553, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 173, 479, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	557, 209, 0, 0, 444, 306, 232, 0, 0, 0,
	0, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 480, 504, 1356, 506, 507,
	508, 509, 0, 0, 0, 505, 510, 539, 540, 0,
	0, 0, 477, 495, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 493, 1312, 0,
	0, 0, 571, 0, 494, 0, 0, 489, 490, 491,
	496, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 547, 0, 0, 197, 346, 0, 0,
	569, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 554, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 546, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 438, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 558, 570, 564, 566,
	565, 562, 563, 561, 560, 559, 572, 548, 549, 550,
	551, 552, 0, 0, 0, 555, 0, 567, 568, 0,
	0, 0, 0, 0, 294, 276, 511, 512, 513, 514,
	515, 519, 520, 524, 525, 533, 532, 531, 534, 535,
	537, 536, 538, 516, 517, 518, 521, 522, 523, 526,
	527, 530, 528, 529, 553, 129, 139, 208, 0, 274,
	180, 339, 0, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	173, 479, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 557,
	209, 0, 0, 444, 306, 232, 0, 0, 0, 0,
	544, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 480, 504, 1353, 506, 507, 508,
	509, 0, 0, 0, 505, 510, 539, 540, 0, 0,
	0, 477, 495, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 493, 1312, 0, 0,
	0, 571, 0, 494, 0, 0, 489, 490, 491, 496,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 547, 0, 0, 197, 346, 0, 0, 569,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 554, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 546, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 438, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 558, 570, 564, 566, 565,
	562, 563, 561, 560, 559, 572, 548, 549, 550, 551,
	552, 0, 0, 0, 555, 0, 567, 568, 0, 0,
	0, 0, 0, 294, 276, 511, 512, 513, 514, 515,
	519, 520, 524, 525, 533, 532, 531, 534, 535, 537,
	536, 538, 516, 517, 518, 521, 522, 523, 526, 527,
	530, 528, 529, 553, 129, 139, 208, 0, 274, 180,
	339, 0, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 173,
	479, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 0, 0, 0, 557, 209,
	0, 0, 444, 306, 232, 0, 0, 0, 0, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 1212, 0, 480, 504, 503, 506, 507, 508, 509,
	0, 0, 0, 505, 510, 539, 540, 0, 0, 0,
	477, 495, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 493, 0, 0, 0, 0,
	571, 0, 494, 0, 0, 489, 490, 491, 496, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 185, 233,
	143, 547, 0, 0, 197, 346, 0, 0, 569, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	0, 289, 554, 0, 0, 0, 0, 164, 0, 282,
	252, 335, 546, 0, 259, 281, 210, 324, 0, 333,
	334, 0, 438, 343, 348, 0, 0, 0, 303, 174,
	0, 132, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 292, 291, 0, 193, 0, 0, 0, 275,
	0, 198, 131, 314, 351, 148, 204, 319, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 336, 0, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 308, 338,
	353, 151, 0, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 558, 570, 564, 566, 565, 562,
	563, 561, 560, 559, 572, 548, 549, 550, 551, 552,
	0, 0, 0, 555, 0, 567, 568, 0, 0, 0,
	0, 0, 294, 276, 511, 512, 513, 514, 515, 519,
	520, 524, 525, 533, 532, 531, 534, 535, 537, 536,
	538, 516, 517, 518, 521, 522, 523, 526, 527, 530,
	528, 529, 553, 129, 139, 208, 0, 274, 180, 339,
	0, 171, 0, 0, 0, 0, 0, 127, 140, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 173, 479,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 557, 209, 0,
	0, 444, 306, 232, 0, 0, 0, 0, 544, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 480, 504, 503, 506, 507, 508, 509, 0,
	0, 0, 505, 510, 539, 540, 0, 0, 0, 477,
	495, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 493, 0, 0, 0, 0, 571,
	0, 494, 0, 0, 489, 490, 491, 496, 0, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	547, 0, 0, 197, 346, 0, 0, 569, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 554, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 546, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 438, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 558, 570, 564, 566, 565, 562, 563,
	561, 560, 559, 572, 548, 549, 550, 551, 552, 0,
	0, 0, 555, 0, 567, 568, 0, 0, 0, 0,
	0, 294, 276, 511, 512, 513, 514, 515, 519, 520,
	524, 525, 533, 532, 531, 534, 535, 537, 536, 538,
	516, 517, 518, 521, 522, 523, 526, 527, 530, 528,
	529, 553, 129, 139, 208, 0, 274, 180, 339, 0,
	171, 0, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 557, 209, 0, 0,
	444, 306, 232, 0, 0, 0, 0, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 480, 504, 503, 506, 507, 508, 509, 0, 0,
	0, 505, 510, 539, 540, 0, 0, 0, 0, 495,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 493, 0, 0, 0, 0, 571, 0,
	494, 0, 0, 489, 490, 491, 496, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 547,
	0, 0, 197, 346, 0, 0, 569, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	554, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	546, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	438, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 558, 570, 564, 566, 565, 562, 563, 561,
	560, 559, 572, 548, 549, 550, 551, 552, 1359, 1360,
	1361, 555, 0, 567, 568, 0, 0, 0, 0, 0,
	294, 276, 511, 512, 513, 514, 515, 519, 520, 524,
	525, 533, 532, 531, 534, 535, 537, 536, 538, 516,
	517, 518, 521, 522, 523, 526, 527, 530, 528, 529,
	553, 129, 139, 208, 0, 274, 180, 339, 0, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 316, 0, 0, 0, 557, 209, 0, 0, 444,
	306, 232, 0, 0, 0, 0, 544, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	480, 504, 503, 506, 507, 508, 509, 0, 0, 0,
	505, 510, 539, 540, 0, 0, 0, 0, 495, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 493, 0, 0, 0, 0, 571, 0, 494,
	0, 0, 489, 490, 491, 496, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 185, 233, 143, 547, 0,
	0, 197, 346, 0, 0, 569, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 0, 289, 554,
	0, 0, 0, 0, 164, 0, 282, 252, 335, 546,
	2634, 259, 281, 210, 324, 0, 333, 334, 0, 438,
	343, 348, 0, 0, 0, 303, 174, 0, 132, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 292,
	291, 0, 193, 0, 0, 0, 275, 0, 198, 131,
	314, 351, 148, 204, 319, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	336, 0, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 308, 338, 353, 151, 0,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 558, 570, 564, 566, 565, 562, 563, 561, 560,
	559, 572, 548, 549, 550, 551, 552, 0, 0, 0,
	555, 0, 567, 568, 0, 0, 0, 0, 0, 294,
	276, 511, 512, 513, 514, 515, 519, 520, 524, 525,
	533, 532, 531, 534, 535, 537, 536, 538, 516, 517,
	518, 521, 522, 523, 526, 527, 530, 528, 529, 553,
	129, 139, 208, 0, 274, 180, 339, 0, 171, 0,
	0, 0, 0, 0, 127, 140, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 557, 209, 0, 0, 444, 306,
	232, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 900, 0, 480,
	504, 503, 506, 507, 508, 509, 0, 0, 0, 505,
	510, 539, 540, 0, 0, 0, 0, 495, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 493, 0, 0, 0, 0, 571, 0, 494, 0,
	0, 489, 490, 491, 496, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 547, 0, 0,
	197, 346, 0, 0, 569, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 554, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 546, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 438, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	558, 570, 564, 566, 565, 562, 563, 561, 560, 559,
	572, 548, 549, 550, 551, 552, 0, 0, 0, 555,
	0, 567, 568, 0, 0, 0, 0, 0, 294, 276,
	511, 512, 513, 514, 515, 519, 520, 524, 525, 533,
	532, 531, 534, 535, 537, 536, 538, 516, 517, 518,
	521, 522, 523, 526, 527, 530, 528, 529, 553, 129,
	139, 208, 0, 274, 180, 339, 0, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 557, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 544, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 480, 504,
	503, 506, 507, 508, 509, 0, 0, 0, 505, 510,
	539, 540, 0, 0, 0, 0, 495, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 0, 0, 0, 0, 571, 0, 494, 0, 0,
	489, 490, 491, 496, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 547, 0, 0, 197,
	346, 0, 0, 569, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 554, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 546, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 444, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 2050, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 558,
	570, 564, 566, 565, 562, 563, 561, 560, 559, 572,
	548, 549, 550, 551, 552, 438, 0, 0, 555, 0,
	567, 568, 0, 0, 0, 0, 0, 294, 276, 511,
	512, 513, 514, 515, 519, 520, 524, 525, 533, 532,
	531, 534, 535, 537, 536, 538, 516, 517, 518, 521,
	522, 523, 526, 527, 530, 528, 529, 553, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 411, 317, 409, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 419, 420,
	421, 422, 426, 427, 431, 432, 441, 440, 439, 442,
	443, 446, 445, 447, 423, 424, 425, 428, 429, 430,
	433, 434, 437, 435, 436, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 410, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 2059, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	451, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 276, 418,
	419, 420, 421, 422, 426, 427, 431, 432, 441, 440,
	439, 442, 443, 446, 445, 447, 423, 424, 425, 428,
	429, 430, 433, 434, 437, 435, 436, 0, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 411, 317, 409, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 419, 420, 421, 422, 426,
	427, 431, 432, 441, 440, 439, 442, 443, 446, 445,
	447, 423, 424, 425, 428, 429, 430, 433, 434, 437,
	435, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 410, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 2057, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	406, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 276, 418,
	419, 420, 421, 422, 426, 427, 431, 432, 441, 440,
	439, 442, 443, 446, 445, 447, 423, 424, 425, 428,
	429, 430, 433, 434, 437, 435, 436, 0, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 1402, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1404,
	1406, 0, 0, 0, 0, 0, 0, 124, 0, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 419, 420, 421, 422, 426,
	427, 431, 432, 441, 440, 439, 442, 443, 446, 445,
	447, 423, 424, 425, 428, 429, 430, 433, 434, 437,
	435, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 1405, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 276, 418, 419,
	420, 421, 422, 426, 427, 431, 432, 441, 440, 439,
	442, 443, 446, 445, 447, 423, 424, 425, 428, 429,
	430, 433, 434, 437, 435, 436, 0, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 1402, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 0, 209, 0, 0, 444, 306, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 1406,
	0, 0, 0, 0, 0, 0, 124, 0, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 0, 0, 0, 197, 346, 0,
	1405, 0, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 0, 0, 1400, 281, 210,
	324, 0, 333, 334, 0, 438, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 276, 418, 419, 420,
	421, 422, 426, 427, 431, 432, 441, 440, 439, 442,
	443, 446, 445, 447, 423, 424, 425, 428, 429, 430,
	433, 434, 437, 435, 436, 0, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 922, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	0, 209, 0, 0, 444, 306, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 923, 0, 926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	919, 918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 0, 0, 0, 197, 346, 0, 0,
	0, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 0, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 438, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 276, 418, 419, 420, 421,
	422, 426, 427, 431, 432, 441, 440, 439, 442, 443,
	446, 445, 447, 423, 424, 425, 428, 429, 430, 433,
	434, 437, 435, 436, 0, 129, 139, 208, 0, 274,
	180, 339, 0, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 2555, 0, 0, 0, 0, 0, 0,
	173, 2553, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 0,
	209, 0, 0, 444, 306, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 0, 0, 0, 197, 346, 0, 0, 0,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 0, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 438, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 2554, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 276, 418, 419, 420, 421, 422,
	426, 427, 431, 432, 441, 440, 439, 442, 443, 446,
	445, 447, 423, 424, 425, 428, 429, 430, 433, 434,
	437, 435, 436, 0, 129, 139, 208, 0, 274, 180,
	339, 0, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 1694, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 0, 0, 0, 0, 209,
	0, 0, 444, 306, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 185, 233,
	143, 0, 0, 0, 197, 346, 0, 0, 0, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 282,
	252, 335, 0, 0, 259, 281, 210, 324, 0, 333,
	334, 0, 438, 343, 348, 0, 0, 0, 303, 174,
	0, 132, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 292, 291, 0, 193, 0, 0, 0, 275,
	0, 198, 131, 314, 351, 148, 204, 319, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 336, 0, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 308, 338,
	353, 151, 0, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 276, 418, 419, 420, 421, 422, 426,
	427, 431, 432, 441, 440, 439, 442, 443, 446, 445,
	447, 423, 424, 425, 428, 429, 430, 433, 434, 437,
	435, 436, 0, 129, 139, 208, 0, 274, 180, 339,
	0, 171, 0, 0, 0, 0, 0, 127, 140, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 0, 209, 0,
	0, 444, 306, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	0, 0, 0, 197, 346, 0, 0, 0, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 0, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 438, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 0, 0, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 276, 418, 419, 420, 421, 422, 426, 427,
	431, 432, 441, 440, 439, 442, 443, 446, 445, 447,
	423, 424, 425, 428, 429, 430, 433, 434, 437, 435,
	436, 0, 129, 139, 208, 0, 274, 180, 339, 0,
	171, 0, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 0, 209, 0, 0,
	444, 306, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 0,
	0, 0, 197, 346, 0, 0, 0, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	0, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	438, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 276, 418, 419, 420, 421, 422, 426, 427, 431,
	432, 441, 440, 439, 442, 443, 446, 445, 447, 423,
	424, 425, 428, 429, 430, 433, 434, 437, 435, 436,
	0, 129, 139, 208, 0, 274, 180, 339, 0, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 316, 0, 0, 0, 0, 209, 0, 0, 444,
	306, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 185, 233, 143, 0, 0,
	0, 197, 346, 0, 0, 0, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 282, 252, 335, 0,
	0, 259, 281, 210, 324, 0, 333, 334, 0, 438,
	343, 348, 0, 0, 0, 303, 174, 0, 132, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 292,
	291, 0, 193, 0, 0, 0, 275, 0, 198, 131,
	314, 351, 148, 204, 319, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	336, 0, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 308, 338, 353, 151, 0,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	276, 418, 419, 420, 421, 422, 426, 427, 431, 432,
	441, 440, 439, 442, 443, 446, 445, 447, 423, 424,
	425, 428, 429, 430, 433, 434, 437, 435, 436, 0,
	129, 139, 208, 0, 274, 180, 339, 0, 171, 0,
	0, 0, 0, 0, 127, 140, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 0, 209, 0, 0, 444, 306,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 923,
	0, 926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 0, 0, 0,
	197, 346, 0, 0, 0, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 0, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 438, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 276,
	418, 419, 420, 421, 422, 426, 427, 431, 432, 441,
	440, 439, 442, 443, 446, 445, 447, 423, 424, 425,
	428, 429, 430, 433, 434, 437, 435, 436, 0, 129,
	139, 208, 0, 274, 180, 339, 0, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 276, 418,
	419, 420, 421, 422, 426, 427, 431, 432, 441, 440,
	439, 442, 443, 446, 445, 447, 423, 424, 425, 428,
	429, 430, 433, 434, 437, 435, 436, 0, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 0, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 936, 935, 945, 946, 938, 939,
	940, 941, 942, 943, 944, 937, 0, 0, 947, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 0, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 35, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 294, 276, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 1397,
	209, 0, 0, 0, 306, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 139, 208,
	79, 274, 180, 339, 124, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 0, 0, 0, 197, 346, 0, 0, 0,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 0, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 0, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 1072, 0,
	0, 0, 206, 294, 276, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 0, 209, 0, 0,
	0, 306, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 139, 208, 77, 274, 180,
	339, 612, 171, 1071, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 0,
	0, 0, 197, 346, 0, 0, 0, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	0, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	0, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	294, 276, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 0, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 139, 208, 79, 274, 180, 339, 124, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 0, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 0, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 0, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 294, 276, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 0,
	209, 0, 0, 0, 306, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 139, 208,
	79, 274, 180, 339, 612, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 0, 0, 0, 197, 346, 0, 0, 0,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 0, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 0, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 139, 208, 0, 274, 180,
	339, 0, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 0, 0, 0, 0, 209,
	0, 0, 0, 306, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 185, 233,
	143, 0, 0, 0, 197, 346, 0, 0, 0, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 282,
	252, 335, 0, 0, 259, 281, 210, 324, 0, 333,
	334, 0, 0, 343, 348, 0, 0, 0, 303, 174,
	0, 132, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 292, 291, 0, 193, 0, 0, 0, 275,
	0, 198, 131, 314, 351, 148, 204, 319, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 336, 0, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 308, 338,
	353, 151, 0, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 173, 0, 0, 0,
	0, 206, 294, 276, 163, 214, 212, 0, 0, 0,
	255, 316, 0, 0, 0, 0, 209, 0, 0, 0,
	306, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 139, 208, 0, 274, 180, 339,
	124, 171, 0, 0, 0, 0, 0, 127, 140, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 0, 0, 0,
	130, 0, 0, 0, 0, 185, 233, 143, 0, 0,
	0, 197, 346, 0, 0, 0, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 282, 252, 335, 0,
	0, 259, 281, 210, 324, 0, 333, 334, 0, 0,
	343, 348, 0, 0, 0, 303, 174, 0, 132, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 292,
	291, 0, 193, 0, 0, 0, 275, 0, 198, 131,
	314, 351, 148, 204, 319, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	336, 0, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 308, 338, 353, 151, 0,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 0, 317, 0, 0, 0, 575, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 294,
	276, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 0, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 139, 208, 0, 274, 180, 339, 124, 171, 0,
	0, 0, 0, 0, 127, 140, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 0, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 294, 276, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 0,
	209, 0, 0, 0, 306, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 139, 208,
	0, 274, 180, 339, 124, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 0, 121, 0, 197, 346, 0, 0, 0,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 0, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 0, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 294, 276, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 0, 209, 0, 0,
	0, 306, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 139, 208, 0, 274, 180,
	339, 612, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 0,
	0, 0, 197, 346, 0, 0, 0, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	0, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	0, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	294, 276, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 0, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 139, 208, 0, 274, 180, 339, 124, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 0, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 294, 276, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	0, 209, 0, 0, 0, 306, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 139,
	208, 0, 274, 180, 339, 480, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 0, 0, 0, 197, 346, 0, 0,
	0, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 0, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 0, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 294, 276, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 0, 209, 0,
	0, 0, 306, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 139, 208, 0, 274,
	180, 339, 480, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	0, 0, 0, 197, 346, 0, 0, 0, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 0, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 0, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 595, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 591, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	596, 594, 585, 586, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 294, 276, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 0, 209, 0, 0, 0, 306,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 139, 208, 0, 274, 180, 339, 480,
	171, 0, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 592, 593, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 0, 0, 0,
	197, 346, 0, 0, 0, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 0, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 0, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 1066, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 294, 276,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 0, 209, 0, 0, 0, 306, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	139, 208, 0, 274, 180, 339, 480, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 0, 0, 0, 197, 346, 0,
	0, 0, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 0, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 0, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 582, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 595, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 591, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 596, 594, 585, 586, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 592,
	593, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	35, 0, 70, 38, 39, 0, 0, 0, 35, 0,
	70, 38, 39, 0, 58, 0, 0, 0, 0, 0,
	76, 0, 58, 0, 40, 0, 0, 0, 76, 0,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 2611, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2395, 0, 0, 0,
	0, 0, 0, 0, 2395, 0, 0, 0, 0, 2549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 72, 45, 44, 47,
	0, 1140, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 2396, 0, 0, 0, 0, 0, 0, 0, 2396,
	0, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 48, 75, 74, 0, 0,
	0, 35, 46, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 57, 1082, 2397, 0, 0, 0, 0, 56, 57,
	0, 2397, 0, 0, 0, 0, 0, 65, 0, 66,
	0, 0, 0, 79, 0, 65, 0, 66, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2395, 0, 2398,
	73, 0, 52, 53, 60, 0, 61, 2398, 73, 0,
	52, 53, 60, 0, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 72, 45, 44,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 57, 0, 2397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2398, 73, 0, 52, 53, 60, 0, 61, 0, 0,
	0, 0, 418, 419, 420, 421, 422, 426, 427, 431,
	432, 441, 440, 439, 442, 443, 446, 445, 447, 423,
	424, 425, 428, 429, 430, 433, 434, 437, 435, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77,
}
var yyPact = [...]int{

	3117, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1754, -1000, -1000, -1000, -1000, -1000,
	-1000, 885, 548, -1000, 269, 235, 26892, 607, 2633, 27586,
	-1000, -1000, -1000, 192, 543, 27586, 396, 415, 1183, 1613,
	1181, 64, -56, -59, 125, 18366, 17896, -1000, 1809, 1813,
	-1000, -1000, 550, 68, -1000, -1000, -1000, 22118, 187, -1000,
	-1000, 1722, 1752, 1542, -1000, 12736, 550, 550, 26545, 28974,
	-1000, 1805, 27586, 11327, -1000, 591, 27586, -138, 537, 537,
	323, 537, 537, 601, -1000, 806, -1000, -1000, -1000, -1000,
	27586, 21649, 538, 27239, 538, 538, 538, 538, 538, 538,
	538, 27586, -1000, 661, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27586, 1179, 1634, 879, 203, -1000,
	-1000, -1000, 804, -1000, 305, 301, 303, 298, 88, 919,
	1718, -1000, 1208, 1722, 1722, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 320, 576, 180, 187, 764, -1000, 1632, 1629,
	1085, 1628, 641, 1627, 1471, -7, -1000, 1178, 27586, -1000,
	-1000, 1056, 1053, 1500, 1381, 631, 1499, -1000, -1000, 1469,
	1469, 1469, 1469, 1207, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 350, 1366,
	1406, 1498, -1000, 1479, 1693, 599, -1000, -84, 1415, -1000,
	1460, -1000, -1000, -1000, 1191, 1635, 898, 15550, 1596, -1000,
	-1000, 891, 1791, -1000, 19773, 658, -1000, 15550, 3122, 1208,
	-1000, -1000, 1208, -1000, -1000, -1000, 628, -1000, -1000, 17426,
	17426, 17426, 17426, 17426, 17426, 17426, 17426, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, -1000,
	-1000, 1208, -1000, 12267, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 15550, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 26198, 24566, 27586, 1396, 1395, -1000, -1000,
	655, 1413, -103, 28627, -1000, -1000, -1000, -1000, 27933, 24219,
	742, -1000, -1000, -1000, -1000, 1626, -1000, -1000, 652, -1000,
	1754, -1000, -1000, 1324, 353, -1000, 4165, 29509, -1000, -1000,
	-1000, 1459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27239, 1685,
	580, 1177, 853, 1175, 1173, 1172, 21649, 21649, 537, 1171,
	1412, 574, 1411, 572, 1192, 27586, 1662, 1497, 27586, 1170,
	1169, 1167, 1161, 21649, 21649, -1000, 10855, -1000, -1000, 879,
	-1000, 1109, 15550, 537, 537, 27586, 27586, 27586, 27586, -1000,
	-1000, 879, 879, -1000, 879, 787, 1790, 787, -1000, 787,
	-1000, -1000, 15550, -1000, 17426, 21180, 682, -1000, -1000, -1000,
	1153, 312, -1000, -1000, -1000, -1000, -1000, -1000, 1152, 641,
	641, -1000, 1107, 641, 1403, -1000, 735, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 641,
	-1000, 15081, -296, -1000, -1000, 1409, -1000, 274, -1000, -1000,
	536, 536, 663, 21649, 21649, 21649, -1000, 27239, -1000, -1000,
	-1000, 21649, 536, 172, 1408, 536, 21649, 21649, 1542, -1000,
	-1000, 187, -1000, -1000, 27586, -96, 22118, 1208, 9439, -1000,
	-1000, -1000, 1800, 688, 1405, -1000, -1000, 1407, -1000, 890,
	646, 948, 1556, -1000, -1000, -1000, 27586, -1000, 15550, 15550,
	1028, -1000, 22587, -1000, -1000, -1000, -1000, 8967, 709, 17426,
	914, 729, 17426, 17426, 17426, 17426, 17426, 17426, 17426, 17426,
	17426, 17426, 17426, 17426, 17426, 17426, 17426, 1035, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1150, -1000, 187, 1206,
	1206, 671, 671, 671, 671, 671, 671, 671, 23525, 1691,
	13674, 13674, 13674, 1691, 1191, 1191, 13674, 13674, 13674, 13674,
	13674, 13674, 1691, 1691, 13674, 1191, 1191, 1191, 1191, 13674,
	13674, 13674, 13674, 1691, 13674, 13674, 13674, 1691, 1191, 1321,
	800, 12267, 13674, 13674, 13674, 1191, 15550, 15550, 14612, 14143,
	16019, 13674, 13674, 1691, 843, 800, 27933, -1000, -1000, 16957,
	-1000, -1000, -1000, -1000, -1000, 1191, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27239, 27239, 13674, 13674, 13674, 13674,
	329, 27586, -1000, 1386, 1450, -1000, -1000, -1000, 1679, 23872,
	19304, -1000, 329, 1345, 24566, 27586, -1000, -1000, 24566, 27586,
	8495, 28280, 1397, -1000, -82, -101, -103, -1000, -1000, 650,
	-1000, -1000, -1000, 11797, -1000, 9911, 1722, 1542, 6135, 10383,
	-1000, 29509, 1459, -1000, -33, -1000, -1000, -1000, 1432, -1000,
	1432, 284, 31, 1432, 1432, 1432, 1432, 1432, 27, 27,
	27, 27, 34, -1000, -1000, -1000, -1000, -1000, 1458, 1456,
	-1000, 1432, 1432, 1432, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1448, 292, 1443, 1443, 1443, 1443, 1443,
	355, 355, -1000, 15550, 1474, -1000, 27586, -1000, 1653, -1000,
	291, 1451, 1379, -1000, 185, 1273, 27586, -1000, 27586, 27586,
	21649, 21649, 21649, 565, -1000, 27586, 1404, -1000, -1000, -1000,
	-1000, -1000, 1383, -1000, 1273, -1000, -1000, -1000, -1000, -1000,
	800, 1149, 1138, -1000, -1000, -1000, 795, -1000, -1000, -1000,
	879, 27586, 27586, 27586, 1673, 879, 800, 758, 1478, 1208,
	1191, -1000, -1000, 1137, -1000, 1403, 1403, -1000, 1403, 641,
	1206, 1403, -1000, 1295, 1656, 1105, 27586, -1000, 22118, -8,
	-1000, -118, 25851, -1000, -1000, -1000, 25851, -1000, 168, -1000,
	570, 1292, -1000, -1000, 25851, 115, 171, 25851, 1383, 1787,
	1691, 1191, 174, -1000, -1000, -1000, -1000, 189, 1255, 643,
	-1000, 1550, 898, 898, 15550, -1000, -1000, -1000, 9911, 1719,
	-1000, 1574, 1573, 1528, -1000, -1000, 709, 796, -1000, -1000,
	961, -1000, -1000, -1000, -1000, 642, 1208, -1000, 3474, -1000,
	-1000, -1000, -1000, 914, 17426, 17426, 17426, 758, 3474, 3372,
	901, 3296, 671, 1025, 1025, 670, 670, 670, 670, 670,
	949, 949, -1000, -1000, -1000, 1191, -1000, -1000, -1000, 13674,
	1286, -1000, -1000, 800, 640, 1286, 1286, 13674, -155, -155,
	1191, 1286, 1286, 1286, 1191, 1286, 13674, 13674, 1286, -155,
	-155, -155, -155, 1286, 1286, 1286, 1286, 13674, 1286, 1286,
	1286, 13674, -1000, 15550, -1000, 1191, 1286, 1286, 1286, -1000,
	1063, 943, 770, 1785, 1286, 767, 1783, 1286, 1258, 17426,
	17426, 17426, 1286, 1286, 13674, 831, -1000, 15550, 1191, -1000,
	1647, 1402, 1400, 1286, 1191, 1398, 1286, 1286, 181, 1208,
	-1000, 9911, 24566, 24566, 24566, 24566, 24566, -1000, 1538, 1537,
	-1000, 1531, 1511, 1515, 22118, 1290, 1191, 285, 23872, -1000,
	1208, -1000, 20711, 629, 587, 586, 585, 1762, 24566, 1282,
	-1000, 1282, -1000, 639, -1000, -1000, 27933, -103, -88, -1000,
	-1000, 1397, -1000, 1052, -1000, -1000, 800, -1000, 636, 1635,
	1691, 1390, 5663, -1000, -1000, -1000, -1000, 353, -1000, -1000,
	-1000, 1449, 4718, -1000, 1590, 685, 681, 1117, 1584, -1000,
	-1000, 718, -35, -1000, -1000, 1048, 27, 27, 1432, 1432,
	277, 1432, -1000, 27, -1000, -1000, -1000, 650, 1625, 650,
	650, 650, 650, 27, 1104, 1104, -1000, -1000, -1000, -1000,
	1047, -1000, 1448, -1000, 1046, -1000, -1000, -1000, -1000, -1000,
	-1000, 850, 1496, 27239, 187, 1672, -1000, 1776, -1000, -1000,
	614, 73, 21649, 177, 359, 197, -1000, 559, -1000, 558,
	-1000, -1000, -1000, -1000, -1000, -1000, 27586, 21649, -1000, -1000,
	1762, 1136, 1135, -1000, -1000, -1000, 787, 879, 1617, -1000,
	-1000, 17426, 21649, -1000, 294, -1000, -1000, -1000, -1000, 329,
	595, -1000, -1000, -81, -1000, -1000, 557, 632, 627, 556,
	-1000, 95, 21649, -1000, 27239, 1781, 1777, 102, 1771, 21649,
	1556, -1000, 1389, -1000, 812, 737, 815, 358, 358, -1000,
	720, 358, 324, 1668, 9439, 9439, 1548, -1000, -1000, -1000,
	27586, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8023, 13674, -1000, 758, 3474, 2291, -1000, 17426, -1000, 1286,
	13674, -155, 7551, -155, -155, 1286, -1000, 25382, -1000, -155,
	-155, -155, -155, -155, -155, 1286, 1286, -155, -1000, -1000,
	-1000, -1000, -155, -155, -155, -155, 1286, -155, -155, -155,
	1191, 800, -1000, -1000, -1000, -1000, 460, 1035, 460, 17426,
	17426, -1000, 17426, 17426, -1000, -1000, 17426, 3282, 3147, 2893,
	-196, -1000, 1367, 810, -1000, 15550, 1069, -1000, -1000, 17426,
	17426, -1000, -1000, -1000, -1000, 1495, 9911, 1208, 6607, -1000,
	27239, 1392, -1000, 733, 721, 1450, 1477, 1493, 1281, -1000,
	-1000, -1000, -1000, 1535, -1000, 1533, -1000, -1000, 1426, -1000,
	-1000, 1388, 1208, 27239, 17426, 629, -1000, 1208, 1208, 1208,
	1754, 15550, 1282, -1000, -1000, 680, -1000, -1000, -87, -124,
	-1000, -1000, -1000, 9439, -1000, 6135, -1000, 6135, -1000, 23056,
	526, 1592, 465, -1000, 1117, -1000, -1000, 1117, -1000, -1000,
	-1000, 1447, -1000, 884, -1000, -1000, -1000, -1000, -1000, 17426,
	1799, -1000, 1588, -1000, 1587, 1103, -1000, -1000, 1265, 650,
	650, 27, -1000, -1000, 1432, -1000, 650, -1000, 756, -1000,
	-1000, -1000, -1000, 650, 1284, -1000, 1280, 1387, -1000, 1263,
	109, 27586, -1000, -1000, -1000, 1492, -1000, -1000, -1000, 1259,
	1385, -1000, 4165, 1134, 1133, 1132, -201, 157, -1000, 21649,
	133, 185, 378, 1131, 27586, 21649, -1000, -1000, -1000, -1000,
	-1000, 879, -1000, 17426, 3474, 1273, -1000, -1000, 27, 27586,
	-1000, 21649, 654, 25035, 21649, 100, 162, -1000, 21649, 21649,
	1770, 21649, 1383, 1528, 174, 3833, 1117, 593, -1000, -1000,
	459, -1000, 258, 1584, 1130, 18541, 18071, 27239, 1583, 1582,
	1127, 27586, 27239, -1000, -1000, 17614, 1121, 15550, -1000, 27239,
	27239, 1208, 621, -1000, -1000, -1000, 1319, 12736, -1000, -1000,
	1191, -1000, 17426, 3474, -155, -1000, -1000, -1000, -1000, 611,
	-1000, -1000, -155, -1000, 458, -1000, -1000, -1000, -1000, -1000,
	-1000, -155, -155, -1000, -1000, -1000, -1000, -1000, -155, -1000,
	-1000, -1000, -1000, 1191, 1432, 1432, -1000, 1432, 1443, -1000,
	1432, 55, 1432, 54, 1191, 1191, 3252, 3195, 3056, 2927,
	1647, 17426, 17426, 17426, 1208, -151, -1000, 800, 15550, 2800,
	2361, -1000, 1645, 1344, 1382, -1000, -1000, 13205, 1191, 1562,
	1255, -1000, 22118, 1252, -1000, 1754, 9911, 15550, 15550, -1000,
	-1000, 15550, 1433, -1000, 15550, -1000, -1000, -1000, -1000, 27239,
	276, -1000, 15550, 1252, 1200, -1000, 27239, 27239, 27239, 1722,
	800, -1000, -1000, -1000, -1000, 5663, -1000, 1237, -1000, 1432,
	1432, 1580, -1000, 685, -1000, -1000, -1000, 27239, -1000, 3474,
	-57, -1000, -1000, -1000, -1000, -1000, -1000, 650, -1000, -1000,
	-1000, -1000, -1000, 27, 1102, 27, 1026, -1000, 1024, -1000,
	-1000, -246, 1431, -1000, 187, 27586, 164, 614, -1000, 4165,
	4165, 4165, 107, 82, -1000, 874, -1000, -1000, -1000, 1101,
	1098, 1093, 1273, 190, 863, 152, -1000, 1671, -1000, -1000,
	-1000, 3474, -68, -1000, 162, -1000, -1000, -1000, 162, -1000,
	-1000, 165, 1383, 1383, 21649, 1383, -1000, -1000, 17614, 342,
	4165, 4165, 1474, 685, 1578, 465, -1000, -1000, -1000, -1000,
	-1000, -1000, 1119, -1000, 672, -1000, 544, 342, 17614, 800,
	726, 1651, -1000, 9439, 1760, 24566, -1000, -1000, -1000, 3474,
	-1000, 7079, -1000, 1191, 1738, -1000, -1000, -1000, -1000, -1000,
	297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17426,
	17426, 17426, 17426, -1000, 1647, 1647, 1647, 17426, 1191, 1092,
	800, 17426, 17426, 1577, -1000, 1208, -1000, -1000, 1208, 188,
	-1000, 27239, 1722, -1000, 800, 800, 800, 27239, 800, 1235,
	-1000, 1208, 18835, -1000, 22118, 1229, 1229, 1229, -1000, 609,
	23056, 1650, 1650, -1000, 1117, -1000, 1223, -1000, -1000, 650,
	-1000, 650, 1257, 1230, -1000, 23056, -1000, 1716, -1000, 164,
	-1000, 1091, 245, 251, -1000, 243, 241, 234, 221, 215,
	-1000, -1000, -1000, -1000, 386, 107, -1000, -40, 986, 339,
	1621, 82, -1000, 982, 979, 958, 954, 184, -1000, -1000,
	-1000, -1000, 193, 185, -1000, 377, 1088, 1606, 1602, 1667,
	1667, 99, 1383, 1297, 1226, -1000, -1000, 1118, -1000, -1000,
	1430, 1117, 1428, -1000, 1116, -1000, -1000, 27239, -1000, 342,
	1643, 1641, 1208, -1000, 1757, 1736, 1282, 12736, -1000, -1000,
	-1000, 15550, -1000, -1000, 1647, 1647, 1647, 1647, -1000, -1000,
	-1000, 170, -1000, -1000, 1647, 1647, 1797, -1000, 1382, 1208,
	-1000, 187, -1000, -1000, 1221, -1000, 27239, -1000, -1000, 629,
	-1000, -1000, -1000, 609, -1000, 1115, 720, 1087, -1000, -1000,
	-1000, -1000, 346, -1000, -1000, -1000, -1000, 1216, -1000, 281,
	29615, -1000, -1000, -1000, -1000, -1000, -1000, 1612, 1611, 262,
	-1000, 1084, 1080, -1000, 349, 976, 665, -160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 362,
	1114, -1000, 143, -1000, -1000, 545, 1594, 1597, 1734, -1000,
	21649, -1000, -1000, 24566, -1000, -1000, 718, 718, 23056, 1474,
	23056, -1000, -1000, -1000, 17426, -1000, 318, -1000, 15550, 15550,
	1760, -1000, 1342, -1000, -1000, -1000, -1000, 1191, 161, -217,
	-1000, -1000, 9911, 1382, 1191, -1000, -1000, -1000, -1000, -1000,
	935, -1000, 27586, 609, 271, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15550, 15550, 5191, 29615, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 934, -1000, -1000,
	960, 354, 141, -1000, 1666, -1000, 1426, 915, 1602, 1730,
	1598, 1599, -1000, 1073, -203, 1282, 1205, 1425, 1202, 3474,
	1198, -1000, 27239, -1000, 800, 1364, -1000, 800, 1757, -1000,
	-163, -1000, 1547, -199, -221, 1362, -1000, -1000, 1418, -1000,
	609, 280, -1000, 1005, 953, 217, 206, 3374, -1000, -1000,
	-1000, -1000, -299, -1000, 122, -1000, 120, -1000, -1000, -1000,
	1072, -1000, 1604, -1000, 1059, -1000, 1729, 1728, -1000, 176,
	1760, 609, 23056, 609, -1000, 318, 1560, 15550, -1000, 1191,
	200, 200, -1000, 1546, -1000, 27239, -1000, 1113, 1112, 903,
	-1000, 15550, 29615, 1715, 1709, 1702, 1636, 9439, 29452, -1000,
	-1000, -1000, -1000, -1000, 1045, 920, 20242, 1757, -1000, 1190,
	-1000, -1000, 313, -1000, -1000, -1000, 196, -1000, -250, 229,
	-251, -1000, 1206, -1000, -205, 1187, 230, -1000, -1000, 855,
	29615, -1000, 892, -300, 395, 187, 598, 17426, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 89, 1273, -1000, 609, 299,
	862, -1000, -1000, -1000, -1000, -1000, 27239, -219, 1490, -1000,
	-1000, -1000, -1000, -1000, -1000, 29615, -1000, -301, 29615, 224,
	-1000, -1000, -1000, 29444, -1000, -1000, -1000, -1000, 169, -1000,
	-1000, 3474, 21649, -1000, 1208, 196, -1000, -226, 1484, 1483,
	1766, -1000, -302, 4772, -303, 535, 29615, 768, -1000, 15550,
	-1000, 598, -1000, 1273, 16488, -1000, -1000, -1000, 1778, -1000,
	1794, 645, 645, 4728, 848, 29615, -1000, -304, 534, 29615,
	-1000, 841, -1000, 1647, 1191, -1000, -1000, -1000, 357, 1044,
	-1000, -1000, -1000, 4495, -1000, -305, 29615, -1000, -1000, -1000,
	-1000, -1000, 477, 4487, -306, -1000, 472, 29615, -1000,
}
var yyPgo = [...]int{

	0, 2160, 2156, 47, 2155, 184, 2154, 2153, 2152, 24,
	21, 11, 26, 2151, 1905, 1901, 1899, 1893, 1891, 2150,
	29, 2149, 2148, 1887, 2147, 2144, 1883, 1879, 1874, 1871,
	2143, 2142, 2141, 1869, 1867, 18, 2140, 10, 2139, 3,
	142, 167, 2138, 2, 2136, 2135, 8, 2134, 2133, 1858,
	2130, 2124, 2118, 95, 2115, 1840, 1838, 2112, 1836, 1834,
	2105, 2103, 1832, 1828, 1821, 2101, 164, 2100, 2099, 2097,
	155, 93, 148, 2096, 2095, 2093, 117, 78, 3049, 111,
	58, 125, 858, 2092, 17, 61, 2091, 2090, 135, 138,
	2086, 159, 2085, 94, 105, 100, 2084, 2083, 162, 2082,
	2081, 2079, 136, 2078, 2077, 2977, 2075, 2074, 151, 2072,
	71, 45, 33, 2071, 2070, 2069, 2068, 2067, 23, 1087,
	2066, 2065, 144, 2063, 2062, 83, 2061, 2060, 171, 2059,
	2058, 2057, 143, 52, 2056, 67, 2055, 50, 76, 2054,
	43, 2050, 139, 2049, 2045, 19, 14, 2044, 39, 2042,
	46, 2040, 140, 109, 811, 2039, 16, 20, 15, 44,
	64, 75, 127, 103, 30, 40, 120, 97, 86, 34,
	2038, 150, 2037, 99, 158, 134, 137, 154, 2019, 2018,
	2016, 987, 2015, 123, 96, 2014, 106, 963, 170, 118,
	2012, 90, 2011, 2009, 2007, 88, 116, 2006, 2004, 42,
	35, 1022, 1862, 28, 153, 2003, 41, 1999, 1998, 2937,
	104, 84, 110, 1996, 108, 36, 53, 1995, 1991, 1990,
	1986, 1984, 1983, 1671, 1982, 1981, 1977, 1974, 112, 63,
	1973, 1970, 131, 98, 1969, 1967, 1966, 1965, 130, 77,
	152, 1964, 115, 160, 166, 1963, 69, 1962, 1955, 55,
	49, 1954, 1953, 1951, 107, 87, 1950, 68, 32, 38,
	70, 6, 72, 89, 1949, 31, 1944, 4, 5, 9,
	1943, 1942, 1941, 1940, 1939, 1938, 1937, 81, 1935, 1931,
	62, 1930, 1928, 1927, 37, 1925, 1924, 1913, 141, 119,
	57, 163, 114, 13, 1911, 1907, 7, 1903, 121, 1895,
	51, 1889, 56, 1881, 1876, 60, 1863, 1861, 59, 1856,
	1851, 161, 1548, 217, 1846, 156, 165, 54, 92, 1844,
	1842, 0, 972, 168, 145, 1826, 1824,
}
var yyR1 = [...]int{

	0, 320, 320, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 86, 87, 87, 91, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 323, 323, 100, 100, 98, 98, 99, 99,
	166, 166, 12, 12, 12, 171, 171, 176, 176, 176,
	179, 179, 179, 179, 158, 159, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 294, 294,
	303, 303, 303, 304, 304, 302, 302, 302, 302, 302,
	306, 306, 307, 307, 305, 305, 305, 305, 309, 309,
	310, 310, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 297, 297, 297, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 311,
	311, 311, 311, 312, 312, 313, 313, 314, 314, 315,
	315, 315, 315, 316, 316, 316, 316, 316, 317, 317,
	317, 317, 317, 317, 317, 318, 318, 319, 319, 2,
	275, 275, 276, 276, 277, 277, 277, 277, 278, 278,
	279, 279, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 24, 198, 198, 296, 296, 296, 296, 290,
	290, 290, 292, 292, 291, 291, 291, 293, 293, 298,
	298, 298, 298, 298, 300, 300, 300, 300, 300, 300,
	301, 301, 301, 299, 299, 47, 47, 48, 48, 48,
	151, 151, 151, 13, 13, 13, 13, 13, 19, 21,
	21, 36, 36, 37, 22, 22, 22, 22, 38, 38,
	39, 25, 25, 25, 25, 25, 25, 45, 45, 45,
	44, 44, 43, 43, 43, 43, 43, 43, 23, 23,
	23, 23, 46, 46, 41, 41, 40, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 26,
	26, 26, 26, 26, 26, 18, 274, 274, 274, 35,
	35, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	51, 251, 252, 252, 252, 252, 252, 252, 252, 252,
	239, 239, 240, 216, 216, 216, 216, 216, 216, 216,
	216, 215, 215, 215, 215, 219, 219, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 218, 218, 218,
	218, 218, 218, 218, 218, 220, 220, 220, 220, 220,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 222, 222, 222, 222, 222,
	222, 222, 222, 238, 238, 223, 223, 232, 232, 233,
	233, 233, 230, 230, 231, 231, 226, 227, 234, 228,
	228, 228, 229, 229, 229, 237, 237, 237, 237, 224,
	241, 241, 261, 261, 260, 260, 259, 259, 259, 250,
	250, 256, 256, 256, 256, 256, 256, 256, 245, 245,
	245, 244, 244, 246, 246, 249, 249, 258, 258, 257,
	257, 242, 242, 242, 262, 262, 262, 262, 262, 243,
	243, 243, 243, 263, 247, 247, 248, 248, 248, 268,
	269, 267, 267, 267, 267, 267, 115, 115, 115, 253,
	253, 253, 254, 254, 254, 255, 255, 255, 272, 272,
	271, 271, 49, 50, 54, 54, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	150, 150, 150, 196, 196, 266, 264, 264, 265, 265,
	15, 15, 52, 52, 295, 295, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 270, 270, 270, 17, 17,
	55, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 83, 185, 185, 184, 184,
	183, 183, 183, 186, 186, 186, 213, 213, 213, 57,
	57, 61, 61, 64, 64, 64, 62, 63, 27, 28,
	28, 28, 28, 29, 197, 197, 59, 59, 60, 60,
	60, 60, 75, 75, 325, 325, 58, 326, 66, 67,
	67, 68, 68, 68, 189, 189, 72, 72, 72, 70,
	70, 70, 71, 71, 77, 77, 81, 81, 81, 81,
	80, 80, 80, 80, 153, 153, 153, 154, 154, 155,
	155, 155, 156, 156, 157, 157, 157, 157, 157, 123,
	123, 205, 205, 205, 204, 204, 204, 204, 85, 85,
	88, 88, 89, 89, 89, 89, 92, 136, 136, 109,
	109, 110, 110, 110, 110, 110, 121, 121, 165, 165,
	164, 164, 167, 167, 90, 90, 90, 90, 95, 95,
	96, 96, 97, 97, 195, 195, 211, 211, 211, 101,
	101, 101, 103, 102, 102, 102, 102, 104, 104, 106,
	107, 107, 105, 105, 108, 111, 111, 111, 111, 112,
	112, 82, 82, 82, 82, 82, 82, 82, 182, 182,
	114, 114, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 131, 131, 131, 131, 131, 131, 116, 116,
	116, 116, 116, 116, 116, 76, 76, 132, 132, 132,
	94, 93, 93, 79, 79, 78, 78, 133, 133, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 126, 126, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 324, 324, 128, 127, 127, 127, 127, 127,
	127, 73, 73, 73, 73, 73, 212, 212, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 143, 143, 74, 74, 141, 141, 142, 144, 144,
	140, 140, 140, 118, 118, 118, 118, 118, 118, 118,
	118, 120, 120, 120, 145, 145, 134, 134, 84, 146,
	146, 147, 148, 148, 149, 149, 152, 160, 160, 160,
	161, 161, 161, 161, 122, 122, 162, 162, 162, 117,
	117, 117, 117, 117, 117, 117, 163, 163, 163, 163,
	168, 168, 135, 135, 138, 138, 137, 139, 169, 169,
	173, 173, 170, 170, 174, 174, 174, 174, 177, 177,
	178, 178, 178, 175, 175, 175, 172, 172, 172, 208,
	208, 208, 180, 180, 190, 190, 187, 187, 188, 188,
	181, 181, 225, 225, 194, 194, 193, 193, 193, 191,
	191, 191, 192, 192, 206, 206, 202, 202, 207, 207,
	203, 203, 209, 209, 210, 210, 273, 273, 235, 235,
	283, 283, 236, 236, 284, 284, 286, 286, 281, 281,
	282, 282, 285, 285, 30, 287, 287, 288, 288, 289,
	289, 289, 289, 31, 32, 32, 32, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 321,
	322,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	2, 2, 2, 1, 3, 0, 3, 1, 3, 0,
	1, 1, 1, 1, 3, 1, 3, 3, 0, 2,
	5, 5, 5, 7, 5, 0, 3, 0, 3, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 4, 0, 3, 1, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 6, 5, 5,
	4, 3, 5, 1, 3, 1, 1, 1, 1, 1,
	0, 2, 2, 1, 1, 1, 1, 1, 4, 5,
	8, 1, 2, 5, 7, 10, 8, 11, 1, 2,
	5, 5, 5, 5, 6, 3, 5, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 2, 4,
	2, 4, 2, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 0, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 2, 3, 1, 0,
	3, 3, 0, 2, 2, 2, 1, 2, 1, 2,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 2, 4, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 8,
	0, 1, 2, 0, 1, 7, 1, 3, 8, 8,
	3, 3, 3, 5, 3, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 4, 3, 5, 5, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 3, 5, 7, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 1, 1, 2,
	1, 1, 1, 2, 4, 4, 1, 1, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 8, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var yyChk = [...]int{

	-1000, -320, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 131, -50, 134, 133, 170, 135, 163, 64,
	265, -64, 268, 269, -325, -197, 216, 217, 20, 37,
	270, 272, 31, 32, 185, 233, 235, -5, -86, -6,
	8, 363, 132, 266, 165, 164, 26, 415, -321, 68,
	478, -148, 15, -66, -326, -66, -66, -66, -66, -66,
	-251, -195, 106, 68, 23, -192, 144, 87, 354, 140,
	-198, 229, 231, -190, -191, 193, 203, 44, 151, 150,
	141, 229, 141, 142, 144, 354, 140, 178, 177, 229,
	231, 141, -105, -209, 72, -200, 154, 426, 254, 412,
	132, 241, 190, 265, 279, 281, 273, 308, 296, 413,
	427, 155, 211, 139, 294, 297, 341, 153, 244, 204,
	428, 330, 336, 214, 268, 350, 429, 156, 208, 210,
	209, 198, 215, 36, 166, 292, 250, 285, 219, 193,
	430, 420, 283, 28, 188, 431, 338, 313, 253, 432,
	417, 248, 337, 288, 284, 137, 157, 151, 434, 314,
	318, 435, 342, 234, 436, 437, 438, 143, 240, 277,
	278, 439, 194, 344, 245, 312, 33, 152, 414, 48,
	175, 345, 38, 316, 37, 322, 440, 311, 306, 323,
	441, 442, 443, 444, 258, 256, 257, 259, 310, 276,
	305, 206, 53, 138, 320, 319, 321, 207, 340, 301,
	299, 445, 446, 249, 158, 447, 448, 286, 18, 449,
	450, 348, 169, 251, 252, 42, 451, 452, 453, 173,
	454, 455, 456, 339, 315, 317, 192, 457, 289, 148,
	458, 255, 459, 264, 416, 238, 382, 346, 282, 460,
	272, 174, 168, 349, 461, 217, 462, 463, 464, 160,
	465, 232, 231, 269, 381, 270, 332, 212, 466, 467,
	468, 469, 202, 187, 352, 343, 52, 216, 327, 470,
	275, 150, 218, 471, 242, 266, 43, 7, 205, 246,
	333, 213, 203, 303, 176, 472, 473, 290, 291, 309,
	274, 304, 267, 178, 179, 170, 262, 351, 328, 418,
	229, 298, 295, 182, 302, 474, 144, 475, 183, 271,
	347, 243, 293, 329, 141, 124, 297, 341, 131, 331,
	332, 338, -245, 339, 177, 180, -213, 141, -185, 330,
	234, 255, 387, 183, 184, 142, 143, 33, 343, 342,
	334, -209, 145, 271, -75, 135, 171, -105, -46, 72,
	218, -46, 30, 72, 72, 36, 72, 270, 333, 333,
	75, 416, 186, 21, -312, -293, 264, -311, -291, 8,
	159, 6, 9, -296, 74, 72, -200, -201, 383, 384,
	385, 386, 387, 400, 401, 402, 388, 389, 403, 404,
	405, 390, 391, 406, 407, 409, 410, 408, 181, 394,
	393, 392, 395, 396, 51, 398, 397, 399, 21, -312,
	-293, 264, 6, -68, 5, -181, 146, 267, -87, -91,
	-211, -209, -201, 74, -3, -161, 17, 16, -72, 54,
	55, -67, -80, 115, -82, -209, -113, 89, -119, 29,
	72, -200, 24, -118, -201, -114, -140, -139, -94, 124,
	125, 126, 113, 114, 121, 90, 127, -126, -124, -125,
	-127, -129, -130, 74, 73, 82, 75, 76, 77, 78,
	83, 383, 384, 385, 386, 387, 400, 401, 402, 388,
	389, 403, 404, 405, 390, 391, 406, 407, 409, 410,
	408, 394, 393, 392, 395, 396, 398, 397, 399, 84,
	85, -202, -137, -321, 58, 59, 171, 140, 364, 365,
	366, 367, 368, 411, 161, 372, 92, 47, 353, 362,
	361, 360, 358, 359, 355, 357, 356, 374, 375, 147,
	354, 119, 363, -181, -181, 11, -98, -99, -105, -108,
	-209, -170, 267, -177, -174, 342, 343, -175, -178, -172,
	-140, 322, 455, 456, 341, 297, 340, -202, -209, -2,
	-5, 6, -105, -252, -240, -243, -203, 156, -263, -202,
	-199, 153, 72, -200, 247, 136, 162, 88, 419, 23,
	25, 237, 325, 383, 91, 124, 384, 385, 386, 16,
	20, 92, 123, 81, 364, 186, 387, 131, 62, 380,
	355, 357, 353, 354, 331, 29, 10, 26, 164, 197,
	22, 117, 133, 95, 96, 97, 167, 24, 165, 260,
	85, 161, 433, 19, 65, 11, 180, 233, 13, 378,
	379, 14, 230, 147, 146, 108, 195, 142, 60, 8,
	127, 27, 105, 56, 388, 389, 422, 45, 185, 423,
	58, 106, 17, 358, 359, 31, 411, 390, 172, 424,
	391, 119, 200, 63, 50, 236, 89, 83, 34, 86,
	66, 87, 15, 196, 61, 376, 239, 261, 177, 199,
	425, 159, 107, 134, 363, 263, 235, 59, 140, 6,
	373, 30, 163, 394, 393, 392, 395, 201, 57, 366,
	367, 396, 476, 141, 94, 374, 375, 145, 84, 5,
	44, 32, 9, 64, 67, 360, 361, 362, 47, 51,
	398, 397, 399, 93, 12, 377, 415, 181, 142, -105,
	363, -188, 147, -188, 178, 177, -188, -188, 141, 98,
	-52, -105, -295, -290, -296, -187, 147, -202, -187, -187,
	-187, -187, -187, -187, -187, -105, 128, -105, 72, 30,
	-186, 106, 12, 354, 140, 141, 178, 144, -247, 11,
	108, 181, 181, 181, 182, 181, -184, 333, 335, 179,
	336, 337, 12, -83, 106, 19, -321, -161, -161, 72,
	270, 145, -60, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -41, -40, -42, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 30,
	-274, 68, -235, 322, 72, -287, -288, -105, 75, 75,
	66, 66, 69, 145, 69, 66, -313, 68, -313, -313,
	-313, 71, 66, 69, 255, 66, 11, 66, -66, -7,
	-5, -321, 21, 22, 141, 346, 69, 23, -321, -322,
	70, -162, 19, 31, -122, 75, 78, -149, -152, -82,
	-209, 50, -70, 21, 22, 80, 11, -205, 88, 87,
	105, -204, 23, 72, -200, -201, 74, 128, -82, -116,
	108, 89, 106, 107, 91, 110, 109, 120, 113, 114,
	115, 116, 117, 118, 119, 111, 112, 123, 98, 99,
	100, 101, 102, 103, 104, -182, -321, -94, -321, 129,
	130, -119, -119, -119, -119, -119, -119, -119, -119, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -3, -133,
	-82, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -143, -82, -321, -324, -128, -321,
	-324, -128, -324, -128, -324, -321, -324, -128, -324, -128,
	-324, -324, -128, -324, -321, -321, -321, -321, -321, -321,
	-107, 27, -105, -85, -88, -89, -90, -109, -93, -321,
	-105, -94, -105, -98, -323, 69, 11, 67, -323, 69,
	128, 69, -171, -176, 344, 346, 267, -175, -175, -208,
	-202, 74, 29, 98, 30, 128, -148, -66, 70, 69,
	-243, 156, 153, -215, -219, -221, -220, -222, -217, -218,
	294, 297, 301, 299, 295, 300, 124, 298, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 30,
	166, 290, 291, 292, 293, 314, 315, 316, 317, 318,
	319, 320, 321, 273, 296, 413, 274, 275, 276, 277,
	278, 279, 281, 282, 283, 284, 285, 286, 287, 288,
	72, -201, -263, 68, -202, 23, 144, 72, 89, 72,
	72, 72, -299, -298, -290, -293, -188, 72, 69, 145,
	69, 145, 71, -98, 24, 66, -100, -105, 72, 72,
	72, 72, -292, -290, -293, -210, -209, -199, -186, 74,
	-82, -188, -188, -105, -105, -105, -105, -186, -186, -186,
	-183, 11, 108, 11, -183, -183, -82, -119, -290, 356,
	115, 72, 72, 270, 72, -41, -41, 74, -41, 69,
	98, -41, 70, -133, -273, 477, 69, -289, 23, 346,
	347, 323, -315, 141, 180, 177, -315, -311, -292, -291,
	-290, -314, -202, -296, -315, 233, 69, -315, -292, -290,
	-72, -3, -105, 347, 348, -91, -93, -321, -163, -203,
	9, 108, 69, 18, 69, -160, 25, 26, 128, -120,
	51, 75, 78, -189, 49, -105, -82, -82, -131, 83,
	89, 84, 85, -204, 115, -210, -203, -199, -119, -132,
	-137, -94, 79, 108, 106, 107, 91, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -212, 72, 74, 72, -118, -118, -202, -70,
	-78, -81, 115, -82, -209, -78, -78, -70, -322, -322,
	-81, -78, -78, -78, -81, -78, -70, -70, -78, -322,
	-322, -322, -322, -78, -78, -78, -78, -70, -78, -78,
	-78, -70, -322, 69, -322, -3, -78, -78, -78, -322,
	-82, -82, -140, 74, -78, -140, 74, -78, -119, 369,
	370, 371, -78, -78, -70, -141, -142, 93, -140, -322,
	-119, -202, -202, -78, -79, -78, -78, -78, -166, 173,
	-105, 30, 69, -101, -103, -102, -104, 56, 60, 62,
	57, 58, 59, 63, -195, -85, -92, 47, -321, -110,
	173, -111, 23, -211, 64, 146, 65, -166, 67, -85,
	-105, -85, -108, -209, 115, -174, -177, 69, 345, 347,
	348, -171, -229, 123, 66, 86, -82, -203, -210, -161,
	-72, -253, -254, -255, -203, 74, 75, -240, -241, -242,
	-243, -256, 156, -262, 148, 150, 44, -244, 157, 142,
	45, -216, -230, 328, -223, 68, -223, -223, 302, 294,
	297, 295, -223, -223, -223, -223, -223, -228, 297, -228,
	-228, -228, -228, 295, 68, 68, -223, -223, -223, -232,
	68, -232, 289, -233, 68, -233, -233, -233, -233, -263,
	-263, -82, -206, 67, -158, -105, 24, -47, 190, 162,
	68, -294, 69, 29, -300, 230, -105, -105, -105, -290,
	-290, -296, -270, 160, 155, -105, 69, 69, 72, 72,
	-248, 11, 108, -186, -209, -209, -105, -121, 23, -186,
	-76, 167, 67, -324, -322, 72, -40, -118, 70, -106,
	27, 74, -288, -211, 322, 347, -316, 115, -202, -316,
	-319, 415, 145, 70, 69, -316, 251, 233, -316, 11,
	-70, -322, -54, -53, 136, 133, 134, 138, 139, -266,
	325, 132, 174, -322, 69, 128, 52, -122, -122, -152,
	-180, 19, 11, 47, 47, -71, 57, 83, 84, 85,
	128, -321, -132, -119, -119, -119, -76, 88, -322, -78,
	69, -322, 128, -322, -322, -78, -153, 376, -153, -322,
	-322, -322, -322, -322, -322, -78, -78, -322, -153, -153,
	-153, -153, -322, -322, -322, -322, -78, -322, -322, -322,
	-79, -82, -322, -322, -322, -322, 69, 67, 23, 11,
	11, -322, 11, 11, -322, -322, 11, -119, -119, -119,
	-322, -322, -78, -144, -142, 95, -82, -322, -322, 69,
	69, -322, -322, -322, -322, -117, 30, 47, -321, -3,
	-321, -169, -173, -140, -199, -88, -89, -89, -88, -89,
	56, 56, 56, 61, 56, 61, 56, -102, -211, -322,
	-322, -136, 189, -321, 34, -211, -111, 142, 142, 142,
	-112, 12, -85, -112, -112, 128, -176, -179, 349, 346,
	352, 72, 74, 128, -162, 69, -255, 98, -243, 68,
	72, -249, -201, 45, -244, 142, 45, -244, -249, 72,
	-249, 45, 83, 89, -226, -227, -234, -237, -224, 29,
	66, 325, 148, 45, 44, 81, -231, 329, 75, -228,
	-228, -223, -223, -223, 302, -223, -228, -229, 30, -229,
	-229, -229, -229, -228, -238, 74, -238, 75, -232, 75,
	70, 66, -202, -3, 23, -48, 8, 9, 10, -275,
	-276, -277, 72, 108, 195, 196, -303, 263, -298, 231,
	240, 88, 16, 415, 145, 145, -105, -290, -112, 72,
	72, -183, -186, 34, -119, -293, 183, 184, -166, 141,
	-289, 145, 128, 128, 145, 254, -292, -202, 11, 11,
	251, 11, -292, -189, 69, -196, -244, -272, -242, -243,
	-271, 149, 156, 157, -196, 156, 153, -244, 157, 148,
	149, -193, -244, 145, 23, -196, -196, -250, 98, -196,
	173, 23, -203, -203, 53, -105, -77, -159, 115, -203,
	-79, -76, 88, -119, -322, -81, -154, -153, 115, -210,
	-154, -154, -322, -202, -321, -153, -154, -154, -153, -153,
	-153, -322, -322, -153, -154, -154, -154, -154, -322, -154,
	-154, -154, -322, -214, 124, 294, 166, 292, 285, 312,
	299, 327, 290, 328, -212, -214, -119, -119, -119, -119,
	-119, 11, 11, 11, 412, -148, 97, -82, 94, -119,
	-119, -168, 66, -169, -135, -138, -137, -321, -3, -322,
	-163, 6, 415, -167, -202, -112, 69, 98, 98, -96,
	-95, 66, 67, -97, 66, -95, 56, 56, -165, 68,
	69, -137, -321, -167, -119, -111, -321, -321, -321, -148,
	-82, -112, 346, 350, 351, -254, -255, -258, -257, -202,
	-201, 148, -262, 44, -262, -249, -249, 68, 83, -119,
	9, 45, 45, 74, 70, -229, -229, -228, -223, -229,
	72, 124, -229, 70, 69, 70, 69, 70, 69, -115,
	431, 89, -105, -158, -158, 66, 70, 69, -215, 72,
	72, 72, -306, 415, 236, -304, -302, 242, 243, 244,
	245, 246, -293, 241, -300, 238, 74, 72, -105, -290,
	-186, -119, -228, -105, -292, 115, 115, -202, -292, 251,
	-318, 415, -292, -292, 11, -292, -71, -53, 68, -239,
	72, -201, -249, -191, 148, 72, 72, 72, -201, 72,
	-201, -202, 45, 45, 72, -105, -202, -239, 72, -82,
	-202, -202, -93, 128, -112, 11, 69, -80, -322, -119,
	-154, 128, -154, -148, 173, -154, -154, -154, -322, -223,
	-223, -223, -233, -223, 278, -223, 278, -322, -322, 19,
	19, 19, 19, -322, -119, -119, -119, -321, -74, 373,
	-82, 69, 69, 28, -168, 69, -322, -322, 47, -322,
	-322, 69, -148, -173, -82, -82, -82, 68, -82, -164,
	-202, 189, -322, -111, -195, -164, -164, -164, -161, 70,
	69, -223, -223, 45, -246, -244, -164, -125, -229, -228,
	74, -228, 75, 75, 431, 68, -3, -105, -278, -279,
	-280, 81, 414, 89, 197, 198, 158, 199, 200, 201,
	-277, -215, -215, -215, -309, -310, -308, 239, 260, 261,
	247, -307, -305, 256, 257, 258, 259, 88, 74, 74,
	74, -301, 230, 88, 239, 16, 23, -281, -184, -318,
	-318, 233, -292, -77, -239, -150, 161, 162, -215, -215,
	-206, -246, 45, 72, -194, 145, 23, 145, -150, -239,
	30, 133, 27, -203, -145, 13, -85, -159, -159, 115,
	-322, 16, -228, 72, -119, -119, -119, -119, -322, -322,
	-322, -119, -322, 74, -119, -119, 45, -138, -135, 47,
	-3, -321, -202, -161, -164, 70, 69, -137, -110, -211,
	-322, -322, -322, -260, -259, 67, 152, 81, -257, -160,
	-160, -249, 70, -229, -229, 70, 70, -258, -158, 19,
	-158, -280, 74, 201, 197, 201, 201, 201, 201, 202,
	-297, 81, 237, -308, 248, 437, 232, 263, 75, 75,
	262, 31, 32, -305, 75, 75, 75, 75, -302, 16,
	415, -300, 238, 74, 74, -282, 38, -284, 39, -317,
	23, -317, 251, 11, 70, 72, -216, -216, 68, -249,
	68, 72, -202, -150, 29, 29, -321, -146, 14, 16,
	-112, -80, -133, -322, -322, -322, -322, -73, 108, 415,
	-322, -322, 9, -135, -3, 70, -202, -111, -259, 72,
	-250, 74, 159, 70, 188, -20, -3, -9, -10, -11,
	-12, -14, -49, -15, -16, -21, -22, -17, -55, -56,
	-64, -62, -63, -59, -58, -25, -23, -26, -18, -27,
	-28, -29, -33, -34, -24, 92, 147, 219, 265, 36,
	36, 193, 194, 74, 74, 29, 249, 127, 29, 75,
	127, 380, 238, 74, 72, 239, -225, 146, -285, 43,
	-283, -236, 42, 16, -290, -85, -258, -206, -258, -119,
	-264, -265, 173, -147, -82, -134, -84, -82, -145, -159,
	-148, -322, 413, 63, 416, -169, -322, 75, -105, -261,
	-260, 189, -158, -82, -82, 72, -45, -207, 222, 223,
	224, -203, -35, -20, 75, 29, 75, 29, 252, 239,
	23, -165, 75, -284, 16, -286, 40, 41, 74, 415,
	-112, 70, 68, 70, -322, 69, -202, 69, -146, -155,
	381, 382, 53, 414, 417, 68, -151, 191, 192, -36,
	-37, 93, 94, 220, 221, 225, -215, 69, 478, 250,
	250, 74, 38, 74, 16, 16, 231, -145, -261, -258,
	-261, -265, 47, -84, -322, -156, 91, -157, 262, 380,
	-123, 75, 127, -156, 53, -164, -158, 72, 72, 97,
	95, -37, -82, -35, 19, 19, 19, 29, -203, 97,
	-20, 74, 74, 29, 236, 21, -293, -146, 70, 175,
	-157, 457, 433, 189, 457, 433, -118, 415, 70, -13,
	-19, -12, -9, -10, -11, 265, 92, -35, 94, 478,
	-46, 75, -3, -44, -43, 75, -46, 227, 89, 228,
	72, -119, 253, -261, 176, 88, -202, 416, -268, -269,
	66, -158, -35, 478, -35, 97, 95, -38, -39, 96,
	-20, 69, 226, -293, -321, -157, 417, -269, 66, -268,
	66, 10, 9, 478, 97, 478, 147, -35, 97, 95,
	-39, -82, -43, -119, 172, -267, 160, 155, 158, 30,
	-267, 97, 92, 478, 147, -35, 94, -322, -322, 154,
	29, 83, 97, 478, -35, 147, 97, 478, 147,
}
var yyDef = [...]int{

	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 657, 657, 657, 657, 657,
	657, 744, -2, 522, 0, 0, 0, 0, -2, 630,
	631, 632, 636, 637, 652, 654, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1050, 0, 655, 644, 645, 0, 0, 1519,
	2, 990, 0, 666, 659, 0, 1050, 1050, 0, 0,
	86, 0, 0, 0, 745, 0, 0, 0, 1048, 1048,
	0, 1048, 1048, 0, 1063, 0, 1045, 1059, 1060, 1061,
	0, 0, 1046, 0, 1046, 1046, 1046, 1046, 1046, 1046,
	1046, 0, 579, 762, 1072, 1073, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 0, 0, 0, 623, 0, 589,
	590, 591, 0, 593, 0, 0, 0, 0, 0, 603,
	606, 610, 0, 990, 990, 468, 469, 470, 627, 628,
	617, 629, 0, 0, 0, 0, 0, 656, 278, 280,
	0, 300, 0, 303, 306, 1078, 638, 0, 0, 1103,
	1104, 0, 0, 0, 0, 0, 1408, 153, 217, 155,
	155, 155, 155, 216, 205, 206, 207, 208, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 0, 0,
	0, 1408, 657, 0, 661, 0, 1051, 633, 44, 45,
	0, 746, 747, 748, 0, 996, 0, 0, 669, 667,
	668, 658, 0, 680, 701, 0, 771, 0, 776, 778,
	-2, -2, 0, 819, 820, 821, 822, 823, 824, 0,
	0, 0, 0, 0, 0, 0, 0, 848, 849, 850,
	851, 852, 853, 963, 964, 965, 966, 967, 968, 969,
	970, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 780,
	781, 960, 1017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 951, 0, 922, 922,
	922, 922, 922, 922, 922, 922, 922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 68,
	762, 72, 1467, 0, 1022, -2, -2, 1024, 0, 0,
	0, -2, -2, -2, -2, 1280, -2, 960, 0, 87,
	982, 657, 88, 0, 342, 343, 0, 1292, 492, 1070,
	1071, 1282, 1066, 1067, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1048, 0,
	560, 0, 561, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 580, 581, 623,
	583, 0, 0, 1048, 1048, 0, 0, 0, 0, 494,
	495, 623, 623, 596, 623, 620, 0, 620, 600, 620,
	618, 619, 0, 605, 0, 0, 0, 613, 614, 639,
	0, 0, 646, 648, 649, 650, 651, 647, 0, 0,
	0, 282, 0, 0, 302, 284, 0, 287, 288, 289,
	290, 291, 292, 293, 294, 295, 296, 297, 298, 0,
	305, 0, 1076, 1079, 643, 1094, 1095, 0, 1105, 1106,
	159, 159, 0, 0, 0, 0, 149, 0, 150, 151,
	152, 215, 159, 0, 0, 159, 0, 0, 666, 41,
	51, 0, 662, 663, 0, 0, 0, 0, 0, 50,
	1520, 36, 0, 0, 991, 994, 995, 983, 984, 987,
	0, 0, 664, 670, 671, 660, 0, 681, 0, 0,
	0, 702, 0, 704, 705, 706, 707, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 798, 799,
	800, 801, 802, 803, 804, 777, 0, 791, 0, 0,
	0, 840, 841, 842, 843, 844, 845, 846, 0, 669,
	0, 0, 0, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 0, 0, 669, 0, 0,
	817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 952, 0, 905, 914, 0,
	906, 915, 907, 916, 908, 0, 909, 917, 910, 918,
	911, 912, 919, 913, 0, 0, 0, 813, 0, 0,
	70, 0, 761, 0, 708, 710, 711, 712, -2, 0,
	765, 811, -2, 0, 0, 0, 62, 63, 0, 0,
	0, 0, 73, 75, 0, 0, 1467, 1025, 1026, 442,
	1039, 1040, 1041, 0, 1037, 0, 990, 666, 509, 0,
	344, 0, 0, 353, 432, 362, 363, 364, 425, 366,
	425, 425, 0, 425, 425, 425, 425, 425, 439, 439,
	439, 439, 439, 408, 409, 410, 411, 412, 0, 0,
	385, 425, 425, 425, 389, 415, 416, 417, 418, 419,
	420, 421, 422, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 427, 427, 429, 429, 429, 429, 429,
	0, 0, 491, 0, 1064, 84, 0, 92, 0, 93,
	0, 0, 98, 233, 219, 97, 0, 204, 0, 0,
	0, 0, 210, 575, 1047, 0, 568, 64, 569, 570,
	571, 572, 573, 212, 574, 763, 1074, 1075, 582, 624,
	625, 0, 0, 586, 587, 588, 496, 594, 595, 602,
	623, 0, 0, 0, 726, 623, 604, 805, 607, 922,
	0, 641, 640, 0, 653, 279, 281, 283, 301, 0,
	0, 304, 307, 0, 0, 0, 0, 1097, 0, 1099,
	1101, 0, 0, 160, 161, 162, 0, 154, 177, 218,
	0, 0, 157, 214, 0, 0, 0, 0, 147, 0,
	669, 0, 0, 634, 635, 46, 47, 0, 0, 1006,
	997, 0, 0, 0, 0, 986, 988, 989, 0, 0,
	971, 0, 0, 672, 665, 38, 772, 773, 775, 792,
	0, 794, 796, 703, 682, 0, 961, -2, 782, 783,
	807, 808, 809, 0, 0, 0, 0, 805, 787, 0,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 839, 936, 937, 0, 837, 838, 847, 0,
	0, 815, 676, 677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 813, 810, 0, 1016, 0, 0, 0, 0, 887,
	0, 0, 822, 963, 0, 822, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 958, 955, 0, 0, 923,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 0,
	760, 0, 0, 0, 0, 0, 0, 749, 0, 0,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	1394, 721, 0, 765, 0, 0, 0, 769, 0, 769,
	67, 769, 69, 0, 764, 1023, 0, 0, 0, 78,
	79, 74, 1027, 0, 1033, 1034, 1035, 961, 0, 996,
	669, 341, 510, 512, 515, 516, 517, 345, 347, 348,
	349, 0, -2, 483, 1404, 1446, -2, 475, 1321, -2,
	-2, 352, 434, 433, 365, 0, 439, 439, 425, 425,
	425, 425, 394, 439, 397, 400, 401, 442, 0, 442,
	442, 442, 442, 439, 0, 0, 386, 387, 388, 377,
	0, 378, 427, 380, 0, 381, 382, 383, 384, 489,
	490, 0, 0, 0, 0, 0, 1049, 0, 235, 236,
	180, 100, 0, 0, 220, 0, 340, 0, 562, 0,
	564, 209, 566, 576, 577, 567, 0, 0, 584, 585,
	769, 0, 0, 597, 621, 622, 620, 623, 0, 601,
	615, 0, 0, 608, 0, 642, 285, 286, 308, 70,
	0, 1077, 1096, 0, 1100, 1102, 0, 163, 165, 0,
	141, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	664, 52, 523, 524, -2, 553, 1056, 553, 553, 541,
	459, 553, 0, 0, 0, 0, 0, 992, 993, 985,
	0, 1042, 1043, 972, 973, 85, 673, 793, 795, 797,
	0, 813, 784, 805, 788, 0, 785, 0, 779, 0,
	0, 687, 0, 687, 687, 0, 873, 0, 874, 0,
	687, 687, 0, 0, 0, 0, 0, 0, 880, 881,
	882, 883, 687, 687, 687, 687, 0, 687, 687, 687,
	0, 818, -2, 884, 885, 886, 0, 0, 0, 0,
	0, 929, 0, 0, 930, 895, 0, 0, 0, 0,
	0, 901, 982, 0, 956, 0, 0, 904, 924, 0,
	0, 925, 926, 927, 928, 1010, 0, 0, 0, 1001,
	0, 769, 1018, 0, 0, 709, 740, 742, 0, 737,
	750, 751, 753, 0, 755, 0, 757, 758, 728, 715,
	812, 716, 0, 0, 0, 765, 725, 0, 0, 0,
	982, 0, 769, 60, 61, 0, 76, 77, 0, 0,
	83, 443, 444, 0, 179, 0, 513, 0, 346, 0,
	476, 0, 0, 461, 475, 471, 472, 475, 466, 476,
	467, 0, 354, 0, 356, 357, 358, 359, 360, 0,
	0, 438, 0, 446, 448, 0, 361, 435, 0, 442,
	442, 439, 392, 393, 425, 398, 442, 402, 0, 403,
	404, 405, 406, 442, 0, 423, 0, 0, 379, 0,
	506, 0, 1065, 84, 84, 0, 237, 238, 239, 0,
	181, 182, 0, 0, 0, 0, 110, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 65, 213, 592, 497,
	498, 623, 599, 0, 806, 609, 611, 612, 439, 0,
	1098, 0, 0, 0, 0, 0, 175, 158, 0, 0,
	0, 0, 148, 672, 0, 0, 475, 0, 542, 543,
	0, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 1058, 0, 0, 0, 460, 0,
	0, 0, 1008, 1007, 998, 37, 769, 0, 683, 962,
	0, 786, 0, 789, 687, 816, 858, 688, 678, 0,
	859, 860, 687, 684, 982, 875, 862, 863, 876, 877,
	878, 687, 687, 879, 867, 866, 865, 868, 687, 871,
	870, 872, 854, 0, 425, 425, 941, 425, 429, 944,
	425, 946, 425, 949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 953, 903, 959, 0, 0,
	0, 53, 0, 1010, 999, 1012, 1014, 0, 0, 0,
	0, -2, 1259, 0, 732, 982, 0, 0, 0, 734,
	741, 0, 0, 735, 0, 736, 754, 756, 713, 0,
	0, 717, 0, 0, -2, 724, 0, 0, 0, 990,
	770, 59, 80, 81, 82, 511, 514, 0, 477, 425,
	425, 0, 481, 473, 482, 463, 465, 0, 355, 436,
	0, 445, 447, 449, 426, 390, 391, 442, 399, 395,
	440, 441, 407, 439, 0, 439, 0, 430, 0, 493,
	507, 0, 0, 90, 0, 0, 188, 0, 184, 0,
	0, 0, 118, 0, 101, 102, 103, 105, 106, 0,
	0, 0, 99, 0, 222, 0, 225, 226, 563, 565,
	598, 727, 1088, 759, 175, 164, 166, 167, 175, 178,
	142, 0, 143, 145, 0, 144, 85, 525, 0, 550,
	0, 0, 1064, 473, 0, -2, 528, 533, 534, 535,
	536, 537, 0, 548, 0, 530, 0, 550, 0, 545,
	0, 0, 48, 0, 974, 0, 85, 85, 855, 790,
	857, 0, 861, 0, 0, 856, 864, 869, 888, 938,
	439, 942, 943, 945, 947, 948, 950, 890, 889, 0,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 0,
	957, 0, 0, 0, 54, 0, 1015, -2, 0, 0,
	71, 0, 990, 1019, 1020, 1021, 738, 0, 743, 0,
	730, 0, 765, 722, 0, 0, 0, 0, 58, 451,
	0, 987, 987, 462, 475, 474, 0, 437, 396, 442,
	424, 442, 0, 0, 508, 0, 84, 0, 84, 189,
	190, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	183, 185, 186, 187, 136, 119, 120, 0, 0, 0,
	0, 111, 112, 0, 0, 0, 0, 0, 107, 108,
	109, 221, 0, 0, 224, 0, 0, 1090, 1084, 168,
	168, 0, 146, 0, 0, 527, 551, 0, 353, 353,
	0, 475, 0, 544, 0, 1054, 1055, 0, 539, 550,
	0, 0, 0, 1009, 979, 0, 769, 0, 674, 679,
	685, 0, 939, 940, 0, 0, 0, 0, 897, 898,
	899, 931, 902, 954, 0, 0, 0, 1013, 1000, 0,
	1004, 0, 733, 57, 0, 729, 0, 718, 720, 765,
	766, 767, 768, 450, 454, 0, 459, 0, 478, 479,
	480, 464, 0, 413, 414, 428, 431, 0, 91, 0,
	0, 191, 192, 193, 194, 196, 197, 0, 0, 0,
	96, 0, 0, 121, 0, 0, 0, 0, 131, 132,
	133, 134, 135, 113, 114, 115, 116, 117, 104, 0,
	0, 223, 0, 228, 229, 1052, 1092, -2, 0, 139,
	0, 140, 176, 0, 526, 552, 350, 351, 0, 1064,
	0, 529, 538, 540, 0, 547, 0, 42, 0, 0,
	974, 85, 982, 891, 893, 892, 894, 0, 0, 0,
	920, 921, 0, 1003, 0, 739, 731, 723, 455, 456,
	0, 458, 0, 452, 0, 84, 311, 312, 313, 314,
	315, 316, 317, 318, 319, 320, 321, 322, 323, 324,
	325, 326, 327, 328, 329, 330, 331, 332, 333, 334,
	335, 336, 337, 338, 339, 0, 0, 0, 0, 198,
	199, 200, 201, 137, 138, 122, 123, 0, 125, 126,
	0, 0, 0, 231, 0, 227, 728, 0, 1084, 0,
	1086, 0, 1083, 0, 169, 769, 0, 0, 0, 546,
	0, 556, 0, 980, 981, 975, 976, 978, 979, 675,
	689, 900, 0, 0, 0, 1011, -2, 457, 0, 89,
	453, 240, 95, 0, 0, 1066, 0, 0, 267, 268,
	269, 1068, 0, 309, 0, 127, 0, 129, 130, 230,
	0, 35, 0, 1091, 0, 1089, 0, 0, 1085, 0,
	974, 452, 0, 452, 555, 0, 0, 0, 43, 0,
	0, 0, 932, 0, 935, 0, 84, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 265, 0, 0, 124,
	128, 232, 1053, 1093, 0, 0, 0, 979, 531, 0,
	549, 557, 0, 977, 686, 690, 0, 693, 0, 0,
	0, 699, 0, 691, 933, 0, 0, 241, 242, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 1069, 202,
	310, 1087, 1081, 170, 171, 172, 174, 40, 452, 0,
	0, 694, 695, 696, 697, 698, 0, 0, 484, 84,
	243, 244, 245, 246, 247, 0, 249, 0, 0, 0,
	261, 262, 263, 0, 270, 272, 273, 274, 0, 276,
	277, 266, 0, 532, 0, 0, 700, 0, 485, 486,
	0, 94, 0, 0, 0, 0, 0, 0, 258, 0,
	264, 0, 275, 173, 0, 692, 934, 487, 0, 488,
	0, 0, 0, 0, 0, 253, 254, 0, 0, 0,
	259, 0, 271, 0, 0, 499, 501, 502, 0, 0,
	500, 248, 250, 0, 256, 0, 0, 558, 559, 503,
	504, 505, 0, 0, 0, 255, 0, 260, 257,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 478,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:469
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:476
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:510
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:516
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:522
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:529
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:535
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:546
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:559
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:575
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:585
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:591
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:595
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:621
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:633
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:669
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:673
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:683
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:712
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:716
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:726
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:733
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:752
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:756
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:770
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:783
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:794
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:813
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:817
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:821
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:825
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:833
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:845
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:849
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:868
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:886
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:890
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:918
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:922
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:931
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:955
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:959
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:968
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:972
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:982
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:996
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1008
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1020
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1045
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1060
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1065
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1069
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1073
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1079
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1084
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1088
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1092
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1133
		{
			yyVAL.strs = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantAssumption = nil
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1220
		{
			yyVAL.boolean = false
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.boolean = true
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1229
		{
			yyVAL.boolean = false
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yyVAL.boolean = true
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1240
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1248
		{
			yyVAL.procedureParams = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.characteristics = nil
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1337
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1352
		{
			yyVAL.str = ""
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1388
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1392
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1448
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1452
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1456
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1460
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1466
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1478
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1486
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1492
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1496
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1500
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1510
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = BeforeStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = AfterStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = InsertStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = UpdateStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = DeleteStr
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.triggerOrder = nil
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1543
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1563
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1569
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 250:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1573
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1589
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1595
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 255:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1600
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 256:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1605
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 257:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1611
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1629
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1635
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1639
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1643
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1647
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1655
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1680
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1716
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &Resignal{}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.exprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.exprs = nil
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1911
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1938
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.sqlVal = nil
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2345
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2349
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2367
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2375
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2384
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.colKeyOpt = colKey
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2462
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2466
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.indexOptions = nil
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2495
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2520
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2574
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = yyDollar[1].str
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = ""
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2597
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2607
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 484:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2627
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 485:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2631
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 486:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2635
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 487:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2639
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 488:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2643
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2657
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2667
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.boolean = true
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.boolean = true
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.boolean = false
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = yyDollar[1].str
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = string("")
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2807
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2824
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2830
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2837
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2848
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2852
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 531:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2857
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 532:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2861
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2893
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2900
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2922
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2927
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2931
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2939
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 549:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2943
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2950
		{
			yyVAL.columnOrder = nil
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2963
		{
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
		}
	case 555:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2969
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2985
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2989
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3009
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3021
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3027
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3035
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3039
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3047
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3055
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3063
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3071
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3079
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3087
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3096
		{

		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3114
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3125
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3130
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3138
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3142
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3146
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3154
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3162
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3166
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3170
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3174
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3178
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3182
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3186
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3190
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3194
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3199
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3204
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3208
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3212
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3220
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3234
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3238
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3243
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3247
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3256
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3260
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3280
		{
			yyVAL.boolean = false
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.boolean = true
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3290
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3314
		{
			yyVAL.showFilter = nil
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3322
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = SessionStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = GlobalStr
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3342
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.statement = &Begin{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.statement = &Begin{}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3366
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3370
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.statement = &Commit{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.statement = &Rollback{}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3388
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3398
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3402
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3406
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3412
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3440
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3460
		{
			setAllowComments(yylex, true)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3470
		{
			yyVAL.bytes2 = nil
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3474
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = UnionStr
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = UnionAllStr
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = UnionDistinctStr
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3493
		{
			yyVAL.byt = 0
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.byt = 1
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = SQLCacheStr
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = DistinctStr
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.str = StraightJoinHint
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3546
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3569
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3575
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3587
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3593
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3597
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 686:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3601
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3607
		{
			yyVAL.over = nil
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.over = yyDollar[1].over
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3616
		{
			yyVAL.frame = nil
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3631
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3702
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3707
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3733
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3739
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3757
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3773
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3779
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3789
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3800
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3815
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3819
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3823
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3838
		{
			yyVAL.expr = nil
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3847
		{
			yyVAL.columns = nil
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3851
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3861
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3892
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3904
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3910
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3914
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3916
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3919
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.empty = struct{}{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = JoinStr
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.str = JoinStr
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = JoinStr
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = StraightJoinStr
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = LeftJoinStr
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = LeftJoinStr
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = RightJoinStr
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = RightJoinStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = NaturalJoinStr
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3988
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3994
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4014
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.indexHints = nil
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4023
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4027
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4031
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4036
		{
			yyVAL.expr = nil
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4050
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4054
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4104
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4108
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4112
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4120
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4124
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 790:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4128
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = IsNullStr
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = IsNotNullStr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = IsTrueStr
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = IsNotTrueStr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = IsFalseStr
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = IsNotFalseStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = EqualStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.str = LessThanStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = GreaterThanStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = LessEqualStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = GreaterEqualStr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = NotEqualStr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4193
		{
			yyVAL.expr = nil
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4197
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4233
		{
			yyVAL.selectExprs = nil
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4340
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4352
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4356
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4378
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4406
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 855:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4410
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4420
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4428
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4464
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4509
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4513
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4525
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4533
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4560
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4564
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 891:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 892:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 898:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 900:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4704
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4708
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4737
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4741
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4745
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = ""
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = BooleanModeStr
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = QueryExpansionStr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4787
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4795
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4807
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4813
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4817
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4825
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4829
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4837
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = nil
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = string("")
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4871
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = nil
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4894
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &NullVal{}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4947
		{
			yyVAL.exprs = nil
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = nil
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4987
		{
			yyVAL.orderBy = nil
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5007
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = AscScr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = AscScr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = DescScr
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5025
		{
			yyVAL.limit = nil
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5029
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5033
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5037
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5052
		{
			yyVAL.str = ""
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.str = ForUpdateStr
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5060
		{
			yyVAL.str = ShareModeStr
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5073
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5077
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5085
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5090
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5094
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5098
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5105
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5117
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5122
		{
			yyVAL.assignExprs = nil
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5126
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5136
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5146
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5152
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5168
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5172
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5187
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5208
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5221
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5234
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5240
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5244
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5250
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5264
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5268
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5272
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5279
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &Default{}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5303
		{
			yyVAL.byt = 0
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.byt = 1
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5308
		{
			yyVAL.byt = 0
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5310
		{
			yyVAL.byt = 1
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5313
		{
			yyVAL.byt = 0
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5315
		{
			yyVAL.byt = 1
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = ""
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
			yyVAL.str = IgnoreStr
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5323
		{
			yyVAL.sqlVal = nil
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
			yyVAL.empty = struct{}{}
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.empty = struct{}{}
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5334
		{
			yyVAL.empty = struct{}{}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5336
		{
			yyVAL.empty = struct{}{}
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.empty = struct{}{}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = UniqueStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5344
		{
			yyVAL.str = FulltextStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.str = SpatialStr
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = ""
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5354
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5356
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5370
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5374
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5398
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = string("")
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5408
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5413
		{
			yyVAL.EnclosedBy = nil
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5417
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5422
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5431
		{
			yyVAL.sqlVal = nil
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5435
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5440
		{
			yyVAL.sqlVal = nil
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5444
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5449
		{
			yyVAL.Fields = nil
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5453
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5458
		{
			yyVAL.Lines = nil
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5462
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5467
		{
			yyVAL.sqlVal = nil
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5471
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5477
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5487
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5493
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5497
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.lockType = LockRead
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5507
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.lockType = LockWrite
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5515
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5527
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5535
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5986
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
