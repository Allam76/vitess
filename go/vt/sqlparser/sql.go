// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:61
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	boolean               bool
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const STATUS = 57504
const VARIABLES = 57505
const WARNINGS = 57506
const SEQUENCE = 57507
const EACH = 57508
const ROW = 57509
const BEFORE = 57510
const FOLLOWS = 57511
const PRECEDES = 57512
const DEFINER = 57513
const INVOKER = 57514
const INOUT = 57515
const OUT = 57516
const DETERMINISTIC = 57517
const CONTAINS = 57518
const READS = 57519
const MODIFIES = 57520
const SQL = 57521
const SECURITY = 57522
const CLASS_ORIGIN = 57523
const SUBCLASS_ORIGIN = 57524
const MESSAGE_TEXT = 57525
const MYSQL_ERRNO = 57526
const CONSTRAINT_CATALOG = 57527
const CONSTRAINT_SCHEMA = 57528
const CONSTRAINT_NAME = 57529
const CATALOG_NAME = 57530
const SCHEMA_NAME = 57531
const TABLE_NAME = 57532
const COLUMN_NAME = 57533
const CURSOR_NAME = 57534
const SIGNAL = 57535
const SQLSTATE = 57536
const BEGIN = 57537
const START = 57538
const TRANSACTION = 57539
const COMMIT = 57540
const ROLLBACK = 57541
const BIT = 57542
const TINYINT = 57543
const SMALLINT = 57544
const MEDIUMINT = 57545
const INT = 57546
const INTEGER = 57547
const BIGINT = 57548
const INTNUM = 57549
const REAL = 57550
const DOUBLE = 57551
const FLOAT_TYPE = 57552
const DECIMAL = 57553
const NUMERIC = 57554
const DEC = 57555
const FIXED = 57556
const PRECISION = 57557
const TIME = 57558
const TIMESTAMP = 57559
const DATETIME = 57560
const YEAR = 57561
const CHAR = 57562
const VARCHAR = 57563
const BOOL = 57564
const CHARACTER = 57565
const VARBINARY = 57566
const NCHAR = 57567
const NVARCHAR = 57568
const NATIONAL = 57569
const VARYING = 57570
const TEXT = 57571
const TINYTEXT = 57572
const MEDIUMTEXT = 57573
const LONGTEXT = 57574
const LONG = 57575
const BLOB = 57576
const TINYBLOB = 57577
const MEDIUMBLOB = 57578
const LONGBLOB = 57579
const JSON = 57580
const ENUM = 57581
const GEOMETRY = 57582
const POINT = 57583
const LINESTRING = 57584
const POLYGON = 57585
const GEOMETRYCOLLECTION = 57586
const MULTIPOINT = 57587
const MULTILINESTRING = 57588
const MULTIPOLYGON = 57589
const NULLX = 57590
const AUTO_INCREMENT = 57591
const APPROXNUM = 57592
const SIGNED = 57593
const UNSIGNED = 57594
const ZEROFILL = 57595
const LOCAL = 57596
const COLLATION = 57597
const DATABASES = 57598
const SCHEMAS = 57599
const TABLES = 57600
const FULL = 57601
const PROCESSLIST = 57602
const COLUMNS = 57603
const FIELDS = 57604
const ENGINES = 57605
const PLUGINS = 57606
const NAMES = 57607
const CHARSET = 57608
const GLOBAL = 57609
const SESSION = 57610
const ISOLATION = 57611
const LEVEL = 57612
const READ = 57613
const WRITE = 57614
const ONLY = 57615
const REPEATABLE = 57616
const COMMITTED = 57617
const UNCOMMITTED = 57618
const SERIALIZABLE = 57619
const CURRENT_TIMESTAMP = 57620
const DATABASE = 57621
const CURRENT_DATE = 57622
const CURRENT_USER = 57623
const CURRENT_TIME = 57624
const LOCALTIME = 57625
const LOCALTIMESTAMP = 57626
const UTC_DATE = 57627
const UTC_TIME = 57628
const UTC_TIMESTAMP = 57629
const REPLACE = 57630
const CONVERT = 57631
const CAST = 57632
const SUBSTR = 57633
const SUBSTRING = 57634
const GROUP_CONCAT = 57635
const SEPARATOR = 57636
const TIMESTAMPADD = 57637
const TIMESTAMPDIFF = 57638
const OVER = 57639
const WINDOW = 57640
const GROUPING = 57641
const GROUPS = 57642
const AVG = 57643
const BIT_AND = 57644
const BIT_OR = 57645
const BIT_XOR = 57646
const COUNT = 57647
const JSON_ARRAYAGG = 57648
const JSON_OBJECTAGG = 57649
const MAX = 57650
const MIN = 57651
const STDDEV_POP = 57652
const STDDEV = 57653
const STD = 57654
const STDDEV_SAMP = 57655
const SUM = 57656
const VAR_POP = 57657
const VARIANCE = 57658
const VAR_SAMP = 57659
const CUME_DIST = 57660
const DENSE_RANK = 57661
const FIRST_VALUE = 57662
const LAG = 57663
const LAST_VALUE = 57664
const LEAD = 57665
const NTH_VALUE = 57666
const NTILE = 57667
const ROW_NUMBER = 57668
const PERCENT_RANK = 57669
const RANK = 57670
const MATCH = 57671
const AGAINST = 57672
const BOOLEAN = 57673
const LANGUAGE = 57674
const WITH = 57675
const QUERY = 57676
const EXPANSION = 57677
const UNUSED = 57678
const ARRAY = 57679
const DESCRIPTION = 57680
const EMPTY = 57681
const EXCEPT = 57682
const JSON_TABLE = 57683
const LATERAL = 57684
const MEMBER = 57685
const RECURSIVE = 57686
const ACTIVE = 57687
const ADMIN = 57688
const BUCKETS = 57689
const CLONE = 57690
const COMPONENT = 57691
const DEFINITION = 57692
const ENFORCED = 57693
const EXCLUDE = 57694
const FOLLOWING = 57695
const GEOMCOLLECTION = 57696
const GET_MASTER_PUBLIC_KEY = 57697
const HISTOGRAM = 57698
const HISTORY = 57699
const INACTIVE = 57700
const INVISIBLE = 57701
const LOCKED = 57702
const MASTER_COMPRESSION_ALGORITHMS = 57703
const MASTER_PUBLIC_KEY_PATH = 57704
const MASTER_TLS_CIPHERSUITES = 57705
const MASTER_ZSTD_COMPRESSION_LEVEL = 57706
const NESTED = 57707
const NETWORK_NAMESPACE = 57708
const NOWAIT = 57709
const NULLS = 57710
const OJ = 57711
const OLD = 57712
const OPTIONAL = 57713
const ORDINALITY = 57714
const ORGANIZATION = 57715
const OTHERS = 57716
const PATH = 57717
const PERSIST = 57718
const PERSIST_ONLY = 57719
const PRECEDING = 57720
const PRIVILEGE_CHECKS_USER = 57721
const PROCESS = 57722
const RANDOM = 57723
const REFERENCE = 57724
const REQUIRE_ROW_FORMAT = 57725
const RESOURCE = 57726
const RESPECT = 57727
const RESTART = 57728
const RETAIN = 57729
const REUSE = 57730
const ROLE = 57731
const SECONDARY = 57732
const SECONDARY_ENGINE = 57733
const SECONDARY_LOAD = 57734
const SECONDARY_UNLOAD = 57735
const SKIP = 57736
const SRID = 57737
const THREAD_PRIORITY = 57738
const TIES = 57739
const UNBOUNDED = 57740
const VCPU = 57741
const VISIBLE = 57742
const SYSTEM = 57743
const INFILE = 57744

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 42,
	-2, 4,
	-1, 36,
	140, 858,
	-2, 114,
	-1, 43,
	179, 455,
	180, 455,
	-2, 445,
	-1, 50,
	1, 1257,
	420, 1257,
	-2, 475,
	-1, 416,
	126, 866,
	-2, 862,
	-1, 417,
	126, 867,
	-2, 863,
	-1, 518,
	96, 1182,
	126, 1182,
	-2, 78,
	-1, 519,
	96, 1084,
	126, 1084,
	-2, 79,
	-1, 524,
	96, 1040,
	126, 1040,
	-2, 825,
	-1, 526,
	96, 1122,
	126, 1122,
	-2, 827,
	-1, 733,
	5, 42,
	-2, 469,
	-1, 737,
	5, 42,
	-2, 468,
	-1, 931,
	1, 527,
	5, 527,
	12, 527,
	13, 527,
	14, 527,
	15, 527,
	17, 527,
	19, 527,
	30, 527,
	31, 527,
	55, 527,
	56, 527,
	57, 527,
	58, 527,
	59, 527,
	61, 527,
	62, 527,
	65, 527,
	66, 527,
	68, 527,
	69, 527,
	420, 527,
	-2, 554,
	-1, 934,
	66, 59,
	68, 59,
	-2, 63,
	-1, 1129,
	126, 869,
	-2, 865,
	-1, 1289,
	67, 321,
	-2, 1006,
	-1, 1292,
	67, 317,
	70, 317,
	-2, 941,
	-1, 1293,
	67, 318,
	70, 318,
	-2, 951,
	-1, 1371,
	67, 390,
	70, 390,
	-2, 361,
	-1, 1417,
	5, 43,
	-2, 620,
	-1, 1478,
	5, 42,
	-2, 802,
	-1, 1575,
	5, 42,
	-2, 80,
	-1, 1723,
	1, 575,
	5, 575,
	12, 575,
	13, 575,
	14, 575,
	15, 575,
	17, 575,
	19, 575,
	30, 575,
	31, 575,
	55, 575,
	56, 575,
	57, 575,
	58, 575,
	59, 575,
	61, 575,
	62, 575,
	65, 575,
	66, 575,
	68, 575,
	69, 575,
	420, 575,
	-2, 554,
	-1, 1846,
	5, 43,
	-2, 803,
	-1, 1875,
	5, 42,
	-2, 80,
	-1, 1935,
	5, 42,
	-2, 805,
	-1, 1973,
	41, 876,
	-2, 874,
	-1, 2020,
	5, 42,
	-2, 167,
	-1, 2073,
	5, 43,
	-2, 806,
}

const yyPrivate = 57344

const yyLast = 23588

var yyAct = [...]int{

	450, 60, 2187, 2156, 2076, 2082, 2166, 2083, 2023, 7,
	2157, 2022, 6, 1336, 2021, 5, 2063, 2109, 2024, 8,
	1736, 1913, 1991, 1947, 1857, 1973, 1334, 365, 421, 345,
	1630, 1806, 1704, 72, 1402, 1897, 514, 1529, 449, 1879,
	1294, 1737, 1243, 1104, 2077, 1245, 1247, 395, 1705, 856,
	1785, 1270, 408, 1290, 711, 1286, 363, 721, 1583, 434,
	1241, 60, 1276, 1701, 962, 1275, 535, 93, 1401, 1310,
	1188, 1504, 533, 1710, 1096, 400, 1714, 1154, 1042, 1361,
	1607, 346, 347, 1652, 1193, 350, 1282, 1167, 1072, 1115,
	1566, 1185, 756, 1606, 762, 1225, 1062, 1326, 698, 947,
	529, 946, 1131, 1232, 512, 936, 419, 530, 797, 517,
	1322, 520, 806, 404, 362, 676, 509, 872, 2209, 927,
	2205, 2195, 2178, 423, 2176, 2161, 2152, 2112, 1297, 873,
	71, 1090, 1767, 1873, 2169, 2102, 2155, 2070, 2140, 2101,
	531, 928, 2069, 1669, 1447, 1831, 675, 1732, 1733, 1265,
	1266, 76, 2001, 821, 820, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 1880, 29, 832, 95, 29,
	29, 1513, 1731, 1882, 1512, 401, 948, 1514, 949, 1264,
	724, 725, 78, 79, 80, 81, 82, 723, 349, 348,
	1476, 747, 703, 709, 463, 1549, 469, 471, 470, 467,
	468, 466, 465, 464, 1296, 1298, 678, 1477, 681, 88,
	1934, 472, 473, 29, 1686, 61, 32, 33, 1302, 1304,
	1298, 1303, 1311, 1316, 1920, 1311, 1822, 69, 1323, 1820,
	69, 69, 61, 32, 33, 29, 69, 61, 32, 33,
	360, 352, 1885, 2078, 1970, 1969, 1968, 1967, 1966, 57,
	2020, 3, 1964, 1965, 34, 67, 1584, 414, 1343, 34,
	702, 706, 90, 92, 708, 2018, 87, 2047, 2048, 2106,
	2107, 720, 97, 96, 69, 718, 719, 2154, 1883, 1884,
	1886, 1887, 1888, 1342, 717, 726, 716, 727, 724, 725,
	1382, 2064, 1585, 680, 679, 342, 69, 704, 707, 2139,
	705, 1632, 1226, 2191, 1381, 1948, 73, 1898, 1899, 2016,
	961, 356, 94, 1907, 1740, 1612, 961, 961, 1950, 2042,
	960, 2210, 710, 710, 2208, 2201, 2207, 1790, 2196, 1523,
	2179, 343, 677, 1018, 710, 686, 358, 2050, 359, 359,
	1250, 1252, 60, 60, 1908, 1386, 1588, 1032, 1527, 1603,
	734, 1023, 1503, 736, 1380, 1502, 735, 1501, 36, 63,
	40, 39, 42, 673, 755, 103, 99, 100, 1813, 101,
	751, 316, 98, 1530, 2043, 1805, 1586, 1587, 739, 740,
	844, 845, 1517, 1556, 1509, 1756, 1420, 1406, 1390, 1949,
	43, 66, 65, 1325, 1311, 1102, 2002, 41, 1301, 1260,
	1627, 60, 105, 104, 955, 1378, 1372, 1373, 961, 1371,
	961, 1374, 1375, 1766, 961, 942, 841, 1271, 701, 843,
	89, 1251, 1527, 1527, 812, 764, 2189, 749, 2068, 2190,
	1527, 2188, 793, 1906, 694, 1881, 2148, 1757, 810, 56,
	832, 2044, 64, 1526, 47, 48, 1384, 1387, 1099, 854,
	95, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 1836, 871, 874, 874, 874, 880, 874, 874,
	880, 874, 880, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 748, 932, 1653,
	68, 1063, 62, 68, 68, 1379, 712, 1526, 1526, 68,
	1626, 805, 1541, 102, 1623, 1526, 1352, 731, 1428, 62,
	1425, 1614, 1612, 1631, 62, 714, 1620, 1546, 1545, 1619,
	1622, 1377, 842, 822, 520, 1364, 832, 950, 1527, 700,
	926, 1655, 944, 795, 97, 96, 1615, 68, 1542, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 738, 1547, 803, 1539, 682, 728, 1671, 2194, 68,
	1540, 1383, 875, 877, 879, 881, 883, 885, 886, 888,
	805, 1685, 733, 737, 876, 878, 1186, 882, 884, 1025,
	887, 85, 2182, 2167, 2181, 1019, 1064, 823, 824, 825,
	826, 827, 828, 829, 822, 1657, 940, 832, 1138, 685,
	1661, 1353, 1656, 2149, 1654, 935, 1101, 417, 1385, 1659,
	715, 931, 1744, 1136, 1137, 1135, 1424, 959, 84, 1544,
	2202, 699, 1658, 1526, 844, 845, 844, 845, 800, 1614,
	1612, 794, 27, 2086, 961, 1660, 1662, 1616, 1613, 1186,
	1169, 1436, 825, 826, 827, 828, 829, 822, 730, 110,
	832, 1423, 110, 1422, 1615, 2110, 1100, 2129, 110, 2128,
	2074, 2137, 846, 847, 848, 849, 850, 851, 852, 853,
	804, 803, 2203, 804, 803, 1872, 110, 710, 804, 803,
	1871, 855, 1571, 1569, 710, 710, 710, 69, 805, 110,
	1550, 805, 110, 538, 2136, 110, 805, 1134, 2115, 710,
	710, 688, 689, 690, 691, 692, 110, 399, 538, 2092,
	1121, 1123, 1124, 357, 110, 1828, 1122, 1112, 2015, 410,
	821, 820, 830, 831, 823, 824, 825, 826, 827, 828,
	829, 822, 1963, 710, 832, 843, 1403, 1404, 1405, 1543,
	1113, 1044, 1155, 1114, 1156, 1927, 907, 908, 909, 910,
	911, 895, 896, 897, 912, 913, 898, 899, 900, 906,
	914, 901, 902, 903, 904, 905, 917, 916, 915, 918,
	919, 921, 920, 922, 1869, 1088, 1046, 1515, 1362, 1516,
	743, 1749, 1033, 804, 803, 1567, 1368, 1086, 1107, 1047,
	2198, 1942, 2141, 506, 507, 1058, 1059, 1049, 1050, 1066,
	1067, 805, 742, 821, 820, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 810, 750, 832, 2127, 804,
	803, 1108, 804, 803, 60, 1105, 1106, 1784, 2126, 2151,
	1786, 804, 803, 2013, 1132, 804, 803, 805, 2111, 858,
	805, 2110, 1091, 1863, 2138, 1109, 1982, 1128, 1094, 805,
	1942, 2135, 1976, 805, 2097, 750, 1863, 2094, 1095, 1129,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	1045, 1127, 832, 1175, 1178, 1863, 2017, 1051, 1052, 1053,
	1187, 804, 803, 1942, 2009, 804, 803, 1530, 1673, 1110,
	1978, 1786, 1060, 1061, 1572, 1942, 1953, 1942, 750, 805,
	1125, 1904, 1801, 805, 1863, 1862, 1162, 1164, 1849, 750,
	804, 803, 1172, 1244, 1389, 750, 1957, 932, 1797, 1133,
	1794, 932, 1793, 1791, 110, 1777, 1093, 1776, 805, 538,
	538, 1158, 1159, 750, 943, 1775, 1764, 1763, 1760, 1761,
	1956, 538, 1595, 1161, 1760, 1759, 1197, 1198, 1418, 750,
	1844, 1594, 520, 1204, 1205, 1206, 1207, 1183, 1350, 1255,
	1639, 1505, 1349, 1257, 1157, 1199, 110, 1201, 1069, 1070,
	1249, 821, 820, 830, 831, 823, 824, 825, 826, 827,
	828, 829, 822, 1229, 750, 832, 1163, 1365, 938, 1044,
	1272, 1041, 1277, 531, 1040, 1208, 1209, 1163, 750, 1772,
	1213, 1039, 1129, 1216, 1038, 710, 1030, 710, 1221, 1028,
	1253, 1027, 1026, 1019, 1273, 1024, 696, 1640, 809, 958,
	957, 1505, 353, 73, 1750, 2065, 1258, 1262, 1312, 1313,
	1314, 1315, 1702, 1261, 1505, 943, 931, 759, 763, 1280,
	931, 1773, 1228, 939, 931, 941, 1283, 1762, 1895, 938,
	1518, 1254, 1130, 937, 813, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1263, 1332, 73, 1418, 855, 1441, 1163, 1229, 1299, 1300,
	1229, 1305, 1306, 1307, 1308, 1309, 1440, 1363, 1348, 1165,
	943, 857, 1328, 1329, 1330, 1331, 937, 1103, 1242, 1319,
	1320, 1321, 870, 1324, 939, 1640, 937, 1031, 754, 1407,
	753, 764, 1189, 69, 110, 110, 110, 2104, 439, 438,
	441, 442, 443, 444, 2173, 1418, 1834, 440, 445, 538,
	2095, 2085, 1980, 1874, 1298, 1852, 1327, 1128, 1250, 1252,
	1743, 1354, 1715, 1716, 2171, 1323, 1360, 1388, 1522, 1129,
	1344, 1318, 69, 1317, 1132, 1020, 745, 1335, 2158, 1771,
	1718, 1273, 1702, 855, 1573, 821, 820, 830, 831, 823,
	824, 825, 826, 827, 828, 829, 822, 1035, 1394, 832,
	1369, 1395, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 1116, 1721, 832, 1491, 1338, 1412,
	1340, 1720, 1492, 1488, 1489, 1487, 1479, 1480, 1414, 1490,
	932, 932, 932, 932, 932, 2123, 1417, 1419, 1408, 1251,
	2100, 1493, 1421, 1238, 1239, 1244, 1415, 1497, 1427, 405,
	406, 1430, 1431, 1432, 1636, 932, 1391, 520, 1438, 1133,
	1439, 2122, 1400, 1442, 1443, 1481, 1444, 1445, 1399, 1932,
	1449, 1450, 1451, 1452, 1453, 1532, 1435, 1796, 798, 799,
	1748, 1460, 1461, 1462, 1747, 1464, 1465, 1524, 1467, 1468,
	1469, 1470, 2052, 1472, 1473, 1474, 1500, 1506, 1495, 2090,
	2055, 538, 2091, 1974, 2114, 1499, 796, 1972, 2046, 110,
	2045, 354, 1598, 110, 1496, 1560, 110, 956, 741, 697,
	1842, 1911, 110, 1367, 538, 1105, 1106, 1507, 1531, 1508,
	1277, 538, 538, 538, 110, 110, 110, 60, 1519, 1339,
	1034, 110, 1525, 1528, 1494, 1633, 538, 538, 710, 1482,
	710, 710, 1485, 931, 931, 931, 931, 931, 1019, 757,
	1576, 1048, 1559, 1510, 1561, 1562, 1563, 1564, 931, 1551,
	1552, 758, 1483, 1484, 1359, 1486, 1558, 1242, 931, 110,
	538, 110, 1022, 538, 798, 799, 1565, 1960, 1521, 1068,
	402, 403, 396, 2117, 1409, 1410, 1411, 2116, 2088, 2056,
	1605, 1234, 1237, 1238, 1239, 1235, 857, 1236, 1240, 1568,
	1398, 1931, 1446, 1448, 1915, 1914, 397, 73, 1397, 1454,
	1455, 1456, 1457, 1593, 1807, 1608, 1621, 1625, 1505, 110,
	1553, 1554, 1555, 1557, 1429, 809, 1570, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 1677, 1426,
	832, 1065, 1600, 1618, 1596, 1641, 801, 1597, 1610, 1604,
	2174, 1643, 1602, 2175, 1118, 1119, 1617, 1670, 1628, 1629,
	2006, 1601, 1746, 1638, 1098, 1128, 1478, 355, 1707, 1611,
	60, 538, 1578, 1579, 1580, 75, 1648, 1129, 77, 1645,
	2175, 2174, 1644, 2034, 46, 1165, 2036, 19, 49, 1651,
	70, 1663, 1725, 1726, 1727, 520, 1649, 1, 1664, 2035,
	18, 2037, 20, 1703, 2089, 448, 1706, 538, 538, 857,
	2038, 21, 2051, 1173, 1174, 2033, 15, 2032, 14, 1683,
	1684, 2026, 10, 2053, 1689, 2039, 24, 1692, 1728, 2040,
	25, 1589, 1697, 1591, 1592, 1971, 1724, 2031, 13, 2028,
	12, 1893, 110, 1712, 1709, 2027, 11, 2025, 9, 1878,
	110, 110, 1719, 1741, 110, 110, 1742, 1877, 110, 110,
	110, 1722, 1643, 1277, 1582, 1277, 1581, 744, 1730, 1739,
	1089, 1609, 1376, 1735, 1734, 538, 538, 1575, 2062, 1769,
	1770, 1284, 1274, 528, 83, 1351, 1332, 713, 522, 1902,
	324, 534, 1281, 1751, 1752, 1537, 2054, 746, 1536, 1533,
	1755, 1269, 1548, 1295, 1535, 1534, 687, 1758, 2049, 1538,
	1599, 966, 964, 1753, 965, 1234, 1237, 1238, 1239, 1235,
	963, 1236, 1240, 968, 843, 1715, 1716, 1787, 967, 328,
	932, 515, 951, 802, 91, 50, 1788, 1905, 1792, 1774,
	1624, 110, 538, 1370, 538, 86, 722, 330, 840, 110,
	110, 1396, 1511, 110, 1678, 1679, 1680, 1681, 1682, 521,
	1829, 1647, 1781, 1783, 2084, 1809, 1810, 1789, 2105, 1800,
	761, 1333, 1808, 1665, 1666, 1754, 1667, 1668, 1987, 1019,
	1434, 110, 110, 110, 869, 1779, 1184, 422, 1674, 1675,
	1990, 1120, 437, 436, 435, 432, 433, 1358, 1111, 1475,
	814, 1835, 1765, 420, 412, 1811, 930, 923, 1366, 1233,
	1231, 1230, 1036, 1814, 510, 1717, 1713, 929, 361, 1194,
	1708, 59, 729, 341, 1823, 1824, 1830, 2000, 31, 74,
	407, 26, 17, 732, 22, 16, 1850, 683, 35, 38,
	37, 1859, 1860, 1577, 1341, 1818, 1723, 1804, 351, 1073,
	1071, 1392, 1393, 931, 763, 2165, 2108, 1843, 1865, 2041,
	1855, 60, 2030, 2029, 2143, 23, 1861, 2142, 1845, 1846,
	1847, 1848, 1815, 1816, 1856, 1817, 4, 398, 1819, 1277,
	1821, 28, 2, 1854, 0, 0, 0, 1519, 0, 1745,
	0, 0, 0, 0, 0, 1867, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 1901, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 1868,
	0, 1870, 1889, 0, 0, 1896, 1909, 534, 534, 1894,
	1890, 1891, 1892, 1903, 0, 1707, 1739, 1437, 1936, 534,
	0, 1900, 1910, 0, 0, 0, 1780, 110, 110, 110,
	110, 110, 1917, 1332, 0, 0, 0, 1864, 1643, 110,
	0, 0, 110, 0, 0, 0, 110, 1939, 0, 0,
	1916, 0, 110, 1706, 0, 0, 1919, 0, 0, 1959,
	0, 1961, 0, 1933, 0, 1958, 932, 0, 1938, 0,
	1940, 1926, 0, 538, 1812, 1951, 1930, 1946, 1952, 0,
	0, 1249, 1986, 1941, 0, 0, 0, 0, 1962, 0,
	1954, 0, 1955, 0, 0, 0, 0, 1977, 1943, 0,
	1944, 1945, 0, 0, 0, 1707, 0, 60, 1975, 1984,
	1981, 1979, 1989, 1993, 0, 0, 1985, 0, 1994, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 538, 0, 0, 0, 2007, 0, 2019,
	2012, 0, 0, 1706, 0, 538, 110, 538, 538, 0,
	2014, 2005, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 1996, 1997, 1998, 1999, 0, 0, 0, 2003,
	2004, 2059, 0, 0, 0, 0, 2058, 0, 2060, 0,
	0, 0, 0, 0, 0, 2061, 2066, 538, 538, 931,
	0, 1875, 0, 0, 110, 0, 0, 0, 0, 0,
	0, 522, 0, 2079, 538, 520, 0, 952, 0, 2071,
	0, 0, 0, 2072, 0, 60, 0, 2057, 0, 0,
	0, 0, 0, 1687, 1688, 0, 1690, 1691, 0, 1693,
	1694, 1695, 1696, 410, 1698, 1699, 1700, 0, 0, 0,
	0, 2067, 0, 0, 0, 538, 0, 2087, 0, 2073,
	0, 0, 0, 1921, 1922, 1923, 1924, 1925, 2099, 2093,
	0, 1928, 1929, 1993, 0, 0, 0, 1672, 1935, 2119,
	0, 2012, 0, 0, 0, 0, 0, 538, 538, 0,
	2113, 0, 60, 60, 2121, 2118, 2120, 2132, 0, 2125,
	2134, 0, 0, 0, 0, 538, 2130, 0, 0, 2124,
	60, 0, 0, 2096, 2147, 2150, 0, 2146, 0, 0,
	2145, 0, 2103, 2153, 2144, 538, 538, 0, 538, 60,
	538, 0, 60, 60, 2160, 2168, 2159, 2162, 0, 0,
	2134, 2172, 60, 0, 0, 60, 1729, 2170, 0, 2134,
	2180, 0, 2183, 0, 0, 0, 0, 60, 2192, 60,
	0, 0, 0, 60, 2134, 0, 2134, 2008, 2197, 1021,
	0, 0, 0, 0, 0, 0, 60, 1833, 0, 60,
	0, 110, 0, 2134, 2206, 0, 60, 0, 0, 0,
	60, 0, 534, 2134, 0, 0, 110, 2134, 0, 534,
	534, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 534, 534, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 0, 538,
	832, 0, 110, 538, 0, 0, 2199, 2200, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 110, 534, 0,
	0, 1097, 0, 0, 0, 1837, 1838, 0, 0, 0,
	0, 1839, 0, 0, 1840, 0, 0, 0, 0, 1841,
	0, 1802, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 29, 0, 61, 32, 33,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	1827, 0, 0, 0, 0, 67, 0, 0, 534, 34,
	0, 0, 0, 0, 1832, 0, 0, 108, 0, 0,
	340, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	0, 0, 0, 538, 538, 538, 0, 0, 0, 0,
	0, 0, 538, 0, 364, 0, 69, 0, 857, 1160,
	0, 538, 0, 0, 411, 0, 1851, 513, 523, 1853,
	108, 0, 0, 108, 0, 0, 0, 522, 0, 2042,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 110,
	0, 0, 108, 0, 0, 1190, 1191, 0, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	0, 0, 832, 0, 0, 0, 2185, 0, 36, 63,
	40, 39, 42, 538, 0, 0, 0, 0, 0, 0,
	0, 538, 0, 0, 2043, 0, 0, 0, 0, 0,
	933, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	43, 66, 65, 0, 0, 0, 0, 41, 0, 0,
	410, 534, 0, 534, 534, 0, 0, 538, 0, 0,
	538, 0, 110, 0, 110, 0, 0, 0, 0, 1826,
	0, 538, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 538, 0, 0, 0, 0, 0, 0, 56,
	0, 2044, 64, 0, 47, 48, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 0, 0, 527, 538, 1646, 674, 0,
	534, 0, 534, 0, 0, 0, 0, 0, 0, 684,
	0, 0, 0, 0, 0, 0, 0, 693, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	538, 0, 832, 0, 0, 1988, 1992, 821, 820, 830,
	831, 823, 824, 825, 826, 827, 828, 829, 822, 1166,
	1171, 832, 857, 0, 1177, 1180, 1181, 1182, 0, 0,
	0, 0, 0, 0, 62, 0, 0, 0, 538, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 534, 0,
	0, 1192, 0, 1195, 1196, 0, 0, 0, 1200, 0,
	1202, 1203, 0, 0, 0, 0, 0, 0, 1210, 1211,
	1212, 0, 1214, 1215, 110, 1217, 1218, 1219, 1220, 68,
	1222, 1223, 1224, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 29, 30, 61, 32, 33, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 34, 53, 54,
	0, 0, 538, 0, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	44, 0, 0, 538, 69, 0, 1992, 0, 816, 0,
	819, 0, 538, 0, 0, 0, 0, 833, 834, 835,
	836, 837, 838, 839, 522, 817, 818, 815, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	0, 29, 832, 61, 32, 33, 0, 695, 0, 0,
	0, 2131, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 34, 36, 63, 40, 39,
	42, 534, 55, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 108, 108, 0, 0, 0, 1413, 752,
	0, 523, 0, 0, 0, 0, 0, 0, 43, 66,
	65, 0, 69, 51, 52, 41, 0, 0, 2184, 821,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 336, 0, 832, 0, 2042, 0, 0, 2164, 2167,
	2163, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 534, 534, 56, 0, 45,
	64, 0, 47, 48, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 36, 63, 40, 39, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 0, 0, 0, 1634, 1635, 0, 0, 0,
	0, 0, 0, 1433, 0, 0, 43, 66, 65, 0,
	0, 0, 534, 41, 0, 0, 1825, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 534, 320, 1458, 1459,
	0, 0, 0, 1463, 0, 0, 1466, 329, 334, 335,
	0, 1471, 0, 0, 0, 0, 0, 925, 0, 934,
	0, 0, 62, 1676, 0, 56, 0, 2044, 64, 0,
	47, 48, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 108, 0, 326, 108, 0, 327, 0, 0, 332,
	1043, 0, 522, 0, 0, 1097, 1711, 0, 0, 0,
	0, 0, 108, 108, 108, 0, 0, 68, 0, 108,
	0, 0, 0, 1711, 821, 820, 830, 831, 823, 824,
	825, 826, 827, 828, 829, 822, 0, 0, 832, 0,
	0, 0, 0, 534, 534, 0, 534, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 318, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 821, 820, 830, 831, 823, 824, 825, 826, 827,
	828, 829, 822, 988, 0, 832, 0, 0, 0, 0,
	331, 321, 322, 0, 339, 0, 0, 0, 323, 325,
	0, 319, 338, 337, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 1043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1029, 0, 0, 0, 511, 1795, 0, 1037,
	0, 1799, 0, 0, 0, 0, 0, 0, 1803, 0,
	0, 0, 0, 0, 0, 1170, 1170, 1054, 1055, 1056,
	1170, 1170, 1170, 1170, 1057, 975, 0, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 1170, 1170,
	1170, 0, 0, 1170, 1170, 1170, 1170, 1170, 0, 0,
	0, 0, 1092, 0, 1170, 1170, 1170, 989, 1170, 1170,
	0, 1170, 1170, 1170, 1170, 0, 1170, 1170, 1170, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 108, 364,
	0, 0, 108, 108, 0, 0, 108, 1259, 1043, 523,
	0, 1858, 1858, 1858, 0, 0, 0, 0, 0, 0,
	534, 1043, 1117, 0, 0, 0, 0, 0, 0, 1858,
	1002, 1005, 1006, 1007, 1008, 1009, 1010, 0, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 0, 990, 991, 992, 993,
	969, 973, 1003, 970, 976, 972, 974, 971, 0, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	994, 995, 996, 997, 998, 999, 1000, 1001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 1912, 0, 0, 0, 0, 0, 108, 108, 534,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	1356, 108, 0, 0, 0, 1937, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 1227, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	1738, 1004, 0, 0, 0, 0, 0, 0, 1043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 29, 0,
	61, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 1983, 0, 0, 0, 67, 0,
	0, 0, 34, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1170, 2011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 1337, 0, 0, 0, 0, 1170,
	0, 0, 1345, 1346, 0, 0, 1347, 0, 0, 0,
	0, 0, 2042, 0, 0, 0, 1738, 2204, 0, 0,
	0, 0, 0, 0, 1170, 1170, 0, 0, 0, 1170,
	0, 0, 1170, 0, 0, 0, 1357, 1170, 0, 0,
	0, 0, 522, 0, 523, 108, 108, 108, 108, 108,
	0, 36, 63, 40, 39, 42, 0, 364, 0, 0,
	108, 0, 0, 0, 364, 0, 0, 2043, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 66, 65, 0, 0, 0, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 29, 0, 61, 32,
	33, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 1858, 0, 0, 0, 29, 67, 61, 32, 33,
	34, 1738, 56, 0, 2044, 64, 0, 47, 48, 57,
	1858, 0, 0, 0, 0, 67, 0, 0, 0, 34,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	2042, 0, 0, 0, 0, 2193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2042,
	0, 0, 108, 0, 2177, 0, 0, 0, 411, 0,
	0, 0, 0, 1170, 0, 0, 0, 62, 0, 36,
	63, 40, 39, 42, 1170, 0, 1043, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 36, 63,
	40, 39, 42, 29, 0, 61, 32, 33, 0, 0,
	0, 43, 66, 65, 2043, 0, 0, 57, 41, 0,
	0, 0, 68, 67, 0, 0, 0, 34, 0, 0,
	43, 66, 65, 0, 0, 0, 0, 41, 0, 0,
	0, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 2044, 64, 69, 47, 48, 0, 0, 1590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 2044, 64, 0, 47, 48, 0, 2042, 0, 0,
	0, 0, 2133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 63, 40, 39,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 62, 0, 0, 43, 66,
	65, 0, 0, 0, 0, 41, 0, 0, 0, 108,
	0, 0, 0, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 108, 0, 56, 0, 2044,
	64, 0, 47, 48, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 1798, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 656,
	636, 283, 594, 659, 566, 583, 670, 584, 587, 625,
	552, 606, 220, 581, 553, 0, 570, 543, 577, 544,
	567, 596, 154, 565, 638, 609, 658, 184, 621, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 657, 602,
	0, 665, 187, 618, 304, 272, 205, 0, 0, 598,
	645, 604, 634, 593, 627, 559, 617, 660, 582, 623,
	661, 0, 0, 0, 537, 0, 1278, 1279, 0, 0,
	0, 0, 523, 136, 0, 620, 655, 579, 622, 624,
	541, 619, 108, 547, 554, 669, 651, 573, 574, 575,
	1520, 0, 0, 0, 0, 0, 0, 597, 605, 631,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 615, 0, 0, 0, 555, 548, 0, 0, 595,
	0, 0, 0, 558, 115, 572, 632, 0, 539, 164,
	206, 126, 635, 650, 592, 177, 310, 654, 589, 588,
	240, 0, 277, 167, 185, 130, 112, 124, 140, 166,
	216, 249, 257, 580, 540, 639, 568, 578, 147, 576,
	251, 224, 299, 0, 612, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 591, 626, 569, 144, 629, 616,
	644, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 2075, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	545, 0, 274, 302, 315, 193, 133, 564, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 562,
	563, 560, 0, 561, 607, 608, 662, 663, 664, 633,
	556, 0, 646, 647, 0, 637, 652, 653, 628, 671,
	585, 586, 546, 549, 550, 551, 557, 599, 600, 611,
	614, 642, 641, 640, 643, 648, 667, 666, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 111, 122, 186, 672, 244, 160, 303, 542, 152,
	0, 0, 601, 603, 613, 630, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 649, 656, 636, 283, 594, 659, 566, 583,
	670, 584, 587, 625, 552, 606, 220, 581, 553, 0,
	570, 543, 577, 544, 567, 596, 154, 565, 638, 609,
	658, 184, 621, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 657, 602, 0, 665, 187, 618, 304, 272,
	205, 0, 0, 598, 645, 604, 634, 593, 627, 559,
	617, 660, 582, 623, 661, 0, 0, 0, 537, 0,
	1278, 1279, 0, 0, 0, 0, 0, 136, 0, 620,
	655, 579, 622, 624, 541, 619, 0, 547, 554, 669,
	651, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 597, 605, 631, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 615, 0, 0, 0, 555,
	548, 0, 0, 595, 0, 0, 0, 558, 115, 572,
	632, 0, 539, 164, 206, 126, 635, 650, 592, 177,
	310, 654, 589, 588, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 580, 540, 639,
	568, 578, 147, 576, 251, 224, 299, 0, 612, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 591, 626,
	569, 144, 629, 616, 644, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 545, 0, 274, 302, 315, 193,
	133, 564, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 562, 563, 560, 0, 561, 607, 608,
	662, 663, 664, 633, 556, 0, 646, 647, 0, 637,
	652, 653, 628, 671, 585, 586, 546, 549, 550, 551,
	557, 599, 600, 611, 614, 642, 641, 640, 643, 648,
	667, 666, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 111, 122, 186, 672, 244,
	160, 303, 542, 152, 0, 0, 601, 603, 613, 630,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 649, 656, 636, 283,
	594, 659, 566, 583, 670, 584, 587, 625, 552, 606,
	220, 581, 553, 0, 570, 543, 577, 544, 567, 596,
	154, 565, 638, 609, 658, 184, 621, 0, 146, 192,
	190, 0, 0, 0, 226, 281, 657, 602, 0, 665,
	187, 618, 304, 272, 205, 0, 0, 598, 645, 604,
	634, 593, 627, 559, 617, 660, 582, 623, 661, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 620, 655, 579, 622, 624, 541, 619,
	0, 547, 554, 669, 651, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 597, 605, 631, 590, 0,
	0, 0, 0, 0, 0, 1918, 0, 571, 0, 615,
	0, 0, 0, 555, 548, 0, 0, 595, 0, 0,
	0, 558, 115, 572, 632, 0, 539, 164, 206, 126,
	635, 650, 592, 177, 310, 654, 589, 588, 240, 0,
	277, 167, 185, 130, 112, 124, 140, 166, 216, 249,
	257, 580, 540, 639, 568, 578, 147, 576, 251, 224,
	299, 0, 612, 230, 250, 188, 288, 242, 297, 298,
	168, 282, 307, 312, 269, 155, 0, 116, 0, 237,
	150, 181, 591, 626, 569, 144, 629, 616, 644, 268,
	131, 284, 204, 210, 141, 143, 142, 125, 263, 286,
	135, 145, 273, 278, 117, 280, 296, 137, 261, 119,
	294, 276, 202, 178, 179, 118, 0, 247, 153, 163,
	149, 219, 0, 162, 239, 291, 292, 148, 314, 127,
	306, 121, 128, 305, 213, 0, 212, 308, 287, 295,
	203, 196, 0, 120, 293, 201, 195, 183, 158, 170,
	235, 191, 236, 171, 208, 207, 209, 0, 545, 0,
	274, 302, 315, 193, 133, 564, 262, 285, 0, 0,
	134, 161, 157, 234, 211, 129, 173, 271, 182, 189,
	246, 313, 223, 252, 138, 301, 270, 562, 563, 560,
	0, 561, 607, 608, 662, 663, 664, 633, 556, 0,
	646, 647, 0, 637, 652, 653, 628, 671, 585, 586,
	546, 549, 550, 551, 557, 599, 600, 611, 614, 642,
	641, 640, 643, 648, 667, 666, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 111,
	122, 186, 672, 244, 160, 303, 542, 152, 0, 0,
	601, 603, 613, 630, 113, 114, 123, 132, 139, 151,
	156, 159, 165, 169, 172, 174, 175, 176, 180, 194,
	197, 198, 199, 200, 214, 215, 217, 218, 221, 222,
	225, 227, 228, 229, 231, 232, 233, 238, 241, 243,
	245, 248, 253, 254, 255, 256, 258, 259, 260, 264,
	265, 266, 267, 275, 279, 289, 290, 300, 309, 311,
	649, 656, 636, 283, 594, 659, 566, 583, 670, 584,
	587, 625, 552, 606, 220, 581, 553, 0, 570, 543,
	577, 544, 567, 596, 154, 565, 638, 609, 658, 184,
	621, 0, 146, 192, 190, 0, 0, 0, 226, 281,
	657, 602, 0, 665, 187, 618, 304, 272, 205, 0,
	0, 598, 645, 604, 634, 593, 627, 559, 617, 660,
	582, 623, 661, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 620, 655, 579,
	622, 624, 541, 619, 0, 547, 554, 669, 651, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 597,
	605, 631, 590, 0, 0, 0, 0, 0, 0, 1650,
	0, 571, 0, 615, 0, 0, 0, 555, 548, 0,
	0, 595, 0, 0, 0, 558, 115, 572, 632, 0,
	539, 164, 206, 126, 635, 650, 592, 177, 310, 654,
	589, 588, 240, 0, 277, 167, 185, 130, 112, 124,
	140, 166, 216, 249, 257, 580, 540, 639, 568, 578,
	147, 576, 251, 224, 299, 0, 612, 230, 250, 188,
	288, 242, 297, 298, 168, 282, 307, 312, 269, 155,
	0, 116, 0, 237, 150, 181, 591, 626, 569, 144,
	629, 616, 644, 268, 131, 284, 204, 210, 141, 143,
	142, 125, 263, 286, 135, 145, 273, 278, 117, 280,
	296, 137, 261, 119, 294, 276, 202, 178, 179, 118,
	0, 247, 153, 163, 149, 219, 0, 162, 239, 291,
	292, 148, 314, 127, 306, 121, 128, 305, 213, 0,
	212, 308, 287, 295, 203, 196, 0, 120, 293, 201,
	195, 183, 158, 170, 235, 191, 236, 171, 208, 207,
	209, 0, 545, 0, 274, 302, 315, 193, 133, 564,
	262, 285, 0, 0, 134, 161, 157, 234, 211, 129,
	173, 271, 182, 189, 246, 313, 223, 252, 138, 301,
	270, 562, 563, 560, 0, 561, 607, 608, 662, 663,
	664, 633, 556, 0, 646, 647, 0, 637, 652, 653,
	628, 671, 585, 586, 546, 549, 550, 551, 557, 599,
	600, 611, 614, 642, 641, 640, 643, 648, 667, 666,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 111, 122, 186, 672, 244, 160, 303,
	542, 152, 0, 0, 601, 603, 613, 630, 113, 114,
	123, 132, 139, 151, 156, 159, 165, 169, 172, 174,
	175, 176, 180, 194, 197, 198, 199, 200, 214, 215,
	217, 218, 221, 222, 225, 227, 228, 229, 231, 232,
	233, 238, 241, 243, 245, 248, 253, 254, 255, 256,
	258, 259, 260, 264, 265, 266, 267, 275, 279, 289,
	290, 300, 309, 311, 649, 656, 636, 283, 594, 659,
	566, 583, 670, 584, 587, 625, 552, 606, 220, 581,
	553, 0, 570, 543, 577, 544, 567, 596, 154, 565,
	638, 609, 658, 184, 621, 0, 146, 192, 190, 0,
	0, 0, 226, 281, 657, 602, 0, 665, 187, 618,
	304, 272, 205, 0, 0, 598, 645, 604, 634, 593,
	627, 559, 617, 660, 582, 623, 661, 0, 0, 0,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 620, 655, 579, 622, 624, 541, 619, 0, 547,
	554, 669, 651, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 597, 605, 631, 590, 0, 0, 0,
	0, 0, 0, 1642, 0, 571, 0, 615, 0, 0,
	0, 555, 548, 0, 0, 595, 0, 0, 0, 558,
	115, 572, 632, 0, 539, 164, 206, 126, 635, 650,
	592, 177, 310, 654, 589, 588, 240, 0, 277, 167,
	185, 130, 112, 124, 140, 166, 216, 249, 257, 580,
	540, 639, 568, 578, 147, 576, 251, 224, 299, 0,
	612, 230, 250, 188, 288, 242, 297, 298, 168, 282,
	307, 312, 269, 155, 0, 116, 0, 237, 150, 181,
	591, 626, 569, 144, 629, 616, 644, 268, 131, 284,
	204, 210, 141, 143, 142, 125, 263, 286, 135, 145,
	273, 278, 117, 280, 296, 137, 261, 119, 294, 276,
	202, 178, 179, 118, 0, 247, 153, 163, 149, 219,
	0, 162, 239, 291, 292, 148, 314, 127, 306, 121,
	128, 305, 213, 0, 212, 308, 287, 295, 203, 196,
	0, 120, 293, 201, 195, 183, 158, 170, 235, 191,
	236, 171, 208, 207, 209, 0, 545, 0, 274, 302,
	315, 193, 133, 564, 262, 285, 0, 0, 134, 161,
	157, 234, 211, 129, 173, 271, 182, 189, 246, 313,
	223, 252, 138, 301, 270, 562, 563, 560, 0, 561,
	607, 608, 662, 663, 664, 633, 556, 0, 646, 647,
	0, 637, 652, 653, 628, 671, 585, 586, 546, 549,
	550, 551, 557, 599, 600, 611, 614, 642, 641, 640,
	643, 648, 667, 666, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 111, 122, 186,
	672, 244, 160, 303, 542, 152, 0, 0, 601, 603,
	613, 630, 113, 114, 123, 132, 139, 151, 156, 159,
	165, 169, 172, 174, 175, 176, 180, 194, 197, 198,
	199, 200, 214, 215, 217, 218, 221, 222, 225, 227,
	228, 229, 231, 232, 233, 238, 241, 243, 245, 248,
	253, 254, 255, 256, 258, 259, 260, 264, 265, 266,
	267, 275, 279, 289, 290, 300, 309, 311, 649, 656,
	636, 283, 594, 659, 566, 583, 670, 584, 587, 625,
	552, 606, 220, 581, 553, 0, 570, 543, 577, 544,
	567, 596, 154, 565, 638, 609, 658, 184, 621, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 657, 602,
	0, 665, 187, 618, 304, 272, 205, 0, 0, 598,
	645, 604, 634, 593, 627, 559, 617, 660, 582, 623,
	661, 69, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 620, 655, 579, 622, 624,
	541, 619, 0, 547, 554, 669, 651, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 597, 605, 631,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 615, 0, 0, 0, 555, 548, 0, 0, 595,
	0, 0, 0, 558, 115, 572, 632, 0, 539, 164,
	206, 126, 635, 650, 592, 177, 310, 654, 589, 588,
	240, 0, 277, 167, 185, 130, 112, 124, 140, 166,
	216, 249, 257, 580, 540, 639, 568, 578, 147, 576,
	251, 224, 299, 0, 612, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 591, 626, 569, 144, 629, 616,
	644, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 0, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	545, 0, 274, 302, 315, 193, 133, 564, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 562,
	563, 560, 0, 561, 607, 608, 662, 663, 664, 633,
	556, 0, 646, 647, 0, 637, 652, 653, 628, 671,
	585, 586, 546, 549, 550, 551, 557, 599, 600, 611,
	614, 642, 641, 640, 643, 648, 667, 666, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 111, 122, 186, 672, 244, 160, 303, 542, 152,
	0, 0, 601, 603, 613, 630, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 649, 656, 636, 283, 594, 659, 566, 583,
	670, 584, 587, 625, 552, 606, 220, 581, 553, 0,
	570, 543, 577, 544, 567, 596, 154, 565, 638, 609,
	658, 184, 621, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 657, 602, 0, 665, 187, 618, 304, 272,
	205, 0, 0, 598, 645, 604, 634, 593, 627, 559,
	617, 660, 582, 623, 661, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 620,
	655, 579, 622, 624, 541, 619, 0, 547, 554, 669,
	651, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 597, 605, 631, 590, 0, 0, 0, 0, 0,
	0, 1260, 0, 571, 0, 615, 0, 0, 0, 555,
	548, 0, 0, 595, 0, 0, 0, 558, 115, 572,
	632, 0, 539, 164, 206, 126, 635, 650, 592, 177,
	310, 654, 589, 588, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 580, 540, 639,
	568, 578, 147, 576, 251, 224, 299, 0, 612, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 591, 626,
	569, 144, 629, 616, 644, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 545, 0, 274, 302, 315, 193,
	133, 564, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 562, 563, 560, 0, 561, 607, 608,
	662, 663, 664, 633, 556, 0, 646, 647, 0, 637,
	652, 653, 628, 671, 585, 586, 546, 549, 550, 551,
	557, 599, 600, 611, 614, 642, 641, 640, 643, 648,
	667, 666, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 111, 122, 186, 672, 244,
	160, 303, 542, 152, 0, 0, 601, 603, 613, 630,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 649, 656, 636, 283,
	594, 659, 566, 583, 670, 584, 587, 625, 552, 606,
	220, 581, 553, 0, 570, 543, 577, 544, 567, 596,
	154, 565, 638, 609, 658, 184, 621, 0, 146, 192,
	190, 0, 0, 0, 226, 281, 657, 602, 0, 665,
	187, 618, 304, 272, 205, 0, 0, 598, 645, 604,
	634, 593, 627, 559, 617, 660, 582, 623, 661, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 620, 655, 579, 622, 624, 541, 619,
	0, 547, 554, 669, 651, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 597, 605, 631, 590, 0,
	0, 0, 0, 0, 0, 1126, 0, 571, 0, 615,
	0, 0, 0, 555, 548, 0, 0, 595, 0, 0,
	0, 558, 115, 572, 632, 0, 539, 164, 206, 126,
	635, 650, 592, 177, 310, 654, 589, 588, 240, 0,
	277, 167, 185, 130, 112, 124, 140, 166, 216, 249,
	257, 580, 540, 639, 568, 578, 147, 576, 251, 224,
	299, 0, 612, 230, 250, 188, 288, 242, 297, 298,
	168, 282, 307, 312, 269, 155, 0, 116, 0, 237,
	150, 181, 591, 626, 569, 144, 629, 616, 644, 268,
	131, 284, 204, 210, 141, 143, 142, 125, 263, 286,
	135, 145, 273, 278, 117, 280, 296, 137, 261, 119,
	294, 276, 202, 178, 179, 118, 0, 247, 153, 163,
	149, 219, 0, 162, 239, 291, 292, 148, 314, 127,
	306, 121, 128, 305, 213, 0, 212, 308, 287, 295,
	203, 196, 0, 120, 293, 201, 195, 183, 158, 170,
	235, 191, 236, 171, 208, 207, 209, 0, 545, 0,
	274, 302, 315, 193, 133, 564, 262, 285, 0, 0,
	134, 161, 157, 234, 211, 129, 173, 271, 182, 189,
	246, 313, 223, 252, 138, 301, 270, 562, 563, 560,
	0, 561, 607, 608, 662, 663, 664, 633, 556, 0,
	646, 647, 0, 637, 652, 653, 628, 671, 585, 586,
	546, 549, 550, 551, 557, 599, 600, 611, 614, 642,
	641, 640, 643, 648, 667, 666, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 111,
	122, 186, 672, 244, 160, 303, 542, 152, 0, 0,
	601, 603, 613, 630, 113, 114, 123, 132, 139, 151,
	156, 159, 165, 169, 172, 174, 175, 176, 180, 194,
	197, 198, 199, 200, 214, 215, 217, 218, 221, 222,
	225, 227, 228, 229, 231, 232, 233, 238, 241, 243,
	245, 248, 253, 254, 255, 256, 258, 259, 260, 264,
	265, 266, 267, 275, 279, 289, 290, 300, 309, 311,
	649, 656, 636, 283, 594, 659, 566, 583, 670, 584,
	587, 625, 552, 606, 220, 581, 553, 0, 570, 543,
	577, 544, 567, 596, 154, 565, 638, 609, 658, 184,
	621, 0, 146, 192, 190, 0, 0, 0, 226, 281,
	657, 602, 0, 665, 187, 618, 304, 272, 205, 0,
	0, 598, 645, 604, 634, 593, 627, 559, 617, 660,
	582, 623, 661, 0, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 620, 655, 579,
	622, 624, 541, 619, 0, 547, 554, 669, 651, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 597,
	605, 631, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 0, 615, 0, 0, 0, 555, 548, 0,
	0, 595, 0, 0, 0, 558, 115, 572, 632, 0,
	539, 164, 206, 126, 635, 650, 592, 177, 310, 654,
	589, 588, 240, 0, 277, 167, 185, 130, 112, 124,
	140, 166, 216, 249, 257, 580, 540, 639, 568, 578,
	147, 576, 251, 224, 299, 0, 612, 230, 250, 188,
	288, 242, 297, 298, 168, 282, 307, 312, 269, 155,
	0, 116, 0, 237, 150, 181, 591, 626, 569, 144,
	629, 616, 644, 268, 131, 284, 204, 210, 141, 143,
	142, 125, 263, 286, 135, 145, 273, 278, 117, 280,
	296, 137, 261, 119, 294, 276, 202, 178, 179, 118,
	0, 247, 153, 163, 149, 219, 0, 162, 239, 291,
	292, 148, 314, 127, 306, 121, 128, 305, 213, 0,
	212, 308, 287, 295, 203, 196, 0, 120, 293, 201,
	195, 183, 158, 170, 235, 191, 236, 171, 208, 207,
	209, 0, 545, 0, 274, 302, 315, 193, 133, 564,
	262, 285, 0, 0, 134, 161, 157, 234, 211, 129,
	173, 271, 182, 189, 246, 313, 223, 252, 138, 301,
	270, 562, 563, 560, 0, 561, 607, 608, 662, 663,
	664, 633, 556, 0, 646, 647, 0, 637, 652, 653,
	628, 671, 585, 586, 546, 549, 550, 551, 557, 599,
	600, 611, 614, 642, 641, 640, 643, 648, 667, 666,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 111, 122, 186, 672, 244, 160, 303,
	542, 152, 0, 0, 601, 603, 613, 630, 113, 114,
	123, 132, 139, 151, 156, 159, 165, 169, 172, 174,
	175, 176, 180, 194, 197, 198, 199, 200, 214, 215,
	217, 218, 221, 222, 225, 227, 228, 229, 231, 232,
	233, 238, 241, 243, 245, 248, 253, 254, 255, 256,
	258, 259, 260, 264, 265, 266, 267, 275, 279, 289,
	290, 300, 309, 311, 649, 656, 636, 283, 594, 659,
	566, 583, 670, 584, 587, 625, 552, 606, 220, 581,
	553, 0, 570, 543, 577, 544, 567, 596, 154, 565,
	638, 609, 658, 184, 621, 0, 146, 192, 190, 0,
	0, 0, 226, 281, 657, 602, 0, 665, 187, 618,
	304, 272, 205, 0, 0, 598, 645, 604, 634, 593,
	627, 559, 617, 660, 582, 623, 661, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 620, 655, 579, 622, 624, 541, 619, 0, 547,
	554, 669, 651, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 597, 605, 631, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 0, 615, 0, 0,
	0, 555, 548, 0, 0, 595, 0, 0, 0, 558,
	115, 572, 632, 0, 539, 164, 206, 126, 635, 650,
	592, 177, 310, 654, 589, 588, 240, 0, 277, 167,
	185, 130, 112, 124, 140, 166, 216, 249, 257, 580,
	540, 639, 568, 578, 147, 576, 251, 224, 299, 0,
	612, 230, 250, 188, 288, 242, 297, 298, 168, 282,
	307, 312, 269, 155, 0, 116, 0, 237, 150, 181,
	591, 626, 569, 144, 629, 616, 644, 268, 131, 284,
	204, 210, 141, 143, 142, 125, 263, 286, 135, 145,
	273, 278, 117, 280, 296, 137, 261, 119, 294, 276,
	202, 178, 179, 118, 0, 247, 153, 163, 149, 219,
	0, 162, 239, 291, 292, 148, 314, 127, 306, 121,
	128, 305, 213, 0, 212, 308, 287, 295, 203, 196,
	0, 120, 293, 201, 195, 183, 158, 170, 235, 191,
	236, 171, 208, 207, 209, 0, 545, 0, 274, 302,
	315, 193, 133, 564, 262, 285, 0, 0, 134, 161,
	157, 234, 211, 129, 173, 271, 182, 189, 246, 313,
	223, 252, 138, 301, 270, 562, 563, 560, 0, 561,
	607, 608, 662, 663, 664, 633, 556, 0, 646, 647,
	0, 637, 652, 653, 628, 671, 585, 586, 546, 549,
	550, 551, 557, 599, 600, 611, 614, 642, 641, 640,
	643, 648, 667, 666, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 111, 122, 186,
	672, 244, 160, 303, 542, 152, 0, 0, 601, 603,
	613, 630, 113, 114, 123, 132, 139, 151, 156, 159,
	165, 169, 172, 174, 175, 176, 180, 194, 197, 198,
	199, 200, 214, 215, 217, 218, 221, 222, 225, 227,
	228, 229, 231, 232, 233, 238, 241, 243, 245, 248,
	253, 254, 255, 256, 258, 259, 260, 264, 265, 266,
	267, 275, 279, 289, 290, 300, 309, 311, 649, 656,
	636, 283, 594, 659, 566, 583, 670, 584, 587, 625,
	552, 606, 220, 581, 553, 0, 570, 543, 577, 544,
	567, 596, 154, 565, 638, 609, 658, 184, 621, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 1289, 1293,
	0, 665, 187, 618, 304, 272, 205, 0, 0, 598,
	645, 604, 634, 593, 627, 559, 617, 660, 582, 623,
	661, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 620, 655, 579, 622, 624,
	541, 619, 0, 547, 554, 669, 651, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 597, 605, 631,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 615, 0, 0, 0, 555, 548, 0, 0, 595,
	0, 0, 0, 558, 115, 572, 632, 0, 539, 164,
	206, 126, 635, 650, 1292, 177, 310, 654, 589, 588,
	1287, 0, 1288, 167, 185, 536, 112, 124, 1285, 1291,
	216, 249, 257, 580, 540, 639, 568, 578, 147, 576,
	251, 224, 299, 0, 612, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 591, 626, 569, 144, 629, 616,
	644, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 0, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	545, 0, 274, 302, 315, 193, 133, 564, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 562,
	563, 560, 0, 561, 607, 608, 662, 663, 664, 633,
	556, 0, 646, 647, 0, 637, 652, 653, 628, 671,
	585, 586, 546, 549, 550, 551, 557, 599, 600, 611,
	614, 642, 641, 640, 643, 648, 667, 666, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 111, 122, 186, 672, 244, 160, 303, 542, 152,
	0, 0, 601, 603, 613, 630, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 649, 656, 636, 283, 594, 659, 566, 583,
	670, 584, 587, 625, 552, 606, 220, 581, 553, 0,
	570, 543, 577, 544, 567, 596, 154, 565, 638, 609,
	658, 184, 621, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 657, 602, 0, 665, 187, 618, 304, 272,
	205, 0, 0, 598, 645, 604, 634, 593, 627, 559,
	617, 660, 582, 623, 661, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 620,
	655, 579, 622, 624, 541, 619, 0, 547, 554, 669,
	651, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 597, 605, 631, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 615, 0, 0, 0, 555,
	548, 0, 0, 595, 0, 0, 0, 558, 115, 572,
	632, 0, 539, 164, 206, 126, 635, 650, 592, 177,
	310, 654, 589, 588, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 580, 540, 639,
	568, 578, 147, 576, 251, 224, 299, 0, 612, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 591, 626,
	569, 144, 629, 616, 644, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 545, 0, 274, 302, 315, 193,
	133, 564, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 562, 563, 560, 0, 561, 607, 608,
	662, 663, 664, 633, 556, 0, 646, 647, 0, 637,
	652, 653, 628, 671, 585, 586, 546, 549, 550, 551,
	557, 599, 600, 611, 614, 642, 641, 640, 643, 648,
	667, 666, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 111, 122, 186, 672, 244,
	160, 303, 542, 152, 0, 0, 601, 603, 613, 630,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 649, 656, 636, 283,
	594, 659, 566, 583, 670, 584, 587, 625, 552, 606,
	220, 581, 553, 0, 570, 543, 577, 544, 567, 596,
	154, 565, 638, 609, 658, 184, 621, 0, 146, 192,
	190, 0, 0, 0, 226, 281, 657, 602, 0, 665,
	187, 618, 304, 272, 205, 0, 0, 598, 645, 604,
	634, 593, 627, 559, 617, 660, 582, 623, 661, 0,
	0, 0, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 620, 655, 579, 622, 624, 541, 619,
	0, 547, 554, 669, 651, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 597, 605, 631, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 615,
	0, 0, 0, 555, 548, 0, 0, 595, 0, 0,
	0, 558, 115, 572, 632, 0, 539, 164, 206, 126,
	635, 650, 592, 177, 310, 654, 589, 588, 240, 0,
	277, 167, 185, 536, 112, 124, 532, 166, 216, 249,
	257, 580, 540, 639, 568, 578, 147, 576, 251, 224,
	299, 0, 612, 230, 250, 188, 288, 242, 297, 298,
	168, 282, 307, 312, 269, 155, 0, 116, 0, 237,
	150, 181, 591, 626, 569, 144, 629, 616, 644, 268,
	131, 284, 204, 210, 141, 143, 142, 125, 263, 286,
	135, 145, 273, 278, 117, 280, 296, 137, 261, 119,
	294, 276, 202, 178, 179, 118, 0, 247, 153, 163,
	149, 219, 0, 162, 239, 291, 292, 148, 314, 127,
	306, 121, 128, 305, 213, 0, 212, 308, 287, 295,
	203, 196, 0, 120, 293, 201, 195, 183, 158, 170,
	235, 191, 236, 171, 208, 207, 209, 0, 545, 0,
	274, 302, 315, 193, 133, 564, 262, 285, 0, 0,
	134, 161, 157, 234, 211, 129, 173, 271, 182, 189,
	246, 313, 223, 252, 138, 301, 270, 562, 563, 560,
	0, 561, 607, 608, 662, 663, 664, 633, 556, 0,
	646, 647, 0, 637, 652, 653, 628, 671, 585, 586,
	546, 549, 550, 551, 557, 599, 600, 611, 614, 642,
	641, 640, 643, 648, 667, 666, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 111,
	122, 186, 672, 244, 160, 303, 542, 152, 0, 0,
	601, 603, 613, 630, 113, 114, 123, 132, 139, 151,
	156, 159, 165, 169, 172, 174, 175, 176, 180, 194,
	197, 198, 199, 200, 214, 215, 217, 218, 221, 222,
	225, 227, 228, 229, 231, 232, 233, 238, 241, 243,
	245, 248, 253, 254, 255, 256, 258, 259, 260, 264,
	265, 266, 267, 275, 279, 289, 290, 300, 309, 311,
	649, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 154, 415, 0, 0, 0, 184, 0, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 0, 0,
	0, 462, 187, 0, 304, 272, 205, 0, 0, 0,
	0, 451, 452, 0, 0, 0, 0, 0, 0, 1267,
	0, 69, 0, 0, 416, 439, 438, 441, 442, 443,
	444, 0, 0, 136, 440, 445, 446, 447, 1268, 0,
	0, 413, 430, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 0, 0, 0,
	0, 476, 0, 429, 0, 0, 424, 425, 426, 431,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 164,
	206, 126, 453, 0, 0, 177, 310, 0, 0, 474,
	240, 0, 277, 167, 185, 130, 112, 124, 140, 166,
	216, 249, 257, 459, 0, 0, 0, 0, 147, 0,
	251, 224, 299, 0, 0, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 0, 0, 0, 144, 0, 0,
	0, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 0, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	0, 0, 274, 302, 315, 193, 133, 0, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 463,
	475, 469, 471, 470, 467, 468, 466, 465, 464, 477,
	454, 455, 456, 457, 460, 0, 472, 473, 0, 0,
	0, 0, 490, 491, 492, 493, 494, 495, 496, 489,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 478,
	479, 480, 481, 482, 483, 484, 485, 488, 486, 487,
	458, 111, 122, 186, 0, 244, 160, 303, 0, 152,
	0, 0, 0, 0, 0, 0, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 29, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 154, 415, 0, 0, 0, 184,
	0, 0, 146, 192, 190, 0, 0, 0, 226, 281,
	0, 0, 0, 462, 187, 0, 304, 272, 205, 0,
	0, 0, 0, 451, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 416, 439, 438, 441,
	442, 443, 444, 0, 0, 136, 440, 445, 446, 447,
	0, 0, 0, 413, 430, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 0,
	0, 0, 0, 476, 0, 429, 0, 0, 424, 425,
	426, 431, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 164, 206, 126, 453, 0, 0, 177, 310, 0,
	0, 474, 240, 0, 277, 167, 185, 130, 112, 124,
	140, 166, 216, 249, 257, 459, 0, 0, 0, 0,
	147, 0, 251, 224, 299, 0, 0, 230, 250, 188,
	288, 242, 297, 298, 168, 282, 307, 312, 269, 155,
	0, 116, 0, 237, 150, 181, 0, 0, 0, 144,
	0, 0, 0, 268, 131, 284, 204, 210, 141, 143,
	142, 125, 263, 286, 135, 145, 273, 278, 117, 280,
	296, 137, 261, 119, 294, 276, 202, 178, 179, 118,
	0, 247, 153, 163, 149, 219, 0, 162, 239, 291,
	292, 148, 314, 127, 306, 121, 128, 305, 213, 0,
	212, 308, 287, 295, 203, 196, 0, 120, 293, 201,
	195, 183, 158, 170, 235, 191, 236, 171, 208, 207,
	209, 0, 0, 0, 274, 302, 315, 193, 133, 0,
	262, 285, 0, 0, 134, 161, 157, 234, 211, 129,
	173, 271, 182, 189, 246, 313, 223, 252, 138, 301,
	270, 463, 475, 469, 471, 470, 467, 468, 466, 465,
	464, 477, 454, 455, 456, 457, 460, 0, 472, 473,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 489, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 478, 479, 480, 481, 482, 483, 484, 485, 488,
	486, 487, 458, 111, 122, 186, 68, 244, 160, 303,
	0, 152, 0, 0, 0, 0, 0, 0, 113, 114,
	123, 132, 139, 151, 156, 159, 165, 169, 172, 174,
	175, 176, 180, 194, 197, 198, 199, 200, 214, 215,
	217, 218, 221, 222, 225, 227, 228, 229, 231, 232,
	233, 238, 241, 243, 245, 248, 253, 254, 255, 256,
	258, 259, 260, 264, 265, 266, 267, 275, 279, 289,
	290, 300, 309, 311, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 154, 415, 0, 0, 0,
	184, 0, 0, 146, 192, 190, 0, 0, 0, 226,
	281, 0, 0, 0, 462, 187, 0, 304, 272, 205,
	0, 0, 0, 0, 451, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 416, 439, 438,
	441, 442, 443, 444, 0, 0, 136, 440, 445, 446,
	447, 0, 0, 0, 413, 430, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	409, 0, 0, 0, 476, 0, 429, 0, 0, 424,
	425, 426, 431, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 164, 206, 126, 453, 0, 0, 177, 310,
	0, 0, 474, 240, 0, 277, 167, 185, 130, 112,
	124, 140, 166, 216, 249, 257, 459, 0, 0, 0,
	0, 147, 0, 251, 224, 299, 0, 0, 230, 250,
	188, 288, 242, 297, 298, 168, 282, 307, 312, 269,
	155, 0, 116, 0, 237, 150, 181, 0, 0, 0,
	144, 0, 0, 0, 268, 131, 284, 204, 210, 141,
	143, 142, 125, 263, 286, 135, 145, 273, 278, 117,
	280, 296, 137, 261, 119, 294, 276, 202, 178, 179,
	118, 0, 247, 153, 163, 149, 219, 0, 162, 239,
	291, 292, 148, 314, 127, 306, 121, 128, 305, 213,
	0, 212, 308, 287, 295, 203, 196, 0, 120, 293,
	201, 195, 183, 158, 170, 235, 191, 236, 171, 208,
	207, 209, 0, 0, 0, 274, 302, 315, 193, 133,
	0, 262, 285, 0, 0, 134, 161, 157, 234, 211,
	129, 173, 271, 182, 189, 246, 313, 223, 252, 138,
	301, 270, 463, 475, 469, 471, 470, 467, 468, 466,
	465, 464, 477, 454, 455, 456, 457, 460, 0, 472,
	473, 0, 0, 0, 0, 490, 491, 492, 493, 494,
	495, 496, 489, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 478, 479, 480, 481, 482, 483, 484, 485,
	488, 486, 487, 458, 111, 122, 186, 0, 244, 160,
	303, 0, 152, 0, 0, 0, 0, 0, 0, 113,
	114, 123, 132, 139, 151, 156, 159, 165, 169, 172,
	174, 175, 176, 180, 194, 197, 198, 199, 200, 214,
	215, 217, 218, 221, 222, 225, 227, 228, 229, 231,
	232, 233, 238, 241, 243, 245, 248, 253, 254, 255,
	256, 258, 259, 260, 264, 265, 266, 267, 275, 279,
	289, 290, 300, 309, 311, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 154, 415, 0, 0,
	0, 184, 0, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 0, 0, 0, 462, 187, 0, 304, 272,
	205, 0, 0, 0, 0, 451, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 750, 416, 439,
	438, 441, 442, 443, 444, 0, 0, 136, 440, 445,
	446, 447, 0, 0, 0, 413, 430, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 0, 0, 0, 0, 476, 0, 429, 0, 0,
	424, 425, 426, 431, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 164, 206, 126, 453, 0, 0, 177,
	310, 0, 0, 474, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 459, 0, 0,
	0, 0, 147, 0, 251, 224, 299, 0, 0, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 0, 0,
	0, 144, 0, 0, 0, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 0, 0, 274, 302, 315, 193,
	133, 0, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 463, 475, 469, 471, 470, 467, 468,
	466, 465, 464, 477, 454, 455, 456, 457, 460, 0,
	472, 473, 0, 0, 0, 0, 490, 491, 492, 493,
	494, 495, 496, 489, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 478, 479, 480, 481, 482, 483, 484,
	485, 488, 486, 487, 458, 111, 122, 186, 0, 244,
	160, 303, 0, 152, 0, 0, 0, 0, 0, 0,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 154, 415, 0,
	0, 0, 184, 0, 0, 146, 192, 190, 0, 0,
	0, 226, 281, 0, 0, 0, 462, 187, 0, 304,
	272, 205, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 416,
	439, 438, 441, 442, 443, 444, 0, 0, 136, 440,
	445, 446, 447, 0, 0, 0, 413, 430, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 428, 1168, 0, 0, 0, 476, 0, 429, 0,
	0, 424, 425, 426, 431, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 164, 206, 126, 453, 0, 0,
	177, 310, 0, 0, 474, 240, 0, 277, 167, 185,
	130, 112, 124, 140, 166, 216, 249, 257, 459, 0,
	0, 0, 0, 147, 0, 251, 224, 299, 0, 0,
	230, 250, 188, 288, 242, 297, 298, 168, 282, 307,
	312, 269, 155, 0, 116, 0, 237, 150, 181, 0,
	0, 0, 144, 0, 0, 0, 268, 131, 284, 204,
	210, 141, 143, 142, 125, 263, 286, 135, 145, 273,
	278, 117, 280, 296, 137, 261, 119, 294, 276, 202,
	178, 179, 118, 0, 247, 153, 163, 149, 219, 0,
	162, 239, 291, 292, 148, 314, 127, 306, 121, 128,
	305, 213, 0, 212, 308, 287, 295, 203, 196, 0,
	120, 293, 201, 195, 183, 158, 170, 235, 191, 236,
	171, 208, 207, 209, 0, 0, 0, 274, 302, 315,
	193, 133, 0, 262, 285, 0, 0, 134, 161, 157,
	234, 211, 129, 173, 271, 182, 189, 246, 313, 223,
	252, 138, 301, 270, 463, 475, 469, 471, 470, 467,
	468, 466, 465, 464, 477, 454, 455, 456, 457, 460,
	0, 472, 473, 0, 0, 0, 0, 490, 491, 492,
	493, 494, 495, 496, 489, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 478, 479, 480, 481, 482, 483,
	484, 485, 488, 486, 487, 458, 111, 122, 186, 0,
	244, 160, 303, 0, 152, 0, 0, 0, 0, 0,
	0, 113, 114, 123, 132, 139, 151, 156, 159, 165,
	169, 172, 174, 175, 176, 180, 194, 197, 198, 199,
	200, 214, 215, 217, 218, 221, 222, 225, 227, 228,
	229, 231, 232, 233, 238, 241, 243, 245, 248, 253,
	254, 255, 256, 258, 259, 260, 264, 265, 266, 267,
	275, 279, 289, 290, 300, 309, 311, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 154, 415,
	0, 0, 0, 184, 0, 0, 146, 192, 190, 0,
	0, 0, 226, 281, 0, 0, 0, 462, 187, 0,
	304, 272, 205, 0, 0, 0, 0, 451, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	416, 439, 1179, 441, 442, 443, 444, 0, 0, 136,
	440, 445, 446, 447, 0, 0, 0, 413, 430, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 428, 1168, 0, 0, 0, 476, 0, 429,
	0, 0, 424, 425, 426, 431, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 164, 206, 126, 453, 0,
	0, 177, 310, 0, 0, 474, 240, 0, 277, 167,
	185, 130, 112, 124, 140, 166, 216, 249, 257, 459,
	0, 0, 0, 0, 147, 0, 251, 224, 299, 0,
	0, 230, 250, 188, 288, 242, 297, 298, 168, 282,
	307, 312, 269, 155, 0, 116, 0, 237, 150, 181,
	0, 0, 0, 144, 0, 0, 0, 268, 131, 284,
	204, 210, 141, 143, 142, 125, 263, 286, 135, 145,
	273, 278, 117, 280, 296, 137, 261, 119, 294, 276,
	202, 178, 179, 118, 0, 247, 153, 163, 149, 219,
	0, 162, 239, 291, 292, 148, 314, 127, 306, 121,
	128, 305, 213, 0, 212, 308, 287, 295, 203, 196,
	0, 120, 293, 201, 195, 183, 158, 170, 235, 191,
	236, 171, 208, 207, 209, 0, 0, 0, 274, 302,
	315, 193, 133, 0, 262, 285, 0, 0, 134, 161,
	157, 234, 211, 129, 173, 271, 182, 189, 246, 313,
	223, 252, 138, 301, 270, 463, 475, 469, 471, 470,
	467, 468, 466, 465, 464, 477, 454, 455, 456, 457,
	460, 0, 472, 473, 0, 0, 0, 0, 490, 491,
	492, 493, 494, 495, 496, 489, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 478, 479, 480, 481, 482,
	483, 484, 485, 488, 486, 487, 458, 111, 122, 186,
	0, 244, 160, 303, 0, 152, 0, 0, 0, 0,
	0, 0, 113, 114, 123, 132, 139, 151, 156, 159,
	165, 169, 172, 174, 175, 176, 180, 194, 197, 198,
	199, 200, 214, 215, 217, 218, 221, 222, 225, 227,
	228, 229, 231, 232, 233, 238, 241, 243, 245, 248,
	253, 254, 255, 256, 258, 259, 260, 264, 265, 266,
	267, 275, 279, 289, 290, 300, 309, 311, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 418, 0, 0, 0, 154,
	415, 0, 0, 0, 184, 0, 0, 146, 192, 190,
	0, 0, 0, 226, 281, 0, 0, 0, 462, 187,
	0, 304, 272, 205, 0, 0, 0, 0, 451, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 416, 439, 1176, 441, 442, 443, 444, 0, 0,
	136, 440, 445, 446, 447, 0, 0, 0, 413, 430,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 428, 1168, 0, 0, 0, 476, 0,
	429, 0, 0, 424, 425, 426, 431, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 164, 206, 126, 453,
	0, 0, 177, 310, 0, 0, 474, 240, 0, 277,
	167, 185, 130, 112, 124, 140, 166, 216, 249, 257,
	459, 0, 0, 0, 0, 147, 0, 251, 224, 299,
	0, 0, 230, 250, 188, 288, 242, 297, 298, 168,
	282, 307, 312, 269, 155, 0, 116, 0, 237, 150,
	181, 0, 0, 0, 144, 0, 0, 0, 268, 131,
	284, 204, 210, 141, 143, 142, 125, 263, 286, 135,
	145, 273, 278, 117, 280, 296, 137, 261, 119, 294,
	276, 202, 178, 179, 118, 0, 247, 153, 163, 149,
	219, 0, 162, 239, 291, 292, 148, 314, 127, 306,
	121, 128, 305, 213, 0, 212, 308, 287, 295, 203,
	196, 0, 120, 293, 201, 195, 183, 158, 170, 235,
	191, 236, 171, 208, 207, 209, 0, 0, 0, 274,
	302, 315, 193, 133, 0, 262, 285, 0, 0, 134,
	161, 157, 234, 211, 129, 173, 271, 182, 189, 246,
	313, 223, 252, 138, 301, 270, 463, 475, 469, 471,
	470, 467, 468, 466, 465, 464, 477, 454, 455, 456,
	457, 460, 0, 472, 473, 0, 0, 0, 0, 490,
	491, 492, 493, 494, 495, 496, 489, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 478, 479, 480, 481,
	482, 483, 484, 485, 488, 486, 487, 458, 111, 122,
	186, 0, 244, 160, 303, 0, 152, 0, 0, 0,
	0, 0, 0, 113, 114, 123, 132, 139, 151, 156,
	159, 165, 169, 172, 174, 175, 176, 180, 194, 197,
	198, 199, 200, 214, 215, 217, 218, 221, 222, 225,
	227, 228, 229, 231, 232, 233, 238, 241, 243, 245,
	248, 253, 254, 255, 256, 258, 259, 260, 264, 265,
	266, 267, 275, 279, 289, 290, 300, 309, 311, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	154, 415, 0, 0, 0, 184, 0, 0, 146, 192,
	190, 0, 0, 0, 226, 281, 0, 0, 0, 462,
	187, 0, 304, 272, 205, 0, 0, 0, 0, 451,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 1087, 416, 439, 438, 441, 442, 443, 444, 0,
	0, 136, 440, 445, 446, 447, 0, 0, 0, 413,
	430, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 428, 0, 0, 0, 0, 476,
	0, 429, 0, 0, 424, 425, 426, 431, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 164, 206, 126,
	453, 0, 0, 177, 310, 0, 0, 474, 240, 0,
	277, 167, 185, 130, 112, 124, 140, 166, 216, 249,
	257, 459, 0, 0, 0, 0, 147, 0, 251, 224,
	299, 0, 0, 230, 250, 188, 288, 242, 297, 298,
	168, 282, 307, 312, 269, 155, 0, 116, 0, 237,
	150, 181, 0, 0, 0, 144, 0, 0, 0, 268,
	131, 284, 204, 210, 141, 143, 142, 125, 263, 286,
	135, 145, 273, 278, 117, 280, 296, 137, 261, 119,
	294, 276, 202, 178, 179, 118, 0, 247, 153, 163,
	149, 219, 0, 162, 239, 291, 292, 148, 314, 127,
	306, 121, 128, 305, 213, 0, 212, 308, 287, 295,
	203, 196, 0, 120, 293, 201, 195, 183, 158, 170,
	235, 191, 236, 171, 208, 207, 209, 0, 0, 0,
	274, 302, 315, 193, 133, 0, 262, 285, 0, 0,
	134, 161, 157, 234, 211, 129, 173, 271, 182, 189,
	246, 313, 223, 252, 138, 301, 270, 463, 475, 469,
	471, 470, 467, 468, 466, 465, 464, 477, 454, 455,
	456, 457, 460, 0, 472, 473, 0, 0, 0, 0,
	490, 491, 492, 493, 494, 495, 496, 489, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 478, 479, 480,
	481, 482, 483, 484, 485, 488, 486, 487, 458, 111,
	122, 186, 0, 244, 160, 303, 0, 152, 0, 0,
	0, 0, 0, 0, 113, 114, 123, 132, 139, 151,
	156, 159, 165, 169, 172, 174, 175, 176, 180, 194,
	197, 198, 199, 200, 214, 215, 217, 218, 221, 222,
	225, 227, 228, 229, 231, 232, 233, 238, 241, 243,
	245, 248, 253, 254, 255, 256, 258, 259, 260, 264,
	265, 266, 267, 275, 279, 289, 290, 300, 309, 311,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 418, 0, 0,
	0, 154, 415, 0, 0, 0, 184, 0, 0, 146,
	192, 190, 0, 0, 0, 226, 281, 0, 0, 0,
	462, 187, 0, 304, 272, 205, 0, 0, 0, 0,
	451, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 416, 439, 438, 441, 442, 443, 444,
	0, 0, 136, 440, 445, 446, 447, 0, 0, 0,
	413, 430, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 428, 0, 0, 0, 0,
	476, 0, 429, 0, 0, 424, 425, 426, 431, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 164, 206,
	126, 453, 0, 0, 177, 310, 0, 0, 474, 240,
	0, 277, 167, 185, 130, 112, 124, 140, 166, 216,
	249, 257, 459, 0, 0, 0, 0, 147, 0, 251,
	224, 299, 0, 0, 230, 250, 188, 288, 242, 297,
	298, 168, 282, 307, 312, 269, 155, 0, 116, 0,
	237, 150, 181, 0, 0, 0, 144, 0, 0, 0,
	268, 131, 284, 204, 210, 141, 143, 142, 125, 263,
	286, 135, 145, 273, 278, 117, 280, 296, 137, 261,
	119, 294, 276, 202, 178, 179, 118, 0, 247, 153,
	163, 149, 219, 0, 162, 239, 291, 292, 148, 314,
	127, 306, 121, 128, 305, 213, 0, 212, 308, 287,
	295, 203, 196, 0, 120, 293, 201, 195, 183, 158,
	170, 235, 191, 236, 171, 208, 207, 209, 0, 0,
	0, 274, 302, 315, 193, 133, 0, 262, 285, 0,
	0, 134, 161, 157, 234, 211, 129, 173, 271, 182,
	189, 246, 313, 223, 252, 138, 301, 270, 463, 475,
	469, 471, 470, 467, 468, 466, 465, 464, 477, 454,
	455, 456, 457, 460, 0, 472, 473, 0, 0, 0,
	0, 490, 491, 492, 493, 494, 495, 496, 489, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 478, 479,
	480, 481, 482, 483, 484, 485, 488, 486, 487, 458,
	111, 122, 186, 0, 244, 160, 303, 0, 152, 0,
	0, 0, 0, 0, 0, 113, 114, 123, 132, 139,
	151, 156, 159, 165, 169, 172, 174, 175, 176, 180,
	194, 197, 198, 199, 200, 214, 215, 217, 218, 221,
	222, 225, 227, 228, 229, 231, 232, 233, 238, 241,
	243, 245, 248, 253, 254, 255, 256, 258, 259, 260,
	264, 265, 266, 267, 275, 279, 289, 290, 300, 309,
	311, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 154, 415, 0, 0, 0, 184, 0, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 0, 0,
	0, 462, 187, 0, 304, 272, 205, 0, 0, 0,
	0, 451, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 0, 0, 416, 439, 438, 441, 442, 443,
	444, 0, 0, 136, 440, 445, 446, 447, 0, 0,
	0, 413, 430, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 428, 0, 0, 0,
	0, 476, 0, 429, 0, 0, 424, 425, 426, 431,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 164,
	206, 126, 453, 0, 0, 177, 310, 0, 0, 474,
	240, 0, 277, 167, 185, 130, 112, 124, 140, 166,
	216, 249, 257, 459, 0, 0, 0, 0, 147, 0,
	251, 224, 299, 0, 0, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 0, 0, 0, 144, 0, 0,
	0, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 0, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	0, 0, 274, 302, 315, 193, 133, 0, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 463,
	475, 469, 471, 470, 467, 468, 466, 465, 464, 477,
	454, 455, 456, 457, 460, 0, 472, 473, 0, 0,
	0, 0, 765, 766, 767, 768, 769, 773, 774, 778,
	779, 787, 786, 785, 788, 789, 791, 790, 792, 770,
	771, 772, 775, 776, 777, 780, 781, 784, 782, 783,
	458, 111, 122, 186, 0, 244, 160, 303, 0, 152,
	0, 0, 0, 0, 0, 0, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 184, 0,
	0, 146, 192, 190, 0, 0, 0, 226, 281, 0,
	0, 0, 462, 187, 0, 304, 272, 205, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 416, 439, 438, 441, 442,
	443, 444, 0, 0, 136, 440, 445, 446, 447, 0,
	0, 0, 0, 430, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 428, 0, 0,
	0, 0, 476, 0, 429, 0, 0, 424, 425, 426,
	431, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	164, 206, 126, 453, 0, 0, 177, 310, 0, 0,
	474, 240, 0, 277, 167, 185, 130, 112, 124, 140,
	166, 216, 249, 257, 459, 0, 0, 0, 0, 147,
	0, 251, 224, 299, 0, 2186, 230, 250, 188, 288,
	242, 297, 298, 168, 282, 307, 312, 269, 155, 0,
	116, 0, 237, 150, 181, 0, 0, 0, 144, 0,
	0, 0, 268, 131, 284, 204, 210, 141, 143, 142,
	125, 263, 286, 135, 145, 273, 278, 117, 280, 296,
	137, 261, 119, 294, 276, 202, 178, 179, 118, 0,
	247, 153, 163, 149, 219, 0, 162, 239, 291, 292,
	148, 314, 127, 306, 121, 128, 305, 213, 0, 212,
	308, 287, 295, 203, 196, 0, 120, 293, 201, 195,
	183, 158, 170, 235, 191, 236, 171, 208, 207, 209,
	0, 0, 0, 274, 302, 315, 193, 133, 0, 262,
	285, 0, 0, 134, 161, 157, 234, 211, 129, 173,
	271, 182, 189, 246, 313, 223, 252, 138, 301, 270,
	463, 475, 469, 471, 470, 467, 468, 466, 465, 464,
	477, 454, 455, 456, 457, 460, 0, 472, 473, 0,
	0, 0, 0, 490, 491, 492, 493, 494, 495, 496,
	489, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	478, 479, 480, 481, 482, 483, 484, 485, 488, 486,
	487, 458, 111, 122, 186, 0, 244, 160, 303, 0,
	152, 0, 0, 0, 0, 0, 0, 113, 114, 123,
	132, 139, 151, 156, 159, 165, 169, 172, 174, 175,
	176, 180, 194, 197, 198, 199, 200, 214, 215, 217,
	218, 221, 222, 225, 227, 228, 229, 231, 232, 233,
	238, 241, 243, 245, 248, 253, 254, 255, 256, 258,
	259, 260, 264, 265, 266, 267, 275, 279, 289, 290,
	300, 309, 311, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 184,
	0, 0, 146, 192, 190, 0, 0, 0, 226, 281,
	0, 0, 0, 462, 187, 0, 304, 272, 205, 0,
	0, 0, 0, 451, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 750, 416, 439, 438, 441,
	442, 443, 444, 0, 0, 136, 440, 445, 446, 447,
	0, 0, 0, 0, 430, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 0,
	0, 0, 0, 476, 0, 429, 0, 0, 424, 425,
	426, 431, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 164, 206, 126, 453, 0, 0, 177, 310, 0,
	0, 474, 240, 0, 277, 167, 185, 130, 112, 124,
	140, 166, 216, 249, 257, 459, 0, 0, 0, 0,
	147, 0, 251, 224, 299, 0, 0, 230, 250, 188,
	288, 242, 297, 298, 168, 282, 307, 312, 269, 155,
	0, 116, 0, 237, 150, 181, 0, 0, 0, 144,
	0, 0, 0, 268, 131, 284, 204, 210, 141, 143,
	142, 125, 263, 286, 135, 145, 273, 278, 117, 280,
	296, 137, 261, 119, 294, 276, 202, 178, 179, 118,
	0, 247, 153, 163, 149, 219, 0, 162, 239, 291,
	292, 148, 314, 127, 306, 121, 128, 305, 213, 0,
	212, 308, 287, 295, 203, 196, 0, 120, 293, 201,
	195, 183, 158, 170, 235, 191, 236, 171, 208, 207,
	209, 0, 0, 0, 274, 302, 315, 193, 133, 0,
	262, 285, 0, 0, 134, 161, 157, 234, 211, 129,
	173, 271, 182, 189, 246, 313, 223, 252, 138, 301,
	270, 463, 475, 469, 471, 470, 467, 468, 466, 465,
	464, 477, 454, 455, 456, 457, 460, 0, 472, 473,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 489, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 478, 479, 480, 481, 482, 483, 484, 485, 488,
	486, 487, 458, 111, 122, 186, 0, 244, 160, 303,
	0, 152, 0, 0, 0, 0, 0, 0, 113, 114,
	123, 132, 139, 151, 156, 159, 165, 169, 172, 174,
	175, 176, 180, 194, 197, 198, 199, 200, 214, 215,
	217, 218, 221, 222, 225, 227, 228, 229, 231, 232,
	233, 238, 241, 243, 245, 248, 253, 254, 255, 256,
	258, 259, 260, 264, 265, 266, 267, 275, 279, 289,
	290, 300, 309, 311, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	184, 0, 0, 146, 192, 190, 0, 0, 0, 226,
	281, 0, 0, 0, 462, 187, 0, 304, 272, 205,
	0, 0, 0, 0, 451, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 416, 439, 438,
	441, 442, 443, 444, 0, 0, 136, 440, 445, 446,
	447, 0, 0, 0, 0, 430, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 427, 428,
	0, 0, 0, 0, 476, 0, 429, 0, 0, 424,
	425, 426, 431, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 164, 206, 126, 453, 0, 0, 177, 310,
	0, 0, 474, 240, 0, 277, 167, 185, 130, 112,
	124, 140, 166, 216, 249, 257, 459, 0, 0, 0,
	0, 147, 0, 251, 224, 299, 0, 0, 230, 250,
	188, 288, 242, 297, 298, 168, 282, 307, 312, 269,
	155, 0, 116, 0, 237, 150, 181, 0, 0, 0,
	144, 0, 0, 0, 268, 131, 284, 204, 210, 141,
	143, 142, 125, 263, 286, 135, 145, 273, 278, 117,
	280, 296, 137, 261, 119, 294, 276, 202, 178, 179,
	118, 0, 247, 153, 163, 149, 219, 0, 162, 239,
	291, 292, 148, 314, 127, 306, 121, 128, 305, 213,
	0, 212, 308, 287, 295, 203, 196, 0, 120, 293,
	201, 195, 183, 158, 170, 235, 191, 236, 171, 208,
	207, 209, 0, 0, 0, 274, 302, 315, 193, 133,
	0, 262, 285, 0, 0, 134, 161, 157, 234, 211,
	129, 173, 271, 182, 189, 246, 313, 223, 252, 138,
	301, 270, 463, 475, 469, 471, 470, 467, 468, 466,
	465, 464, 477, 454, 455, 456, 457, 460, 0, 472,
	473, 0, 0, 0, 0, 490, 491, 492, 493, 494,
	495, 496, 489, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 478, 479, 480, 481, 482, 483, 484, 485,
	488, 486, 487, 458, 111, 122, 186, 0, 244, 160,
	303, 0, 152, 0, 0, 0, 0, 0, 0, 113,
	114, 123, 132, 139, 151, 156, 159, 165, 169, 172,
	174, 175, 176, 180, 194, 197, 198, 199, 200, 214,
	215, 217, 218, 221, 222, 225, 227, 228, 229, 231,
	232, 233, 238, 241, 243, 245, 248, 253, 254, 255,
	256, 258, 259, 260, 264, 265, 266, 267, 275, 279,
	289, 290, 300, 309, 311, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 184, 0, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 0, 0, 0, 0, 187, 0, 304, 272,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1250, 1252, 0, 0, 0, 0, 0, 109, 0,
	366, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 164, 206, 126, 0, 0, 0, 177,
	310, 0, 1251, 0, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 0, 0, 0,
	0, 0, 147, 0, 251, 224, 299, 0, 0, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 0, 0,
	0, 144, 0, 0, 0, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 0, 0, 274, 302, 315, 193,
	133, 0, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 369, 370,
	371, 375, 376, 380, 381, 389, 388, 387, 390, 391,
	393, 392, 394, 372, 373, 374, 377, 378, 379, 382,
	383, 386, 384, 385, 0, 111, 122, 186, 0, 244,
	160, 303, 0, 152, 0, 0, 0, 0, 0, 0,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 184, 0, 0, 146, 192, 190, 0, 0,
	0, 226, 281, 0, 0, 0, 0, 187, 0, 304,
	272, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 1252, 0, 0, 0, 0, 0, 109,
	0, 366, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 164, 206, 126, 0, 0, 0,
	177, 310, 0, 1251, 0, 240, 0, 277, 167, 185,
	130, 112, 124, 140, 166, 216, 249, 257, 0, 0,
	0, 0, 0, 147, 0, 251, 224, 299, 0, 0,
	1246, 250, 188, 288, 242, 297, 298, 168, 282, 307,
	312, 269, 155, 0, 116, 0, 237, 150, 181, 0,
	0, 0, 144, 0, 0, 0, 268, 131, 284, 204,
	210, 141, 143, 142, 125, 263, 286, 135, 145, 273,
	278, 117, 280, 296, 137, 261, 119, 294, 276, 202,
	178, 179, 118, 0, 247, 153, 163, 149, 219, 0,
	162, 239, 291, 292, 148, 314, 127, 306, 121, 128,
	305, 213, 0, 212, 308, 287, 295, 203, 196, 0,
	120, 293, 201, 195, 183, 158, 170, 235, 191, 236,
	171, 208, 207, 209, 0, 0, 0, 274, 302, 315,
	193, 133, 0, 262, 285, 0, 0, 134, 161, 157,
	234, 211, 129, 173, 271, 182, 189, 246, 313, 223,
	252, 138, 301, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 369,
	370, 371, 375, 376, 380, 381, 389, 388, 387, 390,
	391, 393, 392, 394, 372, 373, 374, 377, 378, 379,
	382, 383, 386, 384, 385, 0, 111, 122, 186, 0,
	244, 160, 303, 0, 152, 0, 0, 0, 0, 0,
	0, 113, 114, 123, 132, 139, 151, 156, 159, 165,
	169, 172, 174, 175, 176, 180, 194, 197, 198, 199,
	200, 214, 215, 217, 218, 221, 222, 225, 227, 228,
	229, 231, 232, 233, 238, 241, 243, 245, 248, 253,
	254, 255, 256, 258, 259, 260, 264, 265, 266, 267,
	275, 279, 289, 290, 300, 309, 311, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 807, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 184, 0, 0, 146, 192, 190, 0,
	0, 0, 226, 281, 0, 0, 0, 0, 187, 0,
	304, 272, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 811, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 804, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 164, 206, 126, 0, 0,
	0, 177, 310, 0, 0, 0, 240, 0, 277, 167,
	185, 130, 112, 124, 140, 166, 216, 249, 257, 0,
	0, 0, 0, 0, 147, 0, 251, 224, 299, 0,
	0, 230, 250, 188, 288, 242, 297, 298, 168, 282,
	307, 312, 269, 155, 0, 116, 0, 237, 150, 181,
	0, 0, 0, 144, 0, 0, 0, 268, 131, 284,
	204, 210, 141, 143, 142, 125, 263, 286, 135, 145,
	273, 278, 117, 280, 296, 137, 261, 119, 294, 276,
	202, 178, 179, 118, 0, 247, 153, 163, 149, 219,
	0, 162, 239, 291, 292, 148, 314, 127, 306, 121,
	128, 305, 213, 0, 212, 308, 287, 295, 203, 196,
	0, 120, 293, 201, 195, 183, 158, 170, 235, 191,
	236, 171, 208, 207, 209, 0, 0, 0, 274, 302,
	315, 193, 133, 0, 262, 285, 0, 0, 134, 161,
	157, 234, 211, 129, 173, 271, 182, 189, 246, 313,
	223, 252, 138, 301, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	369, 370, 371, 375, 376, 380, 381, 389, 388, 387,
	390, 391, 393, 392, 394, 372, 373, 374, 377, 378,
	379, 382, 383, 386, 384, 385, 0, 111, 122, 186,
	0, 244, 160, 303, 0, 152, 0, 0, 0, 0,
	0, 0, 113, 114, 123, 132, 139, 151, 156, 159,
	165, 169, 172, 174, 175, 176, 180, 194, 197, 198,
	199, 200, 214, 215, 217, 218, 221, 222, 225, 227,
	228, 229, 231, 232, 233, 238, 241, 243, 245, 248,
	253, 254, 255, 256, 258, 259, 260, 264, 265, 266,
	267, 275, 279, 289, 290, 300, 309, 311, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 184, 1498, 0, 146, 192, 190,
	0, 0, 0, 226, 281, 0, 0, 0, 0, 187,
	0, 304, 272, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 366, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 164, 206, 126, 0,
	0, 0, 177, 310, 0, 0, 0, 240, 0, 277,
	167, 185, 130, 112, 124, 140, 166, 216, 249, 257,
	0, 0, 0, 0, 0, 147, 0, 251, 224, 299,
	0, 0, 230, 250, 188, 288, 242, 297, 298, 168,
	282, 307, 312, 269, 155, 0, 116, 0, 237, 150,
	181, 0, 0, 0, 144, 0, 0, 0, 268, 131,
	284, 204, 210, 141, 143, 142, 125, 263, 286, 135,
	145, 273, 278, 117, 280, 296, 137, 261, 119, 294,
	276, 202, 178, 179, 118, 0, 247, 153, 163, 149,
	219, 0, 162, 239, 291, 292, 148, 314, 127, 306,
	121, 128, 305, 213, 0, 212, 308, 287, 295, 203,
	196, 0, 120, 293, 201, 195, 183, 158, 170, 235,
	191, 236, 171, 208, 207, 209, 0, 0, 0, 274,
	302, 315, 193, 133, 0, 262, 285, 0, 0, 134,
	161, 157, 234, 211, 129, 173, 271, 182, 189, 246,
	313, 223, 252, 138, 301, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 369, 370, 371, 375, 376, 380, 381, 389, 388,
	387, 390, 391, 393, 392, 394, 372, 373, 374, 377,
	378, 379, 382, 383, 386, 384, 385, 0, 111, 122,
	186, 0, 244, 160, 303, 0, 152, 0, 0, 0,
	0, 0, 0, 113, 114, 123, 132, 139, 151, 156,
	159, 165, 169, 172, 174, 175, 176, 180, 194, 197,
	198, 199, 200, 214, 215, 217, 218, 221, 222, 225,
	227, 228, 229, 231, 232, 233, 238, 241, 243, 245,
	248, 253, 254, 255, 256, 258, 259, 260, 264, 265,
	266, 267, 275, 279, 289, 290, 300, 309, 311, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 0, 0, 184, 0, 0, 146, 192,
	190, 0, 0, 0, 226, 281, 0, 0, 0, 0,
	187, 0, 304, 272, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 366, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 164, 206, 126,
	0, 0, 0, 177, 310, 0, 0, 0, 240, 0,
	277, 167, 185, 130, 112, 124, 140, 166, 216, 249,
	257, 0, 0, 0, 0, 0, 147, 0, 251, 224,
	299, 0, 0, 230, 250, 188, 288, 242, 297, 298,
	168, 282, 307, 312, 269, 155, 0, 116, 0, 237,
	150, 181, 0, 0, 0, 144, 0, 0, 0, 268,
	131, 284, 204, 210, 141, 143, 142, 125, 263, 286,
	135, 145, 273, 278, 117, 280, 296, 137, 261, 119,
	294, 276, 202, 178, 179, 118, 0, 247, 153, 163,
	149, 219, 0, 162, 239, 291, 292, 148, 314, 127,
	306, 121, 128, 305, 213, 0, 212, 308, 287, 295,
	203, 196, 0, 120, 293, 201, 195, 183, 158, 170,
	235, 191, 236, 171, 208, 207, 209, 0, 0, 0,
	274, 302, 315, 193, 133, 0, 262, 285, 0, 0,
	134, 161, 157, 234, 211, 129, 173, 271, 182, 189,
	246, 313, 223, 252, 138, 301, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 369, 370, 371, 375, 376, 380, 381, 389,
	388, 387, 390, 391, 393, 392, 394, 372, 373, 374,
	377, 378, 379, 382, 383, 386, 384, 385, 0, 111,
	122, 186, 0, 244, 160, 303, 0, 152, 0, 0,
	0, 0, 0, 0, 113, 114, 123, 132, 139, 151,
	156, 159, 165, 169, 172, 174, 175, 176, 180, 194,
	197, 198, 199, 200, 214, 215, 217, 218, 221, 222,
	225, 227, 228, 229, 231, 232, 233, 238, 241, 243,
	245, 248, 253, 254, 255, 256, 258, 259, 260, 264,
	265, 266, 267, 275, 279, 289, 290, 300, 309, 311,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 184, 0, 0, 146,
	192, 190, 0, 0, 0, 226, 281, 0, 0, 0,
	0, 187, 0, 304, 272, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 811, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 164, 206,
	126, 0, 0, 0, 177, 310, 0, 0, 0, 240,
	0, 277, 167, 185, 130, 112, 124, 140, 166, 216,
	249, 257, 0, 0, 0, 0, 0, 147, 0, 251,
	224, 299, 0, 0, 230, 250, 188, 288, 242, 297,
	298, 168, 282, 307, 312, 269, 155, 0, 116, 0,
	237, 150, 181, 0, 0, 0, 144, 0, 0, 0,
	268, 131, 284, 204, 210, 141, 143, 142, 125, 263,
	286, 135, 145, 273, 278, 117, 280, 296, 137, 261,
	119, 294, 276, 202, 178, 179, 118, 0, 247, 153,
	163, 149, 219, 0, 162, 239, 291, 292, 148, 314,
	127, 306, 121, 128, 305, 213, 0, 212, 308, 287,
	295, 203, 196, 0, 120, 293, 201, 195, 183, 158,
	170, 235, 191, 236, 171, 208, 207, 209, 0, 0,
	0, 274, 302, 315, 193, 133, 0, 262, 285, 0,
	0, 134, 161, 157, 234, 211, 129, 173, 271, 182,
	189, 246, 313, 223, 252, 138, 301, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 369, 370, 371, 375, 376, 380, 381,
	389, 388, 387, 390, 391, 393, 392, 394, 372, 373,
	374, 377, 378, 379, 382, 383, 386, 384, 385, 0,
	111, 122, 186, 0, 244, 160, 303, 0, 152, 0,
	0, 0, 0, 0, 0, 113, 114, 123, 132, 139,
	151, 156, 159, 165, 169, 172, 174, 175, 176, 180,
	194, 197, 198, 199, 200, 214, 215, 217, 218, 221,
	222, 225, 227, 228, 229, 231, 232, 233, 238, 241,
	243, 245, 248, 253, 254, 255, 256, 258, 259, 260,
	264, 265, 266, 267, 275, 279, 289, 290, 300, 309,
	311, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 184, 0, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 0, 0,
	0, 0, 187, 0, 304, 272, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 821, 820, 830, 831, 823, 824, 825, 826, 827,
	828, 829, 822, 0, 0, 832, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 164,
	206, 126, 0, 0, 0, 177, 310, 0, 0, 0,
	240, 0, 277, 167, 185, 130, 112, 124, 140, 166,
	216, 249, 257, 0, 0, 0, 0, 0, 147, 0,
	251, 224, 299, 0, 0, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 0, 0, 0, 144, 0, 0,
	0, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 0, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	0, 0, 274, 302, 315, 193, 133, 0, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 122, 186, 0, 244, 160, 303, 0, 152,
	0, 0, 0, 0, 0, 0, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 29, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 184,
	0, 0, 146, 192, 190, 0, 0, 0, 226, 281,
	0, 0, 0, 0, 187, 0, 304, 272, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 164, 206, 126, 0, 0, 0, 177, 310, 0,
	0, 0, 240, 0, 277, 167, 185, 130, 112, 124,
	140, 166, 216, 249, 257, 0, 0, 0, 0, 0,
	147, 0, 251, 224, 299, 0, 0, 230, 250, 188,
	288, 242, 297, 298, 168, 282, 307, 312, 269, 155,
	0, 116, 0, 237, 150, 181, 0, 0, 0, 144,
	0, 0, 0, 268, 131, 284, 204, 210, 141, 143,
	142, 125, 263, 286, 135, 145, 273, 278, 117, 280,
	296, 137, 261, 119, 294, 276, 202, 178, 179, 118,
	0, 247, 153, 163, 149, 219, 0, 162, 239, 291,
	292, 148, 314, 127, 306, 121, 128, 305, 213, 0,
	212, 308, 287, 295, 203, 196, 0, 120, 293, 201,
	195, 183, 158, 170, 235, 191, 236, 171, 208, 207,
	209, 0, 0, 0, 274, 302, 315, 193, 133, 0,
	262, 285, 0, 0, 134, 161, 157, 234, 211, 129,
	173, 271, 182, 189, 246, 313, 223, 252, 138, 301,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 122, 186, 68, 244, 160, 303,
	0, 152, 0, 0, 0, 0, 0, 0, 113, 114,
	123, 132, 139, 151, 156, 159, 165, 169, 172, 174,
	175, 176, 180, 194, 197, 198, 199, 200, 214, 215,
	217, 218, 221, 222, 225, 227, 228, 229, 231, 232,
	233, 238, 241, 243, 245, 248, 253, 254, 255, 256,
	258, 259, 260, 264, 265, 266, 267, 275, 279, 289,
	290, 300, 309, 311, 29, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 184, 0, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 0, 0, 0, 0, 187, 0, 304, 272,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 164, 206, 126, 0, 0, 0, 177,
	310, 0, 0, 0, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 0, 0, 0,
	0, 0, 147, 0, 251, 224, 299, 0, 0, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 0, 0,
	0, 144, 0, 0, 0, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 0, 0, 274, 302, 315, 193,
	133, 0, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 122, 186, 68, 244,
	160, 303, 0, 152, 0, 0, 0, 0, 0, 0,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 954, 0,
	0, 0, 184, 0, 0, 146, 192, 190, 0, 0,
	0, 226, 281, 0, 0, 0, 0, 187, 0, 304,
	272, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	0, 953, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 164, 206, 126, 0, 0, 0,
	177, 310, 0, 0, 0, 240, 0, 277, 167, 185,
	130, 112, 124, 140, 166, 216, 249, 257, 0, 0,
	0, 0, 0, 147, 0, 251, 224, 299, 0, 0,
	230, 250, 188, 288, 242, 297, 298, 168, 282, 307,
	312, 269, 155, 0, 116, 0, 237, 150, 181, 0,
	0, 0, 144, 0, 0, 0, 268, 131, 284, 204,
	210, 141, 143, 142, 125, 263, 286, 135, 145, 273,
	278, 117, 280, 296, 137, 261, 119, 294, 276, 202,
	178, 179, 118, 0, 247, 153, 163, 149, 219, 0,
	162, 239, 291, 292, 148, 314, 127, 306, 121, 128,
	305, 213, 0, 212, 308, 287, 295, 203, 196, 0,
	120, 293, 201, 195, 183, 158, 170, 235, 191, 236,
	171, 208, 207, 209, 0, 0, 0, 274, 302, 315,
	193, 133, 0, 262, 285, 0, 0, 134, 161, 157,
	234, 211, 129, 173, 271, 182, 189, 246, 313, 223,
	252, 138, 301, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 122, 186, 0,
	244, 160, 303, 0, 152, 0, 0, 0, 0, 0,
	0, 113, 114, 123, 132, 139, 151, 156, 159, 165,
	169, 172, 174, 175, 176, 180, 194, 197, 198, 199,
	200, 214, 215, 217, 218, 221, 222, 225, 227, 228,
	229, 231, 232, 233, 238, 241, 243, 245, 248, 253,
	254, 255, 256, 258, 259, 260, 264, 265, 266, 267,
	275, 279, 289, 290, 300, 309, 311, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 184, 0, 0, 146, 192, 190, 0,
	0, 0, 226, 281, 0, 0, 0, 0, 187, 0,
	304, 272, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 164, 206, 126, 0, 0,
	0, 177, 310, 0, 0, 0, 240, 0, 277, 167,
	185, 130, 112, 124, 140, 166, 216, 249, 257, 0,
	0, 0, 0, 0, 147, 0, 251, 224, 299, 0,
	0, 230, 250, 188, 288, 242, 297, 298, 168, 282,
	307, 312, 269, 155, 0, 116, 0, 237, 150, 181,
	0, 0, 0, 144, 0, 0, 0, 268, 131, 284,
	204, 210, 141, 143, 142, 125, 263, 286, 135, 145,
	273, 278, 117, 280, 296, 137, 261, 119, 294, 276,
	202, 178, 179, 118, 0, 247, 153, 163, 149, 219,
	0, 162, 239, 291, 292, 148, 314, 127, 306, 121,
	128, 305, 213, 0, 212, 308, 287, 295, 203, 196,
	0, 120, 293, 201, 195, 183, 158, 170, 235, 191,
	236, 171, 208, 207, 209, 0, 0, 0, 274, 302,
	315, 193, 133, 0, 262, 285, 0, 0, 134, 161,
	157, 234, 211, 129, 173, 271, 182, 189, 246, 313,
	223, 252, 138, 301, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 122, 186,
	0, 244, 160, 303, 0, 152, 0, 0, 0, 0,
	0, 0, 113, 114, 123, 132, 139, 151, 156, 159,
	165, 169, 172, 174, 175, 176, 180, 194, 197, 198,
	199, 200, 214, 215, 217, 218, 221, 222, 225, 227,
	228, 229, 231, 232, 233, 238, 241, 243, 245, 248,
	253, 254, 255, 256, 258, 259, 260, 264, 265, 266,
	267, 275, 279, 289, 290, 300, 309, 311, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 184, 0, 0, 146, 192, 190,
	0, 0, 0, 226, 281, 0, 0, 0, 0, 187,
	0, 304, 272, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 537, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 164, 206, 126, 0,
	0, 0, 177, 310, 0, 0, 0, 240, 0, 277,
	167, 185, 130, 112, 124, 140, 166, 216, 249, 257,
	0, 0, 0, 0, 0, 147, 0, 251, 224, 299,
	0, 0, 230, 250, 188, 288, 242, 297, 298, 168,
	282, 307, 312, 269, 155, 0, 116, 0, 237, 150,
	181, 0, 0, 0, 144, 0, 0, 0, 268, 131,
	284, 204, 210, 141, 143, 142, 125, 263, 286, 135,
	145, 273, 278, 117, 280, 296, 137, 261, 119, 294,
	276, 202, 178, 179, 118, 0, 247, 153, 163, 149,
	219, 0, 162, 239, 291, 292, 148, 314, 127, 306,
	121, 128, 305, 213, 0, 212, 308, 287, 295, 203,
	196, 0, 120, 293, 201, 195, 183, 158, 170, 235,
	191, 236, 171, 208, 207, 209, 0, 0, 0, 274,
	302, 315, 193, 133, 0, 262, 285, 0, 0, 134,
	161, 157, 234, 211, 129, 173, 271, 182, 189, 246,
	313, 223, 252, 138, 301, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 122,
	186, 0, 244, 160, 303, 0, 152, 0, 0, 0,
	0, 0, 0, 113, 114, 123, 132, 139, 151, 156,
	159, 165, 169, 172, 174, 175, 176, 180, 194, 197,
	198, 199, 200, 214, 215, 217, 218, 221, 222, 225,
	227, 228, 229, 231, 232, 233, 238, 241, 243, 245,
	248, 253, 254, 255, 256, 258, 259, 260, 264, 265,
	266, 267, 275, 279, 289, 290, 300, 309, 311, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 924,
	154, 0, 0, 0, 0, 184, 0, 0, 146, 192,
	190, 0, 0, 0, 226, 281, 0, 0, 0, 0,
	187, 0, 304, 272, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 164, 206, 126,
	0, 0, 0, 177, 310, 0, 0, 0, 240, 0,
	277, 167, 185, 130, 112, 124, 140, 166, 216, 249,
	257, 0, 0, 0, 0, 0, 147, 0, 251, 224,
	299, 0, 0, 230, 250, 188, 288, 242, 297, 298,
	168, 282, 307, 312, 269, 155, 0, 116, 0, 237,
	150, 181, 0, 0, 0, 144, 0, 0, 0, 268,
	131, 284, 204, 210, 141, 143, 142, 125, 263, 286,
	135, 145, 273, 278, 117, 280, 296, 137, 261, 119,
	294, 276, 202, 178, 179, 118, 0, 247, 153, 163,
	149, 219, 0, 162, 239, 291, 292, 148, 314, 127,
	306, 121, 128, 305, 213, 0, 212, 308, 287, 295,
	203, 196, 0, 120, 293, 201, 195, 183, 158, 170,
	235, 191, 236, 171, 208, 207, 209, 0, 0, 0,
	274, 302, 315, 193, 133, 0, 262, 285, 0, 0,
	134, 161, 157, 234, 211, 129, 173, 271, 182, 189,
	246, 313, 223, 252, 138, 301, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	122, 186, 0, 244, 160, 303, 0, 152, 0, 0,
	0, 0, 0, 0, 113, 114, 123, 132, 139, 151,
	156, 159, 165, 169, 172, 174, 175, 176, 180, 194,
	197, 198, 199, 200, 214, 215, 217, 218, 221, 222,
	225, 227, 228, 229, 231, 232, 233, 238, 241, 243,
	245, 248, 253, 254, 255, 256, 258, 259, 260, 264,
	265, 266, 267, 275, 279, 289, 290, 300, 309, 311,
	283, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 0, 0, 0, 0, 184, 0, 0, 146,
	192, 190, 0, 0, 0, 226, 281, 0, 0, 0,
	0, 187, 0, 304, 272, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 164, 206,
	126, 0, 0, 0, 177, 310, 0, 0, 0, 240,
	0, 277, 167, 185, 130, 112, 124, 140, 166, 216,
	249, 257, 0, 0, 0, 0, 0, 147, 0, 251,
	224, 299, 0, 0, 230, 250, 188, 288, 242, 297,
	298, 168, 282, 307, 312, 269, 155, 0, 116, 0,
	237, 150, 181, 0, 0, 0, 144, 0, 0, 0,
	268, 131, 284, 204, 210, 141, 143, 142, 125, 263,
	286, 135, 145, 273, 278, 117, 280, 296, 137, 261,
	119, 294, 276, 202, 178, 179, 118, 0, 247, 153,
	163, 149, 219, 0, 162, 239, 291, 292, 148, 314,
	127, 306, 121, 128, 305, 213, 0, 212, 308, 287,
	295, 203, 196, 0, 120, 293, 201, 195, 183, 158,
	170, 235, 191, 236, 171, 208, 207, 209, 0, 0,
	0, 274, 302, 315, 193, 133, 0, 262, 285, 0,
	0, 134, 161, 157, 234, 211, 129, 173, 271, 182,
	189, 246, 313, 223, 252, 138, 301, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 122, 186, 0, 244, 160, 303, 0, 152, 0,
	0, 0, 0, 0, 0, 113, 114, 123, 132, 139,
	151, 156, 159, 165, 169, 172, 174, 175, 176, 180,
	194, 197, 198, 199, 200, 214, 215, 217, 218, 221,
	222, 225, 227, 228, 229, 231, 232, 233, 238, 241,
	243, 245, 248, 253, 254, 255, 256, 258, 259, 260,
	264, 265, 266, 267, 275, 279, 289, 290, 300, 309,
	311, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 184, 0, 0,
	146, 192, 190, 0, 0, 0, 226, 281, 0, 0,
	0, 0, 187, 0, 304, 272, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 164,
	206, 126, 0, 106, 0, 177, 310, 0, 0, 0,
	240, 0, 277, 167, 185, 130, 112, 124, 140, 166,
	216, 249, 257, 0, 0, 0, 0, 0, 147, 0,
	251, 224, 299, 0, 0, 230, 250, 188, 288, 242,
	297, 298, 168, 282, 307, 312, 269, 155, 0, 116,
	0, 237, 150, 181, 0, 0, 0, 144, 0, 0,
	0, 268, 131, 284, 204, 210, 141, 143, 142, 125,
	263, 286, 135, 145, 273, 278, 117, 280, 296, 137,
	261, 119, 294, 276, 202, 178, 179, 118, 0, 247,
	153, 163, 149, 219, 0, 162, 239, 291, 292, 148,
	314, 127, 306, 121, 128, 305, 213, 0, 212, 308,
	287, 295, 203, 196, 0, 120, 293, 201, 195, 183,
	158, 170, 235, 191, 236, 171, 208, 207, 209, 0,
	0, 0, 274, 302, 315, 193, 133, 0, 262, 285,
	0, 0, 134, 161, 157, 234, 211, 129, 173, 271,
	182, 189, 246, 313, 223, 252, 138, 301, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 122, 186, 0, 244, 160, 303, 0, 152,
	0, 0, 0, 0, 0, 0, 113, 114, 123, 132,
	139, 151, 156, 159, 165, 169, 172, 174, 175, 176,
	180, 194, 197, 198, 199, 200, 214, 215, 217, 218,
	221, 222, 225, 227, 228, 229, 231, 232, 233, 238,
	241, 243, 245, 248, 253, 254, 255, 256, 258, 259,
	260, 264, 265, 266, 267, 275, 279, 289, 290, 300,
	309, 311, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 184, 0,
	0, 146, 192, 190, 0, 0, 0, 226, 281, 0,
	0, 0, 0, 187, 0, 304, 272, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	164, 206, 126, 0, 0, 0, 177, 310, 0, 0,
	0, 240, 0, 277, 167, 185, 130, 112, 124, 140,
	166, 216, 249, 257, 0, 0, 0, 0, 0, 147,
	0, 251, 224, 299, 0, 0, 230, 250, 188, 288,
	242, 297, 298, 168, 282, 307, 312, 269, 155, 0,
	116, 0, 237, 150, 181, 0, 0, 0, 144, 0,
	0, 0, 268, 131, 284, 204, 210, 141, 143, 142,
	125, 263, 286, 135, 145, 273, 278, 117, 280, 296,
	137, 261, 119, 294, 276, 202, 178, 179, 118, 0,
	247, 153, 163, 149, 219, 0, 162, 239, 291, 292,
	148, 314, 127, 306, 121, 128, 305, 213, 0, 212,
	308, 287, 295, 203, 196, 0, 120, 293, 201, 195,
	183, 158, 170, 235, 191, 236, 171, 208, 207, 209,
	0, 0, 0, 274, 302, 315, 193, 133, 0, 262,
	285, 0, 0, 134, 161, 157, 234, 211, 129, 173,
	271, 182, 189, 246, 313, 223, 252, 138, 301, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 122, 186, 0, 244, 160, 303, 0,
	152, 0, 0, 0, 0, 0, 0, 113, 114, 123,
	132, 139, 151, 156, 159, 165, 169, 172, 174, 175,
	176, 180, 194, 197, 198, 199, 200, 214, 215, 217,
	218, 221, 222, 225, 227, 228, 229, 231, 232, 233,
	238, 241, 243, 245, 248, 253, 254, 255, 256, 258,
	259, 260, 264, 265, 266, 267, 275, 279, 289, 290,
	300, 309, 311, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 184,
	0, 0, 146, 192, 190, 0, 0, 0, 226, 281,
	0, 0, 0, 0, 187, 0, 304, 272, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 164, 206, 126, 0, 0, 0, 177, 310, 0,
	0, 0, 240, 0, 277, 167, 185, 130, 112, 124,
	140, 166, 216, 249, 257, 0, 0, 0, 0, 0,
	147, 0, 251, 224, 299, 0, 0, 230, 250, 188,
	288, 242, 297, 298, 168, 282, 307, 312, 269, 155,
	0, 116, 0, 237, 150, 181, 0, 0, 0, 144,
	0, 0, 0, 268, 131, 284, 204, 210, 141, 143,
	142, 125, 263, 286, 135, 145, 273, 278, 117, 280,
	296, 137, 261, 119, 294, 276, 202, 178, 179, 118,
	0, 247, 153, 163, 149, 219, 0, 162, 239, 291,
	292, 148, 314, 127, 306, 121, 128, 305, 213, 0,
	212, 308, 287, 295, 203, 196, 0, 120, 293, 201,
	195, 183, 158, 170, 235, 191, 236, 171, 208, 207,
	209, 0, 0, 0, 274, 302, 315, 193, 133, 0,
	262, 285, 0, 0, 134, 161, 157, 234, 211, 129,
	173, 271, 182, 189, 246, 313, 223, 252, 138, 301,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 122, 186, 0, 244, 160, 303,
	0, 152, 0, 0, 0, 0, 0, 0, 113, 114,
	123, 132, 139, 151, 156, 159, 165, 169, 172, 174,
	175, 176, 180, 194, 197, 198, 199, 200, 214, 215,
	217, 218, 221, 222, 225, 227, 228, 229, 231, 232,
	233, 238, 241, 243, 245, 248, 253, 254, 255, 256,
	258, 259, 260, 264, 265, 266, 267, 275, 279, 289,
	290, 300, 309, 311, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	184, 0, 0, 146, 192, 190, 0, 0, 0, 226,
	281, 0, 0, 0, 0, 187, 0, 304, 272, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 164, 206, 126, 0, 0, 0, 177, 310,
	0, 0, 0, 240, 0, 277, 167, 185, 130, 112,
	124, 140, 166, 216, 249, 257, 0, 0, 0, 0,
	0, 147, 0, 251, 224, 299, 0, 0, 230, 250,
	188, 288, 242, 297, 298, 168, 282, 307, 312, 269,
	155, 0, 116, 0, 237, 150, 181, 0, 0, 0,
	144, 0, 0, 0, 268, 131, 284, 204, 210, 141,
	143, 142, 125, 263, 286, 135, 145, 273, 278, 117,
	280, 296, 137, 261, 119, 294, 276, 202, 178, 179,
	118, 0, 247, 153, 163, 149, 219, 0, 162, 239,
	291, 292, 148, 314, 127, 306, 121, 525, 305, 213,
	0, 212, 308, 287, 295, 203, 196, 0, 120, 293,
	201, 195, 183, 158, 170, 235, 191, 236, 171, 208,
	207, 209, 0, 0, 0, 274, 302, 315, 193, 133,
	0, 262, 285, 0, 0, 134, 161, 157, 234, 526,
	524, 173, 271, 182, 189, 246, 313, 223, 252, 138,
	301, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 122, 186, 0, 244, 160,
	303, 0, 152, 0, 0, 0, 0, 0, 0, 113,
	114, 123, 132, 139, 151, 156, 159, 165, 169, 172,
	174, 175, 176, 180, 194, 197, 198, 199, 200, 214,
	215, 217, 218, 221, 222, 225, 227, 228, 229, 231,
	232, 233, 238, 241, 243, 245, 248, 253, 254, 255,
	256, 258, 259, 260, 264, 265, 266, 267, 275, 279,
	289, 290, 300, 309, 311, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 184, 0, 0, 146, 192, 190, 0, 0, 0,
	226, 281, 0, 0, 0, 0, 187, 0, 304, 272,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 164, 206, 126, 0, 0, 0, 177,
	310, 0, 0, 0, 240, 0, 277, 167, 185, 130,
	112, 124, 140, 166, 216, 249, 257, 0, 0, 0,
	0, 0, 147, 0, 251, 224, 299, 0, 0, 230,
	250, 188, 288, 242, 297, 298, 168, 282, 307, 312,
	269, 155, 0, 116, 0, 237, 150, 181, 0, 0,
	0, 144, 0, 0, 0, 268, 131, 284, 204, 210,
	141, 143, 142, 125, 263, 286, 135, 145, 273, 278,
	117, 280, 296, 137, 261, 119, 294, 276, 202, 178,
	179, 118, 0, 247, 153, 163, 149, 219, 0, 162,
	239, 291, 292, 148, 314, 127, 306, 121, 128, 305,
	213, 0, 212, 308, 287, 295, 203, 196, 0, 120,
	293, 201, 195, 183, 158, 170, 235, 191, 236, 171,
	208, 207, 209, 0, 0, 0, 274, 302, 315, 193,
	133, 0, 262, 285, 0, 0, 134, 161, 157, 234,
	211, 129, 173, 271, 182, 189, 246, 313, 223, 252,
	138, 301, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 122, 186, 0, 244,
	160, 303, 0, 152, 0, 0, 0, 0, 0, 0,
	113, 114, 123, 132, 139, 151, 156, 159, 165, 169,
	172, 174, 175, 176, 180, 194, 197, 198, 199, 200,
	214, 215, 217, 218, 221, 222, 225, 227, 228, 229,
	231, 232, 233, 238, 241, 243, 245, 248, 253, 254,
	255, 256, 258, 259, 260, 264, 265, 266, 267, 275,
	279, 289, 290, 300, 309, 311, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 184, 0, 0, 146, 192, 190, 0, 0,
	0, 226, 281, 0, 0, 0, 0, 187, 0, 304,
	272, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 164, 206, 126, 0, 0, 0,
	177, 310, 0, 0, 0, 240, 0, 277, 167, 185,
	130, 112, 124, 140, 166, 216, 249, 257, 0, 0,
	0, 0, 0, 147, 0, 251, 224, 299, 0, 0,
	230, 250, 188, 288, 242, 297, 298, 168, 282, 307,
	312, 269, 155, 0, 116, 0, 237, 150, 181, 0,
	0, 0, 144, 0, 0, 0, 268, 131, 284, 204,
	210, 141, 143, 142, 125, 263, 286, 135, 145, 273,
	278, 117, 280, 945, 137, 261, 119, 294, 276, 202,
	178, 179, 118, 0, 247, 153, 163, 149, 219, 0,
	162, 239, 291, 292, 148, 314, 127, 306, 121, 525,
	305, 213, 0, 212, 308, 287, 295, 203, 196, 0,
	120, 293, 201, 195, 183, 158, 170, 235, 191, 236,
	171, 208, 207, 209, 0, 0, 0, 274, 302, 315,
	193, 133, 0, 262, 285, 0, 0, 134, 161, 157,
	234, 526, 524, 173, 271, 182, 189, 246, 313, 223,
	252, 138, 301, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 122, 186, 0,
	244, 160, 303, 0, 152, 0, 0, 0, 0, 0,
	0, 113, 114, 123, 132, 139, 151, 156, 159, 165,
	169, 172, 174, 175, 176, 180, 194, 197, 198, 199,
	200, 214, 215, 217, 218, 221, 222, 225, 227, 228,
	229, 231, 232, 233, 238, 241, 243, 245, 248, 253,
	254, 255, 256, 258, 259, 260, 264, 265, 266, 267,
	275, 279, 289, 290, 300, 309, 311, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 184, 0, 0, 146, 192, 190, 0,
	0, 0, 226, 281, 0, 0, 0, 0, 187, 0,
	304, 272, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 164, 206, 126, 0, 0,
	0, 177, 310, 0, 0, 0, 240, 0, 277, 167,
	185, 130, 112, 124, 140, 166, 216, 249, 257, 0,
	0, 0, 0, 0, 147, 0, 251, 224, 299, 0,
	0, 230, 250, 188, 288, 242, 297, 298, 168, 282,
	307, 312, 269, 155, 0, 116, 0, 237, 150, 181,
	0, 0, 0, 144, 0, 0, 0, 268, 131, 284,
	204, 210, 141, 143, 142, 125, 263, 286, 135, 145,
	273, 278, 117, 280, 516, 137, 261, 119, 294, 276,
	202, 178, 179, 118, 0, 247, 153, 163, 149, 219,
	0, 162, 239, 291, 292, 148, 314, 127, 306, 121,
	525, 305, 213, 0, 212, 308, 287, 295, 203, 196,
	0, 120, 293, 201, 195, 183, 158, 170, 235, 191,
	236, 171, 208, 207, 209, 0, 0, 0, 274, 302,
	315, 193, 133, 0, 262, 285, 0, 0, 134, 161,
	157, 234, 526, 524, 519, 518, 182, 189, 246, 313,
	223, 252, 138, 301, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 122, 186,
	0, 244, 160, 303, 0, 152, 0, 0, 0, 0,
	0, 0, 113, 114, 123, 132, 139, 151, 156, 159,
	165, 169, 172, 174, 175, 176, 180, 194, 197, 198,
	199, 200, 214, 215, 217, 218, 221, 222, 225, 227,
	228, 229, 231, 232, 233, 238, 241, 243, 245, 248,
	253, 254, 255, 256, 258, 259, 260, 264, 265, 266,
	267, 275, 279, 289, 290, 300, 309, 311,
}
var yyPact = [...]int{

	2657, -1000, -290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1402, 1480, -1000,
	-1000, -1000, -1000, -1000, -1000, 534, 124, -1000, -1000, 233,
	227, 20704, 232, 2808, 21526, -1000, -1000, -1000, -1000, 162,
	21526, -1000, -1000, -86, -87, -1000, 30, 972, 1275, 1471,
	164, -1000, -1000, 194, 26, -1000, -1000, -1000, 16592, -1000,
	-1000, -1000, 1375, 1400, 169, 1369, 1196, -1000, 10427, 195,
	195, 20293, 23170, -1000, 21526, 9192, 223, 21526, -159, 187,
	187, 118, 187, -1000, 479, -1000, -1000, -1000, 21526, 190,
	21115, 190, 190, 190, 190, 190, 21526, -1000, 308, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21526, 966, 1289, 537,
	122, 6294, 6294, -1000, 524, -1000, 107, 105, 96, 92,
	10, 564, -1000, 6294, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 207, 164, 475, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1288, 750, 1109, -80, -1000, 767, 231, 21526, -1000,
	-1000, 1062, -1000, 1105, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1340, 12893, 13304, 1402, -1000,
	164, -1000, -1000, -1000, 1257, -1000, -1000, 570, 1445, -1000,
	15770, 298, -1000, 12893, 2641, 1066, -1000, -1000, 1066, -1000,
	-1000, 253, -1000, -1000, 14537, 14537, 14537, 14537, 14537, 14537,
	14537, 14537, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1066, -1000,
	10016, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 12893, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 19882, 19060, 21526, 1058,
	997, -1000, -1000, 289, 886, 22759, -110, -1000, -1000, -1000,
	451, 18649, -1000, 278, -1000, 1287, -1000, -1000, 971, 166,
	-1000, 3043, 263, -1000, -1000, -1000, 1108, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21115, 1359, 209, 965, 512, 962, 961,
	959, 21526, 956, 1059, 204, 21526, 1316, 1132, 21526, 954,
	951, 944, 941, -1000, 8778, -1000, 6294, 537, -1000, 737,
	12893, 187, 187, 6294, 6294, 6294, 21526, 21526, 21526, -1000,
	-1000, -1000, -1000, 21526, -1000, -1000, 537, 537, 6294, 6294,
	500, 1440, 500, 500, -1000, -1000, -1000, -1000, 12893, -1000,
	14537, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 919, -1000,
	-1000, 361, -1000, 735, -1000, 12482, -288, -1000, 1196, -1000,
	-1000, 21526, 6294, 16592, 1066, 21115, -1000, 1465, 342, 608,
	269, 1049, -1000, 820, 1300, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1375, 767, 1196, 687, 1158, -1000, -1000,
	-1000, 21526, -1000, 12893, 12893, 649, -1000, 17003, -1000, -1000,
	-1000, -1000, 7122, 418, 14537, 640, 529, 14537, 14537, 14537,
	14537, 14537, 14537, 14537, 14537, 14537, 14537, 14537, 14537, 14537,
	14537, 14537, 692, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 914, -1000, 164, 1067, 1067, 319, 319, 319, 319,
	319, 319, 319, 17414, 1363, 767, 949, 754, 10016, 11249,
	11249, 767, 12893, 12893, 12071, 11660, 11249, 11249, 1363, 505,
	754, 22348, -1000, -1000, 14126, -1000, -1000, -1000, -1000, -1000,
	767, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21115,
	21115, 11249, 11249, 11249, 11249, 767, 767, 11249, 11249, 11249,
	11249, 11249, 767, 767, 767, 767, 1363, 1363, 11249, 11249,
	11249, 1363, 11249, 11249, 1363, 11249, 11249, 11249, 11249, 1363,
	11249, 11249, 11249, 131, 21526, -1000, 1032, 1346, -1000, -1000,
	-1000, 1354, 18238, 15359, 131, 1005, 19060, 21526, -1000, -1000,
	19060, 21526, 6708, 21937, 886, -110, 1022, -1000, -108, -140,
	9604, 296, -1000, -1000, -1000, 7950, -1000, 4638, 8364, -1000,
	263, 1108, -1000, -65, -1000, -1000, -1000, 1087, -1000, 1087,
	153, -19, 1087, 1087, 1087, 1087, 1087, -18, -18, -18,
	-18, -15, -1000, -1000, -1000, -1000, -1000, 1106, 1104, -1000,
	1087, 1087, 1087, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1098, 161, 1089, 1089, 1089, 1089, 1089, 165, -1000,
	12893, 1111, -1000, 21526, 6294, 1315, 6294, 98, 1103, -1000,
	-1000, 21526, 21526, 1048, -1000, 21526, 1040, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 754, 912,
	908, -1000, -1000, -1000, -1000, -1000, -1000, 515, -1000, -1000,
	-1000, -1000, 537, 21526, 21526, 21526, 1351, 537, 754, 633,
	-1000, 1039, -1000, 449, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 938, 1296,
	734, 1363, 275, -1000, -1000, -1000, 866, 262, -1000, 1205,
	12893, 12893, 7950, 13304, -1000, -1000, -1000, -1000, 1340, -1000,
	1363, 1399, -1000, 1221, 1215, -1000, -1000, -1000, 418, 487,
	-1000, -1000, 675, -1000, -1000, -1000, -1000, 261, 1066, -1000,
	2954, -1000, -1000, -1000, -1000, 640, 14537, 14537, 14537, 633,
	2954, 2722, 771, 1329, 319, 549, 549, 425, 425, 425,
	425, 425, 496, 496, -1000, -1000, -1000, 767, -1000, -1000,
	-1000, 11249, -1000, 12893, -1000, 767, 900, -1000, -1000, 754,
	260, 900, -1000, 605, 613, 519, 1438, 900, 517, 1423,
	900, 900, 900, 11249, 568, -1000, 12893, 767, -1000, 884,
	1038, 1027, 900, 767, 1025, 900, 900, -170, -170, 767,
	900, 767, 900, 900, -170, -170, -170, -170, 11249, 11249,
	900, 900, 900, 11249, 900, 900, 11249, 900, 900, 900,
	900, 11249, 900, 900, 900, 160, 1066, -1000, 21937, 19060,
	19060, 19060, 19060, 19060, -1000, 1170, 1168, -1000, 1169, 1162,
	1186, 16592, -1000, 935, 18238, -1000, 1066, -1000, 16181, 277,
	217, 215, 212, 1416, 19060, 1029, -1000, 1029, -1000, 258,
	-1000, -1000, 1022, -110, -117, -1000, -1000, -1000, -1000, 754,
	-1000, 727, -1000, 256, 1002, 4224, -1000, -1000, -1000, -1000,
	166, -1000, -1000, -1000, 1101, 259, -1000, 1242, 378, 303,
	837, 1230, -1000, -1000, 493, -75, -1000, -1000, 637, -18,
	-18, 1087, 1087, 138, 1087, -1000, -18, -1000, -1000, -1000,
	296, 1285, 296, 296, 296, 296, -18, 733, 733, -1000,
	-1000, -1000, -1000, 630, -1000, 1098, -1000, 629, -1000, -1000,
	-1000, -1000, -1000, 845, 1119, 21115, 164, 1337, -1000, -1000,
	-1000, 1474, -1000, -1000, 186, 203, -1000, 6294, 21526, 6294,
	6294, 1416, 901, 892, -1000, -1000, -1000, 500, 537, 1278,
	-1000, -1000, 14537, 361, 1067, -1000, 131, 210, -1000, 1158,
	-1000, 503, 385, 377, 168, 168, -1000, 437, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 130, 1322, 21115,
	21115, 1202, 754, 754, -1000, -1000, 21526, -1000, -1000, -1000,
	-1000, 969, 10427, -1000, -1000, -1000, 5880, 11249, -1000, 633,
	2954, 2451, -1000, 14537, -1000, 767, 754, -1000, 11249, -1000,
	5466, -1000, 387, 692, 387, 14537, 14537, -1000, 14537, 14537,
	-1000, -204, -1000, 1077, 482, -1000, 12893, 816, -1000, -1000,
	14537, 14537, -1000, -1000, -1000, -1000, -1000, 19471, -1000, -170,
	-170, -170, -170, -170, -1000, -1000, -1000, -1000, 900, 900,
	-170, -170, -170, 900, -170, -170, 900, -170, -170, -170,
	-170, 900, -170, -170, -170, 1117, 21937, 1066, -1000, 17826,
	21115, 1042, 1346, 1097, 1115, 1570, -1000, -1000, -1000, -1000,
	1166, -1000, 1160, -1000, -1000, -1000, -1000, 21115, 14537, 277,
	-1000, 1066, 1066, 1066, 1402, 12893, 1029, -1000, -1000, 286,
	-1000, -1000, -116, -145, -1000, -1000, -1000, 7536, 4638, -1000,
	4638, -1000, 21115, 159, -1000, 837, -1000, -1000, 837, -1000,
	-1000, -1000, 1093, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	551, 14537, 1463, -1000, 1239, -1000, 1235, 729, -1000, -1000,
	975, 296, 296, -18, -1000, -1000, 1087, -1000, 296, -1000,
	315, -1000, -1000, -1000, -1000, 296, 896, -1000, 890, 999,
	-1000, 888, 45, 21526, -1000, -1000, -1000, 1114, -1000, -1000,
	-1000, 950, 993, -1000, 3043, 885, 877, 875, 21526, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 537, -1000, 14537, 2954,
	-1000, -1000, -18, 21526, -1000, -1000, 780, -1000, 837, 406,
	-1000, -1000, -1000, 1230, -1000, -1000, 257, 873, -1000, 872,
	870, 21115, 1232, 868, 21526, 21115, -1000, -1000, 841, 852,
	12893, -1000, 21115, 1066, 249, -1000, -1000, -1000, 1411, 19060,
	-1000, -1000, -1000, -1000, 767, -1000, 14537, 2954, -1000, -1000,
	-1000, 242, 767, 1087, 1087, -1000, 1087, 1089, -1000, 1087,
	7, 1087, 4, 767, 767, 2907, 2470, 2301, 716, 1066,
	-166, -1000, 754, 12893, 2129, 1078, -1000, 291, -1000, -1000,
	-1000, -1000, -1000, -170, -170, -1000, -1000, -1000, -1000, -170,
	-1000, -1000, -170, -1000, -1000, -1000, -1000, -170, -1000, -1000,
	-1000, -1000, 1292, 987, 902, -1000, -1000, 10838, 767, 866,
	860, -1000, 1402, -1000, -1000, 12893, 1088, -1000, 12893, -1000,
	-1000, -1000, 860, 1095, -1000, 21115, 21115, 21115, 1375, 754,
	-1000, -1000, -1000, -1000, 4224, -1000, 856, -1000, 1087, -1000,
	1230, -1000, -1000, 21115, -1000, 2954, -101, -1000, -1000, -1000,
	-1000, -1000, -1000, 296, -1000, -1000, -1000, -1000, -1000, -18,
	722, -18, 627, -1000, 622, -1000, -1000, -235, 1086, -1000,
	164, 21526, 86, 186, -1000, 3043, 3043, 3043, -1000, -1000,
	2954, -98, -1000, 1057, 841, 148, 3043, -1000, 1111, 378,
	159, -1000, -1000, -1000, -1000, -1000, 851, 290, -1000, 201,
	148, 841, 754, 1294, -1000, 21115, 1401, 1398, 1029, 10427,
	-1000, -1000, 2954, 5052, -1000, -1000, 154, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14537, 14537, 14537, 14537, 14537,
	767, 693, 754, 14537, 14537, 767, 1395, -1000, -1000, -1000,
	-1000, -1000, 1224, -1000, 1066, -1000, -1000, 163, -1000, 21115,
	1375, 754, 21115, 754, 14948, -1000, 16592, 849, -1000, 849,
	849, -1000, 239, 21115, 1300, 847, -1000, -1000, 296, -1000,
	296, 891, 867, -1000, 21115, -1000, 1368, -1000, 86, -1000,
	680, 56, 61, -1000, 52, 51, 50, 49, 47, -1000,
	-1000, -1000, -1000, 1269, 1264, 19060, 803, -1000, -1000, 840,
	-1000, 1085, 837, -1000, -1000, 796, -1000, -1000, 21115, -1000,
	148, 1066, -1000, -1000, 13304, 13304, 1411, -1000, -1000, -1000,
	-1000, 884, 884, 884, 884, 46, -1000, -1000, 884, 884,
	-1000, 12893, 1461, -1000, 1066, -1000, 164, -1000, -1000, 835,
	-1000, 277, 21115, -1000, -1000, -1000, 239, -1000, 783, 437,
	666, -1000, -1000, 152, -1000, -1000, -1000, -1000, 827, -1000,
	82, 2299, -1000, -1000, -1000, -1000, -1000, -1000, 1274, 1272,
	79, 193, 1249, 1258, 1383, 1029, -1000, -1000, -1000, 493,
	21115, 1111, -1000, -1000, -1000, -1000, 120, -1000, 754, -1000,
	977, -1000, 754, -1000, 1401, -1000, -1000, -1000, -1000, -1000,
	767, 80, -214, -1000, -1000, 1028, 21937, 902, 767, -1000,
	-1000, -1000, -1000, -1000, 607, -1000, 21526, 239, 59, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12893, 12893, 2299, -1000, -1000, -1000, -1000, 1084,
	580, 1264, 1382, 1259, 1261, -1000, 657, 1411, -1000, 808,
	1083, -1000, 806, -1000, 21115, 13304, -1000, -1000, 1188, -210,
	-217, 767, 886, -1000, -1000, 1070, -1000, 239, 83, -1000,
	770, 766, -293, -1000, -1000, 21115, 1266, -1000, 646, -1000,
	1381, 1377, -1000, 1401, 239, 21115, -1000, 120, 1214, -1000,
	-1000, 1183, -1000, -1000, 21115, -1000, 778, 768, 584, -1000,
	12893, 2299, 3727, 802, -1000, -1000, 642, 609, -1000, -1000,
	795, -1000, 126, -212, 743, 224, -1000, -1000, 533, 2299,
	-1000, 757, -294, -1000, -1000, -1000, -1000, -1000, 239, 103,
	-215, 1113, -1000, -1000, -1000, -1000, -1000, -1000, 2299, -1000,
	-295, 2299, 2755, -1000, 1066, -218, 1099, 1079, 1481, -1000,
	-296, 3599, -298, 185, 2299, 509, -1000, 12893, 13715, -1000,
	-1000, 1454, -1000, 1450, 273, 273, 3580, 488, 2299, -1000,
	-299, 183, 2299, -1000, 718, 884, 767, -1000, -1000, -1000,
	173, 611, -1000, -1000, -1000, 3402, -1000, -300, 2299, -1000,
	-1000, -1000, -1000, -1000, 181, 229, -302, -1000, 176, 2299,
	-1000,
}
var yyPgo = [...]int{

	0, 1792, 250, 652, 1791, 1787, 1786, 14, 11, 8,
	18, 1777, 1557, 1555, 1549, 1547, 1775, 1539, 1774, 7,
	1773, 1772, 1535, 1769, 5, 1766, 17, 1765, 6, 88,
	1760, 1759, 1758, 1754, 1753, 1531, 1750, 1749, 1748, 1747,
	1527, 1525, 1745, 1744, 1520, 1511, 1743, 1742, 1509, 1496,
	1493, 1741, 151, 1740, 1739, 1738, 108, 89, 113, 1737,
	1736, 1733, 79, 68, 1729, 84, 52, 87, 660, 1732,
	22, 42, 1731, 1728, 119, 141, 1727, 114, 76, 1726,
	1725, 116, 1724, 1722, 1721, 103, 1720, 1719, 2450, 1718,
	1717, 104, 1716, 45, 46, 71, 1714, 1713, 1712, 1710,
	1709, 106, 257, 1708, 1707, 1706, 59, 1705, 1704, 129,
	1703, 1702, 1701, 102, 49, 1700, 32, 38, 48, 1697,
	123, 28, 1696, 91, 1694, 1690, 31, 21, 1688, 33,
	1680, 35, 1678, 94, 214, 591, 13, 34, 43, 47,
	92, 74, 24, 1674, 95, 73, 63, 36, 101, 1669,
	109, 99, 1662, 1661, 733, 1658, 1657, 96, 1656, 57,
	98, 619, 115, 67, 1655, 1653, 1650, 1647, 60, 93,
	1645, 1644, 29, 193, 66, 627, 27, 1515, 54, 112,
	1643, 26, 1642, 2295, 78, 56, 77, 1641, 1639, 83,
	64, 40, 1638, 1633, 1630, 1624, 1622, 1621, 128, 1619,
	1618, 1615, 1614, 69, 51, 1613, 1612, 110, 97, 1609,
	1608, 1607, 1606, 1605, 90, 50, 100, 1602, 86, 107,
	53, 1600, 1599, 1597, 1595, 37, 30, 1594, 1593, 1592,
	65, 62, 1591, 41, 20, 23, 44, 4, 55, 72,
	1588, 16, 1582, 80, 2, 3, 10, 1581, 1580, 1577,
	1576, 1574, 58, 1567, 1559, 39, 1551, 1545, 1533, 25,
	1522, 1514, 1507, 1500, 0, 70, 105, 1498, 1488, 117,
}
var yyR1 = [...]int{

	0, 262, 263, 263, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 51,
	2, 2, 2, 6, 3, 3, 3, 72, 73, 73,
	77, 77, 4, 4, 5, 5, 7, 7, 55, 55,
	8, 9, 9, 9, 9, 266, 266, 83, 83, 81,
	81, 82, 82, 144, 144, 10, 10, 10, 10, 148,
	148, 151, 151, 151, 152, 152, 152, 152, 187, 187,
	136, 137, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 250, 250, 251, 251, 252, 252, 252, 252, 253,
	253, 254, 254, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 23, 171, 171, 33, 33, 34, 34,
	34, 132, 132, 132, 11, 11, 11, 11, 11, 18,
	20, 20, 25, 25, 26, 21, 21, 21, 21, 27,
	27, 28, 22, 22, 32, 32, 30, 30, 29, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 17, 249, 249, 249, 24, 24, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 38,
	227, 228, 228, 228, 228, 228, 228, 228, 228, 215,
	216, 191, 191, 191, 191, 191, 191, 191, 190, 190,
	190, 190, 194, 194, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 193, 193, 193, 193, 193, 193, 193,
	193, 195, 195, 195, 195, 195, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 197, 197, 197, 197, 197, 197, 197, 197, 214,
	214, 198, 198, 207, 207, 208, 208, 208, 205, 205,
	206, 206, 209, 209, 201, 202, 210, 203, 203, 203,
	204, 204, 204, 213, 213, 213, 213, 199, 217, 217,
	237, 237, 236, 236, 235, 235, 235, 226, 226, 232,
	232, 232, 232, 232, 221, 221, 221, 220, 220, 222,
	222, 225, 225, 234, 234, 233, 218, 218, 238, 238,
	238, 238, 238, 219, 219, 219, 239, 223, 223, 224,
	224, 224, 245, 246, 244, 244, 244, 244, 244, 98,
	98, 98, 229, 229, 229, 230, 230, 230, 231, 231,
	231, 247, 247, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 131, 131, 131, 37,
	169, 169, 243, 243, 243, 242, 240, 240, 241, 241,
	13, 39, 39, 14, 14, 14, 14, 14, 14, 14,
	15, 15, 40, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 69, 158, 158, 156, 156, 159, 159, 157,
	157, 157, 160, 160, 160, 188, 188, 188, 42, 42,
	47, 47, 50, 48, 49, 170, 170, 45, 45, 46,
	46, 46, 46, 61, 61, 267, 267, 44, 44, 43,
	43, 43, 43, 16, 268, 52, 53, 53, 54, 54,
	54, 58, 58, 58, 56, 56, 56, 57, 57, 63,
	63, 67, 67, 67, 67, 66, 66, 66, 66, 134,
	134, 134, 135, 135, 180, 180, 180, 179, 179, 179,
	179, 71, 71, 74, 74, 75, 75, 75, 75, 92,
	92, 93, 93, 93, 93, 93, 104, 104, 143, 143,
	142, 142, 145, 145, 76, 76, 76, 76, 78, 78,
	79, 79, 80, 80, 168, 168, 185, 185, 185, 84,
	84, 84, 86, 85, 85, 85, 85, 87, 87, 89,
	90, 90, 88, 88, 91, 94, 94, 94, 94, 95,
	95, 68, 68, 68, 68, 68, 68, 68, 155, 155,
	97, 97, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 112, 112, 112, 112, 112, 112, 99, 99,
	99, 99, 99, 99, 99, 62, 62, 113, 113, 113,
	120, 65, 65, 64, 64, 114, 114, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 107, 107, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 269, 269, 109, 108, 108, 108, 108,
	108, 108, 59, 59, 59, 59, 59, 186, 186, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 124, 124, 60, 60, 122, 122, 123, 125,
	125, 121, 121, 121, 101, 101, 101, 101, 101, 101,
	101, 101, 103, 103, 103, 126, 126, 115, 115, 70,
	70, 127, 127, 128, 128, 129, 129, 130, 130, 133,
	133, 138, 138, 138, 139, 139, 139, 139, 140, 140,
	140, 100, 100, 100, 100, 100, 100, 141, 141, 141,
	141, 146, 146, 116, 116, 118, 118, 117, 119, 147,
	147, 150, 150, 150, 150, 149, 149, 149, 182, 182,
	182, 153, 153, 161, 161, 162, 162, 154, 154, 200,
	200, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	167, 167, 166, 166, 166, 163, 163, 163, 164, 164,
	181, 181, 177, 177, 178, 178, 183, 183, 184, 184,
	248, 248, 211, 211, 258, 258, 212, 212, 259, 259,
	261, 261, 256, 256, 257, 257, 260, 260, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 264, 265, 172, 173, 173,
	173,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 9, 11, 12, 2, 1, 3,
	3, 6, 1, 3, 1, 3, 7, 8, 1, 1,
	9, 8, 7, 6, 6, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 4, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	0, 0, 2, 3, 11, 7, 9, 5, 5, 15,
	11, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 0, 3, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 4,
	5, 8, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 3, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 1, 4, 4, 3, 3,
	2, 4, 5, 2, 3, 4, 2, 2, 3, 3,
	3, 3, 3, 4, 1, 1, 1, 1, 1, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	0, 1, 1, 2, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 2, 1, 5, 1, 1, 0,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 0, 2, 1, 1, 6, 10, 9, 7, 7,
	7, 9, 7, 12, 14, 7, 7, 7, 9, 9,
	10, 5, 6, 6, 8, 7, 0, 1, 2, 4,
	0, 1, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 4, 6, 4, 4, 4, 4, 4,
	3, 2, 3, 4, 4, 3, 6, 6, 4, 4,
	4, 4, 4, 4, 3, 3, 2, 6, 2, 4,
	4, 4, 5, 7, 6, 5, 4, 2, 4, 3,
	2, 3, 3, 1, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 2, 2, 2,
	2, 3, 3, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	4, 7, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 3, 1, 3, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 3, 5, 4, 6, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}
var yyChk = [...]int{

	-1000, -262, -1, -2, -6, -7, -8, -9, -10, -12,
	-35, -13, -14, -15, -40, -41, -42, -47, -48, -49,
	-45, -44, -43, -16, -22, -17, -51, -3, -4, 6,
	7, -55, 9, 10, 30, -38, 129, -36, -37, 132,
	131, 168, 133, 161, 63, 212, -50, 215, 216, -267,
	-170, 166, 167, 31, 32, 135, 210, 20, 37, -72,
	-264, 8, 305, 130, 213, 163, 162, 26, 350, 67,
	-263, 420, -129, 15, -54, 5, -52, -268, -52, -52,
	-52, -52, -52, -227, 104, 67, -164, 142, 85, 296,
	138, -171, 139, -163, 188, 44, 149, 148, 139, 139,
	140, 142, 296, 138, 176, 175, 139, -88, -183, 70,
	-175, 347, 152, 362, 363, 130, 185, 212, 223, 217,
	251, 239, 348, 364, 153, 205, 137, 237, 240, 283,
	151, 198, 365, 272, 278, 208, 79, 215, 292, 366,
	154, 202, 204, 203, 193, 209, 36, 164, 235, 228,
	188, 367, 355, 226, 28, 183, 368, 280, 256, 369,
	352, 279, 231, 227, 135, 370, 155, 149, 178, 371,
	257, 261, 372, 284, 373, 374, 375, 141, 221, 222,
	376, 189, 286, 255, 33, 150, 349, 48, 173, 287,
	38, 259, 37, 271, 377, 254, 249, 378, 379, 380,
	381, 253, 220, 248, 200, 52, 136, 263, 262, 264,
	201, 282, 244, 242, 382, 383, 156, 384, 385, 229,
	18, 386, 387, 290, 167, 388, 42, 389, 390, 391,
	171, 392, 393, 394, 281, 258, 260, 187, 395, 232,
	146, 396, 175, 397, 351, 398, 288, 225, 399, 157,
	172, 166, 291, 400, 401, 402, 403, 158, 404, 405,
	406, 216, 274, 206, 407, 408, 409, 410, 197, 182,
	294, 285, 51, 210, 268, 411, 219, 148, 211, 412,
	213, 43, 179, 7, 199, 275, 207, 246, 174, 413,
	414, 233, 234, 252, 218, 247, 214, 176, 177, 168,
	415, 293, 269, 353, 50, 241, 238, 180, 245, 416,
	142, 417, 181, 289, 236, 270, 139, 122, 240, 283,
	129, 273, 274, 280, -221, 281, 175, 178, -188, 139,
	-156, 272, 181, 70, 140, 141, 33, 285, 284, 276,
	-183, -61, 133, 169, -88, -172, -172, -172, 275, 275,
	-172, -32, 211, 70, 36, 6, -2, -154, 142, 144,
	214, -73, -77, -185, -183, -176, 72, 318, 319, 320,
	321, 322, 335, 336, 337, 323, 324, 338, 339, 340,
	325, 326, 341, 342, 344, 345, 343, 329, 328, 327,
	330, 331, 333, 332, 334, -139, 17, 16, -5, -3,
	-264, 6, 21, 22, -58, 53, 54, -53, -66, 113,
	-68, -183, -96, 87, -102, 29, 70, -175, 24, -101,
	-97, -121, -119, -120, 122, 123, 124, 111, 112, 119,
	88, 125, -107, -105, -106, -108, -110, -111, 72, 71,
	80, 73, 74, 75, 76, 81, 82, 83, -177, -117,
	-264, 57, 58, 138, 306, 307, 308, 309, 346, 159,
	310, 90, 47, 295, 304, 303, 302, 300, 301, 297,
	299, 298, 312, 313, 145, 296, 117, 305, 335, 336,
	337, 338, 339, 340, 341, 342, 344, 345, 343, 325,
	318, 319, 320, 321, 322, 323, 324, 326, 327, 328,
	329, 330, 331, 332, 333, 334, -154, -154, 11, -81,
	-82, -88, -91, -183, -147, -187, 214, -150, 285, 284,
	-121, -149, -177, -183, 283, 240, 282, -88, -228, -216,
	-219, -178, 154, -239, -177, -174, 151, 70, -175, 134,
	160, 86, 354, 23, 25, 266, 318, 89, 122, 319,
	320, 321, 16, 20, 90, 121, 306, 322, 129, 61,
	297, 299, 295, 296, 273, 29, 10, 26, 162, 192,
	22, 115, 131, 93, 94, 95, 165, 24, 163, 83,
	159, 19, 64, 11, 13, 316, 317, 14, 145, 144,
	106, 190, 140, 59, 8, 125, 27, 103, 55, 323,
	324, 358, 45, 359, 57, 104, 17, 300, 301, 31,
	346, 325, 170, 360, 326, 117, 195, 62, 49, 87,
	81, 34, 84, 65, 85, 15, 191, 60, 314, 194,
	361, 105, 132, 305, 58, 138, 6, 311, 30, 161,
	329, 328, 327, 330, 196, 56, 308, 309, 331, 418,
	139, 92, 312, 313, 143, 82, 5, 44, 32, 9,
	63, 66, 302, 303, 304, 47, 333, 332, 334, 91,
	12, 315, 350, 140, -88, 305, -162, 145, -162, 176,
	175, -162, 96, -39, -88, -161, 145, -177, -161, -161,
	-161, -161, -161, -88, 126, -88, 70, 30, -160, 104,
	12, 296, 138, 70, 175, 178, 139, 176, 142, -173,
	-264, -178, -173, -223, 11, 106, 179, 179, 179, 180,
	179, -159, -158, 177, 278, 279, 275, 277, 12, -69,
	104, -173, -46, -2, -9, -7, -8, -2, 96, -172,
	-172, 30, 72, 50, -249, 67, -211, 271, -52, -265,
	69, 139, -88, 68, 23, -264, -140, 19, 31, -68,
	-183, -130, -133, -68, -176, 318, 319, 320, 321, 322,
	335, 336, 337, 323, 324, 338, 339, 340, 325, 326,
	341, 342, 344, 345, 343, 329, 328, 327, 330, 331,
	333, 332, 334, -129, -2, -52, 49, -56, 21, 22,
	78, 11, -180, 86, 85, 103, -179, 23, 70, -175,
	-176, 72, 126, -68, -99, 106, 87, 104, 105, 89,
	108, 107, 118, 111, 112, 113, 114, 115, 116, 117,
	109, 110, 121, 96, 97, 98, 99, 100, 101, 102,
	-155, -264, -120, -264, 127, 128, -102, -102, -102, -102,
	-102, -102, -102, -102, -264, -2, -114, -68, -264, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -124,
	-68, -264, -269, -109, -264, -269, -109, -269, -109, -269,
	-264, -269, -109, -269, -109, -269, -269, -109, -269, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -90, 27, -88, -71, -74, -75, -76,
	-92, -120, -264, -88, -88, -81, -266, 68, 11, 66,
	-266, 68, 126, 68, -147, 214, -148, -151, 286, 288,
	96, -182, -177, 72, 29, 126, 30, 69, 68, -219,
	154, 151, -190, -194, -196, -195, -197, -192, -193, 237,
	240, 244, 242, 238, 243, 122, 241, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 30, 164,
	233, 234, 235, 236, 257, 258, 259, 260, 261, 262,
	263, 264, 217, 239, 348, 218, 219, 220, 221, 222,
	223, 225, 226, 227, 228, 229, 230, 231, 70, -239,
	67, -177, 23, 142, 70, 87, 70, 70, 70, -88,
	70, 68, 143, -81, 24, 65, -83, -88, 70, 70,
	70, 70, -184, -183, -174, -173, -160, 72, -68, -162,
	-162, -173, -173, -173, -88, -88, -88, -88, -160, -160,
	-173, -173, -157, 11, 106, 11, -157, -157, -68, -102,
	70, -30, -29, -31, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 72, 69, -114, -248,
	419, -58, -88, -173, -77, -120, -141, -177, 9, 106,
	68, 18, 126, 68, -138, 25, 26, -138, -139, -265,
	-58, -103, 50, 73, 76, -57, 56, -88, -68, -68,
	-112, 81, 87, 82, 83, -179, 113, -184, -178, -174,
	-102, -113, -117, -120, 77, 106, 104, 105, 89, -102,
	-102, -102, -102, -102, -102, -102, -102, -102, -102, -102,
	-102, -102, -102, -102, -186, 70, 72, 70, -101, -101,
	-177, -56, -265, 68, -265, -2, -64, -67, 113, -68,
	-183, -64, -265, -68, -68, -121, 72, -64, -121, 72,
	-64, -64, -64, -56, -122, -123, 91, -121, -265, -102,
	-177, -177, -64, -65, -64, -64, -64, -265, -265, -67,
	-64, -67, -64, -64, -265, -265, -265, -265, -56, -56,
	-64, -64, -64, -56, -64, -64, -56, -64, -64, -64,
	-64, -56, -64, -64, -64, -144, 171, -88, 30, 68,
	-84, -86, -85, -87, 55, 59, 61, 56, 57, 58,
	62, -168, 23, -71, -264, -93, 171, -94, 23, -185,
	63, 144, 64, -144, 66, -71, -88, -71, -91, -183,
	113, -150, -148, 68, 287, 289, 290, 65, 84, -68,
	-204, 121, -178, -184, -229, -230, -231, -178, 72, 73,
	-216, -217, -218, -219, -232, 154, -238, 146, 148, 44,
	-220, 155, 140, 45, -191, -205, 269, -198, 67, -198,
	-198, 245, 237, 240, 238, -198, -198, -198, -198, -198,
	-203, 240, -203, -203, -203, -203, 238, 67, 67, -198,
	-198, -198, -207, 67, -207, 232, -208, 67, -208, -208,
	-208, -208, -239, -68, -181, 66, -136, -88, -173, 24,
	-173, -33, 185, 160, 67, -88, -88, -88, 68, 70,
	70, -224, 11, 106, -160, -183, -183, -88, -104, 23,
	-160, -62, 165, 68, 96, 69, -89, 27, 72, -56,
	-165, 134, 131, 132, 136, 137, -242, 266, 130, 240,
	79, 29, 15, 306, 171, 353, 70, 172, -265, 68,
	126, 51, -68, -68, -133, -140, -153, 19, 11, 47,
	47, -63, -137, 81, 82, 83, 126, -264, -113, -102,
	-102, -102, -62, 86, -265, -65, -68, -265, 68, -265,
	126, -265, 68, 66, 23, 11, 11, -265, 11, 11,
	-265, -265, -265, -64, -125, -123, 93, -68, -265, -265,
	68, 68, -265, -265, -265, -265, -134, 314, -134, -265,
	-265, -265, -265, -265, -134, -134, -134, -134, -64, -64,
	-265, -265, -265, -64, -265, -265, -64, -265, -265, -265,
	-265, -64, -265, -265, -265, -100, 30, 47, -2, -264,
	-264, -147, -74, -75, -75, -74, -75, 55, 55, 55,
	60, 55, 60, 55, -85, -185, -265, -264, 34, -185,
	-94, 140, 140, 140, -95, 12, -71, -95, -95, 126,
	-151, -152, 291, 288, 294, 70, 72, 126, 68, -231,
	96, -219, 67, 70, 45, -220, 140, 45, -220, -225,
	70, -225, 45, -209, -201, -202, -210, -213, -199, 81,
	87, 29, 65, 266, 146, 45, 44, 79, -206, 270,
	73, -203, -203, -198, -198, -198, 245, -198, -203, -204,
	30, -204, -204, -204, -204, -203, -214, 72, -214, 73,
	-207, 73, 69, 65, -177, -2, 23, -34, 8, 9,
	10, -250, -251, -252, 70, 106, 190, 191, 143, -173,
	-88, -173, -173, -95, 70, 70, -157, -160, 34, -102,
	-29, -101, -144, 139, -57, -172, -169, -243, -220, -247,
	-218, -219, 147, 155, 146, 171, 154, -169, -243, 154,
	151, -220, 155, 147, -166, -220, 143, 23, -169, -169,
	-226, 96, 171, 23, -177, -177, 52, -88, -95, 11,
	68, -66, 113, -178, -65, -62, 86, -102, -265, -67,
	113, -184, -189, 122, 237, 164, 235, 228, 255, 242,
	268, 233, 269, -186, -189, -102, -102, -102, -102, 347,
	-129, 95, -68, 92, -102, -102, -177, -264, -134, -134,
	-134, -134, -134, -265, -265, -135, -134, -135, -135, -265,
	-135, -135, -265, -135, -135, -135, -135, -265, -135, -135,
	-135, -146, 65, -147, -116, -118, -117, -264, -2, -141,
	-145, -177, -95, -79, -78, 65, 66, -80, 65, -78,
	55, 55, -145, -102, -94, -264, -264, -264, -129, -68,
	-95, 288, 292, 293, -230, -231, -234, -233, -177, -238,
	155, -225, -225, 67, 81, -102, 9, 45, 45, 72,
	69, -204, -204, -203, -198, -204, 70, 122, -204, 69,
	68, 69, 68, 69, 68, -98, 368, 87, -88, -136,
	-136, 65, 69, 68, -190, 70, 70, 70, -88, -160,
	-102, -203, -88, -63, 67, -215, 70, -172, -225, -163,
	70, 70, -172, 70, 70, -177, 45, 70, -88, -177,
	-215, 70, -68, -177, -120, 126, -126, 13, -71, -137,
	-137, -265, -102, 126, -265, -198, -198, -198, -208, -198,
	222, -198, 222, -265, -265, 19, 19, 19, 19, -264,
	-60, 311, -68, 68, 68, -129, 171, -135, -135, -135,
	-135, -135, 28, -146, 68, -265, -265, -265, -265, 68,
	-129, -68, 67, -68, -265, -94, -168, -142, -177, -142,
	-142, -139, 69, 68, -198, -142, -106, -204, -203, 72,
	-203, 73, 73, 368, 67, -2, -88, -253, -254, -255,
	79, 349, 87, 192, 193, 156, 194, 195, 196, -252,
	-190, -190, -190, -256, -159, 11, -215, -131, 159, 160,
	-190, -181, -222, -220, 70, -167, 143, 23, 143, -131,
	-215, 27, -177, -127, 14, 16, -95, -66, 113, -203,
	70, -102, -102, -102, -102, -102, -265, 72, -102, -102,
	-265, 16, 45, -118, 47, -2, -264, -177, -139, -142,
	-93, -185, 68, -265, -265, -265, -236, -235, 66, 150,
	79, -233, -138, 69, -204, -204, 69, 69, -234, -136,
	19, -136, -255, 72, 196, 192, 196, 196, 196, 196,
	197, -257, 38, -259, 39, -71, 69, -172, 70, -191,
	67, -225, 70, -177, -172, -131, -264, -128, -68, -176,
	-115, -70, -68, -176, -126, -137, -265, -265, -265, -265,
	-59, 106, 350, -265, -265, -114, 9, -116, -2, 69,
	-94, -177, -235, 70, -226, 72, 157, 69, 183, -19,
	-2, -7, -8, -9, -10, -12, -35, -13, -14, -20,
	-21, -15, -40, -41, -50, -48, -49, -45, -44, -22,
	-17, -23, 90, 145, 212, 36, 36, 188, 189, -200,
	144, -260, 43, -258, -212, 42, 16, -95, -172, -234,
	-181, -172, -240, -241, 171, 68, -127, -265, 348, 62,
	351, -129, -147, -265, 73, -88, -237, -236, 184, -136,
	-68, -68, -24, -19, -143, 67, 73, -259, 16, -261,
	40, 41, 72, -126, 69, 67, -265, 68, -177, -70,
	52, 349, 352, -265, 67, -132, 186, 187, -25, -26,
	91, 92, 420, -142, 38, 72, 16, 16, -127, -237,
	-234, -241, 47, 52, -142, -136, 70, 70, 95, 93,
	-26, -68, -24, 95, -19, 69, 72, 72, 69, 173,
	350, 69, -11, -18, -10, -7, -8, -9, 212, 90,
	-24, 92, 420, -237, 174, 351, -245, -246, 65, -136,
	-24, 420, -24, 95, 93, -27, -28, 94, -264, 352,
	-246, 65, -245, 65, 10, 9, 420, 95, 420, 145,
	-24, 95, 93, -28, -68, -102, 170, -244, 158, 153,
	156, 30, -244, 95, 90, 420, 145, -24, 92, -265,
	-265, 152, 29, 81, 95, 420, -24, 145, 95, 420,
	145,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 785, 0, 484,
	484, 484, 484, 484, 484, 0, -2, 363, 364, 0,
	0, 0, 0, -2, 459, 460, 461, 463, 464, 473,
	-2, 1257, 1257, 0, 0, 1257, 0, 0, 0, 0,
	0, 48, 49, 837, 0, 476, 465, 466, 0, 1255,
	1, 3, 794, 0, 0, 488, 491, 486, 0, 837,
	837, 0, 0, 82, 0, 0, 0, 0, 0, 835,
	835, 0, 835, 859, 0, 855, 856, 857, 0, 833,
	0, 833, 833, 833, 833, 833, 0, 411, 572, 866,
	867, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 0, 0, 0, 452,
	0, 1258, 1258, 426, 0, 428, 0, 0, 0, 0,
	0, 437, 440, 1258, 314, 315, 316, 456, 457, 446,
	458, 0, 0, 0, 477, 478, 479, 480, 1257, 1257,
	483, 142, 0, 162, 872, 484, 42, 0, 0, 838,
	462, 37, 38, 0, 556, 557, 558, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 798, 0, 0, 785, 44,
	0, 484, 489, 490, 494, 492, 493, 485, 0, 505,
	514, 0, 581, 0, 586, 588, -2, -2, 0, 627,
	628, 629, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 655, 656, 657, 658, 659, 660, 764, 765,
	766, 767, 768, 769, 770, 771, 590, 591, 761, 818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 723, 723, 723, 723, 723, 723, 723,
	723, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 572, 65, 0, 1207, 819, -2, -2,
	0, 0, 761, 0, -2, 1039, -2, 83, 0, 191,
	192, 0, 1051, 335, 864, 865, 1041, 862, 863, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 410, 0, 412, 1258, 452, 415, 0,
	0, 835, 835, 1258, 1258, 1258, 0, 0, 0, 424,
	1259, 1260, 425, 0, 337, 338, 452, 452, 1258, 1258,
	449, 0, 449, 449, 447, 448, 443, 444, 0, 439,
	0, 441, 467, -2, 470, 471, 472, -2, 0, 481,
	482, 0, 144, 0, 161, 0, 870, 873, 491, 43,
	1256, 0, 1258, 0, 0, 0, 30, 0, 0, 795,
	0, 786, 787, 791, 791, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 794, 42, 491, 0, 497, 495, 496,
	487, 0, 506, 0, 0, 0, 515, 0, 517, 518,
	519, 520, 0, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 609, 610, 611, 612, 613, 614,
	587, 0, 601, 0, 0, 0, 647, 648, 649, 650,
	651, 652, 653, 0, 494, 42, 0, 625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	753, 0, 706, 715, 0, 707, 716, 708, 717, 709,
	0, 710, 718, 711, 719, 712, 713, 720, 714, 0,
	0, 0, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 494, 0, 0,
	0, 494, 0, 0, 494, 0, 0, 0, 0, 494,
	0, 0, 0, 63, 0, 571, 0, 521, 523, 524,
	525, -2, 0, 575, -2, 0, 0, 0, 55, 56,
	0, 0, 0, 0, 66, 1207, 68, 69, 0, 0,
	0, 290, 828, 829, 830, 0, 826, 352, 0, 193,
	0, 0, 201, 278, 209, 210, 211, 271, 213, 271,
	271, 0, 271, 271, 271, 271, 271, 287, 287, 287,
	287, 287, 254, 255, 256, 257, 258, 0, 0, 231,
	271, 271, 271, 235, 261, 262, 263, 264, 265, 266,
	267, 268, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 273, 273, 275, 275, 275, 275, 275, 0, 334,
	0, 860, 80, 0, 1258, 0, 1258, 0, 0, 189,
	115, 0, 0, 403, 834, 0, 405, 57, 406, 407,
	408, 409, 573, 868, 869, 413, 414, 453, 454, 0,
	0, 418, 419, 420, 421, 422, 423, 339, 429, 430,
	431, 436, 452, 0, 0, 0, 536, 452, 438, 615,
	474, 143, 146, 0, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 145, 163, 0, 0,
	0, 494, 0, 389, 39, 40, 0, 807, 799, 0,
	0, 0, 0, 0, 789, 792, 793, 790, 798, 45,
	494, 0, 772, 0, 0, 81, 498, 33, 582, 583,
	585, 602, 0, 604, 606, 516, 507, 0, 762, -2,
	592, 593, 617, 618, 619, 0, 0, 0, 0, 615,
	597, 0, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 646, 737, 738, 0, 644, 645,
	654, 621, 620, 0, 817, 42, 0, 623, 501, 502,
	0, 0, 693, 0, 0, 629, 764, 0, 629, 764,
	0, 0, 0, 0, 759, 756, 0, 0, 724, 0,
	0, 0, 0, 0, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 562, 0, 0,
	0, 0, 555, 0, 0, 529, 1141, 531, 0, 575,
	0, 0, 0, 579, 0, 579, 60, 579, 62, 0,
	574, 820, 67, 0, 0, 72, 73, 821, 822, 823,
	824, 0, 762, 0, 190, 353, 355, 358, 359, 360,
	194, 196, 197, 198, 0, 1051, 327, 1151, 1188, -2,
	321, 1077, -2, -2, 200, 280, 279, 212, 0, 287,
	287, 271, 271, 271, 271, 240, 287, 243, 246, 247,
	290, 0, 290, 290, 290, 290, 287, 0, 0, 232,
	233, 234, 223, 0, 224, 273, 226, 0, 227, 228,
	229, 230, 333, 0, 0, 0, 0, 0, 87, 836,
	88, 0, 116, 117, 91, 0, 401, 1258, 0, 1258,
	1258, 579, 0, 0, 432, 450, 451, 449, 452, 0,
	435, 442, 0, 0, 0, 164, 63, 0, 871, 497,
	1257, -2, 390, 852, 390, 390, 381, 307, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 0, 0, 0,
	0, 0, 796, 797, 788, 31, 0, 831, 832, 773,
	774, 579, 0, 603, 605, 607, 0, 621, 594, 615,
	598, 0, 595, 0, 589, 0, 626, -2, 0, 691,
	0, 692, 0, 0, 0, 0, 0, 730, 0, 0,
	731, 0, 702, 785, 0, 757, 0, 0, 705, 725,
	0, 0, 726, 727, 728, 729, 680, 0, 681, 0,
	0, 0, 0, 0, 687, 688, 689, 690, 0, 0,
	512, 512, 512, 0, 512, 512, 0, 512, 512, 512,
	512, 0, 512, 512, 512, 811, 0, 0, -2, 0,
	0, 579, 522, 550, 552, 0, 547, 560, 561, 563,
	0, 565, 0, 567, 568, 526, 528, 0, 0, 575,
	535, 0, 0, 0, 785, 0, 579, 53, 54, 0,
	70, 71, 0, 0, 77, 291, 292, 0, 0, 356,
	0, 195, 0, 0, 309, 321, 317, 318, 321, 312,
	322, 313, 0, 202, 203, 204, 205, 206, 207, 282,
	0, 0, 0, 286, 0, 294, 296, 0, 208, 281,
	0, 290, 290, 287, 238, 239, 271, 244, 290, 248,
	0, 249, 250, 251, 252, 290, 0, 269, 0, 0,
	225, 0, 349, 0, 861, -2, 80, 0, 118, 119,
	120, 0, 92, 93, 0, 0, 0, 0, 0, 404,
	58, 416, 417, 427, 340, 341, 452, 434, 0, 616,
	147, 148, 287, 0, 81, 365, 0, 1257, 321, 0,
	382, 383, 391, 392, 393, 394, 0, 0, 1257, 0,
	0, 0, 392, 0, 0, 0, 853, 854, 0, 0,
	0, 308, 0, 0, 809, 808, 800, 32, 775, 0,
	81, 81, 508, 763, 0, 596, 0, 599, 661, 624,
	503, 0, 0, 271, 271, 742, 271, 275, 745, 271,
	747, 271, 750, 0, 0, 0, 0, 0, 0, 0,
	754, 704, 760, 0, 0, 0, 509, 785, 682, 683,
	684, 685, 686, 512, 512, 665, 513, 666, 667, 512,
	669, 670, 512, 672, 673, 674, 675, 512, 677, 678,
	679, 46, 0, 811, 801, 813, 815, 0, 42, 0,
	0, 542, 785, 544, 551, 0, 0, 545, 0, 546,
	564, 566, 0, -2, 534, 0, 0, 0, 794, 580,
	52, 74, 75, 76, 354, 357, 0, 323, 271, 326,
	0, 310, 311, 0, 283, 284, 0, 293, 295, 297,
	272, 236, 237, 290, 245, 241, 288, 289, 253, 287,
	0, 287, 0, 276, 0, 336, 350, 0, 0, 85,
	0, 0, 99, 0, 95, 0, 0, 0, 402, 433,
	537, 882, 569, 0, 0, 386, 0, 368, 860, 319,
	362, 369, 370, 375, 376, 377, 0, 0, 372, 0,
	386, 0, 385, 0, 41, 0, 781, 0, 579, 0,
	499, 662, 600, 0, 694, 739, 287, 743, 744, 746,
	748, 749, 751, 696, 695, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 0, 0, 0, 663, 664, 668,
	671, 676, 0, 47, 0, 816, -2, 0, 64, 0,
	794, 548, 0, 553, 575, 532, 0, 0, 540, 0,
	0, 51, 299, 0, 791, 0, 285, 242, 290, 270,
	290, 0, 0, 351, 0, -2, 0, 80, 100, 101,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 94,
	96, 97, 98, 884, 878, 0, 0, 1257, 387, 0,
	201, 0, 321, 320, 384, 0, 850, 851, 0, 1257,
	386, 0, 810, 34, 0, 0, 775, 81, 504, 740,
	741, 0, 0, 0, 0, 732, 703, 755, 0, 0,
	510, 0, 0, 814, 0, -2, 0, 543, 50, 0,
	530, 575, 0, 576, 577, 578, 298, 302, 0, 307,
	0, 324, 325, 0, 259, 260, 274, 277, 0, 86,
	0, 0, 102, 103, 104, 105, 107, 108, 0, 0,
	0, 839, 886, -2, 0, 579, 1257, 367, 388, 199,
	0, 860, 371, 378, 379, 1257, 0, 782, 783, 784,
	776, 777, 779, 780, 781, 500, 697, 699, 698, 700,
	0, 0, 0, 721, 722, 785, 0, 804, 42, 549,
	533, 541, 303, 304, 0, 306, 0, 300, 0, 80,
	-2, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 0, 0, 0, 109, 110, 111, 112, 538,
	0, 878, 0, 880, 0, 877, 0, 775, 366, 0,
	0, 380, 0, 396, 0, 0, 35, 701, 0, 0,
	0, 0, 812, -2, 305, 0, 84, 301, 121, 90,
	0, 0, 0, 165, 29, 0, 0, 885, 0, 883,
	0, 0, 879, 781, 300, 0, 395, 0, 0, 778,
	733, 0, 736, 511, 0, 80, 0, 0, 0, 132,
	0, 0, 0, 0, 840, 887, 0, 0, 36, 373,
	0, 397, 0, 734, 0, 0, 122, 123, 0, 0,
	133, 0, 0, 113, 166, 539, 881, 875, 300, 0,
	0, 328, 80, 124, 125, 126, 127, 128, 0, 130,
	0, 0, 0, 374, 0, 0, 329, 330, 0, 89,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 735,
	331, 0, 332, 0, 0, 0, 0, 0, 134, 135,
	0, 0, 0, 140, 0, 0, 0, 342, 344, 345,
	0, 0, 343, 129, 131, 0, 137, 0, 0, 398,
	399, 346, 347, 348, 0, 0, 0, 136, 0, 141,
	138,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 420,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:386
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:391
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:392
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:396
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:423
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:429
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:435
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:443
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:447
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:453
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:460
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[7].expr), GroupBy: GroupBy(yyDollar[8].exprs), Having: NewWhere(HavingStr, yyDollar[9].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:464
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[8].tableExprs, Where: NewWhere(WhereStr, yyDollar[9].expr), GroupBy: GroupBy(yyDollar[10].exprs), Having: NewWhere(HavingStr, yyDollar[11].expr)}
		}
	case 36:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:468
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:474
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:484
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:490
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].subquery, As: yyDollar[1].tableIdent}, nil}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:494
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].subquery, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:504
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:510
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:514
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:521
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:533
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.str = InsertStr
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.str = ReplaceStr
		}
	case 50:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:555
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 51:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:561
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:565
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:573
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:587
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 63:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.partitions = nil
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:616
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:630
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:634
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:658
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:668
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:672
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.str = SessionStr
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.str = GlobalStr
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:691
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:696
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 84:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:715
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:719
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:723
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:727
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:735
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 89:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:743
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:747
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:752
		{
			yyVAL.procedureParams = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:756
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:766
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:780
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:784
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:789
		{
			yyVAL.characteristics = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:793
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:817
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:829
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:851
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:856
		{
			yyVAL.str = ""
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.str = BeforeStr
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.str = AfterStr
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.str = InsertStr
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.str = UpdateStr
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.str = DeleteStr
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.triggerOrder = nil
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:897
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:919
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:923
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:939
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 135:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:945
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:950
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:955
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 138:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:961
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:979
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:989
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1043
		{
			yyVAL.exprs = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.exprs = nil
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1057
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1094
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1145
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1170
		{
			yyVAL.columnType = ColumnType{}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1246
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1260
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 260:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1509
		{
			yyVAL.sqlVal = nil
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1518
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1522
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1530
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1540
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1548
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1557
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = ""
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.colKeyOpt = colKey
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1630
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1640
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1646
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1650
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1655
		{
			yyVAL.indexOptions = nil
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1679
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = ""
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1700
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1716
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = ""
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = yyDollar[1].str
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1768
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 328:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1790
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 329:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1794
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 330:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1798
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 331:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1802
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 332:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1806
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1812
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1875
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1879
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1888
		{
			yyVAL.boolean = true
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.boolean = true
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.boolean = false
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = yyDollar[1].str
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 366:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1962
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 367:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1969
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1976
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 371:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1988
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1992
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 373:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1997
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 374:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2010
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2015
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 378:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 379:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2023
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 380:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2030
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2040
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2046
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2052
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnOrder = nil
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2093
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 398:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2109
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 399:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2113
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2129
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2137
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 404:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2149
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2157
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2173
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2181
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2191
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2200
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2211
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2219
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2223
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2228
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2232
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2236
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2240
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2244
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2248
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2264
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2272
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2276
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2280
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2284
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2288
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2293
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2303
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2307
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2315
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = ""
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = "full "
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2381
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2395
		{
			yyVAL.showFilter = nil
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = SessionStr
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = GlobalStr
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2423
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.statement = &Begin{}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2443
		{
			yyVAL.statement = &Begin{}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.statement = &Commit{}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &Rollback{}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2465
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.statement = &OtherRead{}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2526
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2530
		{
			setAllowComments(yylex, true)
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2540
		{
			yyVAL.bytes2 = nil
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = UnionStr
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.str = UnionAllStr
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.str = UnionDistinctStr
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = SQLCacheStr
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.str = DistinctStr
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.str = StraightJoinHint
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2607
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2630
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2648
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2659
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2663
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.over = nil
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.over = yyDollar[1].over
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2677
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2685
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2737
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2748
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2763
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2767
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.expr = nil
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.columns = nil
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2799
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2832
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2836
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2840
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2852
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2856
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2862
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2864
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2867
		{
			yyVAL.empty = struct{}{}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.empty = struct{}{}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = JoinStr
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = JoinStr
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = JoinStr
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = StraightJoinStr
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = LeftJoinStr
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = LeftJoinStr
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = RightJoinStr
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = RightJoinStr
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = NaturalJoinStr
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2936
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2942
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2967
		{
			yyVAL.indexHints = nil
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2971
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2975
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2979
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2984
		{
			yyVAL.expr = nil
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3006
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3010
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3056
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3060
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3064
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3068
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3072
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 600:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.str = IsNullStr
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3090
		{
			yyVAL.str = IsNotNullStr
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.str = IsTrueStr
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3098
		{
			yyVAL.str = IsNotTrueStr
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.str = IsFalseStr
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3106
		{
			yyVAL.str = IsNotFalseStr
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = EqualStr
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.str = LessThanStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.str = GreaterThanStr
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.str = LessEqualStr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.str = GreaterEqualStr
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = NotEqualStr
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3141
		{
			yyVAL.expr = nil
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3145
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3170
		{
			yyVAL.selectExprs = nil
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3177
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3181
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3217
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3225
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3229
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3249
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3289
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 664:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3365
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3369
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 668:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3373
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3377
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3381
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3409
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3442
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3446
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3458
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3462
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3466
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3481
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3485
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3489
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3493
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 697:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 698:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 699:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3509
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3513
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 701:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3517
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3521
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3525
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3529
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3533
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3609
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3658
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.str = BooleanModeStr
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3672
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = QueryExpansionStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3704
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3734
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3742
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3746
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3751
		{
			yyVAL.expr = nil
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = string("")
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3780
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = nil
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3803
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &NullVal{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3851
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3856
		{
			yyVAL.exprs = nil
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3860
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3870
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.expr = nil
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3889
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3904
		{
			yyVAL.orderBy = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3924
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3928
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = AscScr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.str = AscScr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = DescScr
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.limit = nil
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3950
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3954
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3958
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = ForUpdateStr
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = ShareModeStr
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3997
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4001
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4005
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4020
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4024
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4029
		{
			yyVAL.setExprs = nil
		}
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4033
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4043
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4085
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4089
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.bytes = []byte("charset")
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.expr = &Default{}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.byt = 0
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4130
		{
			yyVAL.byt = 1
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4133
		{
			yyVAL.byt = 0
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4135
		{
			yyVAL.byt = 1
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = IgnoreStr
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4143
		{
			yyVAL.sqlVal = nil
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4145
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.empty = struct{}{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4174
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = UniqueStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = FulltextStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = SpatialStr
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4194
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = string("")
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.EnclosedBy = nil
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4247
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4252
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.sqlVal = nil
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4265
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4270
		{
			yyVAL.sqlVal = nil
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4279
		{
			yyVAL.Fields = nil
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4283
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.Lines = nil
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.sqlVal = nil
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			decNesting(yylex)
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			skipToEnd(yylex)
		}
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4717
		{
			skipToEnd(yylex)
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			skipToEnd(yylex)
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
