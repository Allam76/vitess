// Code generated by goyacc -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const VALUES = 57376
const LAST_INSERT_ID = 57377
const NEXT = 57378
const VALUE = 57379
const SHARE = 57380
const MODE = 57381
const SQL_NO_CACHE = 57382
const SQL_CACHE = 57383
const JOIN = 57384
const STRAIGHT_JOIN = 57385
const LEFT = 57386
const RIGHT = 57387
const INNER = 57388
const OUTER = 57389
const CROSS = 57390
const NATURAL = 57391
const USE = 57392
const FORCE = 57393
const ON = 57394
const USING = 57395
const ID = 57396
const HEX = 57397
const STRING = 57398
const INTEGRAL = 57399
const FLOAT = 57400
const HEXNUM = 57401
const VALUE_ARG = 57402
const LIST_ARG = 57403
const COMMENT = 57404
const COMMENT_KEYWORD = 57405
const BIT_LITERAL = 57406
const NULL = 57407
const TRUE = 57408
const FALSE = 57409
const OFF = 57410
const OR = 57411
const AND = 57412
const NOT = 57413
const BETWEEN = 57414
const CASE = 57415
const WHEN = 57416
const THEN = 57417
const ELSE = 57418
const END = 57419
const LE = 57420
const GE = 57421
const NE = 57422
const NULL_SAFE_EQUAL = 57423
const IS = 57424
const LIKE = 57425
const REGEXP = 57426
const IN = 57427
const SHIFT_LEFT = 57428
const SHIFT_RIGHT = 57429
const DIV = 57430
const MOD = 57431
const UNARY = 57432
const COLLATE = 57433
const BINARY = 57434
const UNDERSCORE_BINARY = 57435
const UNDERSCORE_UTF8MB4 = 57436
const INTERVAL = 57437
const JSON_EXTRACT_OP = 57438
const JSON_UNQUOTE_EXTRACT_OP = 57439
const CREATE = 57440
const ALTER = 57441
const DROP = 57442
const RENAME = 57443
const ANALYZE = 57444
const ADD = 57445
const FLUSH = 57446
const SCHEMA = 57447
const TABLE = 57448
const INDEX = 57449
const VIEW = 57450
const TO = 57451
const IGNORE = 57452
const IF = 57453
const UNIQUE = 57454
const PRIMARY = 57455
const COLUMN = 57456
const SPATIAL = 57457
const FULLTEXT = 57458
const KEY_BLOCK_SIZE = 57459
const ACTION = 57460
const CASCADE = 57461
const CONSTRAINT = 57462
const FOREIGN = 57463
const NO = 57464
const REFERENCES = 57465
const RESTRICT = 57466
const SHOW = 57467
const DESCRIBE = 57468
const EXPLAIN = 57469
const DATE = 57470
const ESCAPE = 57471
const REPAIR = 57472
const OPTIMIZE = 57473
const TRUNCATE = 57474
const MAXVALUE = 57475
const PARTITION = 57476
const REORGANIZE = 57477
const LESS = 57478
const THAN = 57479
const PROCEDURE = 57480
const TRIGGER = 57481
const VINDEX = 57482
const VINDEXES = 57483
const STATUS = 57484
const VARIABLES = 57485
const WARNINGS = 57486
const BEGIN = 57487
const START = 57488
const TRANSACTION = 57489
const COMMIT = 57490
const ROLLBACK = 57491
const BIT = 57492
const TINYINT = 57493
const SMALLINT = 57494
const MEDIUMINT = 57495
const INT = 57496
const INTEGER = 57497
const BIGINT = 57498
const INTNUM = 57499
const UUID = 57500
const REAL = 57501
const DOUBLE = 57502
const FLOAT_TYPE = 57503
const DECIMAL = 57504
const NUMERIC = 57505
const TIME = 57506
const TIMESTAMP = 57507
const DATETIME = 57508
const YEAR = 57509
const CHAR = 57510
const VARCHAR = 57511
const BOOL = 57512
const CHARACTER = 57513
const VARBINARY = 57514
const NCHAR = 57515
const TEXT = 57516
const TINYTEXT = 57517
const MEDIUMTEXT = 57518
const LONGTEXT = 57519
const BLOB = 57520
const TINYBLOB = 57521
const MEDIUMBLOB = 57522
const LONGBLOB = 57523
const JSON = 57524
const ENUM = 57525
const GEOMETRY = 57526
const POINT = 57527
const LINESTRING = 57528
const POLYGON = 57529
const GEOMETRYCOLLECTION = 57530
const MULTIPOINT = 57531
const MULTILINESTRING = 57532
const MULTIPOLYGON = 57533
const NULLX = 57534
const AUTO_INCREMENT = 57535
const APPROXNUM = 57536
const SIGNED = 57537
const UNSIGNED = 57538
const ZEROFILL = 57539
const COLLATION = 57540
const DATABASES = 57541
const SCHEMAS = 57542
const TABLES = 57543
const VITESS_KEYSPACES = 57544
const VITESS_SHARDS = 57545
const VITESS_TABLETS = 57546
const VSCHEMA = 57547
const VSCHEMA_TABLES = 57548
const VITESS_TARGET = 57549
const FULL = 57550
const PROCESSLIST = 57551
const COLUMNS = 57552
const FIELDS = 57553
const ENGINES = 57554
const PLUGINS = 57555
const NAMES = 57556
const CHARSET = 57557
const GLOBAL = 57558
const SESSION = 57559
const ISOLATION = 57560
const LEVEL = 57561
const READ = 57562
const WRITE = 57563
const ONLY = 57564
const REPEATABLE = 57565
const COMMITTED = 57566
const UNCOMMITTED = 57567
const SERIALIZABLE = 57568
const CURRENT_TIMESTAMP = 57569
const DATABASE = 57570
const CURRENT_DATE = 57571
const CURRENT_TIME = 57572
const LOCALTIME = 57573
const LOCALTIMESTAMP = 57574
const UTC_DATE = 57575
const UTC_TIME = 57576
const UTC_TIMESTAMP = 57577
const REPLACE = 57578
const CONVERT = 57579
const CAST = 57580
const SUBSTR = 57581
const SUBSTRING = 57582
const GROUP_CONCAT = 57583
const SEPARATOR = 57584
const TIMESTAMPADD = 57585
const TIMESTAMPDIFF = 57586
const MATCH = 57587
const AGAINST = 57588
const BOOLEAN = 57589
const LANGUAGE = 57590
const WITH = 57591
const QUERY = 57592
const EXPANSION = 57593
const UNUSED = 57594

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"UUID",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VSCHEMA_TABLES",
	"VITESS_TARGET",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 29,
	-2, 4,
	-1, 37,
	159, 301,
	160, 301,
	-2, 291,
	-1, 272,
	112, 641,
	-2, 637,
	-1, 273,
	112, 642,
	-2, 638,
	-1, 338,
	82, 817,
	-2, 60,
	-1, 339,
	82, 773,
	-2, 61,
	-1, 344,
	82, 752,
	-2, 603,
	-1, 346,
	82, 794,
	-2, 605,
	-1, 617,
	1, 354,
	5, 354,
	12, 354,
	13, 354,
	14, 354,
	15, 354,
	17, 354,
	19, 354,
	30, 354,
	31, 354,
	42, 354,
	43, 354,
	44, 354,
	45, 354,
	46, 354,
	48, 354,
	49, 354,
	52, 354,
	53, 354,
	55, 354,
	56, 354,
	270, 354,
	-2, 372,
	-1, 620,
	53, 43,
	55, 43,
	-2, 45,
	-1, 764,
	112, 644,
	-2, 640,
	-1, 928,
	57, 230,
	-2, 627,
	-1, 987,
	5, 30,
	-2, 438,
	-1, 1017,
	5, 29,
	-2, 577,
	-1, 1262,
	5, 30,
	-2, 578,
	-1, 1316,
	5, 29,
	-2, 580,
	-1, 1396,
	5, 30,
	-2, 581,
}

const yyPrivate = 57344

const yyLast = 12854

var yyAct = [...]int{

	273, 1430, 1420, 1225, 1384, 1111, 277, 1020, 573, 1282,
	1297, 1328, 290, 1038, 1196, 850, 445, 1104, 873, 251,
	1162, 1159, 1163, 869, 902, 916, 572, 3, 1021, 1063,
	952, 303, 81, 57, 882, 1175, 211, 872, 1169, 211,
	1134, 799, 343, 241, 476, 211, 304, 51, 979, 789,
	848, 796, 729, 1089, 1080, 1090, 1044, 886, 614, 837,
	766, 505, 817, 511, 630, 852, 912, 211, 81, 830,
	798, 613, 211, 629, 211, 279, 517, 332, 250, 275,
	337, 260, 961, 525, 334, 56, 1423, 1407, 243, 244,
	245, 246, 1418, 587, 249, 1394, 1415, 1226, 51, 1406,
	1393, 588, 1151, 1254, 450, 264, 256, 478, 206, 202,
	203, 204, 340, 1358, 538, 537, 547, 548, 540, 541,
	542, 543, 544, 545, 546, 539, 1190, 315, 549, 321,
	322, 319, 320, 318, 317, 316, 61, 1191, 1192, 935,
	864, 865, 1051, 323, 324, 1050, 863, 631, 1052, 632,
	495, 499, 198, 934, 200, 1135, 248, 247, 496, 493,
	494, 1071, 63, 64, 65, 66, 67, 895, 1285, 1303,
	903, 1245, 1243, 480, 240, 482, 1096, 463, 488, 489,
	1114, 939, 704, 1113, 1417, 702, 1414, 1385, 1110, 831,
	933, 464, 1137, 1376, 887, 1438, 1337, 1039, 1041, 211,
	889, 452, 211, 200, 1115, 479, 481, 1107, 211, 889,
	708, 498, 889, 1434, 211, 695, 703, 81, 1185, 81,
	81, 1184, 81, 81, 1183, 81, 1139, 81, 1143, 446,
	1138, 205, 1136, 448, 705, 1329, 81, 1141, 1064, 1107,
	930, 927, 928, 455, 926, 1109, 1140, 735, 1331, 199,
	213, 201, 946, 561, 562, 945, 1365, 1265, 1121, 1142,
	1144, 1006, 973, 475, 738, 475, 475, 81, 475, 475,
	460, 475, 1095, 475, 1040, 937, 940, 1100, 1097, 1091,
	1098, 1094, 475, 514, 996, 1092, 1093, 1359, 513, 993,
	529, 501, 502, 1208, 870, 477, 888, 1338, 1336, 1099,
	903, 885, 883, 51, 884, 888, 470, 896, 888, 881,
	887, 1106, 932, 549, 539, 1392, 1330, 549, 558, 1432,
	524, 560, 1433, 1374, 1431, 1348, 730, 822, 523, 522,
	211, 211, 211, 457, 931, 458, 81, 1173, 459, 954,
	70, 1108, 81, 1106, 1209, 524, 446, 633, 1091, 571,
	559, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	1153, 586, 589, 589, 589, 595, 589, 589, 595, 589,
	603, 604, 605, 606, 607, 608, 71, 618, 936, 444,
	340, 612, 466, 467, 468, 451, 561, 562, 818, 818,
	1003, 561, 562, 938, 515, 537, 547, 548, 540, 541,
	542, 543, 544, 545, 546, 539, 617, 731, 549, 621,
	590, 592, 594, 596, 598, 600, 601, 953, 591, 593,
	627, 597, 599, 697, 602, 1069, 1379, 741, 742, 991,
	1439, 990, 538, 537, 547, 548, 540, 541, 542, 543,
	544, 545, 546, 539, 773, 211, 549, 737, 523, 522,
	81, 519, 522, 1398, 1291, 211, 211, 81, 771, 772,
	770, 211, 453, 454, 211, 524, 892, 211, 524, 1440,
	1290, 211, 893, 81, 81, 523, 522, 54, 81, 81,
	81, 211, 81, 81, 736, 980, 1084, 769, 992, 81,
	81, 1083, 524, 756, 758, 759, 475, 1072, 790, 757,
	791, 523, 522, 475, 540, 541, 542, 543, 544, 545,
	546, 539, 1400, 717, 549, 523, 522, 81, 524, 475,
	475, 211, 1155, 1375, 475, 475, 475, 81, 475, 475,
	197, 1310, 524, 743, 22, 475, 475, 1288, 523, 522,
	1118, 709, 547, 548, 540, 541, 542, 543, 544, 545,
	546, 539, 1081, 715, 549, 524, 504, 302, 542, 543,
	544, 545, 546, 539, 767, 1372, 549, 970, 971, 972,
	1345, 81, 764, 1053, 763, 1054, 1334, 1416, 503, 1402,
	504, 293, 292, 295, 296, 297, 298, 808, 811, 79,
	294, 299, 446, 819, 255, 329, 330, 745, 1334, 1388,
	1334, 504, 803, 1228, 81, 81, 1221, 51, 768, 1219,
	760, 211, 762, 1334, 1366, 1334, 1333, 1280, 1279, 211,
	211, 1064, 575, 211, 211, 342, 1059, 81, 839, 842,
	843, 844, 840, 792, 841, 845, 1267, 504, 1176, 1177,
	81, 793, 794, 1264, 504, 1215, 1214, 804, 805, 1211,
	1212, 810, 813, 814, 1211, 1210, 1344, 877, 827, 714,
	815, 985, 504, 834, 504, 849, 713, 24, 698, 618,
	696, 340, 693, 858, 801, 504, 826, 624, 828, 829,
	472, 904, 905, 906, 874, 640, 639, 1045, 465, 1343,
	856, 1015, 1342, 1205, 617, 1016, 211, 81, 617, 81,
	24, 1045, 861, 81, 81, 211, 211, 860, 211, 211,
	58, 1160, 211, 81, 1172, 54, 1124, 833, 918, 625,
	890, 623, 1172, 857, 504, 623, 801, 1260, 1315, 211,
	834, 211, 211, 1347, 211, 834, 1213, 1055, 24, 862,
	1009, 1008, 834, 475, 1172, 475, 985, 623, 54, 257,
	985, 626, 739, 707, 54, 1408, 914, 915, 1299, 475,
	985, 538, 537, 547, 548, 540, 541, 542, 543, 544,
	545, 546, 539, 897, 342, 549, 342, 342, 1272, 342,
	342, 764, 342, 763, 342, 270, 54, 917, 839, 842,
	843, 844, 840, 342, 841, 845, 1217, 54, 1201, 1176,
	1177, 1112, 767, 962, 1058, 963, 913, 908, 907, 920,
	974, 1425, 1421, 1203, 1179, 1160, 1085, 733, 711, 751,
	1032, 969, 1030, 1182, 527, 1033, 1034, 1031, 843, 844,
	1181, 975, 1029, 1028, 1412, 211, 211, 211, 211, 211,
	1022, 1405, 744, 261, 262, 1120, 768, 211, 958, 518,
	211, 1410, 968, 967, 211, 506, 1076, 1017, 211, 638,
	473, 1068, 1381, 1380, 516, 1313, 1066, 507, 984, 1060,
	1258, 1295, 923, 81, 710, 847, 803, 1018, 1019, 1002,
	518, 618, 618, 618, 618, 618, 1000, 258, 259, 252,
	1352, 1056, 253, 342, 1024, 1025, 849, 1027, 1042, 635,
	800, 802, 58, 1351, 618, 1035, 1023, 1301, 1046, 1026,
	617, 617, 617, 617, 617, 1047, 1065, 874, 1045, 1043,
	497, 81, 81, 1073, 1074, 617, 1075, 1048, 1077, 1078,
	1079, 966, 997, 617, 1427, 1426, 266, 994, 728, 965,
	520, 1427, 1061, 1062, 1362, 1286, 1257, 734, 60, 62,
	81, 622, 55, 1, 1419, 1227, 1296, 929, 1383, 898,
	899, 900, 901, 1082, 1327, 211, 1195, 880, 475, 1088,
	871, 69, 443, 68, 81, 909, 910, 911, 1373, 879,
	878, 1101, 1103, 1102, 538, 537, 547, 548, 540, 541,
	542, 543, 544, 545, 546, 539, 475, 1335, 549, 1284,
	891, 1070, 894, 1202, 1117, 1067, 1378, 342, 647, 645,
	646, 644, 643, 649, 342, 648, 642, 225, 1126, 81,
	81, 335, 1022, 1161, 846, 1128, 1127, 1133, 634, 919,
	342, 342, 521, 1146, 1152, 342, 342, 342, 72, 342,
	342, 1145, 1105, 81, 925, 1166, 342, 342, 1164, 764,
	491, 1156, 492, 227, 557, 964, 81, 1049, 81, 81,
	341, 1167, 1180, 1165, 740, 51, 563, 564, 565, 566,
	567, 568, 569, 570, 747, 510, 1194, 1171, 1187, 1350,
	1300, 1186, 1001, 584, 527, 816, 211, 342, 278, 755,
	291, 1199, 1200, 1193, 1198, 288, 289, 1206, 1207, 746,
	874, 1014, 874, 1189, 531, 211, 276, 268, 616, 609,
	838, 81, 836, 835, 81, 81, 211, 1178, 1174, 615,
	982, 1123, 81, 1253, 983, 211, 1357, 750, 795, 26,
	59, 987, 988, 989, 1218, 263, 19, 18, 995, 17,
	20, 998, 999, 16, 820, 15, 1220, 1005, 1232, 1223,
	14, 1007, 461, 30, 1010, 1011, 1012, 1013, 21, 13,
	12, 824, 825, 11, 10, 1241, 1126, 9, 8, 7,
	6, 618, 5, 4, 254, 1234, 1037, 23, 2, 1022,
	1233, 0, 0, 1259, 342, 0, 0, 0, 0, 508,
	512, 0, 0, 0, 81, 0, 0, 342, 1252, 0,
	617, 1269, 81, 0, 0, 1268, 530, 1278, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	1274, 1275, 1276, 0, 1293, 1287, 0, 1289, 874, 1294,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 0, 342, 0, 342, 0, 0, 0,
	941, 942, 0, 475, 1302, 81, 81, 0, 81, 0,
	342, 1298, 0, 81, 0, 81, 81, 81, 211, 0,
	0, 81, 1322, 1314, 1323, 1324, 1325, 0, 1321, 0,
	1316, 0, 1164, 1326, 0, 1332, 342, 0, 0, 1339,
	81, 0, 0, 0, 0, 0, 0, 1165, 0, 1349,
	1317, 1340, 1132, 1341, 0, 0, 0, 765, 0, 0,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 81, 1363, 0, 0, 1371,
	1370, 222, 1346, 0, 1364, 0, 0, 1164, 81, 81,
	0, 0, 0, 0, 619, 0, 0, 0, 1386, 0,
	0, 1390, 1165, 0, 51, 235, 81, 1387, 0, 1022,
	1395, 0, 0, 0, 0, 823, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1382, 0,
	208, 820, 1298, 874, 1404, 0, 0, 0, 0, 242,
	0, 0, 0, 509, 0, 0, 0, 1409, 1411, 81,
	0, 0, 0, 0, 0, 0, 214, 0, 1413, 0,
	0, 333, 1424, 217, 0, 0, 447, 0, 449, 1435,
	342, 226, 221, 0, 732, 0, 0, 0, 0, 209,
	0, 0, 239, 1238, 1239, 0, 1240, 0, 209, 1242,
	0, 1244, 0, 0, 0, 1235, 0, 0, 0, 753,
	754, 0, 1237, 224, 1422, 0, 0, 267, 474, 234,
	209, 0, 0, 1246, 1247, 209, 0, 209, 1086, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 1262, 1263, 215, 1266, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 342, 0, 0,
	0, 0, 574, 0, 1277, 806, 807, 0, 0, 0,
	0, 0, 0, 228, 218, 219, 0, 229, 230, 231,
	233, 342, 232, 238, 0, 0, 0, 220, 223, 0,
	216, 237, 236, 0, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 0, 0, 462, 976, 977, 978,
	0, 0, 469, 0, 342, 0, 0, 0, 471, 0,
	868, 0, 0, 820, 0, 0, 1168, 1170, 0, 0,
	0, 1309, 538, 537, 547, 548, 540, 541, 542, 543,
	544, 545, 546, 539, 0, 0, 549, 0, 0, 0,
	1170, 0, 209, 0, 0, 209, 0, 0, 0, 0,
	0, 209, 0, 342, 0, 342, 1197, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 1354, 1355, 1356, 0, 0, 1251, 1360,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1367, 1368, 1369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 1224, 0,
	0, 1229, 1230, 959, 960, 0, 512, 0, 0, 342,
	0, 0, 0, 0, 611, 1391, 620, 483, 484, 0,
	485, 486, 1396, 487, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 1401, 538, 537, 547, 548, 540, 541, 542, 543,
	544, 545, 546, 539, 0, 0, 549, 0, 0, 0,
	820, 0, 0, 209, 209, 209, 0, 0, 986, 538,
	537, 547, 548, 540, 541, 542, 543, 544, 545, 546,
	539, 342, 0, 549, 0, 1004, 1436, 1437, 0, 1283,
	0, 0, 0, 0, 0, 0, 1130, 1131, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 1147,
	1148, 0, 1149, 1150, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 1158, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 699,
	700, 0, 0, 0, 0, 706, 0, 0, 333, 1249,
	0, 712, 1318, 1319, 0, 1320, 0, 0, 0, 0,
	1283, 0, 1283, 1283, 1283, 723, 0, 0, 1197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 1204, 0, 0, 1283, 209, 209,
	0, 0, 0, 0, 209, 0, 0, 209, 0, 0,
	209, 0, 0, 0, 716, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 1119, 1377, 538, 537, 547, 548, 540, 541, 542,
	543, 544, 545, 546, 539, 342, 342, 549, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 1248, 694, 0,
	820, 0, 0, 1397, 209, 701, 0, 0, 0, 0,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 0,
	1154, 718, 719, 1403, 0, 0, 720, 721, 722, 0,
	724, 725, 0, 0, 0, 0, 0, 726, 727, 0,
	0, 0, 0, 0, 0, 832, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 859, 0,
	267, 267, 1188, 0, 267, 267, 267, 0, 0, 0,
	821, 538, 537, 547, 548, 540, 541, 542, 543, 544,
	545, 546, 539, 0, 0, 549, 0, 0, 0, 267,
	267, 267, 267, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 209, 854, 0, 0, 209, 209, 0, 0,
	0, 0, 0, 0, 1304, 1305, 1306, 1307, 1308, 0,
	0, 0, 1311, 1312, 0, 0, 0, 1129, 0, 0,
	921, 0, 0, 0, 0, 0, 0, 0, 0, 943,
	944, 0, 947, 948, 0, 0, 949, 538, 537, 547,
	548, 540, 541, 542, 543, 544, 545, 546, 539, 0,
	0, 549, 0, 951, 0, 0, 0, 0, 957, 0,
	0, 0, 1255, 0, 0, 0, 0, 981, 0, 209,
	0, 0, 574, 0, 0, 0, 0, 0, 209, 209,
	1270, 209, 209, 1271, 0, 209, 1273, 538, 537, 547,
	548, 540, 541, 542, 543, 544, 545, 546, 539, 0,
	0, 549, 209, 0, 955, 956, 0, 209, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 922, 0, 924, 538, 537,
	547, 548, 540, 541, 542, 543, 544, 545, 546, 539,
	0, 950, 549, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 1428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 209, 209,
	209, 209, 209, 0, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 209, 0, 0, 0, 854, 0, 0,
	0, 209, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 679, 682, 683, 684, 685, 686, 687,
	0, 650, 688, 689, 690, 691, 692, 667, 668, 669,
	670, 651, 652, 680, 0, 654, 0, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 671, 672, 673,
	674, 675, 676, 677, 678, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 1116, 821,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 526, 0, 0, 0, 1222,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	1231, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	80, 0, 528, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 523, 522, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 524, 533, 0, 536, 0, 0, 209, 0,
	0, 550, 551, 552, 553, 554, 555, 556, 0, 534,
	535, 532, 538, 537, 547, 548, 540, 541, 542, 543,
	544, 545, 546, 539, 109, 0, 549, 0, 212, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 821, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 854, 0, 0, 0, 1292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 89, 121, 193,
	148, 106, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 419,
	209, 390, 433, 368, 382, 442, 383, 384, 412, 354,
	398, 139, 380, 0, 371, 349, 377, 350, 369, 392,
	103, 395, 367, 421, 401, 432, 120, 440, 122, 406,
	0, 160, 131, 0, 0, 394, 423, 396, 417, 389,
	413, 359, 405, 434, 381, 410, 435, 0, 0, 0,
	80, 0, 875, 876, 0, 0, 0, 0, 0, 96,
	0, 408, 429, 379, 409, 411, 348, 407, 0, 352,
	355, 441, 425, 374, 375, 1057, 0, 0, 0, 0,
	0, 0, 393, 397, 414, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 404, 0, 0, 0,
	356, 353, 0, 0, 391, 0, 0, 0, 358, 0,
	373, 415, 0, 347, 109, 418, 424, 388, 212, 428,
	386, 385, 431, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 422, 370, 378, 99, 376,
	153, 141, 176, 403, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 439, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 351, 0, 161, 178, 196, 94, 366,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 362, 365, 360,
	361, 399, 400, 436, 437, 438, 416, 357, 0, 363,
	364, 0, 420, 426, 427, 402, 82, 89, 121, 193,
	148, 106, 179, 430, 419, 0, 390, 433, 368, 382,
	442, 383, 384, 412, 354, 398, 139, 380, 0, 371,
	349, 377, 350, 369, 392, 103, 395, 367, 421, 401,
	432, 120, 440, 122, 406, 0, 160, 131, 0, 0,
	394, 423, 396, 417, 389, 413, 359, 405, 434, 381,
	410, 435, 0, 0, 0, 80, 0, 875, 876, 0,
	0, 0, 0, 0, 96, 0, 408, 429, 379, 409,
	411, 348, 407, 0, 352, 355, 441, 425, 374, 375,
	0, 0, 0, 0, 0, 0, 0, 393, 397, 414,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 404, 0, 0, 0, 356, 353, 0, 0, 391,
	0, 0, 0, 358, 0, 373, 415, 0, 347, 109,
	418, 424, 388, 212, 428, 386, 385, 431, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	422, 370, 378, 99, 376, 153, 141, 176, 403, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 439, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 351, 0,
	161, 178, 196, 94, 366, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 362, 365, 360, 361, 399, 400, 436, 437,
	438, 416, 357, 0, 363, 364, 0, 420, 426, 427,
	402, 82, 89, 121, 193, 148, 106, 179, 430, 419,
	0, 390, 433, 368, 382, 442, 383, 384, 412, 354,
	398, 139, 380, 0, 371, 349, 377, 350, 369, 392,
	103, 395, 367, 421, 401, 432, 120, 440, 122, 406,
	0, 160, 131, 0, 0, 394, 423, 396, 417, 389,
	413, 359, 405, 434, 381, 410, 435, 54, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 408, 429, 379, 409, 411, 348, 407, 0, 352,
	355, 441, 425, 374, 375, 0, 0, 0, 0, 0,
	0, 0, 393, 397, 414, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 404, 0, 0, 0,
	356, 353, 0, 0, 391, 0, 0, 0, 358, 0,
	373, 415, 0, 347, 109, 418, 424, 388, 212, 428,
	386, 385, 431, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 422, 370, 378, 99, 376,
	153, 141, 176, 403, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 439, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 351, 0, 161, 178, 196, 94, 366,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 362, 365, 360,
	361, 399, 400, 436, 437, 438, 416, 357, 0, 363,
	364, 0, 420, 426, 427, 402, 82, 89, 121, 193,
	148, 106, 179, 430, 419, 0, 390, 433, 368, 382,
	442, 383, 384, 412, 354, 398, 139, 380, 0, 371,
	349, 377, 350, 369, 392, 103, 395, 367, 421, 401,
	432, 120, 440, 122, 406, 0, 160, 131, 0, 0,
	394, 423, 396, 417, 389, 413, 359, 405, 434, 381,
	410, 435, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 408, 429, 379, 409,
	411, 348, 407, 0, 352, 355, 441, 425, 374, 375,
	0, 0, 0, 0, 0, 0, 0, 393, 397, 414,
	387, 0, 0, 0, 0, 0, 0, 1125, 0, 372,
	0, 404, 0, 0, 0, 356, 353, 0, 0, 391,
	0, 0, 0, 358, 0, 373, 415, 0, 347, 109,
	418, 424, 388, 212, 428, 386, 385, 431, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	422, 370, 378, 99, 376, 153, 141, 176, 403, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 439, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 351, 0,
	161, 178, 196, 94, 366, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 362, 365, 360, 361, 399, 400, 436, 437,
	438, 416, 357, 0, 363, 364, 0, 420, 426, 427,
	402, 82, 89, 121, 193, 148, 106, 179, 430, 419,
	0, 390, 433, 368, 382, 442, 383, 384, 412, 354,
	398, 139, 380, 0, 371, 349, 377, 350, 369, 392,
	103, 395, 367, 421, 401, 432, 120, 440, 122, 406,
	0, 160, 131, 0, 0, 394, 423, 396, 417, 389,
	413, 359, 405, 434, 381, 410, 435, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 408, 429, 379, 409, 411, 348, 407, 0, 352,
	355, 441, 425, 374, 375, 0, 0, 0, 0, 0,
	0, 0, 393, 397, 414, 387, 0, 0, 0, 0,
	0, 0, 761, 0, 372, 0, 404, 0, 0, 0,
	356, 353, 0, 0, 391, 0, 0, 0, 358, 0,
	373, 415, 0, 347, 109, 418, 424, 388, 212, 428,
	386, 385, 431, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 422, 370, 378, 99, 376,
	153, 141, 176, 403, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 439, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 351, 0, 161, 178, 196, 94, 366,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 362, 365, 360,
	361, 399, 400, 436, 437, 438, 416, 357, 0, 363,
	364, 0, 420, 426, 427, 402, 82, 89, 121, 193,
	148, 106, 179, 430, 419, 0, 390, 433, 368, 382,
	442, 383, 384, 412, 354, 398, 139, 380, 0, 371,
	349, 377, 350, 369, 392, 103, 395, 367, 421, 401,
	432, 120, 440, 122, 406, 0, 160, 131, 0, 0,
	394, 423, 396, 417, 389, 413, 359, 405, 434, 381,
	410, 435, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 408, 429, 379, 409,
	411, 348, 407, 0, 352, 355, 441, 425, 374, 375,
	0, 0, 0, 0, 0, 0, 0, 393, 397, 414,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 404, 0, 0, 0, 356, 353, 0, 0, 391,
	0, 0, 0, 358, 0, 373, 415, 0, 347, 109,
	418, 424, 388, 212, 428, 386, 385, 431, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	422, 370, 378, 99, 376, 153, 141, 176, 403, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 439, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 351, 0,
	161, 178, 196, 94, 366, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 362, 365, 360, 361, 399, 400, 436, 437,
	438, 416, 357, 0, 363, 364, 0, 420, 426, 427,
	402, 82, 89, 121, 193, 148, 106, 179, 430, 419,
	0, 390, 433, 368, 382, 442, 383, 384, 412, 354,
	398, 139, 380, 0, 371, 349, 377, 350, 369, 392,
	103, 395, 367, 421, 401, 432, 120, 440, 122, 406,
	0, 160, 131, 0, 0, 394, 423, 396, 417, 389,
	413, 359, 405, 434, 381, 410, 435, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 408, 429, 379, 409, 411, 348, 407, 0, 352,
	355, 441, 425, 374, 375, 0, 0, 0, 0, 0,
	0, 0, 393, 397, 414, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 404, 0, 0, 0,
	356, 353, 0, 0, 391, 0, 0, 0, 358, 0,
	373, 415, 0, 347, 109, 418, 424, 388, 212, 428,
	386, 385, 431, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 422, 370, 378, 99, 376,
	153, 141, 176, 403, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 439, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 351, 0, 161, 178, 196, 94, 366,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 362, 365, 360,
	361, 399, 400, 436, 437, 438, 416, 357, 0, 363,
	364, 0, 420, 426, 427, 402, 82, 89, 121, 193,
	148, 106, 179, 430, 419, 0, 390, 433, 368, 382,
	442, 383, 384, 412, 354, 398, 139, 380, 0, 371,
	349, 377, 350, 369, 392, 103, 395, 367, 421, 401,
	432, 120, 440, 122, 406, 0, 160, 131, 0, 0,
	394, 423, 396, 417, 389, 413, 359, 405, 434, 381,
	410, 435, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 408, 429, 379, 409,
	411, 348, 407, 0, 352, 355, 441, 425, 374, 375,
	0, 0, 0, 0, 0, 0, 0, 393, 397, 414,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 404, 0, 0, 0, 356, 353, 0, 0, 391,
	0, 0, 0, 358, 0, 373, 415, 0, 347, 109,
	418, 424, 388, 212, 428, 386, 385, 431, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	422, 370, 378, 99, 376, 153, 141, 176, 403, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 439, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 345, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 351, 0,
	161, 178, 196, 94, 366, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 346,
	344, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 362, 365, 360, 361, 399, 400, 436, 437,
	438, 416, 357, 0, 363, 364, 0, 420, 426, 427,
	402, 82, 89, 121, 193, 148, 106, 179, 430, 419,
	0, 390, 433, 368, 382, 442, 383, 384, 412, 354,
	398, 139, 380, 0, 371, 349, 377, 350, 369, 392,
	103, 395, 367, 421, 401, 432, 120, 440, 122, 406,
	0, 160, 131, 0, 0, 394, 423, 396, 417, 389,
	413, 359, 405, 434, 381, 410, 435, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 408, 429, 379, 409, 411, 348, 407, 0, 352,
	355, 441, 425, 374, 375, 0, 0, 0, 0, 0,
	0, 0, 393, 397, 414, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 404, 0, 0, 0,
	356, 353, 0, 0, 391, 0, 0, 0, 358, 0,
	373, 415, 0, 347, 109, 418, 424, 388, 212, 428,
	386, 385, 431, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 422, 370, 378, 99, 376,
	153, 141, 176, 403, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 439, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 351, 0, 161, 178, 196, 94, 366,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 362, 365, 360,
	361, 399, 400, 436, 437, 438, 416, 357, 0, 363,
	364, 0, 420, 426, 427, 402, 82, 89, 121, 193,
	148, 106, 179, 430, 419, 0, 390, 433, 368, 382,
	442, 383, 384, 412, 354, 398, 139, 380, 0, 371,
	349, 377, 350, 369, 392, 103, 395, 367, 421, 401,
	432, 120, 440, 122, 406, 0, 160, 131, 0, 0,
	394, 423, 396, 417, 389, 413, 359, 405, 434, 381,
	410, 435, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 408, 429, 379, 409,
	411, 348, 407, 0, 352, 355, 441, 425, 374, 375,
	0, 0, 0, 0, 0, 0, 0, 393, 397, 414,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 404, 0, 0, 0, 356, 353, 0, 0, 391,
	0, 0, 0, 358, 0, 373, 415, 0, 347, 109,
	418, 424, 388, 212, 428, 386, 385, 431, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	422, 370, 378, 99, 376, 153, 141, 176, 403, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 628, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 439, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 345, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 351, 0,
	161, 178, 196, 94, 366, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 346,
	344, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 362, 365, 360, 361, 399, 400, 436, 437,
	438, 416, 357, 0, 363, 364, 0, 420, 426, 427,
	402, 82, 89, 121, 193, 148, 106, 179, 430, 419,
	0, 390, 433, 368, 382, 442, 383, 384, 412, 354,
	398, 139, 380, 0, 371, 349, 377, 350, 369, 392,
	103, 395, 367, 421, 401, 432, 120, 440, 122, 406,
	0, 160, 131, 0, 0, 394, 423, 396, 417, 389,
	413, 359, 405, 434, 381, 410, 435, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 408, 429, 379, 409, 411, 348, 407, 0, 352,
	355, 441, 425, 374, 375, 0, 0, 0, 0, 0,
	0, 0, 393, 397, 414, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 404, 0, 0, 0,
	356, 353, 0, 0, 391, 0, 0, 0, 358, 0,
	373, 415, 0, 347, 109, 418, 424, 388, 212, 428,
	386, 385, 431, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 422, 370, 378, 99, 376,
	153, 141, 176, 403, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 336, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 439, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 345, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 351, 0, 161, 178, 196, 94, 366,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 346, 344, 339, 338, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 362, 365, 360,
	361, 399, 400, 436, 437, 438, 416, 357, 0, 363,
	364, 0, 420, 426, 427, 402, 82, 89, 121, 193,
	148, 106, 179, 139, 0, 0, 0, 0, 274, 0,
	0, 0, 103, 0, 271, 0, 0, 0, 120, 314,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 866, 0, 54,
	0, 0, 272, 293, 292, 295, 296, 297, 298, 0,
	0, 96, 294, 299, 300, 301, 867, 0, 0, 269,
	286, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 0, 0, 0, 0, 327, 0,
	285, 0, 0, 280, 281, 282, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	212, 0, 0, 325, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 0, 142, 152, 123, 168,
	147, 175, 184, 185, 165, 183, 192, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	180, 150, 102, 107, 101, 138, 169, 170, 100, 195,
	91, 182, 88, 92, 181, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 196,
	94, 0, 157, 166, 186, 187, 188, 189, 190, 191,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 194, 140, 154, 98, 177, 159, 315,
	326, 321, 322, 319, 320, 318, 317, 316, 328, 307,
	308, 309, 310, 312, 0, 323, 324, 311, 82, 89,
	121, 193, 148, 106, 179, 139, 0, 0, 797, 0,
	274, 0, 0, 0, 103, 0, 271, 0, 0, 0,
	120, 314, 122, 0, 0, 160, 131, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 272, 293, 292, 295, 296, 297,
	298, 0, 0, 96, 294, 299, 300, 301, 0, 0,
	0, 269, 286, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 265, 0, 0, 0,
	327, 0, 285, 0, 0, 280, 281, 282, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 212, 0, 0, 325, 0, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 0,
	0, 0, 99, 0, 153, 141, 176, 0, 142, 152,
	123, 168, 147, 175, 184, 185, 165, 183, 192, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 180, 150, 102, 107, 101, 138, 169, 170,
	100, 195, 91, 182, 88, 92, 181, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 196, 94, 0, 157, 166, 186, 187, 188, 189,
	190, 191, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 194, 140, 154, 98, 177,
	159, 315, 326, 321, 322, 319, 320, 318, 317, 316,
	328, 307, 308, 309, 310, 312, 0, 323, 324, 311,
	82, 89, 121, 193, 148, 106, 179, 139, 0, 0,
	0, 0, 274, 0, 0, 0, 103, 0, 271, 0,
	0, 0, 120, 314, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 504, 272, 293, 292, 295,
	296, 297, 298, 0, 0, 96, 294, 299, 300, 301,
	0, 0, 0, 269, 286, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 284, 0, 0,
	0, 0, 327, 0, 285, 0, 0, 280, 281, 282,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 212, 0, 0, 325, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 315, 326, 321, 322, 319, 320, 318,
	317, 316, 328, 307, 308, 309, 310, 312, 0, 323,
	324, 311, 82, 89, 121, 193, 148, 106, 179, 139,
	0, 0, 0, 0, 274, 0, 0, 0, 103, 0,
	271, 0, 0, 0, 120, 314, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 272, 293,
	292, 295, 296, 297, 298, 0, 0, 96, 294, 299,
	300, 301, 0, 0, 0, 269, 286, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	265, 0, 0, 0, 327, 0, 285, 0, 0, 280,
	281, 282, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 212, 0, 0, 325,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 180, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 196, 94, 0, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 315, 326, 321, 322, 319,
	320, 318, 317, 316, 328, 307, 308, 309, 310, 312,
	0, 323, 324, 311, 82, 89, 121, 193, 148, 106,
	179, 139, 0, 0, 0, 0, 274, 0, 0, 0,
	103, 0, 271, 0, 0, 0, 120, 314, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	272, 293, 812, 295, 296, 297, 298, 0, 0, 96,
	294, 299, 300, 301, 0, 0, 0, 269, 286, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 265, 0, 0, 0, 327, 0, 285, 0,
	0, 280, 281, 282, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 325, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 315, 326, 321,
	322, 319, 320, 318, 317, 316, 328, 307, 308, 309,
	310, 312, 0, 323, 324, 311, 82, 89, 121, 193,
	148, 106, 179, 139, 0, 0, 0, 0, 274, 0,
	0, 0, 103, 0, 271, 0, 0, 0, 120, 314,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 272, 293, 809, 295, 296, 297, 298, 0,
	0, 96, 294, 299, 300, 301, 0, 0, 0, 269,
	286, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 265, 0, 0, 0, 327, 0,
	285, 0, 0, 280, 281, 282, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	212, 0, 0, 325, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 0, 142, 152, 123, 168,
	147, 175, 184, 185, 165, 183, 192, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	180, 150, 102, 107, 101, 138, 169, 170, 100, 195,
	91, 182, 88, 92, 181, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 196,
	94, 0, 157, 166, 186, 187, 188, 189, 190, 191,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 194, 140, 154, 98, 177, 159, 315,
	326, 321, 322, 319, 320, 318, 317, 316, 328, 307,
	308, 309, 310, 312, 24, 323, 324, 311, 82, 89,
	121, 193, 148, 106, 179, 0, 139, 0, 0, 0,
	0, 274, 0, 0, 0, 103, 0, 271, 0, 0,
	0, 120, 314, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 272, 293, 292, 295, 296,
	297, 298, 0, 0, 96, 294, 299, 300, 301, 0,
	0, 0, 269, 286, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 0, 0, 0,
	0, 327, 0, 285, 0, 0, 280, 281, 282, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 212, 0, 0, 325, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 180, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 196, 94, 0, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 315, 326, 321, 322, 319, 320, 318, 317,
	316, 328, 307, 308, 309, 310, 312, 0, 323, 324,
	311, 82, 89, 121, 193, 148, 106, 179, 139, 0,
	0, 0, 0, 274, 0, 0, 0, 103, 0, 271,
	0, 0, 0, 120, 314, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 272, 293, 292,
	295, 296, 297, 298, 0, 0, 96, 294, 299, 300,
	301, 0, 0, 0, 269, 286, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 0,
	0, 0, 0, 327, 0, 285, 0, 0, 280, 281,
	282, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 212, 0, 0, 325, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 184, 185, 165,
	183, 192, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 180, 150, 102, 107, 101,
	138, 169, 170, 100, 195, 91, 182, 88, 92, 181,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 196, 94, 0, 157, 166, 186,
	187, 188, 189, 190, 191, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 194, 140,
	154, 98, 177, 159, 315, 326, 321, 322, 319, 320,
	318, 317, 316, 328, 307, 308, 309, 310, 312, 0,
	323, 324, 311, 82, 89, 121, 193, 148, 106, 179,
	139, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 120, 314, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 272,
	293, 292, 295, 296, 297, 298, 0, 0, 96, 294,
	299, 300, 301, 0, 0, 0, 0, 286, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 0, 0, 0, 0, 327, 0, 285, 0, 0,
	280, 281, 282, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 212, 0, 0,
	325, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 1429, 142, 152, 123, 168, 147, 175, 184,
	185, 165, 183, 192, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 180, 150, 102,
	107, 101, 138, 169, 170, 100, 195, 91, 182, 88,
	92, 181, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 196, 94, 0, 157,
	166, 186, 187, 188, 189, 190, 191, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	194, 140, 154, 98, 177, 159, 315, 326, 321, 322,
	319, 320, 318, 317, 316, 328, 307, 308, 309, 310,
	312, 0, 323, 324, 311, 82, 89, 121, 193, 148,
	106, 179, 139, 0, 0, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 120, 314, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	504, 272, 293, 292, 295, 296, 297, 298, 0, 0,
	96, 294, 299, 300, 301, 0, 0, 0, 0, 286,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 0, 0, 0, 0, 327, 0, 285,
	0, 0, 280, 281, 282, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 212,
	0, 0, 325, 0, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 142, 152, 123, 168, 147,
	175, 184, 185, 165, 183, 192, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 180,
	150, 102, 107, 101, 138, 169, 170, 100, 195, 91,
	182, 88, 92, 181, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 196, 94,
	0, 157, 166, 186, 187, 188, 189, 190, 191, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 194, 140, 154, 98, 177, 159, 315, 326,
	321, 322, 319, 320, 318, 317, 316, 328, 307, 308,
	309, 310, 312, 0, 323, 324, 311, 82, 89, 121,
	193, 148, 106, 179, 139, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 120,
	314, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 272, 293, 292, 295, 296, 297, 298,
	0, 0, 96, 294, 299, 300, 301, 0, 0, 0,
	0, 286, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 0, 0, 0, 0, 327,
	0, 285, 0, 0, 280, 281, 282, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 325, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	315, 326, 321, 322, 319, 320, 318, 317, 316, 328,
	307, 308, 309, 310, 312, 0, 323, 324, 311, 82,
	89, 121, 193, 148, 106, 179, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 120, 0, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 538, 537, 547, 548, 540, 541, 542, 543, 544,
	545, 546, 539, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 212, 0, 0, 0, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 180, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 196, 94, 0, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 82, 89, 121, 193, 148, 106, 179, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 76, 77, 0, 73, 0, 0, 0,
	78, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 180, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 196, 94, 0, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 89, 121, 193, 148, 106,
	179, 139, 0, 0, 0, 853, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 855, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 24, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 193,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 24, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 82,
	89, 121, 193, 148, 106, 179, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 212, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 89, 121, 193, 148, 106, 179, 139,
	0, 0, 0, 853, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	855, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 212, 0, 0, 0,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 851, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 180, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 196, 94, 0, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 82, 89, 121, 193, 148, 106,
	179, 103, 0, 0, 0, 0, 0, 120, 0, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 748, 0, 0, 749, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 212,
	0, 0, 0, 0, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 142, 152, 123, 168, 147,
	175, 184, 185, 165, 183, 192, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 180,
	150, 102, 107, 101, 138, 169, 170, 100, 195, 91,
	182, 88, 92, 181, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 196, 94,
	0, 157, 166, 186, 187, 188, 189, 190, 191, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 194, 140, 154, 98, 177, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 82, 89, 121,
	193, 148, 106, 179, 103, 0, 637, 0, 0, 0,
	120, 0, 122, 0, 0, 160, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 636, 0, 0, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 212, 0, 0, 0, 0, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 0,
	0, 0, 99, 0, 153, 141, 176, 0, 142, 152,
	123, 168, 147, 175, 184, 185, 165, 183, 192, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 180, 150, 102, 107, 101, 138, 169, 170,
	100, 195, 91, 182, 88, 92, 181, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 196, 94, 0, 157, 166, 186, 187, 188, 189,
	190, 191, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 194, 140, 154, 98, 177,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	82, 89, 121, 193, 148, 106, 179, 103, 0, 0,
	0, 0, 0, 120, 0, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 212, 0, 0, 0, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 184, 185, 165,
	183, 192, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 180, 150, 102, 107, 101,
	138, 169, 170, 100, 195, 91, 182, 88, 92, 181,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 196, 94, 0, 157, 166, 186,
	187, 188, 189, 190, 191, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 194, 140,
	154, 98, 177, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 82, 89, 121, 193, 148, 106, 179,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 855, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 193,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 528, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 82,
	89, 121, 193, 148, 106, 179, 610, 103, 0, 0,
	0, 0, 0, 120, 0, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 212, 0, 0, 0, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 184, 185, 165,
	183, 192, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 180, 150, 102, 107, 101,
	138, 169, 170, 100, 195, 91, 182, 88, 92, 181,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 196, 94, 0, 157, 166, 186,
	187, 188, 189, 190, 191, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 194, 140,
	154, 98, 177, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 0, 0, 0, 0,
	0, 139, 0, 82, 89, 121, 193, 148, 106, 179,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 193,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 207,
	0, 212, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 82,
	89, 121, 193, 148, 106, 179, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 212, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 82, 89, 121, 193, 148, 106, 179, 103,
	0, 0, 0, 0, 0, 120, 0, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 212, 0, 0,
	0, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 0, 142, 152, 123, 168, 147, 175, 184,
	185, 165, 183, 192, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 180, 150, 102,
	107, 101, 138, 169, 170, 100, 195, 91, 182, 88,
	92, 181, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 196, 94, 0, 157,
	166, 186, 187, 188, 189, 190, 191, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	194, 140, 154, 98, 177, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 82, 89, 121, 193, 148,
	106, 179, 103, 0, 0, 0, 0, 0, 120, 0,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	212, 0, 0, 0, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 0, 142, 152, 123, 168,
	147, 175, 184, 185, 165, 183, 192, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	180, 150, 102, 107, 101, 138, 169, 170, 100, 195,
	91, 182, 88, 92, 181, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 196,
	94, 0, 157, 166, 186, 187, 188, 189, 190, 191,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 194, 140, 154, 98, 177, 159, 0,
	0, 0, 0, 0, 0, 0, 24, 25, 52, 27,
	28, 0, 0, 0, 0, 0, 0, 0, 82, 89,
	121, 193, 148, 106, 179, 43, 0, 0, 0, 0,
	29, 48, 49, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	38, 0, 0, 0, 54, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 31, 32, 34, 33, 36,
	0, 50, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 37, 44, 45, 0, 0, 46, 47, 35,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 40, 0, 41, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53,
}
var yyPact = [...]int{

	12600, -1000, -185, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 887, 943, -1000, -1000, -1000, -1000, -1000, -1000,
	286, 8691, 27, 128, -14, 11626, 127, 1308, 12112, -1000,
	10, -1000, -1000, -1000, 12112, -1000, -1000, -1000, -61, -62,
	-1000, 732, -1000, -1000, -1000, -1000, -1000, 872, 876, 743,
	867, 803, -1000, 6431, 76, 76, 11383, 5423, -1000, -1000,
	289, 12112, 109, 12112, -149, 73, 73, 73, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 120, 12112, 218,
	-1000, 12112, 63, 631, 63, 63, 63, 12112, -1000, 194,
	-1000, -1000, -1000, 12112, 623, 830, 3303, 50, 3303, 3303,
	-1000, 3303, 3303, -1000, 3303, 19, 3303, -68, 908, -1000,
	-1000, -1000, -1000, -7, -1000, 3303, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	500, 836, 7440, 7440, 887, -1000, 732, -1000, -1000, -1000,
	828, -1000, -1000, 386, 929, -1000, 2433, 178, -1000, 7440,
	2449, 700, -1000, -1000, 700, -1000, -1000, 140, -1000, -1000,
	8196, 8196, 8196, 8196, 8196, 8196, 8196, 8196, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 700, -1000, 7188, 700, 700, 700, 700, 700,
	700, 700, 700, 7440, 700, 700, 700, 700, 700, 700,
	700, 700, 700, 700, 700, 700, 700, 700, 700, 11140,
	10410, 12112, 666, -1000, 696, 5158, -88, -1000, -1000, -1000,
	265, 10167, -1000, -1000, -1000, 829, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 630, 12112, -1000, 2156, -1000, 615, 3303,
	90, 613, 349, 611, 12112, 12112, 3303, 28, 59, 111,
	12112, 698, 84, 12112, 851, 766, 12112, 609, 602, -1000,
	4893, -1000, 3303, 3303, -1000, -1000, -1000, 3303, 3303, 3303,
	12112, 3303, 3303, -1000, -1000, -1000, -1000, -1000, 3303, 3303,
	-1000, 927, 315, -1000, -1000, -1000, -1000, 7440, -1000, 765,
	-1000, -1000, -1000, -1000, -1000, -1000, 938, 155, 429, 152,
	697, -1000, 403, 872, 500, 803, 9924, 776, -1000, -1000,
	12112, -1000, 7440, 7440, 425, -1000, 10896, -1000, -1000, 3833,
	231, 8196, 423, 368, 8196, 8196, 8196, 8196, 8196, 8196,
	8196, 8196, 8196, 8196, 8196, 8196, 8196, 8196, 8196, 441,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 576, -1000,
	732, 523, 523, 206, 206, 206, 206, 206, 206, 206,
	8448, 5927, 500, 619, 256, 7188, 6431, 6431, 7440, 7440,
	6935, 6683, 6431, 859, 311, 256, 12355, -1000, -1000, 7944,
	-1000, -1000, -1000, -1000, -1000, 500, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11869, 11869, 6431, 6431, 6431, 6431, 38,
	12112, -1000, 687, 746, -1000, -1000, -1000, 853, 9429, 9681,
	38, 670, 10410, 12112, -1000, -1000, 4628, 696, -88, 684,
	-1000, -90, -98, 5675, 187, -1000, -1000, -1000, -1000, 3038,
	172, 664, 398, -46, -1000, -1000, -1000, -1000, 719, -1000,
	-1000, 719, 719, 719, 719, -18, -18, -18, -18, -1000,
	-1000, -1000, -1000, -1000, 754, 753, -1000, 719, 719, 719,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 752, 752,
	752, 733, 733, 756, -1000, 12112, 3303, 849, 3303, -1000,
	124, -1000, 11869, 11869, 12112, 12112, 135, 12112, 12112, 692,
	-1000, 12112, 3303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12112, 327,
	12112, 12112, 256, 12112, -1000, 810, 7440, 7440, 4363, 7440,
	-1000, -1000, -1000, 836, -1000, 859, 920, -1000, 819, 818,
	6431, -1000, -1000, 231, 379, -1000, -1000, 499, -1000, -1000,
	-1000, -1000, 150, 700, -1000, 2075, -1000, -1000, -1000, -1000,
	423, 8196, 8196, 8196, 339, 2075, 2024, 447, 301, 206,
	459, 459, 210, 210, 210, 210, 210, 407, 407, -1000,
	-1000, -1000, 500, -1000, -1000, -1000, 500, 6431, 691, -1000,
	-1000, 7440, -1000, 500, 606, 606, 376, 466, 278, 926,
	606, 273, 921, 606, 606, 6431, 310, -1000, 7440, 500,
	-1000, 149, -1000, 668, 686, 685, 606, 500, 606, 606,
	661, 700, -1000, 12355, 10410, 10410, 10410, 10410, 10410, -1000,
	791, 790, -1000, 780, 778, 784, 12112, -1000, 608, 9429,
	147, 700, -1000, 10653, -1000, -1000, 906, 10410, 675, -1000,
	-1000, 684, -88, -95, -1000, -1000, -1000, -1000, 256, -1000,
	516, 682, 2773, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	750, 569, -1000, 841, 184, 181, 564, 838, -1000, -1000,
	-1000, 832, -1000, 357, -53, -1000, -1000, 437, -18, -18,
	-1000, -1000, 187, 826, 187, 187, 187, 493, 493, -1000,
	-1000, -1000, -1000, 431, -1000, -1000, -1000, 426, -1000, 764,
	11869, 3303, -1000, -1000, -1000, -1000, 148, 148, 217, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37, 748, -1000, -1000, -1000, 26, 23, 78, -1000, 3303,
	-1000, 315, -1000, 481, 7440, -1000, -1000, -1000, 806, 256,
	256, 146, -1000, -1000, 12112, -1000, -1000, -1000, -1000, 705,
	-1000, -1000, -1000, 3568, 6431, -1000, 339, 2075, 1974, -1000,
	8196, 8196, -1000, -1000, 606, 6431, 256, -1000, -1000, -1000,
	47, 441, 47, 8196, 8196, -1000, 8196, 8196, -1000, -161,
	695, 279, -1000, 7440, 443, -1000, 4363, -1000, 8196, 8196,
	-1000, -1000, -1000, -1000, 763, 12355, 700, -1000, 9186, 11869,
	689, -1000, 255, 746, 747, 762, 586, -1000, -1000, -1000,
	-1000, 788, -1000, 781, -1000, -1000, -1000, -1000, -1000, 100,
	97, 94, 11869, -1000, 887, 7440, 675, -1000, -1000, -1000,
	-111, -104, -1000, -1000, -1000, 3038, -1000, 3038, 11869, 56,
	-1000, 564, 564, -1000, -1000, -1000, 744, 761, 8196, -1000,
	-1000, -1000, 637, 187, 187, -1000, 236, -1000, -1000, -1000,
	599, -1000, 594, 681, 590, 12112, -1000, -1000, -1000, 742,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 552, -1000, 549, 12112, -1000, -1000, -1000, -1000, -1000,
	11869, -169, 546, 11869, 11869, 12112, -1000, 327, -1000, 256,
	-1000, 4098, -1000, 906, 10410, -1000, -1000, 500, -1000, 8196,
	2075, 2075, -1000, -1000, 500, 719, 719, -1000, 719, 733,
	-1000, 719, 0, 719, -1, 500, 500, 1898, 1800, 1646,
	1619, 700, -156, -1000, 256, 7440, -1000, 1489, 891, -1000,
	843, 659, 672, -1000, -1000, 6179, 500, 588, 145, 581,
	-1000, 887, 12355, 7440, -1000, -1000, 7440, 724, -1000, 7440,
	-1000, -1000, -1000, 700, 700, 700, 581, 872, 256, -1000,
	-1000, -1000, -1000, 2773, -1000, 562, -1000, 719, -1000, -1000,
	-1000, 11869, -42, 936, 2075, -1000, -1000, -1000, -1000, -1000,
	-18, 478, -18, 410, -1000, 394, 3303, 535, -1000, -1000,
	-1000, 185, -1000, -1000, 845, -1000, 4098, -1000, -1000, 704,
	-1000, -1000, -1000, 894, 680, -1000, 2075, -1000, -1000, 112,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8196, 8196,
	8196, 8196, 8196, 500, 472, 256, 8196, 8196, 837, -1000,
	700, -1000, -1000, 694, 11869, 11869, -1000, 11869, 872, -1000,
	256, 256, 11869, 256, 11869, 11869, 11869, 8943, -1000, 182,
	11869, -1000, 560, -1000, 168, -1000, -117, 187, -1000, 187,
	636, 633, -1000, 600, 513, 700, 678, -1000, 243, 11869,
	889, 874, -1000, -1000, 668, 668, 668, 668, 21, -1000,
	-1000, 668, 668, 935, -1000, 700, -1000, 732, 144, -1000,
	-1000, -1000, 558, 545, 545, 545, 147, 182, -1000, 508,
	241, 464, -1000, 53, 11869, 360, 835, -1000, 834, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 36, 4098, 3038, 543,
	-1000, 7440, 7440, -1000, -1000, -1000, -1000, 500, 51, -172,
	-1000, -1000, 12355, 672, 500, 11869, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 393, -1000, -1000, 12112, -1000, -1000, 453,
	-1000, -1000, -1000, 524, -1000, 11869, -1000, -1000, 748, 256,
	671, -1000, 802, -166, -181, 667, -1000, -1000, -1000, 701,
	-1000, -1000, 36, 817, -169, -1000, 795, -1000, 11869, -1000,
	33, -1000, -170, 521, 30, -175, 760, 700, -182, 759,
	-1000, 925, 7692, -1000, -1000, 932, 183, 183, 668, 500,
	-1000, -1000, -1000, 60, 401, -1000, -1000, -1000, -1000, -1000,
	-1000,
}
var yyPgo = [...]int{

	0, 1178, 26, 534, 1177, 1174, 1173, 1172, 1170, 1169,
	1168, 1167, 1164, 1163, 1160, 1159, 1158, 1153, 1152, 1150,
	1145, 1143, 1140, 1139, 1137, 1136, 136, 1135, 1130, 1129,
	76, 1127, 81, 1126, 1123, 48, 70, 51, 41, 936,
	1121, 50, 71, 58, 1119, 35, 1118, 1117, 77, 1113,
	59, 1112, 1110, 1354, 1109, 1108, 13, 56, 1107, 1106,
	1104, 1101, 79, 785, 1099, 1096, 12, 1095, 1090, 101,
	1089, 60, 8, 20, 31, 22, 1088, 75, 6, 1085,
	62, 1083, 1082, 1080, 1079, 33, 1075, 63, 1064, 19,
	61, 1061, 9, 69, 38, 21, 7, 84, 73, 1060,
	28, 80, 64, 1057, 1055, 530, 53, 1054, 1053, 52,
	1052, 1050, 30, 177, 385, 1044, 17, 1042, 1038, 42,
	0, 557, 44, 83, 1032, 1029, 1028, 1403, 82, 65,
	15, 1024, 43, 1468, 49, 1021, 1017, 40, 1016, 1015,
	1013, 1012, 1011, 1010, 1009, 1008, 307, 1006, 1005, 1003,
	24, 23, 1002, 1001, 66, 25, 1000, 999, 997, 54,
	16, 980, 979, 57, 29, 978, 973, 972, 971, 970,
	37, 18, 967, 14, 966, 11, 964, 34, 958, 4,
	957, 10, 956, 3, 955, 5, 55, 1, 954, 2,
	953, 952, 46, 327, 951, 949, 93,
}
var yyR1 = [...]int{

	0, 190, 191, 191, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 6, 3, 4,
	4, 5, 5, 7, 7, 29, 29, 8, 9, 9,
	9, 194, 194, 48, 48, 93, 93, 10, 10, 10,
	10, 98, 98, 102, 102, 102, 103, 103, 103, 103,
	135, 135, 11, 11, 11, 11, 11, 11, 11, 185,
	185, 184, 183, 183, 182, 182, 181, 17, 166, 168,
	168, 167, 167, 167, 167, 160, 138, 138, 138, 138,
	138, 141, 141, 142, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 140, 140, 140, 140, 140, 143, 143,
	143, 143, 143, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 145, 145,
	145, 145, 145, 145, 145, 145, 159, 159, 146, 146,
	154, 154, 155, 155, 155, 152, 152, 153, 153, 156,
	156, 156, 148, 148, 149, 149, 157, 157, 150, 150,
	150, 151, 151, 151, 158, 158, 158, 158, 158, 147,
	147, 161, 161, 176, 176, 175, 175, 175, 165, 165,
	172, 172, 172, 172, 172, 163, 163, 164, 164, 174,
	174, 173, 162, 162, 177, 177, 177, 177, 188, 189,
	187, 187, 187, 187, 187, 169, 169, 169, 170, 170,
	170, 171, 171, 171, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	106, 106, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 180, 178, 178, 179, 179, 13, 18, 18, 14,
	14, 14, 14, 14, 15, 15, 19, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 110,
	110, 108, 108, 111, 111, 109, 109, 109, 112, 112,
	112, 136, 136, 136, 21, 21, 23, 23, 24, 25,
	22, 22, 22, 22, 22, 22, 22, 22, 16, 195,
	26, 27, 27, 28, 28, 28, 32, 32, 32, 30,
	30, 31, 31, 37, 37, 36, 36, 38, 38, 38,
	38, 124, 124, 124, 123, 123, 40, 40, 41, 41,
	42, 42, 43, 43, 43, 43, 55, 55, 92, 92,
	94, 94, 44, 44, 44, 44, 45, 45, 46, 46,
	47, 47, 131, 131, 130, 130, 130, 129, 129, 49,
	49, 49, 51, 50, 50, 50, 50, 52, 52, 54,
	54, 53, 53, 56, 56, 56, 56, 57, 57, 39,
	39, 39, 39, 39, 39, 39, 107, 107, 59, 59,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	70, 70, 70, 70, 70, 70, 60, 60, 60, 60,
	60, 60, 60, 35, 35, 71, 71, 71, 77, 72,
	72, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 67, 67, 67, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 196, 196, 69, 68, 68,
	68, 68, 68, 68, 33, 33, 33, 33, 33, 134,
	134, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 81, 81, 34, 34, 79, 79,
	80, 82, 82, 78, 78, 78, 62, 62, 62, 62,
	62, 62, 62, 62, 64, 64, 64, 83, 83, 84,
	84, 85, 85, 86, 86, 87, 88, 88, 88, 89,
	89, 89, 89, 90, 90, 90, 61, 61, 61, 61,
	61, 61, 91, 91, 91, 91, 95, 95, 73, 73,
	75, 75, 74, 76, 96, 96, 100, 97, 97, 101,
	101, 101, 101, 99, 99, 99, 126, 126, 126, 104,
	104, 113, 113, 114, 114, 105, 105, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 116, 116, 116,
	117, 117, 118, 118, 118, 125, 125, 121, 121, 122,
	122, 127, 127, 128, 128, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 192, 193, 132,
	133, 133, 133,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 10, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 1, 1, 1, 3, 0, 4, 3, 4, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 8, 4, 6, 5, 5, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 4, 2,
	4, 1, 3, 3, 3, 8, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 2, 2, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 0, 1, 0,
	1, 2, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 0, 2, 2, 0, 2, 1, 2, 1, 0,
	2, 5, 4, 1, 2, 2, 3, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 0, 1, 1,
	3, 2, 3, 1, 10, 11, 11, 12, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 3, 1, 2,
	3, 1, 1, 1, 6, 10, 7, 7, 7, 9,
	7, 7, 4, 5, 7, 5, 5, 5, 12, 7,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 3, 8, 8, 3, 3, 5, 4,
	6, 5, 4, 4, 3, 2, 3, 4, 4, 3,
	4, 4, 4, 4, 4, 4, 3, 3, 2, 3,
	3, 2, 3, 4, 3, 7, 5, 4, 2, 4,
	2, 2, 2, 2, 3, 3, 5, 2, 3, 1,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 1, 3, 3, 7, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 6, 4, 4, 6, 6,
	6, 8, 8, 8, 8, 9, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 4, 2, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}
var yyChk = [...]int{

	-1000, -190, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -19, -20, -21, -23, -24, -25,
	-22, -16, -3, -4, 6, 7, -29, 9, 10, 30,
	-17, 115, 116, 118, 117, 149, 119, 142, 50, 162,
	163, 165, 166, 25, 143, 144, 147, 148, 31, 32,
	121, -192, 8, 253, 54, -191, 270, -85, 15, -28,
	5, -26, -195, -26, -26, -26, -26, -26, -166, -168,
	54, 90, -118, 125, 72, 245, 122, 123, 129, -121,
	57, -120, 263, 135, 162, 173, 167, 195, 187, 264,
	136, 185, 188, 232, 215, 227, 66, 165, 241, 145,
	183, 179, 177, 27, 229, 200, 268, 178, 228, 121,
	138, 133, 201, 205, 233, 171, 172, 235, 199, 134,
	33, 265, 35, 153, 236, 203, 198, 194, 197, 170,
	193, 39, 207, 206, 208, 231, 190, 139, 180, 18,
	239, 148, 151, 230, 202, 204, 130, 155, 267, 237,
	176, 140, 152, 147, 240, 141, 166, 217, 234, 243,
	38, 212, 169, 132, 163, 159, 218, 191, 154, 181,
	182, 196, 168, 192, 164, 156, 149, 242, 213, 269,
	175, 189, 186, 160, 157, 158, 219, 220, 221, 222,
	223, 224, 161, 266, 238, 184, 214, -105, 125, 222,
	127, 123, 123, 124, 125, 245, 122, 123, -53, -127,
	57, -120, 125, 123, 108, 188, 232, 115, 216, 217,
	229, 124, 33, 230, 155, -136, 123, -108, 215, 219,
	220, 221, 224, 222, 161, 57, 234, 233, 225, -127,
	164, -132, -53, -132, -132, -132, -132, 218, 218, -132,
	-2, -89, 17, 16, -5, -3, -192, 6, 20, 21,
	-32, 40, 41, -27, -38, 99, -39, -127, -58, 74,
	-63, 29, 57, -120, 23, -62, -59, -78, -76, -77,
	108, 109, 110, 97, 98, 105, 75, 111, -67, -65,
	-66, -68, 59, 58, 67, 60, 61, 62, 63, 68,
	69, 70, -121, -74, -192, 44, 45, 254, 255, 256,
	257, 262, 258, 77, 34, 244, 252, 251, 250, 248,
	249, 246, 247, 260, 261, 128, 245, 103, 253, -105,
	-105, 11, -48, -53, -97, -135, 164, -101, 234, 233,
	-122, -99, -121, -119, 232, 188, 231, 120, 73, 22,
	24, 210, 76, 108, 16, 77, 107, 254, 115, 48,
	246, 247, 244, 256, 257, 245, 216, 29, 10, 25,
	143, 21, 101, 117, 80, 81, 146, 23, 144, 70,
	19, 51, 11, 13, 14, 128, 127, 92, 124, 46,
	8, 111, 26, 89, 42, 28, 44, 90, 17, 248,
	249, 31, 262, 150, 103, 49, 36, 74, 68, 71,
	52, 72, 15, 47, 91, 118, 253, 45, 122, 6,
	259, 30, 142, 43, 123, 79, 260, 261, 126, 69,
	5, 129, 32, 9, 50, 53, 250, 251, 252, 175,
	34, 78, 12, -167, 90, -160, 57, -53, 124, -53,
	253, -114, 128, -114, -114, 123, -53, 115, 117, 120,
	52, -18, -53, -113, 128, 57, -113, -113, -113, -53,
	112, -53, 57, 30, -133, -192, -122, 245, 57, 155,
	123, 156, 125, -133, -133, -133, -133, -133, 159, 160,
	-133, -111, -110, 227, 228, 218, 226, 12, 218, 158,
	-133, -132, -132, -193, 56, -90, 19, 31, -39, -127,
	-86, -87, -39, -85, -2, -26, 36, -30, 21, 65,
	11, -124, 73, 72, 89, -123, 22, -121, 59, 112,
	-39, -60, 92, 74, 90, 91, 76, 94, 93, 104,
	97, 98, 99, 100, 101, 102, 103, 95, 96, 107,
	82, 83, 84, 85, 86, 87, 88, -107, -192, -77,
	-192, 113, 114, -63, -63, -63, -63, -63, -63, -63,
	-63, -192, -2, -72, -39, -192, -192, -192, -192, -192,
	-192, -192, -192, -192, -81, -39, -192, -196, -69, -192,
	-196, -69, -196, -69, -196, -192, -196, -69, -196, -69,
	-196, -196, -69, -192, -192, -192, -192, -192, -192, -54,
	26, -53, -41, -42, -43, -44, -55, -77, -192, -53,
	-53, -48, -194, 55, 11, 53, 55, -97, 164, -98,
	-102, 235, 237, 82, -126, -121, 59, 29, 30, 56,
	55, -53, -138, -141, -142, -144, -143, -145, -139, -140,
	175, 185, 186, 108, 189, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 30, 145, 181, 182, 183,
	184, 201, 202, 203, 204, 205, 206, 207, 208, 167,
	187, 264, 168, 169, 170, 171, 172, 173, 176, 177,
	178, 179, 180, 57, -133, 125, 57, 74, 57, -53,
	-53, -133, 157, 157, 123, 123, -53, 55, 126, -48,
	23, 52, -53, 57, 57, -128, -127, -119, -133, -133,
	-133, -133, -133, -53, -133, -133, -133, -133, 11, -109,
	11, 92, -39, 52, 9, 92, 55, 18, 112, 55,
	-88, 24, 25, -89, -193, -32, -64, -121, 60, 63,
	-31, 43, -53, -39, -39, -70, 68, 74, 69, 70,
	-123, 99, -128, -122, -119, -63, -71, -74, -77, 64,
	92, 90, 91, 76, -63, -63, -63, -63, -63, -63,
	-63, -63, -63, -63, -63, -63, -63, -63, -63, -134,
	57, 59, 57, -62, -62, -121, -37, 21, -36, -38,
	-193, 55, -193, -2, -36, -36, -39, -39, -78, 59,
	-36, -78, 59, -36, -36, -30, -79, -80, 78, -78,
	-121, -127, -193, -63, -121, -121, -36, -37, -36, -36,
	-93, 151, -53, 30, 55, -49, -51, -50, -52, 42,
	46, 48, 43, 44, 45, 49, -131, 22, -41, -192,
	-130, 151, -129, 22, -127, 59, -93, 53, -41, -53,
	-101, -98, 55, 236, 238, 239, 52, 71, -39, -151,
	107, -169, -170, -171, -122, 59, 60, -160, -161, -162,
	-172, 137, -177, 130, 132, 129, -163, 138, 124, 28,
	56, -156, 68, 74, -152, 213, -146, 54, -146, -146,
	-146, -146, -150, 188, -150, -150, -150, 54, 54, -146,
	-146, -146, -154, 54, -154, -154, -155, 54, -155, -125,
	53, -53, -133, 23, -133, -115, 120, 117, 118, -180,
	116, 210, 188, 66, 29, 15, 254, 151, 269, 57,
	152, -121, -121, -53, -53, 120, 117, -53, -53, -53,
	-133, -53, -112, 90, 12, -127, -127, -53, 38, -39,
	-39, -128, -87, -90, -104, 19, 11, 34, 34, -36,
	68, 69, 70, 112, -192, -71, -63, -63, -63, -35,
	146, 73, -193, -193, -36, 55, -39, -193, -193, -193,
	55, 53, 22, 11, 11, -193, 11, 11, -193, -193,
	-36, -82, -80, 80, -39, -193, 112, -193, 55, 55,
	-193, -193, -193, -193, -61, 30, 34, -2, -192, -192,
	-96, -100, -78, -42, -43, -43, -42, -43, 42, 42,
	42, 47, 42, 47, 42, -50, -127, -193, -56, 50,
	127, 51, -192, -129, -57, 12, -41, -57, -102, -103,
	240, 237, 243, 57, 59, 55, -171, 82, 54, 57,
	28, -163, -163, -164, 57, -164, 28, -148, 29, 68,
	-153, 214, 60, -150, -150, -151, 30, -151, -151, -151,
	-159, 59, -159, 60, 60, 52, -121, -133, -132, -106,
	-186, 131, 137, 138, 133, 124, 28, 130, 132, 151,
	129, -106, -186, -106, -116, -117, 126, 22, 124, 28,
	151, -185, 53, 157, 157, 126, -133, -109, 59, -39,
	39, 112, -53, -40, 11, 99, -122, -37, -35, 73,
	-63, -63, -193, -38, -137, 108, 185, 145, 183, 179,
	199, 190, 212, 181, 213, -134, -137, -63, -63, -63,
	-63, 263, -85, 81, -39, 79, -122, -63, -63, -95,
	52, -96, -73, -75, -74, -192, -2, -91, -121, -94,
	-121, -57, 55, 82, -46, -45, 52, 53, -47, 52,
	-45, 42, 42, 124, 124, 124, -94, -85, -39, -57,
	237, 241, 242, -170, -171, -174, -173, -121, -177, -164,
	-164, 54, -149, 52, -63, 56, -151, -151, 57, 108,
	56, 55, 56, 55, 56, 55, -53, 54, -132, 57,
	-132, 57, -53, -132, -121, -183, 266, -184, 57, -121,
	-121, -53, -112, -57, -41, -193, -63, -193, -146, -146,
	-146, -155, -146, 172, -146, 172, -193, -193, 19, 19,
	19, 19, -192, -34, 259, -39, 55, 55, 27, -95,
	55, -193, -193, -193, 55, 112, -193, 55, -85, -100,
	-39, -39, 54, -39, -192, -192, -192, -193, -89, 56,
	55, -146, -92, -121, -157, 210, 9, -150, 59, -150,
	60, 60, -133, -160, -116, 26, -182, -181, -122, 54,
	-83, 13, -150, 57, -63, -63, -63, -63, -63, -193,
	59, -63, -63, 28, -75, 34, -2, -192, -121, -121,
	-121, -89, -92, -92, -92, -92, -130, -176, -175, 53,
	134, 66, -173, 56, 55, -158, 130, 28, 129, -66,
	-151, -151, 56, 56, 56, 57, -192, 55, 82, -92,
	-84, 14, 16, -193, -193, -193, -193, -33, 92, 266,
	-193, -193, 9, -73, -2, 112, 56, -193, -193, -193,
	-56, -175, 57, -165, 82, 59, 140, -121, -147, 66,
	28, 28, -132, -178, -179, 151, -181, -171, 56, -39,
	-72, -193, 264, 49, 267, -96, -193, -121, 60, -53,
	59, -193, 55, -121, -185, 39, 265, 268, 54, -179,
	34, -183, 39, -92, 153, 266, 56, 154, 267, -188,
	-189, 52, -192, 268, -189, 52, 10, 9, -63, 150,
	-187, 141, 136, 139, 30, -187, -193, -193, 135, 29,
	68,
}
var yyDef = [...]int{

	23, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 561, 0, 319, 319, 319, 319, 319, 319,
	0, 632, 615, 0, 0, 0, 0, -2, 305, 306,
	0, 308, 309, 859, 859, 859, 859, 859, 0, 0,
	859, 0, 35, 36, 857, 1, 3, 569, 0, 0,
	323, 326, 321, 0, 615, 615, 0, 0, 62, 63,
	0, 0, 0, 843, 0, 613, 613, 613, 633, 634,
	637, 638, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 0, 0, 0,
	616, 0, 611, 0, 611, 611, 611, 0, 255, 391,
	641, 642, 843, 0, 0, 0, 860, 0, 860, 860,
	268, 860, 860, 271, 860, 0, 860, 0, 278, 280,
	281, 282, 283, 0, 287, 860, 302, 303, 292, 304,
	307, 310, 311, 312, 313, 314, 315, 859, 859, 318,
	29, 573, 0, 0, 561, 31, 0, 319, 324, 325,
	329, 327, 328, 320, 0, 337, 341, 0, 399, 0,
	404, 406, -2, -2, 0, 441, 442, 443, 444, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 546, 547, 548, 549, 550, 551, 552, 553,
	408, 409, 543, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 505, 505, 505, 505, 505,
	505, 505, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 47, 0, 833, 597, -2, -2,
	0, 0, 639, 640, -2, 751, -2, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 0, 0, 81, 0, 79, 0, 860,
	0, 0, 0, 0, 0, 0, 860, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 256, 860, 860, 259, 861, 862, 860, 860, 860,
	0, 860, 860, 266, 267, 269, 270, 272, 860, 860,
	274, 0, 295, 293, 294, 289, 290, 0, 284, 285,
	288, 316, 317, 30, 858, 24, 0, 0, 570, 0,
	562, 563, 566, 569, 29, 326, 0, 331, 330, 322,
	0, 338, 0, 0, 0, 342, 0, 344, 345, 0,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 427, 428, 429, 430, 431, 432, 405, 0, 419,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	0, 333, 29, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 535, 0, 489, 497, 0,
	490, 498, 491, 499, 492, 0, 493, 500, 494, 501,
	495, 496, 502, 0, 0, 0, 333, 0, 0, 45,
	0, 390, 0, 348, 350, 351, 352, -2, 0, 374,
	-2, 0, 0, 0, 41, 42, 0, 48, 833, 50,
	51, 0, 0, 0, 161, 606, 607, 608, 604, 205,
	0, 0, 149, 145, 87, 88, 89, 90, 138, 92,
	93, 138, 138, 138, 138, 158, 158, 158, 158, 121,
	122, 123, 124, 125, 0, 0, 108, 138, 138, 138,
	112, 128, 129, 130, 131, 132, 133, 134, 135, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 140, 140,
	140, 142, 142, 635, 65, 0, 860, 0, 860, 77,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 249,
	612, 0, 860, 252, 253, 392, 643, 644, 257, 258,
	260, 261, 262, 263, 264, 265, 273, 277, 0, 298,
	0, 0, 279, 0, 574, 0, 0, 0, 0, 0,
	565, 567, 568, 573, 32, 329, 0, 554, 0, 0,
	0, 332, 27, 400, 401, 403, 420, 0, 422, 424,
	343, 339, 0, 544, -2, 410, 411, 435, 436, 437,
	0, 0, 0, 0, 433, 415, 0, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	519, 520, 0, 458, 459, 468, 0, 0, 334, 335,
	438, 0, 592, 29, 0, 0, 0, 0, 443, 546,
	0, 443, 546, 0, 0, 0, 541, 538, 0, 0,
	543, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 382, 0, 0, 0, 0, 373, 0, 0,
	393, 801, 375, 0, 377, 378, 397, 0, 397, 44,
	598, 49, 0, 0, 54, 55, 599, 600, 601, 602,
	0, 78, 206, 208, 211, 212, 213, 82, 83, 84,
	0, 0, 193, 0, 0, 187, 187, 0, 185, 186,
	80, 152, 150, 0, 147, 146, 91, 0, 158, 158,
	115, 116, 161, 0, 161, 161, 161, 0, 0, 109,
	110, 111, 103, 0, 104, 105, 106, 0, 107, 0,
	0, 860, 67, 614, 68, 859, 230, 230, -2, 223,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	0, 69, 225, 227, 226, 0, 0, 0, 247, 860,
	251, 295, 276, 0, 0, 296, 297, 286, 0, 571,
	572, 0, 564, 25, 0, 609, 610, 555, 556, 346,
	421, 423, 425, 0, 333, 412, 433, 416, 0, 413,
	0, 0, 407, 473, 0, 0, 440, -2, 476, 477,
	0, 0, 0, 0, 0, 512, 0, 0, 513, 0,
	561, 0, 539, 0, 0, 488, 0, 507, 0, 0,
	508, 509, 510, 511, 586, 0, 0, -2, 0, 0,
	397, 594, 0, 349, 368, 370, 0, 365, 380, 381,
	383, 0, 385, 0, 387, 388, 353, 355, 356, 0,
	0, 0, 0, 376, 561, 0, 397, 40, 52, 53,
	0, 0, 59, 162, 163, 0, 209, 0, 0, 0,
	180, 187, 187, 183, 188, 184, 0, 154, 0, 151,
	86, 148, 0, 161, 161, 117, 0, 118, 119, 120,
	0, 136, 0, 0, 0, 0, 636, 66, 214, 0,
	859, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 859, 0, 0, 859, 628, 629, 630, 631,
	0, 72, 0, 0, 0, 0, 250, 298, 299, 300,
	575, 0, 26, 397, 0, 340, 545, 0, 414, 0,
	434, 417, 474, 336, 0, 138, 138, 524, 138, 142,
	527, 138, 529, 138, 532, 0, 0, 0, 0, 0,
	0, 0, 536, 487, 542, 0, 544, 0, 0, 33,
	0, 586, 576, 588, 590, 0, 29, 0, 582, 0,
	360, 561, 0, 0, 362, 369, 0, 0, 363, 0,
	364, 384, 386, 0, 0, 0, 0, 569, 398, 39,
	56, 57, 58, 207, 210, 0, 189, 138, 192, 181,
	182, 0, 156, 0, 153, 139, 113, 114, 159, 160,
	158, 0, 158, 0, 143, 0, 860, 0, 216, 217,
	218, 627, 220, 221, 0, 224, 0, 70, 71, 0,
	229, 248, 275, 557, 347, 475, 418, 478, 521, 158,
	525, 526, 528, 530, 531, 533, 480, 479, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 34,
	0, 591, -2, 0, 0, 0, 46, 0, 569, 595,
	596, 366, 0, 371, 0, 0, 0, 374, 38, 172,
	0, 191, 0, 358, 164, 157, 0, 161, 137, 161,
	0, 0, 64, 0, 0, 0, 73, 74, 0, 0,
	559, 0, 522, 523, 0, 0, 0, 0, 514, 486,
	537, 0, 0, 0, 589, 0, -2, 0, 584, 583,
	361, 37, 0, 0, 0, 0, 393, 171, 173, 0,
	178, 0, 190, 0, 0, 169, 0, 166, 168, 155,
	126, 127, 141, 144, 859, 219, 0, 0, 0, 0,
	28, 0, 0, 481, 483, 482, 484, 0, 0, 0,
	503, 504, 0, 579, 29, 0, 367, 394, 395, 396,
	357, 174, 175, 0, 179, 177, 0, 359, 85, 0,
	165, 167, 215, 0, 242, 0, 75, 76, 69, 560,
	558, 485, 0, 0, 0, 587, -2, 585, 176, 0,
	170, 241, 0, 0, 72, 515, 0, 518, 0, 243,
	0, 228, 516, 0, 0, 0, 194, 0, 0, 195,
	196, 0, 0, 517, 197, 0, 0, 0, 0, 0,
	198, 200, 201, 0, 0, 199, 244, 245, 202, 203,
	204,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 75, 3, 3, 3, 102, 94, 3,
	54, 56, 99, 97, 55, 98, 112, 100, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 270,
	83, 82, 84, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 104, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 93, 3, 105,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	76, 77, 78, 79, 80, 81, 85, 86, 87, 88,
	89, 90, 91, 92, 95, 96, 101, 103, 106, 107,
	108, 109, 110, 111, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:316
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:321
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:322
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:326
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:348
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:354
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:362
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:366
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:372
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:379
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:385
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:389
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:395
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:399
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:406
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:418
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:434
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:440
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:446
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:450
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:454
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:459
		{
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:460
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:464
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:468
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:473
		{
			yyVAL.partitions = nil
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:477
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:487
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:491
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:495
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:501
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:505
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:511
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:515
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:525
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:529
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:533
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:537
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.str = SessionStr
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			yyVAL.str = GlobalStr
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:553
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:558
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:564
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:573
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:577
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:581
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:601
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:606
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:617
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:629
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:640
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:647
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:651
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:657
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:662
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:670
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:676
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:916
		{
			yyVAL.sqlVal = nil
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:925
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:929
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:937
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:947
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:955
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:964
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:974
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:982
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:987
		{
			yyVAL.optVal = nil
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:996
		{
			yyVAL.optVal = nil
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1005
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.str = ""
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1027
		{
			yyVAL.str = ""
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.colKeyOpt = colKey
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.sqlVal = nil
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1071
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1075
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1081
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = ""
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1147
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 194:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1184
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 195:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1188
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 196:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1192
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 197:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1196
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1235
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.str = yyDollar[1].str
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1255
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1279
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 215:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1283
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1290
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1294
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1298
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 219:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1302
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 220:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1306
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1311
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1316
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1324
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[5].colIdent,
				Type:   yyDollar[6].colIdent,
				Params: yyDollar[7].vindexParams,
			}}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1332
		{
			yyVAL.statement = &DDL{Action: DropVindexStr, VindexSpec: &VindexSpec{
				Name: yyDollar[5].colIdent,
			}}
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1338
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1342
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 228:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1346
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 229:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1359
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1370
		{
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1372
		{
		}
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1387
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1393
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 244:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1403
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 245:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1407
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1423
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1431
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1439
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1444
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1452
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1456
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1466
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1477
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1482
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1486
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1490
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1495
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1499
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1503
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1507
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1511
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1523
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1551
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1556
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1566
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1580
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1604
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = ""
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = "full "
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = ""
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1668
		{
			yyVAL.showFilter = nil
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1672
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1676
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = ""
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = SessionStr
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = GlobalStr
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1696
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.statement = &Begin{}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1710
		{
			yyVAL.statement = &Begin{}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.statement = &Commit{}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.statement = &Rollback{}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &OtherRead{}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &OtherRead{}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1767
		{
			setAllowComments(yylex, true)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1777
		{
			yyVAL.bytes2 = nil
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = UnionStr
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = UnionAllStr
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = UnionDistinctStr
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = SQLCacheStr
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = DistinctStr
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = StraightJoinHint
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1831
		{
			yyVAL.selectExprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1863
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1868
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1876
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1888
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1892
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1916
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1936
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1969
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1973
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1977
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1989
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1993
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1999
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2004
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.empty = struct{}{}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2009
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = JoinStr
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = JoinStr
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = JoinStr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = StraightJoinStr
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = LeftJoinStr
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = LeftJoinStr
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = RightJoinStr
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = RightJoinStr
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.str = NaturalJoinStr
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2101
		{
			yyVAL.indexHints = nil
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2105
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2109
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2113
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2118
		{
			yyVAL.expr = nil
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2178
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2186
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2190
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2194
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2202
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2206
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2210
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2214
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = IsNullStr
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = IsNotNullStr
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.str = IsTrueStr
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2232
		{
			yyVAL.str = IsNotTrueStr
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = IsFalseStr
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = IsNotFalseStr
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = EqualStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = LessThanStr
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = GreaterThanStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = LessEqualStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = GreaterEqualStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = NotEqualStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2275
		{
			yyVAL.expr = nil
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2383
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2387
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2391
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2395
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2455
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2459
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2463
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2473
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 478:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2481
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2485
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2489
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 481:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2493
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2497
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2501
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2505
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 485:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2509
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 486:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2513
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2517
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2521
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2531
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2588
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2597
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2601
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2611
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2621
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2625
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2629
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2633
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2637
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2641
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = BooleanModeStr
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 517:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = QueryExpansionStr
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2683
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.expr = nil
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = string("")
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2763
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.expr = nil
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2778
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2786
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.expr = &NullVal{}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.exprs = nil
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.expr = nil
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2862
		{
			yyVAL.orderBy = nil
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = AscScr
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = AscScr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = DescScr
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2900
		{
			yyVAL.limit = nil
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2908
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2912
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = ""
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ForUpdateStr
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = ShareModeStr
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2951
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2955
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2959
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2966
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2978
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2983
		{
			yyVAL.updateExprs = nil
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2987
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3007
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3055
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.bytes = []byte("charset")
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.expr = &Default{}
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3098
		{
			yyVAL.byt = 0
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.byt = 1
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3103
		{
			yyVAL.byt = 0
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.byt = 1
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.str = IgnoreStr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3122
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3135
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3137
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3148
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3155
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			decNesting(yylex)
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3441
		{
			skipToEnd(yylex)
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3446
		{
			skipToEnd(yylex)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			skipToEnd(yylex)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
