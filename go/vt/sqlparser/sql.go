// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const CLASS_ORIGIN = 57524
const SUBCLASS_ORIGIN = 57525
const MESSAGE_TEXT = 57526
const MYSQL_ERRNO = 57527
const CONSTRAINT_CATALOG = 57528
const CONSTRAINT_SCHEMA = 57529
const CONSTRAINT_NAME = 57530
const CATALOG_NAME = 57531
const SCHEMA_NAME = 57532
const TABLE_NAME = 57533
const COLUMN_NAME = 57534
const CURSOR_NAME = 57535
const SIGNAL = 57536
const RESIGNAL = 57537
const SQLSTATE = 57538
const DECLARE = 57539
const CONDITION = 57540
const CURSOR = 57541
const CONTINUE = 57542
const EXIT = 57543
const UNDO = 57544
const HANDLER = 57545
const FOUND = 57546
const SQLWARNING = 57547
const SQLEXCEPTION = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const SAVEPOINT = 57554
const WORK = 57555
const RELEASE = 57556
const BIT = 57557
const TINYINT = 57558
const SMALLINT = 57559
const MEDIUMINT = 57560
const INT = 57561
const INTEGER = 57562
const BIGINT = 57563
const INTNUM = 57564
const REAL = 57565
const DOUBLE = 57566
const FLOAT_TYPE = 57567
const DECIMAL = 57568
const NUMERIC = 57569
const DEC = 57570
const FIXED = 57571
const PRECISION = 57572
const TIME = 57573
const TIMESTAMP = 57574
const DATETIME = 57575
const YEAR = 57576
const CHAR = 57577
const VARCHAR = 57578
const BOOL = 57579
const CHARACTER = 57580
const VARBINARY = 57581
const NCHAR = 57582
const NVARCHAR = 57583
const NATIONAL = 57584
const VARYING = 57585
const TEXT = 57586
const TINYTEXT = 57587
const MEDIUMTEXT = 57588
const LONGTEXT = 57589
const LONG = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const LOCAL = 57611
const COLLATION = 57612
const DATABASES = 57613
const SCHEMAS = 57614
const TABLES = 57615
const FULL = 57616
const PROCESSLIST = 57617
const COLUMNS = 57618
const FIELDS = 57619
const ENGINES = 57620
const PLUGINS = 57621
const NAMES = 57622
const CHARSET = 57623
const GLOBAL = 57624
const SESSION = 57625
const ISOLATION = 57626
const LEVEL = 57627
const READ = 57628
const WRITE = 57629
const ONLY = 57630
const REPEATABLE = 57631
const COMMITTED = 57632
const UNCOMMITTED = 57633
const SERIALIZABLE = 57634
const CURRENT_TIMESTAMP = 57635
const DATABASE = 57636
const CURRENT_DATE = 57637
const CURRENT_USER = 57638
const CURRENT_TIME = 57639
const LOCALTIME = 57640
const LOCALTIMESTAMP = 57641
const UTC_DATE = 57642
const UTC_TIME = 57643
const UTC_TIMESTAMP = 57644
const REPLACE = 57645
const CONVERT = 57646
const CAST = 57647
const SUBSTR = 57648
const SUBSTRING = 57649
const GROUP_CONCAT = 57650
const SEPARATOR = 57651
const TIMESTAMPADD = 57652
const TIMESTAMPDIFF = 57653
const OVER = 57654
const WINDOW = 57655
const GROUPING = 57656
const GROUPS = 57657
const AVG = 57658
const BIT_AND = 57659
const BIT_OR = 57660
const BIT_XOR = 57661
const COUNT = 57662
const JSON_ARRAYAGG = 57663
const JSON_OBJECTAGG = 57664
const MAX = 57665
const MIN = 57666
const STDDEV_POP = 57667
const STDDEV = 57668
const STD = 57669
const STDDEV_SAMP = 57670
const SUM = 57671
const VAR_POP = 57672
const VARIANCE = 57673
const VAR_SAMP = 57674
const CUME_DIST = 57675
const DENSE_RANK = 57676
const FIRST_VALUE = 57677
const LAG = 57678
const LAST_VALUE = 57679
const LEAD = 57680
const NTH_VALUE = 57681
const NTILE = 57682
const ROW_NUMBER = 57683
const PERCENT_RANK = 57684
const RANK = 57685
const MATCH = 57686
const AGAINST = 57687
const BOOLEAN = 57688
const LANGUAGE = 57689
const WITH = 57690
const QUERY = 57691
const EXPANSION = 57692
const UNUSED = 57693
const ARRAY = 57694
const DESCRIPTION = 57695
const EMPTY = 57696
const EXCEPT = 57697
const JSON_TABLE = 57698
const LATERAL = 57699
const MEMBER = 57700
const RECURSIVE = 57701
const ACTIVE = 57702
const ADMIN = 57703
const BUCKETS = 57704
const CLONE = 57705
const COMPONENT = 57706
const DEFINITION = 57707
const ENFORCED = 57708
const EXCLUDE = 57709
const FOLLOWING = 57710
const GEOMCOLLECTION = 57711
const GET_MASTER_PUBLIC_KEY = 57712
const HISTOGRAM = 57713
const HISTORY = 57714
const INACTIVE = 57715
const INVISIBLE = 57716
const LOCKED = 57717
const MASTER_COMPRESSION_ALGORITHMS = 57718
const MASTER_PUBLIC_KEY_PATH = 57719
const MASTER_TLS_CIPHERSUITES = 57720
const MASTER_ZSTD_COMPRESSION_LEVEL = 57721
const NESTED = 57722
const NETWORK_NAMESPACE = 57723
const NOWAIT = 57724
const NULLS = 57725
const OJ = 57726
const OLD = 57727
const OPTIONAL = 57728
const ORDINALITY = 57729
const ORGANIZATION = 57730
const OTHERS = 57731
const PATH = 57732
const PERSIST = 57733
const PERSIST_ONLY = 57734
const PRECEDING = 57735
const PRIVILEGE_CHECKS_USER = 57736
const PROCESS = 57737
const RANDOM = 57738
const REFERENCE = 57739
const REQUIRE_ROW_FORMAT = 57740
const RESOURCE = 57741
const RESPECT = 57742
const RESTART = 57743
const RETAIN = 57744
const REUSE = 57745
const ROLE = 57746
const SECONDARY = 57747
const SECONDARY_ENGINE = 57748
const SECONDARY_LOAD = 57749
const SECONDARY_UNLOAD = 57750
const SKIP = 57751
const SRID = 57752
const THREAD_PRIORITY = 57753
const TIES = 57754
const UNBOUNDED = 57755
const VCPU = 57756
const VISIBLE = 57757
const SYSTEM = 57758
const INFILE = 57759

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 31,
	5, 47,
	-2, 835,
	-1, 39,
	141, 918,
	-2, 116,
	-1, 46,
	180, 492,
	181, 492,
	-2, 482,
	-1, 53,
	1, 1324,
	435, 1324,
	-2, 518,
	-1, 431,
	127, 928,
	-2, 922,
	-1, 432,
	127, 929,
	-2, 923,
	-1, 533,
	97, 1147,
	127, 1147,
	-2, 878,
	-1, 534,
	97, 1248,
	127, 1248,
	-2, 879,
	-1, 539,
	97, 1167,
	127, 1167,
	-2, 880,
	-1, 540,
	97, 1206,
	127, 1206,
	-2, 881,
	-1, 541,
	97, 1207,
	127, 1207,
	-2, 882,
	-1, 542,
	97, 1102,
	127, 1102,
	-2, 886,
	-1, 544,
	97, 1185,
	127, 1185,
	-2, 888,
	-1, 976,
	1, 572,
	5, 572,
	12, 572,
	13, 572,
	14, 572,
	15, 572,
	17, 572,
	19, 572,
	30, 572,
	31, 572,
	56, 572,
	57, 572,
	58, 572,
	59, 572,
	60, 572,
	62, 572,
	63, 572,
	66, 572,
	67, 572,
	69, 572,
	70, 572,
	435, 572,
	-2, 602,
	-1, 980,
	67, 64,
	69, 64,
	-2, 68,
	-1, 1170,
	127, 931,
	-2, 927,
	-1, 1333,
	68, 353,
	-2, 1068,
	-1, 1336,
	68, 349,
	71, 349,
	-2, 1003,
	-1, 1337,
	68, 350,
	71, 350,
	-2, 1013,
	-1, 1420,
	68, 427,
	71, 427,
	-2, 393,
	-1, 1465,
	5, 48,
	-2, 668,
	-1, 1781,
	1, 623,
	5, 623,
	12, 623,
	13, 623,
	14, 623,
	15, 623,
	17, 623,
	19, 623,
	30, 623,
	31, 623,
	56, 623,
	57, 623,
	58, 623,
	59, 623,
	60, 623,
	62, 623,
	63, 623,
	66, 623,
	67, 623,
	69, 623,
	70, 623,
	435, 623,
	-2, 602,
	-1, 1905,
	5, 48,
	-2, 853,
	-1, 2040,
	41, 938,
	-2, 936,
	-1, 2148,
	5, 48,
	-2, 856,
}

const yyPrivate = 57344

const yyLast = 25527

var yyAct = [...]int{

	465, 76, 429, 2249, 2295, 2270, 2260, 2165, 1380, 2261,
	2164, 2251, 2086, 7, 2054, 2151, 2085, 6, 2084, 5,
	2087, 8, 2137, 2131, 1794, 2014, 2040, 2191, 1915, 1009,
	1978, 1775, 1378, 80, 1284, 1290, 1692, 436, 1557, 1529,
	1682, 1755, 423, 1960, 1942, 1582, 464, 1148, 1338, 1288,
	416, 1795, 1756, 2152, 741, 1844, 901, 449, 1330, 1691,
	1530, 1636, 1282, 553, 1311, 1752, 358, 99, 1418, 718,
	1761, 364, 367, 1370, 1767, 1449, 1140, 76, 1319, 976,
	555, 1208, 1089, 1405, 731, 1320, 1703, 1659, 1195, 1234,
	1366, 1354, 1658, 535, 991, 1156, 1273, 1326, 1619, 383,
	1266, 550, 2083, 3, 1172, 1109, 810, 385, 419, 434,
	1334, 1229, 1226, 770, 438, 549, 990, 527, 851, 531,
	532, 359, 360, 382, 696, 363, 538, 982, 769, 972,
	2317, 918, 2313, 2303, 2285, 973, 524, 2283, 2265, 2244,
	2199, 79, 1131, 842, 1825, 1936, 65, 2276, 1943, 82,
	2184, 2259, 2145, 2232, 2183, 2144, 1945, 1720, 917, 1495,
	2064, 866, 865, 875, 876, 868, 869, 870, 871, 872,
	873, 874, 867, 32, 1890, 877, 551, 32, 32, 415,
	695, 32, 723, 84, 85, 86, 87, 88, 478, 1789,
	484, 486, 485, 482, 483, 481, 480, 479, 1790, 1791,
	743, 1524, 1308, 1309, 1566, 487, 488, 1565, 1307, 1737,
	1567, 32, 362, 68, 35, 36, 361, 788, 1525, 1999,
	1602, 698, 1286, 701, 992, 1948, 993, 744, 745, 1340,
	1355, 1342, 109, 105, 106, 77, 107, 373, 1342, 77,
	77, 1881, 1879, 77, 68, 35, 36, 1367, 1118, 1985,
	722, 726, 1346, 1348, 728, 1347, 1360, 352, 1355, 380,
	1704, 1946, 1947, 1949, 1950, 1951, 37, 752, 2274, 111,
	110, 2196, 2037, 77, 2194, 2195, 2246, 365, 2036, 2035,
	2034, 2033, 2031, 1210, 2032, 2116, 2117, 724, 727, 2081,
	725, 2188, 2189, 2153, 1431, 1594, 101, 1917, 2231, 1549,
	738, 739, 1706, 740, 1387, 737, 736, 2258, 1430, 2079,
	1599, 1598, 746, 2132, 747, 744, 745, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 1386,
	700, 699, 1595, 730, 730, 1008, 1685, 1736, 94, 1798,
	1267, 1637, 355, 353, 1008, 730, 1600, 368, 1592, 1664,
	1435, 1961, 1962, 2309, 1593, 76, 76, 1849, 2318, 1429,
	2315, 1008, 2304, 2286, 1007, 697, 2015, 757, 425, 706,
	2119, 759, 81, 758, 379, 1576, 793, 1638, 356, 2017,
	1708, 378, 1065, 379, 801, 1712, 1971, 1707, 369, 1705,
	1641, 96, 98, 1079, 1710, 93, 1293, 1295, 754, 1070,
	1556, 103, 102, 1555, 108, 1554, 1119, 1709, 693, 1654,
	1427, 1421, 1422, 1597, 1420, 366, 1423, 1424, 2065, 366,
	1711, 1713, 721, 1609, 1970, 753, 1369, 729, 762, 763,
	1345, 886, 1944, 1355, 888, 2299, 101, 2255, 1008, 1824,
	2250, 100, 891, 892, 893, 894, 895, 896, 897, 898,
	2016, 1433, 1436, 1580, 2253, 2143, 1008, 756, 760, 797,
	2240, 1639, 1640, 1008, 899, 327, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 1294, 916, 919,
	919, 919, 925, 919, 919, 925, 919, 925, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 792, 977, 790, 69, 812, 802, 104, 1895,
	366, 1679, 75, 855, 1428, 1580, 75, 75, 889, 890,
	75, 103, 102, 1872, 1974, 1969, 1865, 1596, 887, 1579,
	1570, 1562, 1468, 1580, 1454, 1439, 69, 971, 1146, 2297,
	1426, 1583, 2298, 95, 2296, 1003, 988, 857, 900, 538,
	75, 714, 867, 1312, 538, 877, 1814, 1476, 877, 366,
	1580, 1473, 1580, 1303, 1110, 1396, 1143, 850, 2252, 2254,
	875, 876, 868, 869, 870, 871, 872, 873, 874, 867,
	1432, 1227, 877, 868, 869, 870, 871, 872, 873, 874,
	867, 921, 923, 877, 927, 929, 1066, 932, 870, 871,
	872, 873, 874, 867, 1341, 995, 877, 734, 1815, 720,
	996, 1579, 1722, 705, 748, 1149, 1150, 979, 920, 922,
	924, 926, 928, 930, 931, 933, 1975, 1434, 1683, 1579,
	1765, 1006, 1678, 986, 1126, 1001, 1675, 849, 848, 761,
	981, 702, 347, 866, 865, 875, 876, 868, 869, 870,
	871, 872, 873, 874, 867, 850, 1579, 877, 1579, 91,
	1111, 1397, 1666, 1664, 1666, 1664, 2302, 1672, 1179, 1008,
	1671, 1674, 1668, 1665, 889, 890, 849, 848, 889, 890,
	344, 807, 811, 1177, 1178, 1176, 2192, 1667, 2216, 1667,
	2215, 1471, 858, 1470, 850, 848, 90, 730, 2289, 2271,
	2288, 1406, 719, 735, 730, 730, 730, 750, 849, 848,
	849, 848, 850, 1072, 2241, 2306, 803, 2310, 1802, 730,
	730, 708, 709, 710, 711, 712, 850, 845, 850, 902,
	849, 848, 328, 1116, 77, 849, 848, 2243, 2167, 331,
	915, 732, 2193, 1227, 1175, 1484, 2149, 377, 850, 340,
	345, 346, 751, 850, 866, 865, 875, 876, 868, 869,
	870, 871, 872, 873, 874, 867, 1935, 1093, 877, 1934,
	2311, 849, 848, 1624, 76, 1091, 1196, 2192, 1197, 730,
	1622, 1139, 1451, 1452, 1453, 337, 1105, 1106, 338, 850,
	1603, 343, 2228, 2227, 952, 953, 954, 955, 956, 940,
	941, 942, 957, 958, 943, 944, 945, 951, 959, 946,
	947, 948, 949, 950, 962, 961, 960, 963, 964, 966,
	965, 967, 1080, 1129, 2201, 1472, 1096, 1097, 1113, 1114,
	1162, 1164, 1165, 521, 522, 1568, 1163, 1569, 2173, 767,
	1151, 2078, 1171, 1145, 1153, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1138, 766, 2030, 1992, 329, 849, 848, 1154, 1932, 76,
	1155, 1807, 1724, 1121, 1122, 2214, 1133, 1124, 1620, 1132,
	1413, 1123, 1094, 850, 903, 2006, 2233, 1173, 849, 848,
	1926, 2230, 803, 1127, 1144, 979, 342, 332, 333, 1625,
	350, 2213, 1230, 1137, 334, 336, 850, 330, 349, 348,
	1843, 849, 848, 1845, 2076, 849, 848, 2048, 1170, 1583,
	1168, 2044, 1169, 1845, 1134, 2178, 803, 1216, 1219, 850,
	1926, 2175, 2043, 850, 1228, 1926, 2080, 2006, 2072, 1558,
	855, 2006, 2020, 454, 453, 456, 457, 458, 459, 2006,
	803, 1166, 455, 460, 1967, 1174, 2006, 2005, 1287, 1926,
	1925, 1908, 803, 977, 1438, 803, 2024, 977, 1867, 1558,
	1860, 900, 1856, 1853, 1852, 1850, 1835, 1834, 1833, 1199,
	1200, 1822, 1821, 2023, 1095, 1648, 1206, 1818, 1819, 1818,
	1817, 1830, 1203, 1205, 1466, 803, 1270, 1298, 1213, 1647,
	1407, 1300, 1270, 803, 1240, 1394, 1242, 538, 1204, 1410,
	1764, 1393, 1115, 1198, 1275, 1278, 1279, 1280, 1276, 1120,
	1277, 1281, 1117, 1202, 1768, 1769, 1868, 1088, 1204, 803,
	81, 1087, 1238, 1239, 1086, 1085, 1077, 1224, 1075, 1245,
	1246, 1247, 1248, 1074, 1073, 1071, 1005, 1004, 984, 1091,
	902, 1066, 730, 789, 730, 716, 372, 370, 1292, 1753,
	900, 1296, 1764, 984, 1170, 2042, 1317, 1808, 1316, 1321,
	551, 1558, 979, 81, 2180, 1249, 1250, 979, 1903, 1831,
	1254, 979, 1820, 1257, 1204, 1301, 1269, 1327, 1262, 1305,
	1304, 1310, 1297, 1283, 983, 1777, 1656, 1356, 1357, 1358,
	1359, 1324, 1571, 1306, 985, 1466, 987, 1489, 1488, 1376,
	1125, 1392, 1159, 1160, 983, 1372, 1373, 1374, 1375, 985,
	76, 983, 1147, 1868, 1092, 1270, 1078, 1466, 1764, 989,
	1368, 1098, 1099, 1100, 1293, 1295, 1275, 1278, 1279, 1280,
	1276, 799, 1277, 1281, 77, 800, 1107, 1108, 794, 2186,
	1455, 2176, 1776, 2046, 1937, 1342, 1913, 1371, 1801, 1398,
	1457, 1458, 1459, 1367, 1404, 1768, 1769, 902, 1575, 1388,
	1362, 1214, 1215, 1361, 1067, 786, 1379, 2280, 866, 865,
	875, 876, 868, 869, 870, 871, 872, 873, 874, 867,
	77, 2278, 877, 2262, 1829, 1771, 1753, 1626, 1082, 1541,
	1539, 2210, 1450, 1173, 1542, 1540, 1136, 1170, 1774, 1317,
	77, 1169, 1773, 1538, 1537, 1294, 1409, 2182, 1543, 1408,
	1279, 1280, 900, 1416, 1689, 1415, 420, 421, 1440, 843,
	844, 1157, 1437, 2208, 1443, 812, 1448, 1447, 1997, 1585,
	1855, 1806, 1805, 1577, 1460, 2121, 2124, 1527, 1528, 2041,
	2172, 977, 977, 977, 977, 977, 1414, 2171, 841, 2200,
	2039, 1456, 2115, 2114, 371, 1315, 1651, 805, 1287, 1613,
	1550, 1174, 1463, 1002, 784, 768, 765, 764, 977, 806,
	717, 2223, 2052, 2051, 1901, 1149, 1150, 1531, 1976, 1412,
	1462, 1383, 1081, 1686, 843, 844, 2203, 1629, 1465, 1467,
	1403, 1283, 1069, 1446, 1469, 795, 796, 2222, 1553, 2221,
	1475, 1445, 1559, 1478, 1479, 1480, 2220, 1560, 1483, 1561,
	1486, 2027, 1487, 538, 417, 1490, 1491, 2202, 1492, 1493,
	2169, 1377, 1497, 1498, 1499, 1500, 1501, 2125, 2056, 1996,
	418, 81, 2055, 1508, 1509, 1510, 1979, 1512, 1513, 1526,
	1515, 1516, 1517, 1518, 1558, 1520, 1521, 1522, 1544, 1477,
	1584, 76, 1545, 2282, 2281, 979, 979, 979, 979, 979,
	1206, 1552, 730, 1066, 730, 730, 1546, 1547, 1474, 995,
	1532, 1563, 979, 1535, 1321, 1572, 1112, 1533, 1534, 1652,
	1536, 846, 979, 2281, 432, 1631, 1632, 1633, 2282, 1612,
	2069, 1614, 1615, 1616, 1617, 1804, 1574, 1142, 1441, 1442,
	374, 811, 376, 83, 1646, 1604, 1605, 2097, 49, 2099,
	19, 52, 1611, 1578, 1581, 2098, 18, 78, 1494, 1496,
	2100, 20, 1618, 2101, 21, 1502, 1503, 1504, 1505, 116,
	1623, 1621, 116, 1, 1698, 2096, 15, 2170, 116, 2095,
	14, 2120, 1650, 2089, 10, 2122, 1716, 1717, 2038, 1718,
	1719, 2108, 30, 1628, 2107, 29, 1657, 1956, 1464, 1941,
	116, 1725, 1726, 2106, 28, 1940, 1728, 2104, 25, 1382,
	1635, 1384, 116, 2103, 24, 116, 558, 1649, 116, 1670,
	1655, 1485, 1653, 1634, 1669, 1721, 1680, 1681, 1662, 116,
	1684, 558, 1663, 2105, 26, 785, 1758, 116, 76, 2094,
	13, 1660, 1673, 1677, 2091, 12, 1130, 1893, 1661, 1694,
	1425, 1696, 2090, 11, 2130, 1695, 2088, 9, 1700, 1170,
	1779, 1702, 1328, 1169, 1781, 1783, 1784, 1785, 1318, 1715,
	1714, 548, 1531, 89, 1754, 1395, 733, 1965, 1763, 335,
	1325, 1590, 1757, 2123, 787, 1699, 866, 865, 875, 876,
	868, 869, 870, 871, 872, 873, 874, 867, 1782, 1589,
	877, 1786, 1586, 1601, 1339, 1588, 1778, 1803, 1788, 1587,
	2118, 1591, 1013, 1011, 1760, 1012, 1010, 1015, 1014, 339,
	1772, 997, 2159, 847, 97, 53, 1968, 1676, 1734, 1735,
	1419, 1780, 92, 1740, 1799, 1235, 1743, 1800, 742, 341,
	1759, 1748, 885, 1444, 1564, 1797, 536, 1827, 1828, 537,
	1376, 1343, 1344, 529, 1349, 1350, 1351, 1352, 1353, 804,
	1792, 2187, 809, 2133, 1838, 1694, 1321, 1482, 1321, 1793,
	914, 1225, 1363, 1364, 1365, 437, 1548, 1832, 2136, 1809,
	1810, 1161, 452, 451, 450, 447, 1813, 448, 1402, 1152,
	1887, 1523, 859, 1816, 1823, 435, 427, 1139, 975, 968,
	1411, 1274, 1272, 1271, 1083, 525, 1770, 1766, 1811, 1285,
	1871, 974, 381, 66, 749, 354, 1847, 1729, 1730, 1731,
	1732, 1733, 1889, 2063, 34, 375, 422, 27, 17, 1837,
	755, 1888, 22, 16, 1417, 1842, 1846, 703, 38, 1848,
	1866, 1841, 1066, 41, 40, 1869, 1859, 1851, 1630, 1385,
	2158, 2248, 116, 771, 2269, 1839, 2190, 558, 558, 2102,
	2109, 2093, 2092, 2235, 23, 2234, 4, 791, 67, 558,
	31, 2, 1894, 0, 0, 0, 1864, 0, 1723, 866,
	865, 875, 876, 868, 869, 870, 871, 872, 873, 874,
	867, 0, 1877, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 1909, 0, 0,
	0, 979, 1531, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 1921, 1922, 1923, 1873, 0, 1919, 0, 1642,
	1902, 1644, 1645, 0, 0, 1910, 1882, 1883, 0, 76,
	1928, 0, 0, 0, 463, 0, 0, 1924, 0, 0,
	854, 0, 1787, 0, 1920, 0, 0, 1738, 1739, 0,
	1741, 1742, 0, 1744, 1745, 1746, 1747, 0, 1749, 1750,
	1751, 0, 1929, 1953, 1954, 1955, 0, 0, 977, 0,
	1904, 1905, 1906, 1907, 0, 1963, 1930, 1321, 1572, 0,
	1964, 0, 0, 0, 0, 0, 0, 1986, 1987, 1988,
	1989, 1990, 1918, 1952, 1957, 1993, 1994, 0, 0, 1959,
	0, 1958, 1980, 1972, 1758, 1981, 1982, 2001, 1797, 1931,
	0, 1933, 0, 1376, 0, 0, 1973, 0, 1779, 0,
	0, 0, 0, 545, 0, 0, 554, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 116, 116, 116, 0,
	0, 707, 2004, 0, 0, 0, 0, 2026, 0, 2028,
	1757, 0, 558, 0, 0, 0, 1998, 1694, 0, 1966,
	2003, 0, 2025, 0, 2007, 0, 1861, 1984, 2008, 0,
	1606, 1607, 1608, 1610, 0, 2019, 425, 2053, 2018, 2013,
	0, 0, 979, 0, 0, 0, 2029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 2022, 0,
	1758, 1991, 76, 0, 0, 0, 1995, 0, 1891, 2000,
	0, 2047, 2045, 0, 0, 0, 0, 2050, 1292, 2057,
	2009, 0, 0, 0, 2058, 0, 0, 0, 0, 76,
	0, 0, 0, 2010, 2011, 2012, 2082, 0, 0, 2075,
	0, 2070, 902, 977, 0, 2074, 1757, 0, 0, 1911,
	0, 0, 1912, 2068, 2129, 1914, 0, 2077, 0, 0,
	0, 0, 0, 902, 0, 0, 0, 0, 0, 0,
	0, 2127, 1896, 1897, 0, 0, 0, 2126, 1898, 0,
	2128, 1899, 0, 0, 0, 0, 1900, 0, 2140, 0,
	0, 2154, 0, 0, 0, 2141, 0, 0, 2059, 2060,
	2061, 2062, 2146, 0, 2071, 2066, 2067, 1531, 558, 2147,
	0, 0, 0, 0, 76, 0, 116, 0, 0, 0,
	116, 0, 0, 116, 0, 0, 0, 0, 0, 116,
	0, 558, 0, 0, 0, 0, 0, 0, 558, 558,
	558, 116, 116, 116, 0, 0, 0, 2168, 116, 0,
	2166, 0, 0, 558, 558, 2181, 0, 979, 0, 0,
	0, 0, 0, 2135, 2139, 2174, 0, 554, 554, 0,
	0, 0, 0, 0, 0, 2142, 0, 0, 2075, 554,
	0, 0, 0, 2148, 0, 0, 0, 0, 0, 2197,
	0, 2205, 0, 0, 76, 0, 2212, 2163, 0, 0,
	76, 2206, 2207, 2209, 2219, 2204, 0, 2226, 0, 0,
	0, 0, 116, 558, 116, 2211, 558, 76, 2217, 2229,
	0, 0, 76, 0, 0, 2239, 2256, 2242, 0, 2238,
	0, 2237, 2245, 2236, 1812, 0, 0, 0, 0, 0,
	0, 76, 2177, 2263, 76, 76, 2257, 0, 0, 76,
	0, 2264, 2226, 0, 2266, 0, 2272, 0, 2185, 2275,
	0, 116, 0, 0, 0, 425, 76, 854, 2279, 76,
	2277, 0, 0, 2226, 0, 2290, 0, 2292, 2293, 2287,
	902, 0, 0, 2224, 76, 0, 76, 2300, 2139, 0,
	76, 2226, 0, 2226, 0, 0, 0, 0, 0, 0,
	2305, 0, 0, 0, 76, 0, 0, 76, 0, 0,
	0, 2226, 1892, 558, 76, 0, 0, 2314, 76, 0,
	0, 2226, 0, 0, 2247, 2226, 0, 0, 0, 1874,
	1875, 0, 1876, 0, 0, 1878, 978, 1880, 0, 2134,
	2138, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	558, 866, 865, 875, 876, 868, 869, 870, 871, 872,
	873, 874, 867, 1886, 0, 877, 545, 0, 0, 0,
	0, 545, 998, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 116, 0, 0, 0, 0, 0,
	357, 0, 116, 116, 2155, 2156, 0, 116, 116, 0,
	0, 116, 116, 116, 0, 2307, 2308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	558, 1927, 0, 0, 526, 0, 0, 547, 0, 0,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 0, 0, 0, 0, 0, 0, 0, 713,
	1885, 0, 866, 865, 875, 876, 868, 869, 870, 871,
	872, 873, 874, 867, 2138, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2218, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 558, 0, 558, 861,
	0, 864, 0, 116, 116, 0, 0, 116, 878, 879,
	880, 881, 882, 883, 884, 0, 862, 863, 860, 866,
	865, 875, 876, 868, 869, 870, 871, 872, 873, 874,
	867, 0, 0, 877, 0, 116, 116, 116, 1068, 0,
	1207, 1212, 0, 0, 0, 1218, 1221, 1222, 1223, 866,
	865, 875, 876, 868, 869, 870, 871, 872, 873, 874,
	867, 554, 0, 877, 1884, 2291, 0, 0, 554, 554,
	554, 0, 1233, 0, 1236, 1237, 0, 0, 0, 1241,
	0, 1243, 1244, 554, 554, 0, 0, 0, 0, 1251,
	1252, 1253, 0, 1255, 1256, 0, 1258, 1259, 1260, 1261,
	0, 1263, 1264, 1265, 0, 0, 0, 32, 33, 68,
	35, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 37, 56, 57, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 554, 0, 0, 1141, 0, 0, 0,
	0, 0, 0, 866, 865, 875, 876, 868, 869, 870,
	871, 872, 873, 874, 867, 47, 0, 877, 0, 77,
	0, 0, 0, 0, 715, 866, 865, 875, 876, 868,
	869, 870, 871, 872, 873, 874, 867, 0, 0, 877,
	0, 0, 0, 0, 0, 116, 116, 116, 116, 116,
	0, 0, 554, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 116, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 116, 0, 1697, 798, 0, 0, 0, 0,
	0, 39, 70, 43, 42, 45, 0, 58, 0, 0,
	0, 0, 0, 1201, 558, 866, 865, 875, 876, 868,
	869, 870, 871, 872, 873, 874, 867, 0, 0, 877,
	1461, 545, 0, 46, 73, 72, 0, 0, 54, 55,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 1231,
	1232, 866, 865, 875, 876, 868, 869, 870, 871, 872,
	873, 874, 867, 0, 0, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 59, 60, 0, 0, 558, 116, 558, 558,
	0, 0, 0, 0, 0, 48, 71, 0, 50, 51,
	63, 0, 64, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 554,
	554, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	1481, 0, 0, 558, 558, 0, 0, 0, 970, 116,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 1506, 1507, 0, 0, 0,
	1511, 0, 0, 1514, 0, 0, 0, 0, 1519, 0,
	0, 114, 0, 0, 351, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 554, 0, 554, 0,
	558, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 0, 528, 546, 0, 114, 0, 0,
	114, 0, 558, 558, 0, 0, 0, 0, 0, 0,
	32, 114, 68, 35, 36, 0, 75, 0, 0, 114,
	0, 0, 0, 0, 61, 558, 0, 0, 0, 0,
	74, 0, 0, 0, 37, 0, 0, 0, 0, 0,
	0, 554, 0, 0, 0, 558, 558, 0, 558, 0,
	558, 865, 875, 876, 868, 869, 870, 871, 872, 873,
	874, 867, 0, 0, 877, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2110, 0, 0, 1076, 0,
	2316, 116, 526, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 1101, 1102, 1103, 0, 0, 0, 116,
	1104, 0, 0, 0, 39, 70, 43, 42, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	2111, 116, 558, 0, 0, 0, 0, 0, 0, 558,
	558, 0, 0, 0, 545, 0, 46, 73, 72, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1135, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 59, 60, 0, 2112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2113, 71,
	0, 50, 51, 63, 114, 64, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 558, 558,
	558, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 1627, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 554, 0, 554, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 1687, 1688, 0, 0, 0, 0, 0,
	558, 0, 116, 0, 0, 0, 0, 558, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 1268, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 558, 0, 0, 0, 0, 558, 0,
	1727, 0, 0, 116, 0, 116, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 1141, 1762, 0, 0, 0, 0, 114, 114,
	114, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 546, 0, 1762, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 554, 1381, 554, 0,
	1796, 0, 0, 0, 0, 1389, 1390, 0, 0, 1391,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 32, 0, 68,
	35, 36, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 61, 1858, 0, 0, 0, 0, 74, 0, 1862,
	1863, 37, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 114, 0,
	0, 0, 114, 0, 0, 114, 0, 0, 0, 77,
	0, 1090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 114, 114, 0, 0, 0, 0,
	114, 0, 2110, 0, 0, 2268, 2271, 2267, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1916, 0, 558, 0, 0, 0, 0, 1916, 1916,
	1916, 39, 70, 43, 42, 45, 0, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 2111, 0, 0,
	0, 0, 0, 0, 114, 0, 384, 0, 0, 0,
	0, 0, 0, 46, 73, 72, 0, 0, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	1977, 0, 59, 60, 1090, 2112, 0, 554, 0, 0,
	0, 0, 0, 0, 0, 2113, 71, 0, 50, 51,
	63, 0, 64, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 0, 0, 0, 0, 1916, 0,
	0, 1211, 1211, 0, 0, 0, 1211, 1211, 1211, 1211,
	0, 1796, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 0, 1211, 1211, 1211, 1211, 0, 0, 1211,
	1211, 1211, 1211, 1211, 0, 0, 0, 0, 0, 0,
	1211, 1211, 1211, 0, 1211, 1211, 2049, 1211, 1211, 1211,
	1211, 69, 1211, 1211, 1211, 0, 114, 0, 0, 0,
	0, 0, 0, 0, 114, 384, 0, 0, 0, 114,
	114, 0, 0, 114, 1302, 1090, 546, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	32, 0, 68, 35, 36, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 61, 0, 0, 0, 0, 0,
	74, 1796, 0, 0, 37, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 77, 0, 0, 114, 114, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2110, 0, 554, 0, 0,
	2312, 0, 0, 0, 0, 0, 0, 1399, 1400, 114,
	0, 0, 0, 1826, 0, 1035, 0, 2179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 39, 70, 43, 42, 45, 0,
	0, 1840, 0, 1090, 0, 0, 0, 0, 0, 0,
	2111, 0, 0, 0, 2198, 0, 0, 0, 0, 0,
	0, 1796, 0, 1857, 0, 0, 46, 73, 72, 0,
	0, 1916, 1035, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 1022, 0,
	0, 0, 0, 0, 0, 59, 60, 0, 2112, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 2113, 71,
	0, 50, 51, 63, 0, 64, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 1211, 0, 0,
	1036, 1211, 0, 0, 1211, 0, 0, 0, 0, 1211,
	0, 0, 0, 0, 0, 1022, 546, 114, 114, 114,
	114, 114, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 114, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 1036, 0, 0,
	0, 0, 0, 0, 0, 0, 1939, 1049, 1052, 1053,
	1054, 1055, 1056, 1057, 69, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 0, 1037, 1038, 1039, 1040, 1016, 1020, 1050,
	1017, 1023, 1019, 1021, 1018, 0, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 1049, 1052, 1053, 1054, 1055, 1056,
	1057, 0, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 114,
	1037, 1038, 1039, 1040, 1016, 1020, 1050, 1017, 1023, 1019,
	1021, 1018, 0, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 1051, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 2150, 852, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 191, 0, 0,
	152, 199, 197, 0, 0, 0, 233, 291, 0, 0,
	0, 0, 194, 0, 0, 314, 282, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 856, 0, 0,
	0, 0, 0, 114, 142, 0, 0, 0, 0, 0,
	849, 848, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 121, 0, 0, 0, 0,
	171, 213, 132, 0, 0, 0, 184, 320, 0, 426,
	0, 247, 0, 287, 174, 192, 136, 118, 130, 146,
	173, 223, 256, 266, 0, 0, 0, 0, 0, 153,
	0, 259, 231, 309, 0, 0, 237, 258, 195, 298,
	249, 307, 308, 175, 292, 317, 322, 279, 162, 0,
	122, 0, 244, 157, 188, 0, 0, 0, 150, 0,
	0, 0, 278, 137, 294, 211, 217, 147, 149, 148,
	131, 273, 296, 141, 151, 283, 262, 288, 156, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 123, 290,
	306, 143, 270, 271, 323, 257, 125, 304, 286, 209,
	185, 186, 124, 0, 254, 160, 170, 155, 226, 0,
	169, 246, 301, 302, 154, 325, 133, 316, 127, 134,
	315, 220, 0, 219, 318, 297, 305, 210, 203, 0,
	126, 303, 208, 202, 190, 165, 177, 242, 198, 243,
	178, 215, 214, 216, 0, 0, 114, 284, 312, 326,
	200, 139, 0, 272, 295, 0, 0, 140, 168, 164,
	241, 218, 135, 180, 281, 189, 196, 253, 324, 230,
	260, 144, 311, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 389,
	390, 391, 395, 396, 400, 401, 409, 408, 407, 410,
	411, 413, 412, 414, 392, 393, 394, 397, 398, 399,
	402, 403, 406, 404, 405, 0, 117, 128, 193, 0,
	251, 167, 313, 0, 159, 384, 0, 384, 0, 0,
	0, 119, 120, 129, 138, 145, 158, 163, 166, 172,
	176, 179, 181, 182, 183, 187, 201, 204, 205, 206,
	207, 221, 222, 224, 225, 228, 229, 232, 234, 235,
	236, 238, 239, 240, 245, 248, 250, 252, 255, 261,
	263, 264, 265, 267, 268, 269, 274, 275, 276, 277,
	285, 289, 299, 300, 310, 319, 321, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 676, 656, 293, 614, 679, 586, 603,
	690, 604, 607, 645, 572, 626, 227, 601, 573, 0,
	590, 563, 597, 564, 587, 616, 161, 585, 658, 629,
	678, 191, 641, 0, 152, 199, 197, 0, 0, 114,
	233, 291, 677, 622, 0, 685, 194, 0, 638, 314,
	282, 212, 0, 0, 618, 665, 624, 654, 613, 647,
	579, 637, 680, 602, 643, 681, 546, 0, 0, 2157,
	0, 0, 0, 0, 0, 0, 114, 0, 142, 0,
	640, 675, 599, 642, 644, 561, 639, 0, 567, 574,
	689, 671, 593, 594, 595, 0, 0, 0, 0, 0,
	0, 0, 617, 625, 651, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 591, 0, 635, 0, 0, 0,
	575, 568, 0, 0, 615, 0, 0, 0, 578, 121,
	592, 652, 0, 559, 171, 213, 132, 655, 670, 612,
	184, 320, 674, 609, 608, 247, 0, 287, 174, 192,
	136, 118, 130, 146, 173, 223, 256, 266, 600, 560,
	659, 588, 598, 153, 596, 259, 231, 309, 0, 632,
	237, 258, 195, 298, 249, 307, 308, 175, 292, 317,
	322, 279, 162, 0, 122, 0, 244, 157, 188, 611,
	646, 589, 150, 649, 636, 664, 278, 137, 294, 211,
	217, 147, 149, 148, 131, 273, 296, 141, 151, 283,
	262, 288, 156, 0, 0, 2160, 2161, 2162, 0, 0,
	0, 0, 123, 290, 306, 143, 270, 271, 323, 257,
	125, 304, 286, 209, 185, 186, 124, 0, 254, 160,
	170, 155, 226, 0, 169, 246, 301, 302, 154, 325,
	133, 316, 127, 134, 315, 220, 0, 219, 318, 297,
	305, 210, 203, 0, 126, 303, 208, 202, 190, 165,
	177, 242, 198, 243, 178, 215, 214, 216, 0, 565,
	0, 284, 312, 326, 200, 139, 584, 272, 295, 0,
	0, 140, 168, 164, 241, 218, 135, 180, 281, 189,
	196, 253, 324, 230, 260, 144, 311, 280, 582, 583,
	580, 0, 581, 627, 628, 682, 683, 684, 653, 576,
	0, 666, 667, 0, 657, 672, 673, 648, 691, 605,
	606, 566, 569, 570, 571, 577, 619, 620, 631, 634,
	662, 661, 660, 663, 668, 687, 686, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	117, 128, 193, 692, 251, 167, 313, 562, 159, 0,
	0, 621, 623, 633, 650, 119, 120, 129, 138, 145,
	158, 163, 166, 172, 176, 179, 181, 182, 183, 187,
	201, 204, 205, 206, 207, 221, 222, 224, 225, 228,
	229, 232, 234, 235, 236, 238, 239, 240, 245, 248,
	250, 252, 255, 261, 263, 264, 265, 267, 268, 269,
	274, 275, 276, 277, 285, 289, 299, 300, 310, 319,
	321, 669, 676, 656, 293, 614, 679, 586, 603, 690,
	604, 607, 645, 572, 626, 227, 601, 573, 0, 590,
	563, 597, 564, 587, 616, 161, 585, 658, 629, 678,
	191, 641, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 677, 622, 0, 685, 194, 0, 638, 314, 282,
	212, 0, 0, 618, 665, 624, 654, 613, 647, 579,
	637, 680, 602, 643, 681, 0, 0, 0, 557, 0,
	1322, 1323, 0, 0, 0, 0, 0, 142, 0, 640,
	675, 599, 642, 644, 561, 639, 0, 567, 574, 689,
	671, 593, 594, 595, 1573, 0, 0, 0, 0, 0,
	0, 617, 625, 651, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 635, 0, 0, 0, 575,
	568, 0, 0, 615, 0, 0, 0, 578, 121, 592,
	652, 0, 559, 171, 213, 132, 655, 670, 612, 184,
	320, 674, 609, 608, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 600, 560, 659,
	588, 598, 153, 596, 259, 231, 309, 0, 632, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 611, 646,
	589, 150, 649, 636, 664, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 565, 0,
	284, 312, 326, 200, 139, 584, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 582, 583, 580,
	0, 581, 627, 628, 682, 683, 684, 653, 576, 0,
	666, 667, 0, 657, 672, 673, 648, 691, 605, 606,
	566, 569, 570, 571, 577, 619, 620, 631, 634, 662,
	661, 660, 663, 668, 687, 686, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 117,
	128, 193, 692, 251, 167, 313, 562, 159, 0, 0,
	621, 623, 633, 650, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	669, 676, 656, 293, 614, 679, 586, 603, 690, 604,
	607, 645, 572, 626, 227, 601, 573, 0, 590, 563,
	597, 564, 587, 616, 161, 585, 658, 629, 678, 191,
	641, 0, 152, 199, 197, 0, 0, 0, 233, 291,
	677, 622, 0, 685, 194, 0, 638, 314, 282, 212,
	0, 0, 618, 665, 624, 654, 613, 647, 579, 637,
	680, 602, 643, 681, 0, 0, 0, 557, 0, 1322,
	1323, 0, 0, 0, 0, 0, 142, 0, 640, 675,
	599, 642, 644, 561, 639, 0, 567, 574, 689, 671,
	593, 594, 595, 0, 0, 0, 0, 0, 0, 0,
	617, 625, 651, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 635, 0, 0, 0, 575, 568,
	0, 0, 615, 0, 0, 0, 578, 121, 592, 652,
	0, 559, 171, 213, 132, 655, 670, 612, 184, 320,
	674, 609, 608, 247, 0, 287, 174, 192, 136, 118,
	130, 146, 173, 223, 256, 266, 600, 560, 659, 588,
	598, 153, 596, 259, 231, 309, 0, 632, 237, 258,
	195, 298, 249, 307, 308, 175, 292, 317, 322, 279,
	162, 0, 122, 0, 244, 157, 188, 611, 646, 589,
	150, 649, 636, 664, 278, 137, 294, 211, 217, 147,
	149, 148, 131, 273, 296, 141, 151, 283, 262, 288,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 290, 306, 143, 270, 271, 323, 257, 125, 304,
	286, 209, 185, 186, 124, 0, 254, 160, 170, 155,
	226, 0, 169, 246, 301, 302, 154, 325, 133, 316,
	127, 134, 315, 220, 0, 219, 318, 297, 305, 210,
	203, 0, 126, 303, 208, 202, 190, 165, 177, 242,
	198, 243, 178, 215, 214, 216, 0, 565, 0, 284,
	312, 326, 200, 139, 584, 272, 295, 0, 0, 140,
	168, 164, 241, 218, 135, 180, 281, 189, 196, 253,
	324, 230, 260, 144, 311, 280, 582, 583, 580, 0,
	581, 627, 628, 682, 683, 684, 653, 576, 0, 666,
	667, 0, 657, 672, 673, 648, 691, 605, 606, 566,
	569, 570, 571, 577, 619, 620, 631, 634, 662, 661,
	660, 663, 668, 687, 686, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 117, 128,
	193, 692, 251, 167, 313, 562, 159, 0, 0, 621,
	623, 633, 650, 119, 120, 129, 138, 145, 158, 163,
	166, 172, 176, 179, 181, 182, 183, 187, 201, 204,
	205, 206, 207, 221, 222, 224, 225, 228, 229, 232,
	234, 235, 236, 238, 239, 240, 245, 248, 250, 252,
	255, 261, 263, 264, 265, 267, 268, 269, 274, 275,
	276, 277, 285, 289, 299, 300, 310, 319, 321, 669,
	676, 656, 293, 614, 679, 586, 603, 690, 604, 607,
	645, 572, 626, 227, 601, 573, 0, 590, 563, 597,
	564, 587, 616, 161, 585, 658, 629, 678, 191, 641,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 677,
	622, 0, 685, 194, 0, 638, 314, 282, 212, 0,
	0, 618, 665, 624, 654, 613, 647, 579, 637, 680,
	602, 643, 681, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 640, 675, 599,
	642, 644, 561, 639, 0, 567, 574, 689, 671, 593,
	594, 595, 0, 0, 0, 0, 0, 0, 0, 617,
	625, 651, 610, 0, 0, 0, 0, 0, 0, 1983,
	0, 591, 0, 635, 0, 0, 0, 575, 568, 0,
	0, 615, 0, 0, 0, 578, 121, 592, 652, 0,
	559, 171, 213, 132, 655, 670, 612, 184, 320, 674,
	609, 608, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 600, 560, 659, 588, 598,
	153, 596, 259, 231, 309, 0, 632, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 611, 646, 589, 150,
	649, 636, 664, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 565, 0, 284, 312,
	326, 200, 139, 584, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 582, 583, 580, 0, 581,
	627, 628, 682, 683, 684, 653, 576, 0, 666, 667,
	0, 657, 672, 673, 648, 691, 605, 606, 566, 569,
	570, 571, 577, 619, 620, 631, 634, 662, 661, 660,
	663, 668, 687, 686, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 117, 128, 193,
	692, 251, 167, 313, 562, 159, 0, 0, 621, 623,
	633, 650, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 669, 676,
	656, 293, 614, 679, 586, 603, 690, 604, 607, 645,
	572, 626, 227, 601, 573, 0, 590, 563, 597, 564,
	587, 616, 161, 585, 658, 629, 678, 191, 641, 0,
	152, 199, 197, 0, 0, 0, 233, 291, 677, 622,
	0, 685, 194, 0, 638, 314, 282, 212, 0, 0,
	618, 665, 624, 654, 613, 647, 579, 637, 680, 602,
	643, 681, 0, 0, 0, 431, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 640, 675, 599, 642,
	644, 561, 639, 0, 567, 574, 689, 671, 593, 594,
	595, 0, 0, 0, 0, 0, 0, 0, 617, 625,
	651, 610, 0, 0, 0, 0, 0, 0, 1701, 0,
	591, 0, 635, 0, 0, 0, 575, 568, 0, 0,
	615, 0, 0, 0, 578, 121, 592, 652, 0, 559,
	171, 213, 132, 655, 670, 612, 184, 320, 674, 609,
	608, 247, 0, 287, 174, 192, 136, 118, 130, 146,
	173, 223, 256, 266, 600, 560, 659, 588, 598, 153,
	596, 259, 231, 309, 0, 632, 237, 258, 195, 298,
	249, 307, 308, 175, 292, 317, 322, 279, 162, 0,
	122, 0, 244, 157, 188, 611, 646, 589, 150, 649,
	636, 664, 278, 137, 294, 211, 217, 147, 149, 148,
	131, 273, 296, 141, 151, 283, 262, 288, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 290,
	306, 143, 270, 271, 323, 257, 125, 304, 286, 209,
	185, 186, 124, 0, 254, 160, 170, 155, 226, 0,
	169, 246, 301, 302, 154, 325, 133, 316, 127, 134,
	315, 220, 0, 219, 318, 297, 305, 210, 203, 0,
	126, 303, 208, 202, 190, 165, 177, 242, 198, 243,
	178, 215, 214, 216, 0, 565, 0, 284, 312, 326,
	200, 139, 584, 272, 295, 0, 0, 140, 168, 164,
	241, 218, 135, 180, 281, 189, 196, 253, 324, 230,
	260, 144, 311, 280, 582, 583, 580, 0, 581, 627,
	628, 682, 683, 684, 653, 576, 0, 666, 667, 0,
	657, 672, 673, 648, 691, 605, 606, 566, 569, 570,
	571, 577, 619, 620, 631, 634, 662, 661, 660, 663,
	668, 687, 686, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 117, 128, 193, 692,
	251, 167, 313, 562, 159, 0, 0, 621, 623, 633,
	650, 119, 120, 129, 138, 145, 158, 163, 166, 172,
	176, 179, 181, 182, 183, 187, 201, 204, 205, 206,
	207, 221, 222, 224, 225, 228, 229, 232, 234, 235,
	236, 238, 239, 240, 245, 248, 250, 252, 255, 261,
	263, 264, 265, 267, 268, 269, 274, 275, 276, 277,
	285, 289, 299, 300, 310, 319, 321, 669, 676, 656,
	293, 614, 679, 586, 603, 690, 604, 607, 645, 572,
	626, 227, 601, 573, 0, 590, 563, 597, 564, 587,
	616, 161, 585, 658, 629, 678, 191, 641, 0, 152,
	199, 197, 0, 0, 0, 233, 291, 677, 622, 0,
	685, 194, 0, 638, 314, 282, 212, 0, 0, 618,
	665, 624, 654, 613, 647, 579, 637, 680, 602, 643,
	681, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 640, 675, 599, 642, 644,
	561, 639, 0, 567, 574, 689, 671, 593, 594, 595,
	0, 0, 0, 0, 0, 0, 0, 617, 625, 651,
	610, 0, 0, 0, 0, 0, 0, 1693, 0, 591,
	0, 635, 0, 0, 0, 575, 568, 0, 0, 615,
	0, 0, 0, 578, 121, 592, 652, 0, 559, 171,
	213, 132, 655, 670, 612, 184, 320, 674, 609, 608,
	247, 0, 287, 174, 192, 136, 118, 130, 146, 173,
	223, 256, 266, 600, 560, 659, 588, 598, 153, 596,
	259, 231, 309, 0, 632, 237, 258, 195, 298, 249,
	307, 308, 175, 292, 317, 322, 279, 162, 0, 122,
	0, 244, 157, 188, 611, 646, 589, 150, 649, 636,
	664, 278, 137, 294, 211, 217, 147, 149, 148, 131,
	273, 296, 141, 151, 283, 262, 288, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 290, 306,
	143, 270, 271, 323, 257, 125, 304, 286, 209, 185,
	186, 124, 0, 254, 160, 170, 155, 226, 0, 169,
	246, 301, 302, 154, 325, 133, 316, 127, 134, 315,
	220, 0, 219, 318, 297, 305, 210, 203, 0, 126,
	303, 208, 202, 190, 165, 177, 242, 198, 243, 178,
	215, 214, 216, 0, 565, 0, 284, 312, 326, 200,
	139, 584, 272, 295, 0, 0, 140, 168, 164, 241,
	218, 135, 180, 281, 189, 196, 253, 324, 230, 260,
	144, 311, 280, 582, 583, 580, 0, 581, 627, 628,
	682, 683, 684, 653, 576, 0, 666, 667, 0, 657,
	672, 673, 648, 691, 605, 606, 566, 569, 570, 571,
	577, 619, 620, 631, 634, 662, 661, 660, 663, 668,
	687, 686, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 117, 128, 193, 692, 251,
	167, 313, 562, 159, 0, 0, 621, 623, 633, 650,
	119, 120, 129, 138, 145, 158, 163, 166, 172, 176,
	179, 181, 182, 183, 187, 201, 204, 205, 206, 207,
	221, 222, 224, 225, 228, 229, 232, 234, 235, 236,
	238, 239, 240, 245, 248, 250, 252, 255, 261, 263,
	264, 265, 267, 268, 269, 274, 275, 276, 277, 285,
	289, 299, 300, 310, 319, 321, 669, 676, 656, 293,
	614, 679, 586, 603, 690, 604, 607, 645, 572, 626,
	227, 601, 573, 0, 590, 563, 597, 564, 587, 616,
	161, 585, 658, 629, 678, 191, 641, 0, 152, 199,
	197, 0, 0, 0, 233, 291, 677, 622, 0, 685,
	194, 0, 638, 314, 282, 212, 0, 0, 618, 665,
	624, 654, 613, 647, 579, 637, 680, 602, 643, 681,
	77, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 640, 675, 599, 642, 644, 561,
	639, 0, 567, 574, 689, 671, 593, 594, 595, 0,
	0, 0, 0, 0, 0, 0, 617, 625, 651, 610,
	0, 0, 0, 0, 0, 0, 0, 0, 591, 0,
	635, 0, 0, 0, 575, 568, 0, 0, 615, 0,
	0, 0, 578, 121, 592, 652, 0, 559, 171, 213,
	132, 655, 670, 612, 184, 320, 674, 609, 608, 247,
	0, 287, 174, 192, 136, 118, 130, 146, 173, 223,
	256, 266, 600, 560, 659, 588, 598, 153, 596, 259,
	231, 309, 0, 632, 237, 258, 195, 298, 249, 307,
	308, 175, 292, 317, 322, 279, 162, 0, 122, 0,
	244, 157, 188, 611, 646, 589, 150, 649, 636, 664,
	278, 137, 294, 211, 217, 147, 149, 148, 131, 273,
	296, 141, 151, 283, 262, 288, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 290, 306, 143,
	270, 271, 323, 257, 125, 304, 286, 209, 185, 186,
	124, 0, 254, 160, 170, 155, 226, 0, 169, 246,
	301, 302, 154, 325, 133, 316, 127, 134, 315, 220,
	0, 219, 318, 297, 305, 210, 203, 0, 126, 303,
	208, 202, 190, 165, 177, 242, 198, 243, 178, 215,
	214, 216, 0, 565, 0, 284, 312, 326, 200, 139,
	584, 272, 295, 0, 0, 140, 168, 164, 241, 218,
	135, 180, 281, 189, 196, 253, 324, 230, 260, 144,
	311, 280, 582, 583, 580, 0, 581, 627, 628, 682,
	683, 684, 653, 576, 0, 666, 667, 0, 657, 672,
	673, 648, 691, 605, 606, 566, 569, 570, 571, 577,
	619, 620, 631, 634, 662, 661, 660, 663, 668, 687,
	686, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 630, 117, 128, 193, 692, 251, 167,
	313, 562, 159, 0, 0, 621, 623, 633, 650, 119,
	120, 129, 138, 145, 158, 163, 166, 172, 176, 179,
	181, 182, 183, 187, 201, 204, 205, 206, 207, 221,
	222, 224, 225, 228, 229, 232, 234, 235, 236, 238,
	239, 240, 245, 248, 250, 252, 255, 261, 263, 264,
	265, 267, 268, 269, 274, 275, 276, 277, 285, 289,
	299, 300, 310, 319, 321, 669, 676, 656, 293, 614,
	679, 586, 603, 690, 604, 607, 645, 572, 626, 227,
	601, 573, 0, 590, 563, 597, 564, 587, 616, 161,
	585, 658, 629, 678, 191, 641, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 677, 622, 0, 685, 194,
	0, 638, 314, 282, 212, 0, 0, 618, 665, 624,
	654, 613, 647, 579, 637, 680, 602, 643, 681, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 640, 675, 599, 642, 644, 561, 639,
	0, 567, 574, 689, 671, 593, 594, 595, 0, 0,
	0, 0, 0, 0, 0, 617, 625, 651, 610, 0,
	0, 0, 0, 0, 0, 1303, 0, 591, 0, 635,
	0, 0, 0, 575, 568, 0, 0, 615, 0, 0,
	0, 578, 121, 592, 652, 0, 559, 171, 213, 132,
	655, 670, 612, 184, 320, 674, 609, 608, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 600, 560, 659, 588, 598, 153, 596, 259, 231,
	309, 0, 632, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 611, 646, 589, 150, 649, 636, 664, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 565, 0, 284, 312, 326, 200, 139, 584,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 582, 583, 580, 0, 581, 627, 628, 682, 683,
	684, 653, 576, 0, 666, 667, 0, 657, 672, 673,
	648, 691, 605, 606, 566, 569, 570, 571, 577, 619,
	620, 631, 634, 662, 661, 660, 663, 668, 687, 686,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 117, 128, 193, 692, 251, 167, 313,
	562, 159, 0, 0, 621, 623, 633, 650, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 669, 676, 656, 293, 614, 679,
	586, 603, 690, 604, 607, 645, 572, 626, 227, 601,
	573, 0, 590, 563, 597, 564, 587, 616, 161, 585,
	658, 629, 678, 191, 641, 0, 152, 199, 197, 0,
	0, 0, 233, 291, 677, 622, 0, 685, 194, 0,
	638, 314, 282, 212, 0, 0, 618, 665, 624, 654,
	613, 647, 579, 637, 680, 602, 643, 681, 0, 0,
	0, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 640, 675, 599, 642, 644, 561, 639, 0,
	567, 574, 689, 671, 593, 594, 595, 0, 0, 0,
	0, 0, 0, 0, 617, 625, 651, 610, 0, 0,
	0, 0, 0, 0, 1167, 0, 591, 0, 635, 0,
	0, 0, 575, 568, 0, 0, 615, 0, 0, 0,
	578, 121, 592, 652, 0, 559, 171, 213, 132, 655,
	670, 612, 184, 320, 674, 609, 608, 247, 0, 287,
	174, 192, 136, 118, 130, 146, 173, 223, 256, 266,
	600, 560, 659, 588, 598, 153, 596, 259, 231, 309,
	0, 632, 237, 258, 195, 298, 249, 307, 308, 175,
	292, 317, 322, 279, 162, 0, 122, 0, 244, 157,
	188, 611, 646, 589, 150, 649, 636, 664, 278, 137,
	294, 211, 217, 147, 149, 148, 131, 273, 296, 141,
	151, 283, 262, 288, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 290, 306, 143, 270, 271,
	323, 257, 125, 304, 286, 209, 185, 186, 124, 0,
	254, 160, 170, 155, 226, 0, 169, 246, 301, 302,
	154, 325, 133, 316, 127, 134, 315, 220, 0, 219,
	318, 297, 305, 210, 203, 0, 126, 303, 208, 202,
	190, 165, 177, 242, 198, 243, 178, 215, 214, 216,
	0, 565, 0, 284, 312, 326, 200, 139, 584, 272,
	295, 0, 0, 140, 168, 164, 241, 218, 135, 180,
	281, 189, 196, 253, 324, 230, 260, 144, 311, 280,
	582, 583, 580, 0, 581, 627, 628, 682, 683, 684,
	653, 576, 0, 666, 667, 0, 657, 672, 673, 648,
	691, 605, 606, 566, 569, 570, 571, 577, 619, 620,
	631, 634, 662, 661, 660, 663, 668, 687, 686, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 630, 117, 128, 193, 692, 251, 167, 313, 562,
	159, 0, 0, 621, 623, 633, 650, 119, 120, 129,
	138, 145, 158, 163, 166, 172, 176, 179, 181, 182,
	183, 187, 201, 204, 205, 206, 207, 221, 222, 224,
	225, 228, 229, 232, 234, 235, 236, 238, 239, 240,
	245, 248, 250, 252, 255, 261, 263, 264, 265, 267,
	268, 269, 274, 275, 276, 277, 285, 289, 299, 300,
	310, 319, 321, 669, 676, 656, 293, 614, 679, 586,
	603, 690, 604, 607, 645, 572, 626, 227, 601, 573,
	0, 590, 563, 597, 564, 587, 616, 161, 585, 658,
	629, 678, 191, 641, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 677, 622, 0, 685, 194, 0, 638,
	314, 282, 212, 0, 0, 618, 665, 624, 654, 613,
	647, 579, 637, 680, 602, 643, 681, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 640, 675, 599, 642, 644, 561, 639, 0, 567,
	574, 689, 671, 593, 594, 595, 0, 0, 0, 0,
	0, 0, 0, 617, 625, 651, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 0, 635, 0, 0,
	0, 575, 568, 0, 0, 615, 0, 0, 0, 578,
	121, 592, 652, 0, 559, 171, 213, 132, 655, 670,
	612, 184, 320, 674, 609, 608, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 600,
	560, 659, 588, 598, 153, 596, 259, 231, 309, 0,
	632, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	611, 646, 589, 150, 649, 636, 664, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	565, 0, 284, 312, 326, 200, 139, 584, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 582,
	583, 580, 0, 581, 627, 628, 682, 683, 684, 653,
	576, 0, 666, 667, 0, 657, 672, 673, 648, 691,
	605, 606, 566, 569, 570, 571, 577, 619, 620, 631,
	634, 662, 661, 660, 663, 668, 687, 686, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 117, 128, 193, 692, 251, 167, 313, 562, 159,
	0, 0, 621, 623, 633, 650, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 669, 676, 656, 293, 614, 679, 586, 603,
	690, 604, 607, 645, 572, 626, 227, 601, 573, 0,
	590, 563, 597, 564, 587, 616, 161, 585, 658, 629,
	678, 191, 641, 0, 152, 199, 197, 0, 0, 0,
	233, 291, 677, 622, 0, 685, 194, 0, 638, 314,
	282, 212, 0, 0, 618, 665, 624, 654, 613, 647,
	579, 637, 680, 602, 643, 681, 0, 0, 0, 431,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	640, 675, 599, 642, 644, 561, 639, 0, 567, 574,
	689, 671, 593, 594, 595, 0, 0, 0, 0, 0,
	0, 0, 617, 625, 651, 610, 0, 0, 0, 0,
	0, 0, 0, 0, 591, 0, 635, 0, 0, 0,
	575, 568, 0, 0, 615, 0, 0, 0, 578, 121,
	592, 652, 0, 559, 171, 213, 132, 655, 670, 612,
	184, 320, 674, 609, 608, 247, 0, 287, 174, 192,
	136, 118, 130, 146, 173, 223, 256, 266, 600, 560,
	659, 588, 598, 153, 596, 259, 231, 309, 0, 632,
	237, 258, 195, 298, 249, 307, 308, 175, 292, 317,
	322, 279, 162, 0, 122, 0, 244, 157, 188, 611,
	646, 589, 150, 649, 636, 664, 278, 137, 294, 211,
	217, 147, 149, 148, 131, 273, 296, 141, 151, 283,
	262, 288, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 290, 306, 143, 270, 271, 323, 257,
	125, 304, 286, 209, 185, 186, 124, 0, 254, 160,
	170, 155, 226, 0, 169, 246, 301, 302, 154, 325,
	133, 316, 127, 134, 315, 220, 0, 219, 318, 297,
	305, 210, 203, 0, 126, 303, 208, 202, 190, 165,
	177, 242, 198, 243, 178, 215, 214, 216, 0, 565,
	0, 284, 312, 326, 200, 139, 584, 272, 295, 0,
	0, 140, 168, 164, 241, 218, 135, 180, 281, 189,
	196, 253, 324, 230, 260, 144, 311, 280, 582, 583,
	580, 0, 581, 627, 628, 682, 683, 684, 653, 576,
	0, 666, 667, 0, 657, 672, 673, 648, 691, 605,
	606, 566, 569, 570, 571, 577, 619, 620, 631, 634,
	662, 661, 660, 663, 668, 687, 686, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 630,
	117, 128, 193, 692, 251, 167, 313, 562, 159, 0,
	0, 621, 623, 633, 650, 119, 120, 129, 138, 145,
	158, 163, 166, 172, 176, 179, 181, 182, 183, 187,
	201, 204, 205, 206, 207, 221, 222, 224, 225, 228,
	229, 232, 234, 235, 236, 238, 239, 240, 245, 248,
	250, 252, 255, 261, 263, 264, 265, 267, 268, 269,
	274, 275, 276, 277, 285, 289, 299, 300, 310, 319,
	321, 669, 676, 656, 293, 614, 679, 586, 603, 690,
	604, 607, 645, 572, 626, 227, 601, 573, 0, 590,
	563, 597, 564, 587, 616, 161, 585, 658, 629, 678,
	191, 641, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 1333, 1337, 0, 685, 194, 0, 638, 314, 282,
	212, 0, 0, 618, 665, 624, 654, 613, 647, 579,
	637, 680, 602, 643, 681, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 640,
	675, 599, 642, 644, 561, 639, 0, 567, 574, 689,
	671, 593, 594, 595, 0, 0, 0, 0, 0, 0,
	0, 617, 625, 651, 610, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 635, 0, 0, 0, 575,
	568, 0, 0, 615, 0, 0, 0, 578, 121, 592,
	652, 0, 559, 171, 213, 132, 655, 670, 1336, 184,
	320, 674, 609, 608, 1331, 0, 1332, 174, 192, 556,
	118, 130, 1329, 1335, 223, 256, 266, 600, 560, 659,
	588, 598, 153, 596, 259, 231, 309, 0, 632, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 611, 646,
	589, 150, 649, 636, 664, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 565, 0,
	284, 312, 326, 200, 139, 584, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 582, 583, 580,
	0, 581, 627, 628, 682, 683, 684, 653, 576, 0,
	666, 667, 0, 657, 672, 673, 648, 691, 605, 606,
	566, 569, 570, 571, 577, 619, 620, 631, 634, 662,
	661, 660, 663, 668, 687, 686, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 117,
	128, 193, 692, 251, 167, 313, 562, 159, 0, 0,
	621, 623, 633, 650, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	669, 676, 656, 293, 614, 679, 586, 603, 690, 604,
	607, 645, 572, 626, 227, 601, 573, 0, 590, 563,
	597, 564, 587, 616, 161, 585, 658, 629, 678, 191,
	641, 0, 152, 199, 197, 0, 0, 0, 233, 291,
	677, 622, 0, 685, 194, 0, 638, 314, 282, 212,
	0, 0, 618, 665, 624, 654, 613, 647, 579, 637,
	680, 602, 643, 681, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 640, 675,
	599, 642, 644, 561, 639, 0, 567, 574, 689, 671,
	593, 594, 595, 0, 0, 0, 0, 0, 0, 0,
	617, 625, 651, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 635, 0, 0, 0, 575, 568,
	0, 0, 615, 0, 0, 0, 578, 121, 592, 652,
	0, 559, 171, 213, 132, 655, 670, 612, 184, 320,
	674, 609, 608, 247, 0, 287, 174, 192, 136, 118,
	130, 146, 173, 223, 256, 266, 600, 560, 659, 588,
	598, 153, 596, 259, 231, 309, 0, 632, 237, 258,
	195, 298, 249, 307, 308, 175, 292, 317, 322, 279,
	162, 0, 122, 0, 244, 157, 188, 611, 646, 589,
	150, 649, 636, 664, 278, 137, 294, 211, 217, 147,
	149, 148, 131, 273, 296, 141, 151, 283, 262, 288,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 290, 306, 143, 270, 271, 323, 257, 125, 304,
	286, 209, 185, 186, 124, 0, 254, 160, 170, 155,
	226, 0, 169, 246, 301, 302, 154, 325, 133, 316,
	127, 134, 315, 220, 0, 219, 318, 297, 305, 210,
	203, 0, 126, 303, 208, 202, 190, 165, 177, 242,
	198, 243, 178, 215, 214, 216, 0, 565, 0, 284,
	312, 326, 200, 139, 584, 272, 295, 0, 0, 140,
	168, 164, 241, 218, 135, 180, 281, 189, 196, 253,
	324, 230, 260, 144, 311, 280, 582, 583, 580, 0,
	581, 627, 628, 682, 683, 684, 653, 576, 0, 666,
	667, 0, 657, 672, 673, 648, 691, 605, 606, 566,
	569, 570, 571, 577, 619, 620, 631, 634, 662, 661,
	660, 663, 668, 687, 686, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 630, 117, 128,
	193, 692, 251, 167, 313, 562, 159, 0, 0, 621,
	623, 633, 650, 119, 120, 129, 138, 145, 158, 163,
	166, 172, 176, 179, 181, 182, 183, 187, 201, 204,
	205, 206, 207, 221, 222, 224, 225, 228, 229, 232,
	234, 235, 236, 238, 239, 240, 245, 248, 250, 252,
	255, 261, 263, 264, 265, 267, 268, 269, 274, 275,
	276, 277, 285, 289, 299, 300, 310, 319, 321, 669,
	676, 656, 293, 614, 679, 586, 603, 690, 604, 607,
	645, 572, 626, 227, 601, 573, 0, 590, 563, 597,
	564, 587, 616, 161, 585, 658, 629, 678, 191, 641,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 677,
	622, 0, 685, 194, 0, 638, 314, 282, 212, 0,
	0, 618, 665, 624, 654, 613, 647, 579, 637, 680,
	602, 643, 681, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 640, 675, 599,
	642, 644, 561, 639, 0, 567, 574, 689, 671, 593,
	594, 595, 0, 0, 0, 0, 0, 0, 0, 617,
	625, 651, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 0, 635, 0, 0, 0, 575, 568, 0,
	0, 615, 0, 0, 0, 578, 121, 592, 652, 0,
	559, 171, 213, 132, 655, 670, 612, 184, 320, 674,
	609, 608, 247, 0, 287, 174, 192, 556, 118, 130,
	552, 173, 223, 256, 266, 600, 560, 659, 588, 598,
	153, 596, 259, 231, 309, 0, 632, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 611, 646, 589, 150,
	649, 636, 664, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 565, 0, 284, 312,
	326, 200, 139, 584, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 582, 583, 580, 0, 581,
	627, 628, 682, 683, 684, 653, 576, 0, 666, 667,
	0, 657, 672, 673, 648, 691, 605, 606, 566, 569,
	570, 571, 577, 619, 620, 631, 634, 662, 661, 660,
	663, 668, 687, 686, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 117, 128, 193,
	692, 251, 167, 313, 562, 159, 0, 0, 621, 623,
	633, 650, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 669, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 433, 0, 0, 0,
	161, 430, 0, 0, 0, 191, 0, 0, 152, 199,
	197, 0, 0, 0, 233, 291, 0, 0, 0, 477,
	194, 0, 0, 314, 282, 212, 0, 0, 0, 0,
	466, 467, 0, 0, 0, 0, 0, 0, 1313, 0,
	77, 0, 0, 431, 454, 453, 456, 457, 458, 459,
	0, 0, 142, 455, 460, 461, 462, 1314, 0, 0,
	428, 445, 0, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	491, 0, 444, 0, 0, 439, 440, 441, 446, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 171, 213,
	132, 468, 0, 0, 184, 320, 0, 0, 489, 247,
	0, 287, 174, 192, 136, 118, 130, 146, 173, 223,
	256, 266, 474, 0, 0, 0, 0, 153, 0, 259,
	231, 309, 0, 0, 237, 258, 195, 298, 249, 307,
	308, 175, 292, 317, 322, 279, 162, 0, 122, 0,
	244, 157, 188, 0, 0, 0, 150, 0, 0, 0,
	278, 137, 294, 211, 217, 147, 149, 148, 131, 273,
	296, 141, 151, 283, 262, 288, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 290, 306, 143,
	270, 271, 323, 257, 125, 304, 286, 209, 185, 186,
	124, 0, 254, 160, 170, 155, 226, 0, 169, 246,
	301, 302, 154, 325, 133, 316, 127, 134, 315, 220,
	0, 219, 318, 297, 305, 210, 203, 0, 126, 303,
	208, 202, 190, 165, 177, 242, 198, 243, 178, 215,
	214, 216, 0, 0, 0, 284, 312, 326, 200, 139,
	0, 272, 295, 0, 0, 140, 168, 164, 241, 218,
	135, 180, 281, 189, 196, 253, 324, 230, 260, 144,
	311, 280, 478, 490, 484, 486, 485, 482, 483, 481,
	480, 479, 492, 469, 470, 471, 472, 475, 0, 487,
	488, 0, 0, 0, 0, 505, 506, 507, 508, 509,
	510, 511, 504, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 493, 494, 495, 496, 497, 498, 499, 500,
	503, 501, 502, 473, 117, 128, 193, 0, 251, 167,
	313, 0, 159, 0, 0, 0, 0, 0, 0, 119,
	120, 129, 138, 145, 158, 163, 166, 172, 176, 179,
	181, 182, 183, 187, 201, 204, 205, 206, 207, 221,
	222, 224, 225, 228, 229, 232, 234, 235, 236, 238,
	239, 240, 245, 248, 250, 252, 255, 261, 263, 264,
	265, 267, 268, 269, 274, 275, 276, 277, 285, 289,
	299, 300, 310, 319, 321, 32, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 161, 430, 0,
	0, 0, 191, 0, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 0, 0, 0, 477, 194, 0, 0,
	314, 282, 212, 0, 0, 0, 0, 466, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	431, 454, 453, 456, 457, 458, 459, 0, 0, 142,
	455, 460, 461, 462, 0, 0, 0, 428, 445, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 491, 0, 444,
	0, 0, 439, 440, 441, 446, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 171, 213, 132, 468, 0,
	0, 184, 320, 0, 0, 489, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 474,
	0, 0, 0, 0, 153, 0, 259, 231, 309, 0,
	0, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	0, 0, 0, 150, 0, 0, 0, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	0, 0, 284, 312, 326, 200, 139, 0, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 478,
	490, 484, 486, 485, 482, 483, 481, 480, 479, 492,
	469, 470, 471, 472, 475, 0, 487, 488, 0, 0,
	0, 0, 505, 506, 507, 508, 509, 510, 511, 504,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 493,
	494, 495, 496, 497, 498, 499, 500, 503, 501, 502,
	473, 117, 128, 193, 75, 251, 167, 313, 0, 159,
	0, 0, 0, 0, 0, 0, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 433,
	0, 0, 0, 161, 430, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 477, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 466, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 431, 454, 453, 456,
	457, 458, 459, 0, 0, 142, 455, 460, 461, 462,
	0, 0, 0, 428, 445, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 424,
	0, 0, 0, 491, 0, 444, 0, 0, 439, 440,
	441, 446, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 468, 0, 0, 184, 320, 0,
	0, 489, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 474, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 200, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 478, 490, 484, 486, 485,
	482, 483, 481, 480, 479, 492, 469, 470, 471, 472,
	475, 0, 487, 488, 0, 0, 0, 0, 505, 506,
	507, 508, 509, 510, 511, 504, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 493, 494, 495, 496, 497,
	498, 499, 500, 503, 501, 502, 473, 117, 128, 193,
	0, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 433, 0, 0, 0, 161,
	430, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 477, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 466,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 803, 431, 454, 453, 456, 457, 458, 459, 0,
	0, 142, 455, 460, 461, 462, 0, 0, 0, 428,
	445, 0, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 491,
	0, 444, 0, 0, 439, 440, 441, 446, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	468, 0, 0, 184, 320, 0, 0, 489, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 474, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 478, 490, 484, 486, 485, 482, 483, 481, 480,
	479, 492, 469, 470, 471, 472, 475, 0, 487, 488,
	0, 0, 0, 0, 505, 506, 507, 508, 509, 510,
	511, 504, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 493, 494, 495, 496, 497, 498, 499, 500, 503,
	501, 502, 473, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 433, 0, 0, 0, 161, 430, 0, 0, 0,
	191, 0, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 0, 0, 0, 477, 194, 0, 0, 314, 282,
	212, 0, 0, 0, 0, 466, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 431, 454,
	453, 456, 457, 458, 459, 0, 0, 142, 455, 460,
	461, 462, 0, 0, 0, 428, 445, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	443, 1209, 0, 0, 0, 491, 0, 444, 0, 0,
	439, 440, 441, 446, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 171, 213, 132, 468, 0, 0, 184,
	320, 0, 0, 489, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 474, 0, 0,
	0, 0, 153, 0, 259, 231, 309, 0, 0, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 0, 0,
	0, 150, 0, 0, 0, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 0, 0,
	284, 312, 326, 200, 139, 0, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 478, 490, 484,
	486, 485, 482, 483, 481, 480, 479, 492, 469, 470,
	471, 472, 475, 0, 487, 488, 0, 0, 0, 0,
	505, 506, 507, 508, 509, 510, 511, 504, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 493, 494, 495,
	496, 497, 498, 499, 500, 503, 501, 502, 473, 117,
	128, 193, 0, 251, 167, 313, 0, 159, 0, 0,
	0, 0, 0, 0, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 433, 0, 0,
	0, 161, 430, 0, 0, 0, 191, 0, 0, 152,
	199, 197, 0, 0, 0, 233, 291, 0, 0, 0,
	477, 194, 0, 0, 314, 282, 212, 0, 0, 0,
	0, 466, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 431, 454, 1220, 456, 457, 458,
	459, 0, 0, 142, 455, 460, 461, 462, 0, 0,
	0, 428, 445, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 443, 1209, 0, 0,
	0, 491, 0, 444, 0, 0, 439, 440, 441, 446,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 171,
	213, 132, 468, 0, 0, 184, 320, 0, 0, 489,
	247, 0, 287, 174, 192, 136, 118, 130, 146, 173,
	223, 256, 266, 474, 0, 0, 0, 0, 153, 0,
	259, 231, 309, 0, 0, 237, 258, 195, 298, 249,
	307, 308, 175, 292, 317, 322, 279, 162, 0, 122,
	0, 244, 157, 188, 0, 0, 0, 150, 0, 0,
	0, 278, 137, 294, 211, 217, 147, 149, 148, 131,
	273, 296, 141, 151, 283, 262, 288, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 290, 306,
	143, 270, 271, 323, 257, 125, 304, 286, 209, 185,
	186, 124, 0, 254, 160, 170, 155, 226, 0, 169,
	246, 301, 302, 154, 325, 133, 316, 127, 134, 315,
	220, 0, 219, 318, 297, 305, 210, 203, 0, 126,
	303, 208, 202, 190, 165, 177, 242, 198, 243, 178,
	215, 214, 216, 0, 0, 0, 284, 312, 326, 200,
	139, 0, 272, 295, 0, 0, 140, 168, 164, 241,
	218, 135, 180, 281, 189, 196, 253, 324, 230, 260,
	144, 311, 280, 478, 490, 484, 486, 485, 482, 483,
	481, 480, 479, 492, 469, 470, 471, 472, 475, 0,
	487, 488, 0, 0, 0, 0, 505, 506, 507, 508,
	509, 510, 511, 504, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 493, 494, 495, 496, 497, 498, 499,
	500, 503, 501, 502, 473, 117, 128, 193, 0, 251,
	167, 313, 0, 159, 0, 0, 0, 0, 0, 0,
	119, 120, 129, 138, 145, 158, 163, 166, 172, 176,
	179, 181, 182, 183, 187, 201, 204, 205, 206, 207,
	221, 222, 224, 225, 228, 229, 232, 234, 235, 236,
	238, 239, 240, 245, 248, 250, 252, 255, 261, 263,
	264, 265, 267, 268, 269, 274, 275, 276, 277, 285,
	289, 299, 300, 310, 319, 321, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 161, 430, 0,
	0, 0, 191, 0, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 0, 0, 0, 477, 194, 0, 0,
	314, 282, 212, 0, 0, 0, 0, 466, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	431, 454, 1217, 456, 457, 458, 459, 0, 0, 142,
	455, 460, 461, 462, 0, 0, 0, 428, 445, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 443, 1209, 0, 0, 0, 491, 0, 444,
	0, 0, 439, 440, 441, 446, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 171, 213, 132, 468, 0,
	0, 184, 320, 0, 0, 489, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 474,
	0, 0, 0, 0, 153, 0, 259, 231, 309, 0,
	0, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	0, 0, 0, 150, 0, 0, 0, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	0, 0, 284, 312, 326, 200, 139, 0, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 478,
	490, 484, 486, 485, 482, 483, 481, 480, 479, 492,
	469, 470, 471, 472, 475, 0, 487, 488, 0, 0,
	0, 0, 505, 506, 507, 508, 509, 510, 511, 504,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 493,
	494, 495, 496, 497, 498, 499, 500, 503, 501, 502,
	473, 117, 128, 193, 0, 251, 167, 313, 0, 159,
	0, 0, 0, 0, 0, 0, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 433,
	0, 0, 0, 161, 430, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 477, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 466, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 1128, 431, 454, 453, 456,
	457, 458, 459, 0, 0, 142, 455, 460, 461, 462,
	0, 0, 0, 428, 445, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 491, 0, 444, 0, 0, 439, 440,
	441, 446, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 468, 0, 0, 184, 320, 0,
	0, 489, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 474, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 200, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 478, 490, 484, 486, 485,
	482, 483, 481, 480, 479, 492, 469, 470, 471, 472,
	475, 0, 487, 488, 0, 0, 0, 0, 505, 506,
	507, 508, 509, 510, 511, 504, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 493, 494, 495, 496, 497,
	498, 499, 500, 503, 501, 502, 473, 117, 128, 193,
	0, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 433, 0, 0, 0, 161,
	430, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 477, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 466,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 431, 454, 453, 456, 457, 458, 459, 0,
	0, 142, 455, 460, 461, 462, 0, 0, 0, 428,
	445, 0, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 443, 0, 0, 0, 0, 491,
	0, 444, 0, 0, 439, 440, 441, 446, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	468, 0, 0, 184, 320, 0, 0, 489, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 474, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 478, 490, 484, 486, 485, 482, 483, 481, 480,
	479, 492, 469, 470, 471, 472, 475, 0, 487, 488,
	0, 0, 0, 0, 505, 506, 507, 508, 509, 510,
	511, 504, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 493, 494, 495, 496, 497, 498, 499, 500, 503,
	501, 502, 473, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 433, 0, 0, 0, 161, 430, 0, 0, 0,
	191, 0, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 0, 0, 0, 477, 194, 0, 0, 314, 282,
	212, 0, 0, 0, 0, 466, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 431, 454,
	453, 456, 457, 458, 459, 0, 0, 142, 455, 460,
	461, 462, 0, 0, 0, 428, 445, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 491, 0, 444, 0, 0,
	439, 440, 441, 446, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 171, 213, 132, 468, 0, 0, 184,
	320, 0, 0, 489, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 474, 0, 0,
	0, 0, 153, 0, 259, 231, 309, 0, 0, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 0, 0,
	0, 150, 0, 0, 0, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 0, 0,
	284, 312, 326, 200, 139, 0, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 478, 490, 484,
	486, 485, 482, 483, 481, 480, 479, 492, 469, 470,
	471, 472, 475, 0, 487, 488, 0, 0, 0, 0,
	813, 814, 815, 816, 817, 821, 822, 826, 827, 835,
	834, 833, 836, 837, 839, 838, 840, 818, 819, 820,
	823, 824, 825, 828, 829, 832, 830, 831, 473, 117,
	128, 193, 0, 251, 167, 313, 0, 159, 0, 0,
	0, 0, 0, 0, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 191, 0, 0, 152,
	199, 197, 0, 0, 0, 233, 291, 0, 0, 0,
	477, 194, 0, 0, 314, 282, 212, 0, 0, 0,
	0, 466, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 431, 454, 453, 456, 457, 458,
	459, 0, 0, 142, 455, 460, 461, 462, 0, 0,
	0, 0, 445, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 491, 0, 444, 0, 0, 439, 440, 441, 446,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 171,
	213, 132, 468, 0, 0, 184, 320, 0, 0, 489,
	247, 0, 287, 174, 192, 136, 118, 130, 146, 173,
	223, 256, 266, 474, 0, 0, 0, 0, 153, 0,
	259, 231, 309, 0, 2294, 237, 258, 195, 298, 249,
	307, 308, 175, 292, 317, 322, 279, 162, 0, 122,
	0, 244, 157, 188, 0, 0, 0, 150, 0, 0,
	0, 278, 137, 294, 211, 217, 147, 149, 148, 131,
	273, 296, 141, 151, 283, 262, 288, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 290, 306,
	143, 270, 271, 323, 257, 125, 304, 286, 209, 185,
	186, 124, 0, 254, 160, 170, 155, 226, 0, 169,
	246, 301, 302, 154, 325, 133, 316, 127, 134, 315,
	220, 0, 219, 318, 297, 305, 210, 203, 0, 126,
	303, 208, 202, 190, 165, 177, 242, 198, 243, 178,
	215, 214, 216, 0, 0, 0, 284, 312, 326, 200,
	139, 0, 272, 295, 0, 0, 140, 168, 164, 241,
	218, 135, 180, 281, 189, 196, 253, 324, 230, 260,
	144, 311, 280, 478, 490, 484, 486, 485, 482, 483,
	481, 480, 479, 492, 469, 470, 471, 472, 475, 0,
	487, 488, 0, 0, 0, 0, 505, 506, 507, 508,
	509, 510, 511, 504, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 493, 494, 495, 496, 497, 498, 499,
	500, 503, 501, 502, 473, 117, 128, 193, 0, 251,
	167, 313, 0, 159, 0, 0, 0, 0, 0, 0,
	119, 120, 129, 138, 145, 158, 163, 166, 172, 176,
	179, 181, 182, 183, 187, 201, 204, 205, 206, 207,
	221, 222, 224, 225, 228, 229, 232, 234, 235, 236,
	238, 239, 240, 245, 248, 250, 252, 255, 261, 263,
	264, 265, 267, 268, 269, 274, 275, 276, 277, 285,
	289, 299, 300, 310, 319, 321, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 191, 0, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 0, 0, 0, 477, 194, 0, 0,
	314, 282, 212, 0, 0, 0, 0, 466, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 803,
	431, 454, 453, 456, 457, 458, 459, 0, 0, 142,
	455, 460, 461, 462, 0, 0, 0, 0, 445, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 443, 0, 0, 0, 0, 491, 0, 444,
	0, 0, 439, 440, 441, 446, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 171, 213, 132, 468, 0,
	0, 184, 320, 0, 0, 489, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 474,
	0, 0, 0, 0, 153, 0, 259, 231, 309, 0,
	0, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	0, 0, 0, 150, 0, 0, 0, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	0, 0, 284, 312, 326, 200, 139, 0, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 478,
	490, 484, 486, 485, 482, 483, 481, 480, 479, 492,
	469, 470, 471, 472, 475, 0, 487, 488, 0, 0,
	0, 0, 505, 506, 507, 508, 509, 510, 511, 504,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 493,
	494, 495, 496, 497, 498, 499, 500, 503, 501, 502,
	473, 117, 128, 193, 0, 251, 167, 313, 0, 159,
	0, 0, 0, 0, 0, 0, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 477, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 466, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 431, 454, 453, 456,
	457, 458, 459, 0, 0, 142, 455, 460, 461, 462,
	0, 0, 0, 0, 445, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 491, 0, 444, 0, 0, 439, 440,
	441, 446, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 468, 0, 0, 184, 320, 0,
	0, 489, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 474, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 200, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 478, 490, 484, 486, 485,
	482, 483, 481, 480, 479, 492, 469, 470, 471, 472,
	475, 0, 487, 488, 0, 0, 0, 0, 505, 506,
	507, 508, 509, 510, 511, 504, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 493, 494, 495, 496, 497,
	498, 499, 500, 503, 501, 502, 473, 117, 128, 193,
	0, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 0, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 1295, 0, 0, 0,
	0, 0, 115, 0, 386, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	0, 0, 0, 184, 320, 0, 1294, 0, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 0, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 389, 390, 391, 395,
	396, 400, 401, 409, 408, 407, 410, 411, 413, 412,
	414, 392, 393, 394, 397, 398, 399, 402, 403, 406,
	404, 405, 0, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	191, 0, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 0, 0, 0, 0, 194, 0, 0, 314, 282,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 1295, 0, 0, 0, 0, 0, 115, 0,
	386, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 171, 213, 132, 0, 0, 0, 184,
	320, 0, 1294, 0, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 0, 0, 0,
	0, 0, 153, 0, 259, 231, 309, 0, 0, 1289,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 0, 0,
	0, 150, 0, 0, 0, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 0, 0,
	284, 312, 326, 200, 139, 0, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 389, 390, 391, 395, 396, 400, 401, 409,
	408, 407, 410, 411, 413, 412, 414, 392, 393, 394,
	397, 398, 399, 402, 403, 406, 404, 405, 0, 117,
	128, 193, 0, 251, 167, 313, 0, 159, 0, 0,
	0, 0, 0, 0, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 191, 1551, 0, 152,
	199, 197, 0, 0, 0, 233, 291, 0, 0, 0,
	0, 194, 0, 0, 314, 282, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 386, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 171,
	213, 132, 0, 0, 0, 184, 320, 0, 0, 0,
	247, 0, 287, 174, 192, 136, 118, 130, 146, 173,
	223, 256, 266, 0, 0, 0, 0, 0, 153, 0,
	259, 231, 309, 0, 0, 237, 258, 195, 298, 249,
	307, 308, 175, 292, 317, 322, 279, 162, 0, 122,
	0, 244, 157, 188, 0, 0, 0, 150, 0, 0,
	0, 278, 137, 294, 211, 217, 147, 149, 148, 131,
	273, 296, 141, 151, 283, 262, 288, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 290, 306,
	143, 270, 271, 323, 257, 125, 304, 286, 209, 185,
	186, 124, 0, 254, 160, 170, 155, 226, 0, 169,
	246, 301, 302, 154, 325, 133, 316, 127, 134, 315,
	220, 0, 219, 318, 297, 305, 210, 203, 0, 126,
	303, 208, 202, 190, 165, 177, 242, 198, 243, 178,
	215, 214, 216, 0, 0, 0, 284, 312, 326, 200,
	139, 0, 272, 295, 0, 0, 140, 168, 164, 241,
	218, 135, 180, 281, 189, 196, 253, 324, 230, 260,
	144, 311, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 390,
	391, 395, 396, 400, 401, 409, 408, 407, 410, 411,
	413, 412, 414, 392, 393, 394, 397, 398, 399, 402,
	403, 406, 404, 405, 0, 117, 128, 193, 0, 251,
	167, 313, 0, 159, 0, 0, 0, 0, 0, 0,
	119, 120, 129, 138, 145, 158, 163, 166, 172, 176,
	179, 181, 182, 183, 187, 201, 204, 205, 206, 207,
	221, 222, 224, 225, 228, 229, 232, 234, 235, 236,
	238, 239, 240, 245, 248, 250, 252, 255, 261, 263,
	264, 265, 267, 268, 269, 274, 275, 276, 277, 285,
	289, 299, 300, 310, 319, 321, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 191, 0, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 0, 0, 0, 0, 194, 0, 0,
	314, 282, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 386, 0, 0, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 171, 213, 132, 0, 0,
	0, 184, 320, 0, 0, 0, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 0,
	0, 0, 0, 0, 153, 0, 259, 231, 309, 0,
	0, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	0, 0, 0, 150, 0, 0, 0, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	0, 0, 284, 312, 326, 200, 139, 0, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 389, 390, 391, 395, 396, 400,
	401, 409, 408, 407, 410, 411, 413, 412, 414, 392,
	393, 394, 397, 398, 399, 402, 403, 406, 404, 405,
	0, 117, 128, 193, 0, 251, 167, 313, 0, 159,
	0, 0, 0, 0, 0, 0, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 0, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 853, 0, 856, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 0, 0, 0, 184, 320, 0,
	0, 0, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 0, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 200, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	389, 390, 391, 395, 396, 400, 401, 409, 408, 407,
	410, 411, 413, 412, 414, 392, 393, 394, 397, 398,
	399, 402, 403, 406, 404, 405, 0, 117, 128, 193,
	0, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 0, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 866,
	865, 875, 876, 868, 869, 870, 871, 872, 873, 874,
	867, 0, 0, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	0, 0, 0, 184, 320, 0, 0, 0, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 0, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 32, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 191, 0, 0, 152, 199, 197, 0, 0, 0,
	233, 291, 0, 0, 0, 1286, 194, 0, 0, 314,
	282, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 171, 213, 132, 0, 0, 0,
	184, 320, 0, 0, 0, 247, 0, 287, 174, 192,
	136, 118, 130, 146, 173, 223, 256, 266, 0, 0,
	0, 0, 0, 153, 0, 259, 231, 309, 0, 0,
	237, 258, 195, 298, 249, 307, 308, 175, 292, 317,
	322, 279, 162, 0, 122, 0, 244, 157, 188, 0,
	0, 0, 150, 0, 0, 0, 278, 137, 294, 211,
	217, 147, 149, 148, 131, 273, 296, 141, 151, 283,
	262, 288, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 290, 306, 143, 270, 271, 323, 257,
	125, 304, 286, 209, 185, 186, 124, 0, 254, 160,
	170, 155, 226, 0, 169, 246, 301, 302, 154, 325,
	133, 316, 127, 134, 315, 220, 0, 219, 318, 297,
	305, 210, 203, 0, 126, 303, 208, 202, 190, 165,
	177, 242, 198, 243, 178, 215, 214, 216, 0, 0,
	0, 284, 312, 326, 200, 139, 0, 272, 295, 0,
	0, 140, 168, 164, 241, 218, 135, 180, 281, 189,
	196, 253, 324, 230, 260, 144, 311, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 128, 193, 75, 251, 167, 313, 0, 159, 0,
	0, 0, 0, 0, 0, 119, 120, 129, 138, 145,
	158, 163, 166, 172, 176, 179, 181, 182, 183, 187,
	201, 204, 205, 206, 207, 221, 222, 224, 225, 228,
	229, 232, 234, 235, 236, 238, 239, 240, 245, 248,
	250, 252, 255, 261, 263, 264, 265, 267, 268, 269,
	274, 275, 276, 277, 285, 289, 299, 300, 310, 319,
	321, 32, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 0, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 0, 0, 0, 184, 320, 0,
	0, 0, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 0, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 200, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 128, 193,
	75, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	1000, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 0, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 557, 0, 999, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	0, 0, 0, 184, 320, 0, 0, 0, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 0, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	191, 0, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 0, 0, 0, 0, 194, 0, 0, 314, 282,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 171, 213, 132, 0, 0, 0, 184,
	320, 0, 0, 0, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 0, 0, 0,
	0, 0, 153, 0, 259, 231, 309, 0, 0, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 0, 0,
	0, 150, 0, 0, 0, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 0, 0,
	284, 312, 326, 200, 139, 0, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	128, 193, 0, 251, 167, 313, 0, 159, 0, 0,
	0, 0, 0, 0, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 191, 0, 0, 152,
	199, 197, 0, 0, 0, 233, 291, 0, 0, 0,
	0, 194, 0, 0, 314, 282, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 171,
	213, 132, 0, 0, 0, 184, 320, 0, 0, 0,
	247, 0, 287, 174, 192, 136, 118, 130, 146, 173,
	223, 256, 266, 0, 0, 0, 0, 0, 153, 0,
	259, 231, 309, 0, 0, 237, 258, 195, 298, 249,
	307, 308, 175, 292, 317, 322, 279, 162, 0, 122,
	0, 244, 157, 188, 0, 0, 0, 150, 0, 0,
	0, 278, 137, 294, 211, 217, 147, 149, 148, 131,
	273, 296, 141, 151, 283, 262, 288, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 290, 306,
	143, 270, 271, 323, 257, 125, 304, 286, 209, 185,
	186, 124, 0, 254, 160, 170, 155, 226, 0, 169,
	246, 301, 302, 154, 325, 133, 316, 127, 134, 315,
	220, 0, 219, 318, 297, 305, 210, 203, 0, 126,
	303, 208, 202, 190, 165, 177, 242, 198, 243, 178,
	215, 214, 216, 0, 0, 0, 284, 312, 326, 200,
	139, 0, 272, 295, 0, 0, 140, 168, 164, 241,
	218, 135, 180, 281, 189, 196, 253, 324, 230, 260,
	144, 311, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 128, 193, 0, 251,
	167, 313, 0, 159, 0, 0, 0, 0, 0, 0,
	119, 120, 129, 138, 145, 158, 163, 166, 172, 176,
	179, 181, 182, 183, 187, 201, 204, 205, 206, 207,
	221, 222, 224, 225, 228, 229, 232, 234, 235, 236,
	238, 239, 240, 245, 248, 250, 252, 255, 261, 263,
	264, 265, 267, 268, 269, 274, 275, 276, 277, 285,
	289, 299, 300, 310, 319, 321, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 161, 0, 0,
	0, 0, 191, 0, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 0, 0, 0, 0, 194, 0, 0,
	314, 282, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 171, 213, 132, 0, 0,
	0, 184, 320, 0, 0, 0, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 0,
	0, 0, 0, 0, 153, 0, 259, 231, 309, 0,
	0, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	0, 0, 0, 150, 0, 0, 0, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	0, 0, 284, 312, 326, 200, 139, 0, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 128, 193, 0, 251, 167, 313, 0, 159,
	0, 0, 0, 0, 0, 0, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 293, 0, 0, 0, 523, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 0, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 0, 0, 0, 184, 320, 0,
	0, 0, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 0, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	134, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 200, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 218, 135, 180, 281, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 128, 193,
	0, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 239, 240, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 0, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	0, 112, 0, 184, 320, 0, 0, 0, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 0, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 306, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	191, 0, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 0, 0, 0, 0, 194, 0, 0, 314, 282,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 171, 213, 132, 0, 0, 0, 184,
	320, 0, 0, 0, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 0, 0, 0,
	0, 0, 153, 0, 259, 231, 309, 0, 0, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 0, 0,
	0, 150, 0, 0, 0, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 306, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 134, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 0, 0,
	284, 312, 326, 200, 139, 0, 272, 295, 0, 0,
	140, 168, 164, 241, 218, 135, 180, 281, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	128, 193, 0, 251, 167, 313, 0, 159, 0, 0,
	0, 0, 0, 0, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 239, 240, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 191, 0, 0, 152,
	199, 197, 0, 0, 0, 233, 291, 0, 0, 0,
	0, 194, 0, 0, 314, 282, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 171,
	213, 132, 0, 0, 0, 184, 320, 0, 0, 0,
	247, 0, 287, 174, 192, 136, 118, 130, 146, 173,
	223, 256, 266, 0, 0, 0, 0, 0, 153, 0,
	259, 231, 309, 0, 0, 237, 258, 195, 298, 249,
	307, 308, 175, 292, 317, 322, 279, 162, 0, 122,
	0, 244, 157, 188, 0, 0, 0, 150, 0, 0,
	0, 278, 137, 294, 211, 217, 147, 149, 148, 131,
	273, 296, 141, 151, 283, 262, 288, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 290, 306,
	143, 270, 271, 323, 257, 125, 304, 286, 209, 185,
	186, 124, 0, 254, 160, 170, 155, 226, 0, 169,
	246, 301, 302, 154, 325, 133, 316, 127, 134, 315,
	220, 0, 219, 318, 297, 305, 210, 203, 0, 126,
	303, 208, 202, 190, 165, 177, 242, 198, 243, 178,
	215, 214, 216, 0, 0, 0, 284, 312, 326, 200,
	139, 0, 272, 295, 0, 0, 140, 168, 164, 241,
	218, 135, 180, 281, 189, 196, 253, 324, 230, 260,
	144, 311, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 128, 193, 0, 251,
	167, 313, 0, 159, 0, 0, 0, 0, 0, 0,
	119, 120, 129, 138, 145, 158, 163, 166, 172, 176,
	179, 181, 182, 183, 187, 201, 204, 205, 206, 207,
	221, 222, 224, 225, 228, 229, 232, 234, 235, 236,
	238, 239, 240, 245, 248, 250, 252, 255, 261, 263,
	264, 265, 267, 268, 269, 274, 275, 276, 277, 285,
	289, 299, 300, 310, 319, 321, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 191, 0, 0, 152, 199, 197, 0, 0,
	0, 233, 291, 0, 0, 0, 0, 194, 0, 0,
	314, 282, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 171, 213, 132, 0, 0,
	0, 184, 320, 0, 0, 0, 247, 0, 287, 174,
	192, 136, 118, 130, 146, 173, 223, 256, 266, 0,
	0, 0, 0, 0, 153, 0, 259, 231, 309, 0,
	0, 237, 258, 195, 298, 249, 307, 308, 175, 292,
	317, 322, 279, 162, 0, 122, 0, 244, 157, 188,
	0, 0, 0, 150, 0, 0, 0, 278, 137, 294,
	211, 217, 147, 149, 148, 131, 273, 296, 141, 151,
	283, 262, 288, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 290, 306, 143, 270, 271, 323,
	257, 125, 304, 286, 209, 185, 186, 124, 0, 254,
	160, 170, 155, 226, 0, 169, 246, 301, 302, 154,
	325, 133, 316, 127, 134, 315, 220, 0, 219, 318,
	297, 305, 210, 203, 0, 126, 303, 208, 202, 190,
	165, 177, 242, 198, 243, 178, 215, 214, 216, 0,
	0, 0, 284, 312, 326, 200, 139, 0, 272, 295,
	0, 0, 140, 168, 164, 241, 218, 135, 180, 281,
	189, 196, 253, 324, 230, 260, 144, 311, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 128, 193, 0, 251, 167, 313, 0, 159,
	0, 0, 0, 0, 0, 0, 119, 120, 129, 138,
	145, 158, 163, 166, 172, 176, 179, 181, 182, 183,
	187, 201, 204, 205, 206, 207, 221, 222, 224, 225,
	228, 229, 232, 234, 235, 236, 238, 239, 240, 245,
	248, 250, 252, 255, 261, 263, 264, 265, 267, 268,
	269, 274, 275, 276, 277, 285, 289, 299, 300, 310,
	319, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 191, 0,
	0, 152, 199, 197, 0, 0, 0, 233, 291, 0,
	0, 0, 0, 194, 0, 0, 314, 282, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 171, 213, 132, 0, 0, 0, 184, 320, 0,
	0, 0, 247, 0, 287, 174, 192, 136, 118, 130,
	146, 173, 223, 256, 266, 0, 0, 0, 0, 0,
	153, 0, 259, 231, 309, 0, 0, 237, 258, 195,
	298, 249, 307, 308, 175, 292, 317, 322, 279, 162,
	0, 122, 0, 244, 157, 188, 0, 0, 0, 150,
	0, 0, 0, 278, 137, 294, 211, 217, 147, 149,
	148, 131, 273, 296, 141, 151, 283, 262, 288, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	290, 306, 143, 270, 271, 323, 257, 125, 304, 286,
	209, 185, 186, 124, 0, 254, 160, 170, 155, 226,
	0, 169, 246, 301, 302, 154, 325, 133, 316, 127,
	543, 315, 220, 0, 219, 318, 297, 305, 210, 203,
	0, 126, 303, 208, 202, 190, 165, 177, 242, 198,
	243, 178, 215, 214, 216, 0, 0, 0, 284, 312,
	326, 539, 139, 0, 272, 295, 0, 0, 140, 168,
	164, 241, 544, 542, 533, 534, 189, 196, 253, 324,
	230, 260, 144, 311, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 128, 193,
	0, 251, 167, 313, 0, 159, 0, 0, 0, 0,
	0, 0, 119, 120, 129, 138, 145, 158, 163, 166,
	172, 176, 179, 181, 182, 183, 187, 201, 204, 205,
	206, 207, 221, 222, 224, 225, 228, 229, 232, 234,
	235, 236, 238, 540, 541, 245, 248, 250, 252, 255,
	261, 263, 264, 265, 267, 268, 269, 274, 275, 276,
	277, 285, 289, 299, 300, 310, 319, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 191, 0, 0, 152, 199, 197,
	0, 0, 0, 233, 291, 0, 0, 0, 0, 194,
	0, 0, 314, 282, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 171, 213, 132,
	0, 0, 0, 184, 320, 0, 0, 0, 247, 0,
	287, 174, 192, 136, 118, 130, 146, 173, 223, 256,
	266, 0, 0, 0, 0, 0, 153, 0, 259, 231,
	309, 0, 0, 237, 258, 195, 298, 249, 307, 308,
	175, 292, 317, 322, 279, 162, 0, 122, 0, 244,
	157, 188, 0, 0, 0, 150, 0, 0, 0, 278,
	137, 294, 211, 217, 147, 149, 148, 131, 273, 296,
	141, 151, 283, 262, 288, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 290, 994, 143, 270,
	271, 323, 257, 125, 304, 286, 209, 185, 186, 124,
	0, 254, 160, 170, 155, 226, 0, 169, 246, 301,
	302, 154, 325, 133, 316, 127, 134, 315, 220, 0,
	219, 318, 297, 305, 210, 203, 0, 126, 303, 208,
	202, 190, 165, 177, 242, 198, 243, 178, 215, 214,
	216, 0, 0, 0, 284, 312, 326, 200, 139, 0,
	272, 295, 0, 0, 140, 168, 164, 241, 218, 135,
	180, 281, 189, 196, 253, 324, 230, 260, 144, 311,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 128, 193, 0, 251, 167, 313,
	0, 159, 0, 0, 0, 0, 0, 0, 119, 120,
	129, 138, 145, 158, 163, 166, 172, 176, 179, 181,
	182, 183, 187, 201, 204, 205, 206, 207, 221, 222,
	224, 225, 228, 229, 232, 234, 235, 236, 238, 239,
	240, 245, 248, 250, 252, 255, 261, 263, 264, 265,
	267, 268, 269, 274, 275, 276, 277, 285, 289, 299,
	300, 310, 319, 321, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	191, 0, 0, 152, 199, 197, 0, 0, 0, 233,
	291, 0, 0, 0, 0, 194, 0, 0, 314, 282,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 171, 213, 132, 0, 0, 0, 184,
	320, 0, 0, 0, 247, 0, 287, 174, 192, 136,
	118, 130, 146, 173, 223, 256, 266, 0, 0, 0,
	0, 0, 153, 0, 259, 231, 309, 0, 0, 237,
	258, 195, 298, 249, 307, 308, 175, 292, 317, 322,
	279, 162, 0, 122, 0, 244, 157, 188, 0, 0,
	0, 150, 0, 0, 0, 278, 137, 294, 211, 217,
	147, 149, 148, 131, 273, 296, 141, 151, 283, 262,
	288, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 290, 530, 143, 270, 271, 323, 257, 125,
	304, 286, 209, 185, 186, 124, 0, 254, 160, 170,
	155, 226, 0, 169, 246, 301, 302, 154, 325, 133,
	316, 127, 543, 315, 220, 0, 219, 318, 297, 305,
	210, 203, 0, 126, 303, 208, 202, 190, 165, 177,
	242, 198, 243, 178, 215, 214, 216, 0, 0, 0,
	284, 312, 326, 539, 139, 0, 272, 295, 0, 0,
	140, 168, 164, 241, 544, 542, 533, 534, 189, 196,
	253, 324, 230, 260, 144, 311, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	128, 193, 0, 251, 167, 313, 0, 159, 0, 0,
	0, 0, 0, 0, 119, 120, 129, 138, 145, 158,
	163, 166, 172, 176, 179, 181, 182, 183, 187, 201,
	204, 205, 206, 207, 221, 222, 224, 225, 228, 229,
	232, 234, 235, 236, 238, 540, 541, 245, 248, 250,
	252, 255, 261, 263, 264, 265, 267, 268, 269, 274,
	275, 276, 277, 285, 289, 299, 300, 310, 319, 321,
	32, 0, 68, 35, 36, 0, 0, 0, 32, 0,
	68, 35, 36, 0, 61, 0, 0, 0, 0, 0,
	74, 0, 61, 0, 37, 0, 0, 0, 74, 0,
	0, 0, 37, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 0, 68, 35, 36, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 61, 0,
	77, 0, 0, 0, 74, 0, 0, 0, 37, 0,
	0, 0, 0, 0, 0, 2110, 0, 0, 0, 0,
	2301, 0, 0, 2110, 0, 0, 0, 0, 2284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 2273, 0, 0,
	0, 0, 0, 0, 39, 70, 43, 42, 45, 0,
	0, 0, 39, 70, 43, 42, 45, 0, 0, 2110,
	2111, 0, 0, 0, 0, 0, 0, 0, 2111, 0,
	0, 0, 0, 0, 0, 0, 46, 73, 72, 0,
	0, 0, 0, 44, 46, 73, 72, 0, 0, 0,
	0, 44, 0, 32, 0, 68, 35, 36, 39, 70,
	43, 42, 45, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 0, 74, 2111, 0, 0, 37, 0, 0,
	0, 0, 0, 0, 0, 59, 60, 0, 2112, 0,
	46, 73, 72, 59, 60, 0, 2112, 44, 2113, 71,
	0, 50, 51, 63, 0, 64, 2113, 71, 0, 50,
	51, 63, 0, 64, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 32, 0, 68,
	35, 36, 0, 0, 0, 0, 0, 0, 2110, 59,
	60, 61, 2112, 2225, 0, 0, 0, 74, 0, 0,
	0, 37, 2113, 71, 0, 50, 51, 63, 0, 64,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 70, 43,
	42, 45, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 2111, 69, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 0, 46,
	73, 72, 2110, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 75, 69, 0,
	0, 39, 70, 43, 42, 45, 0, 0, 59, 60,
	0, 2112, 0, 0, 0, 0, 0, 2111, 0, 0,
	0, 2113, 71, 0, 50, 51, 63, 0, 64, 0,
	0, 0, 0, 46, 73, 72, 0, 0, 0, 0,
	44, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 60, 0, 2112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 71, 0, 50, 51,
	63, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75,
}
var yyPact = [...]int{

	2591, -1000, -294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1346, -1000, -1000, -1000, -1000, -1000, -1000, 611, 252,
	-1000, -1000, 388, 93, 21931, 325, 629, 22783, -1000, -1000,
	-1000, 113, 208, 22783, -1000, -1000, -74, -78, -1000, 206,
	317, 1006, 1248, 1005, 8, -1000, 1424, 1427, -1000, -1000,
	238, 33, -1000, -1000, -1000, 17669, 167, -1000, -1000, -1000,
	1327, 1344, 1192, -1000, 11705, 229, 229, 21505, 24487, -1000,
	22783, 10425, 267, 22783, -140, 219, 219, 154, 219, -1000,
	564, -1000, -1000, -1000, 22783, 223, 22357, 223, 223, 223,
	223, 223, 22783, -1000, 444, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 22783, 1004, 1270,
	617, 111, 7422, 7422, -1000, 616, -1000, 126, 125, 120,
	123, 22, 622, -1000, 7422, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 196, 254, 205, 167, 562, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1267, 1266, 808, 1265, 118, 1264,
	1127, -69, -1000, 1002, -1000, 1162, 1304, 319, 22783, -1000,
	-1000, 1092, -1000, 1142, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 842, 1268, 14261, 14687, 1228,
	-1000, -1000, 668, 1400, -1000, 4394, 440, -1000, 14261, 2401,
	1096, -1000, -1000, 1096, -1000, -1000, 410, -1000, -1000, 15965,
	15965, 15965, 15965, 15965, 15965, 15965, 15965, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1096, -1000, 11279, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 14261, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 21079, 20227, 22783, 1072, 1057, -1000, -1000, 439, 1080,
	-77, 24061, -1000, -1000, -1000, -1000, 23209, 19801, 558, -1000,
	-1000, -1000, -1000, 1263, -1000, -1000, 438, -1000, 997, 209,
	-1000, 3992, 311, -1000, -1000, -1000, 1126, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22357, 1299, 256, 994, 645, 993, 992,
	987, 22783, 985, 1077, 249, 22783, 1288, 1152, 22783, 984,
	983, 980, 976, -1000, 9996, -1000, 7422, 617, -1000, 829,
	14261, 219, 219, 7422, 7422, 7422, 22783, 22783, 22783, -1000,
	-1000, -1000, -1000, 22783, -1000, -1000, 617, 617, 7422, 7422,
	573, 1395, 573, 573, -1000, -1000, -1000, -1000, 14261, -1000,
	15965, -1000, -1000, 971, 177, -1000, -1000, -1000, -1000, -1000,
	-1000, 968, -1000, -1000, 118, 118, -1000, 828, 118, 1061,
	-1000, 557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 118, -1000, 13835, -292, -1000, -1000,
	1192, -1000, -1000, 167, -1000, -1000, -1000, 22783, 7422, 17669,
	1096, 22357, -1000, -1000, -1000, 1418, 479, 845, 431, 1073,
	-1000, 610, 1280, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
	1096, 813, 1202, -1000, -1000, -1000, 22783, -1000, 14261, 14261,
	768, -1000, 18095, -1000, -1000, -1000, -1000, 8280, 483, 15965,
	686, 598, 15965, 15965, 15965, 15965, 15965, 15965, 15965, 15965,
	15965, 15965, 15965, 15965, 15965, 15965, 15965, 725, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 962, -1000, 167, 891,
	891, 456, 456, 456, 456, 456, 456, 456, 18521, 1293,
	842, 979, 571, 11279, 12557, 12557, 842, 14261, 14261, 13409,
	12983, 12557, 12557, 1293, 509, 571, 23209, -1000, -1000, 15539,
	-1000, -1000, -1000, -1000, -1000, 842, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22357, 22357, 12557, 12557, 12557, 12557,
	842, 842, 12557, 12557, 12557, 12557, 12557, 842, 842, 842,
	842, 1293, 1293, 12557, 12557, 12557, 1293, 12557, 12557, 1293,
	12557, 12557, 12557, 12557, 1293, 12557, 12557, 12557, 168, 22783,
	-1000, 1076, 1100, -1000, -1000, -1000, 1298, 18948, 16817, -1000,
	168, 1045, 20227, 22783, -1000, -1000, 20227, 22783, 7851, 23635,
	1054, -1000, -94, -102, -77, -1000, -1000, 451, -1000, -1000,
	-1000, 10852, -1000, 9138, 5706, 9567, -1000, 311, 1126, -1000,
	-55, -1000, -1000, -1000, 1107, -1000, 1107, 170, 0, 1107,
	1107, 1107, 1107, 1107, -25, -25, -25, -25, 3, -1000,
	-1000, -1000, -1000, -1000, 1125, 1122, -1000, 1107, 1107, 1107,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1115, 179,
	1109, 1109, 1109, 1109, 1109, 192, -1000, 14261, 1129, -1000,
	22783, 7422, 1287, 7422, 143, 1121, -1000, -1000, 22783, 22783,
	1065, -1000, 22783, 1062, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 571, 960, 954, -1000, -1000,
	-1000, -1000, -1000, -1000, 574, -1000, -1000, -1000, -1000, 617,
	22783, 22783, 22783, 1297, 617, 571, 555, -1000, -1000, 949,
	-1000, 1061, 1061, -1000, 1061, 118, 891, 1061, -1000, 959,
	1282, 827, 1293, 842, 1192, 279, -1000, -1000, -1000, 175,
	915, 428, -1000, 1196, 14261, 14261, 9138, 14687, -1000, -1000,
	-1000, -1000, 1312, -1000, 1210, 1209, 1165, -1000, -1000, 483,
	628, -1000, -1000, 720, -1000, -1000, -1000, -1000, 427, 1096,
	-1000, 2557, -1000, -1000, -1000, -1000, 686, 15965, 15965, 15965,
	555, 2557, 2663, 480, 2882, 456, 504, 504, 453, 453,
	453, 453, 453, 491, 491, -1000, -1000, -1000, 842, -1000,
	-1000, -1000, 12557, -1000, 14261, -1000, 842, 945, -1000, -1000,
	571, 425, 945, -1000, 644, 822, 570, 1387, 945, 566,
	1368, 945, 945, 945, 12557, 671, -1000, 14261, 842, -1000,
	666, 1059, 1058, 945, 842, 1056, 945, 945, -170, -170,
	842, 945, 842, 945, 945, -170, -170, -170, -170, 12557,
	12557, 945, 945, 945, 12557, 945, 945, 12557, 945, 945,
	945, 945, 12557, 945, 945, 945, 171, 1096, -1000, 23209,
	20227, 20227, 20227, 20227, 20227, -1000, 1178, 1177, -1000, 1164,
	1163, 1182, 17669, -1000, 953, 842, 114, 18948, -1000, 1096,
	-1000, 17243, 332, 264, 262, 259, 1362, 20227, 947, -1000,
	947, -1000, 424, -1000, -1000, 23209, -77, -99, -1000, -1000,
	1054, -1000, 784, -1000, -1000, 571, -1000, 423, 1053, 5277,
	-1000, -1000, -1000, -1000, 209, -1000, -1000, -1000, 1120, 304,
	-1000, 1218, 408, 490, 868, 1214, -1000, -1000, 266, -65,
	-1000, -1000, 736, -25, -25, 1107, 1107, 163, 1107, -1000,
	-25, -1000, -1000, -1000, 451, 1259, 451, 451, 451, 451,
	-25, 825, 825, -1000, -1000, -1000, -1000, 726, -1000, 1115,
	-1000, 719, -1000, -1000, -1000, -1000, -1000, 849, 1151, 22357,
	167, 1294, -1000, -1000, -1000, 1407, -1000, -1000, 270, 246,
	-1000, 7422, 22783, 7422, 7422, 1362, 948, 934, -1000, -1000,
	-1000, 573, 617, 1252, -1000, -1000, 15965, -1000, -1000, -1000,
	-1000, 168, 269, -1000, 1202, -1000, 1293, 1047, -1000, -1000,
	537, 535, 508, 201, 201, -1000, 551, 201, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 164, 1290, 22357, 22357,
	1191, 571, 571, -1000, 22783, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6993, 12557, -1000, 555, 2557, 2627,
	-1000, 15965, -1000, 842, 571, -1000, 12557, -1000, 6564, -1000,
	137, 725, 137, 15965, 15965, -1000, 15965, 15965, -1000, -205,
	-1000, 1078, 536, -1000, 14261, 799, -1000, -1000, 15965, 15965,
	-1000, -1000, -1000, -1000, -1000, 20653, -1000, -170, -170, -170,
	-170, -170, -1000, -1000, -1000, -1000, 945, 945, -170, -170,
	-170, 945, -170, -170, 945, -170, -170, -170, -170, 945,
	-170, -170, -170, 1150, 23209, 1096, -1000, 19375, 22357, 1079,
	-1000, 553, 1100, 1119, 1149, 978, -1000, -1000, -1000, -1000,
	1176, -1000, 1172, -1000, -1000, 1104, -1000, -1000, 1046, 1096,
	22357, 15965, 332, -1000, 1096, 1096, 1096, 1346, 14261, 947,
	-1000, -1000, 469, -1000, -1000, -114, -109, -1000, -1000, -1000,
	8709, 5706, -1000, 5706, -1000, 22357, 183, -1000, 868, -1000,
	-1000, 868, -1000, -1000, -1000, 1110, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 656, 15965, 1416, -1000, 1217, -1000, 1216,
	818, -1000, -1000, 1017, 451, 451, -25, -1000, -1000, 1107,
	-1000, 451, -1000, 505, -1000, -1000, -1000, -1000, 451, 940,
	-1000, 938, 1033, -1000, 932, 56, 22783, -1000, -1000, -1000,
	1148, -1000, -1000, -1000, 941, 1030, -1000, 3992, 927, 926,
	925, 22783, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 617,
	-1000, 15965, 2557, -25, 22783, 1165, 279, -1000, 862, -1000,
	868, 392, -1000, -1000, -1000, 1214, -1000, -1000, 286, 924,
	-1000, 923, 922, 22357, 1215, 921, 22783, 22357, -1000, -1000,
	872, 919, 14261, -1000, 22357, 22357, 1096, 419, -1000, -1000,
	-1000, 977, 11705, -1000, -1000, 842, -1000, 15965, 2557, -1000,
	-1000, -1000, 416, 842, 1107, 1107, -1000, 1107, 1109, -1000,
	1107, 5, 1107, 4, 842, 842, 2535, 2431, 2344, 1661,
	1096, -152, -1000, 571, 14261, 2243, 1468, -1000, 357, -1000,
	-1000, -1000, -1000, -1000, -170, -170, -1000, -1000, -1000, -1000,
	-170, -1000, -1000, -170, -1000, -1000, -1000, -1000, -170, -1000,
	-1000, -1000, -1000, 1276, 1013, 1029, -1000, -1000, 12131, 842,
	915, 912, -1000, 1346, 23209, 14261, -1000, -1000, 14261, 1108,
	-1000, 14261, -1000, -1000, -1000, -1000, 22357, 112, -1000, 14261,
	912, 1090, -1000, 22357, 22357, 22357, 1327, 571, -1000, -1000,
	-1000, -1000, 5277, -1000, 910, -1000, 1107, -1000, 1214, -1000,
	-1000, 22357, -1000, 2557, -122, -1000, -1000, -1000, -1000, -1000,
	-1000, 451, -1000, -1000, -1000, -1000, -1000, -25, 815, -25,
	715, -1000, 712, -1000, -1000, -238, 1106, -1000, 167, 22783,
	68, 270, -1000, 3992, 3992, 3992, -1000, -1000, 2557, -66,
	-1000, -1000, -1000, 872, 191, 3992, -1000, 1129, 408, 183,
	-1000, -1000, -1000, -1000, -1000, 903, 401, -1000, 242, 191,
	872, 571, 514, 1281, -1000, 22357, 1353, 20227, -1000, -1000,
	-1000, 2557, 6135, -1000, -1000, 178, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15965, 15965, 15965, 15965, 15965, 842,
	810, 571, 15965, 15965, 842, 1343, -1000, -1000, -1000, -1000,
	-1000, 1213, -1000, 1096, -1000, -1000, 172, -1000, 22357, 1327,
	-1000, 571, 571, 22357, 571, 907, -1000, 1096, 16391, -1000,
	17669, 900, 900, 900, -1000, 299, 22357, 1280, 892, -1000,
	-1000, 451, -1000, 451, 933, 916, -1000, 22357, -1000, 1322,
	-1000, 68, -1000, 809, 85, 91, -1000, 84, 83, 82,
	81, 74, -1000, -1000, -1000, -1000, 1242, 1230, 1074, 882,
	-1000, -1000, 870, -1000, 1105, 868, -1000, -1000, 866, -1000,
	-1000, 22357, -1000, 191, 1274, 1273, 1096, -1000, 1348, 1342,
	947, 11705, -1000, -1000, -1000, -1000, 666, 666, 666, 666,
	53, -1000, -1000, 666, 666, -1000, 14261, 1411, -1000, 1096,
	-1000, 167, -1000, -1000, 888, -1000, 22357, -1000, -1000, 332,
	-1000, -1000, -1000, 299, -1000, 863, 551, 788, -1000, -1000,
	151, -1000, -1000, -1000, -1000, 886, -1000, 105, 25161, -1000,
	-1000, -1000, -1000, -1000, -1000, 1247, 1246, 96, 225, 1222,
	1224, 1341, 20227, -1000, -1000, 266, 22357, 1129, -1000, -1000,
	-1000, 15965, -1000, 141, -1000, 14687, 14687, 1353, -1000, -1000,
	-1000, -1000, -1000, 842, 92, -214, -1000, -1000, 1035, 23209,
	1029, 842, -1000, -1000, -1000, -1000, -1000, 692, -1000, 22783,
	299, 108, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	14261, 14261, 4848, 25161, -1000, -1000, -1000, -1000, 1104, 684,
	1230, 1334, 1237, 1229, -1000, 785, 947, 881, 1103, 2557,
	876, -1000, 22357, -1000, 571, -1000, 1025, -1000, 571, -1000,
	1348, -1000, -1000, 1184, -210, -217, 842, 961, -1000, -1000,
	1101, -1000, 299, 104, -1000, 705, 669, 59, 51, 3935,
	-1000, -1000, -1000, -1000, -295, -1000, -1000, 1241, -1000, 771,
	-1000, 1331, 1300, -1000, 1353, 299, 22357, -1000, 141, 1206,
	14687, -1000, -1000, 1168, -1000, -1000, 22357, -1000, 850, 824,
	614, -1000, 14261, 25161, 1317, 1310, 1308, 1272, 8709, 25087,
	-1000, -1000, 740, 739, 1348, -1000, 841, -1000, 124, -1000,
	-212, 836, 236, -1000, -1000, 643, 25161, -1000, 664, -296,
	202, 167, 366, 15965, -1000, -1000, -1000, -1000, -1000, -1000,
	299, 132, -215, 1147, -1000, -1000, -1000, -1000, -1000, -1000,
	25161, -1000, -297, 25161, 3491, -1000, -1000, -1000, 24968, -1000,
	-1000, -1000, -1000, 47, -1000, -1000, 2557, -1000, 1096, -220,
	1145, 1131, 1374, -1000, -298, 24922, -301, 217, 25161, 624,
	-1000, 14261, -1000, 366, -1000, 15113, -1000, -1000, 1409, -1000,
	1403, 405, 405, 24914, 595, 25161, -1000, -302, 216, 25161,
	-1000, 642, -1000, 666, 842, -1000, -1000, -1000, 200, 708,
	-1000, -1000, -1000, 3854, -1000, -303, 25161, -1000, -1000, -1000,
	-1000, -1000, 214, 2944, -305, -1000, 212, 25161, -1000,
}
var yyPgo = [...]int{

	0, 1761, 102, 1760, 146, 1758, 1757, 1756, 18, 16,
	12, 20, 1755, 1546, 1542, 1534, 1529, 1754, 1523, 1753,
	7, 1752, 1751, 1503, 1750, 1749, 1497, 1493, 1484, 1481,
	10, 1746, 27, 1744, 5, 113, 128, 1743, 3, 1741,
	1740, 11, 1739, 1738, 1473, 1734, 1733, 1728, 1727, 68,
	1724, 1469, 1465, 1723, 1722, 1453, 1450, 1720, 1718, 1445,
	1439, 1437, 1717, 149, 1716, 1715, 1714, 143, 75, 108,
	1713, 1712, 1705, 83, 59, 1625, 89, 42, 81, 283,
	1704, 22, 34, 1703, 1702, 129, 135, 1701, 123, 1699,
	79, 114, 74, 1697, 1696, 136, 1695, 1694, 1693, 96,
	1692, 1691, 2336, 1690, 1689, 117, 1688, 49, 35, 38,
	1686, 1685, 1684, 1682, 1681, 109, 2, 1679, 1678, 1677,
	57, 1675, 1674, 131, 1673, 1672, 1671, 104, 56, 1668,
	41, 1666, 46, 52, 1665, 37, 1661, 112, 1660, 1657,
	30, 14, 1653, 33, 1652, 43, 1651, 106, 209, 337,
	8, 36, 47, 50, 1649, 76, 28, 31, 100, 70,
	65, 39, 1643, 116, 1639, 60, 120, 93, 94, 119,
	1636, 1634, 1633, 767, 1632, 1629, 105, 1628, 54, 69,
	633, 124, 95, 67, 1622, 1620, 1617, 1616, 62, 92,
	1615, 1614, 66, 427, 80, 1414, 107, 1834, 84, 118,
	1613, 32, 1612, 1611, 2846, 82, 99, 88, 1609, 86,
	29, 48, 1608, 1607, 1606, 1605, 1603, 1602, 624, 1601,
	1600, 1599, 1595, 91, 64, 1594, 1593, 90, 73, 1592,
	1589, 1574, 1573, 1571, 98, 55, 115, 1570, 97, 101,
	110, 1569, 1567, 1566, 1565, 45, 40, 1563, 1561, 1558,
	78, 85, 1552, 51, 24, 25, 53, 15, 58, 63,
	1544, 23, 1540, 87, 4, 6, 9, 1538, 1536, 1525,
	1513, 1500, 61, 1495, 1489, 44, 1487, 1478, 1475, 26,
	1471, 1467, 1463, 1447, 0, 111, 127, 1441, 1433, 158,
}
var yyR1 = [...]int{

	0, 282, 283, 283, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 62, 2, 2, 7, 3, 3, 3,
	4, 4, 83, 84, 84, 88, 88, 5, 5, 6,
	6, 8, 8, 66, 66, 9, 10, 10, 10, 10,
	286, 286, 97, 97, 95, 95, 96, 96, 158, 158,
	11, 11, 11, 163, 163, 168, 168, 168, 171, 171,
	171, 171, 150, 151, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 270, 270, 271, 271, 272, 272, 272,
	272, 273, 273, 274, 274, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 24, 191, 191, 42, 42,
	43, 43, 43, 146, 146, 146, 12, 12, 12, 12,
	12, 19, 21, 21, 31, 31, 32, 22, 22, 22,
	22, 33, 33, 34, 25, 25, 25, 25, 25, 25,
	40, 40, 40, 39, 39, 38, 38, 38, 38, 38,
	38, 23, 23, 23, 23, 41, 41, 36, 36, 35,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 26, 26, 26, 26, 26, 26, 18, 269,
	269, 269, 30, 30, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 47, 247, 248, 248, 248, 248, 248, 248, 248,
	248, 235, 236, 211, 211, 211, 211, 211, 211, 211,
	210, 210, 210, 210, 214, 214, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 213, 213, 213, 213, 213,
	213, 213, 213, 215, 215, 215, 215, 215, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 217, 217, 217, 217, 217, 217, 217,
	217, 234, 234, 218, 218, 227, 227, 228, 228, 228,
	225, 225, 226, 226, 229, 229, 221, 222, 230, 223,
	223, 223, 224, 224, 224, 233, 233, 233, 233, 219,
	237, 237, 257, 257, 256, 256, 255, 255, 255, 246,
	246, 252, 252, 252, 252, 252, 241, 241, 241, 240,
	240, 242, 242, 245, 245, 254, 254, 253, 238, 238,
	258, 258, 258, 258, 258, 239, 239, 239, 259, 243,
	243, 244, 244, 244, 265, 266, 264, 264, 264, 264,
	264, 112, 112, 112, 249, 249, 249, 250, 250, 250,
	251, 251, 251, 267, 267, 44, 44, 45, 50, 50,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 145, 145, 145, 46, 189, 189, 263,
	263, 263, 262, 260, 260, 261, 261, 14, 48, 48,
	15, 15, 15, 15, 15, 15, 15, 16, 16, 51,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 80,
	177, 177, 175, 175, 178, 178, 176, 176, 176, 179,
	179, 179, 208, 208, 208, 53, 53, 58, 58, 61,
	59, 60, 27, 28, 28, 28, 28, 29, 190, 190,
	56, 56, 57, 57, 57, 57, 72, 72, 287, 287,
	55, 55, 54, 54, 54, 54, 17, 288, 63, 64,
	64, 65, 65, 65, 182, 182, 69, 69, 69, 67,
	67, 67, 68, 68, 74, 74, 78, 78, 78, 78,
	77, 77, 77, 77, 148, 148, 148, 149, 149, 200,
	200, 200, 199, 199, 199, 199, 82, 82, 85, 85,
	86, 86, 86, 86, 89, 131, 131, 106, 106, 107,
	107, 107, 107, 107, 118, 118, 157, 157, 156, 156,
	159, 159, 87, 87, 87, 87, 92, 92, 93, 93,
	94, 94, 188, 188, 206, 206, 206, 98, 98, 98,
	100, 99, 99, 99, 99, 101, 101, 103, 104, 104,
	102, 102, 105, 108, 108, 108, 108, 109, 109, 79,
	79, 79, 79, 79, 79, 79, 174, 174, 111, 111,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	126, 126, 126, 126, 126, 126, 113, 113, 113, 113,
	113, 113, 113, 73, 73, 127, 127, 127, 91, 90,
	90, 76, 76, 75, 75, 128, 128, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 121, 121, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 289, 289, 123, 122, 122, 122, 122,
	122, 122, 70, 70, 70, 70, 70, 207, 207, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 138, 138, 71, 71, 136, 136, 137, 139,
	139, 135, 135, 135, 115, 115, 115, 115, 115, 115,
	115, 115, 117, 117, 117, 140, 140, 129, 129, 81,
	81, 141, 141, 142, 142, 143, 143, 144, 144, 147,
	147, 152, 152, 152, 153, 153, 153, 153, 154, 154,
	154, 114, 114, 114, 114, 114, 114, 155, 155, 155,
	155, 160, 160, 130, 130, 133, 133, 132, 134, 161,
	161, 165, 162, 162, 166, 166, 166, 166, 169, 169,
	170, 170, 170, 167, 167, 167, 164, 164, 164, 203,
	203, 203, 172, 172, 180, 180, 181, 181, 173, 173,
	220, 220, 185, 185, 185, 185, 185, 185, 185, 185,
	187, 187, 186, 186, 186, 183, 183, 183, 184, 184,
	201, 201, 197, 197, 202, 202, 198, 198, 204, 204,
	205, 205, 268, 268, 231, 231, 278, 278, 232, 232,
	279, 279, 281, 281, 276, 276, 277, 277, 280, 280,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 284, 285, 192, 193, 193, 193,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 11, 4, 7, 5, 1, 13, 3,
	10, 12, 2, 1, 3, 3, 6, 1, 3, 1,
	3, 7, 8, 1, 1, 9, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 0, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 4, 0, 3, 1, 1,
	1, 1, 1, 0, 2, 2, 1, 1, 1, 1,
	1, 4, 5, 8, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 5, 5, 5, 6, 3, 5,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 4, 2, 4, 2, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 4, 3, 2, 4, 3, 0,
	2, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 1, 2, 3, 4, 3, 3,
	3, 3, 3, 0, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 1, 2, 2, 3, 1, 0,
	3, 3, 0, 2, 2, 2, 1, 2, 1, 2,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 2, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 1,
	10, 11, 11, 12, 12, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 0, 2, 1, 1, 5, 1, 3,
	2, 5, 4, 3, 3, 3, 5, 3, 8, 10,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 0, 1, 2, 4, 0, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 4, 4, 4, 4, 4, 3, 2, 3,
	4, 4, 3, 6, 6, 4, 4, 4, 4, 4,
	4, 3, 3, 2, 6, 2, 4, 4, 4, 5,
	7, 6, 5, 4, 2, 4, 3, 2, 3, 3,
	1, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	2, 2, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 7, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 3, 5, 4, 6, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -282, -1, -2, -7, -8, -9, -10, -11, -13,
	-44, -14, -15, -16, -51, -52, -53, -58, -59, -60,
	-56, -55, -54, -17, -23, -26, -18, -62, -27, -28,
	-29, -3, 6, 7, -66, 9, 10, 30, -47, 130,
	-45, -46, 133, 132, 169, 134, 162, 64, 224, -61,
	227, 228, -287, -190, 167, 168, 31, 32, 136, 211,
	212, 20, 37, 229, 231, -4, -83, -5, 8, 320,
	131, 225, 164, 163, 26, 365, -284, 68, -283, 435,
	-143, 15, -63, -288, -63, -63, -63, -63, -63, -247,
	105, 68, -184, 143, 86, 311, 139, -191, 140, -183,
	189, 44, 150, 149, 140, 140, 141, 143, 311, 139,
	177, 176, 140, -102, -204, 71, -195, 362, 153, 377,
	378, 131, 186, 224, 238, 232, 266, 254, 363, 379,
	154, 206, 138, 252, 255, 298, 152, 199, 380, 287,
	293, 209, 80, 227, 307, 381, 155, 203, 205, 204,
	194, 210, 36, 165, 250, 243, 214, 189, 382, 370,
	241, 28, 184, 383, 295, 271, 384, 367, 294, 246,
	242, 136, 385, 156, 150, 179, 386, 272, 276, 387,
	299, 388, 389, 390, 142, 236, 237, 391, 190, 301,
	270, 33, 151, 364, 48, 174, 302, 38, 274, 37,
	286, 392, 269, 264, 393, 394, 395, 396, 268, 235,
	263, 201, 53, 137, 278, 277, 279, 202, 297, 259,
	257, 397, 398, 157, 399, 400, 244, 18, 401, 402,
	305, 168, 403, 42, 404, 405, 406, 172, 407, 408,
	409, 296, 273, 275, 188, 410, 247, 147, 411, 176,
	412, 366, 413, 303, 240, 414, 158, 231, 173, 167,
	306, 415, 212, 416, 417, 418, 159, 419, 420, 421,
	228, 229, 289, 207, 422, 423, 424, 425, 198, 183,
	309, 300, 52, 211, 283, 426, 234, 149, 213, 427,
	225, 43, 180, 7, 200, 290, 208, 261, 175, 428,
	429, 248, 249, 267, 233, 262, 226, 177, 178, 169,
	430, 308, 284, 368, 51, 256, 253, 181, 260, 431,
	143, 432, 182, 230, 304, 251, 285, 140, 123, 255,
	298, 130, 288, 289, 295, -241, 296, 176, 179, -208,
	140, -175, 287, 182, 71, 141, 142, 33, 300, 299,
	291, -204, 144, 230, -72, 134, 170, -102, -192, -192,
	-192, 290, 290, -192, -41, 71, 213, -41, 30, 71,
	71, 36, 71, 229, 6, -65, 5, -173, 143, 145,
	226, -84, -88, -206, -204, -196, 73, 333, 334, 335,
	336, 337, 350, 351, 352, 338, 339, 353, 354, 355,
	340, 341, 356, 357, 359, 360, 358, 344, 343, 342,
	345, 346, 348, 347, 349, -2, -153, 17, 16, -69,
	54, 55, -64, -77, 114, -79, -204, -110, 88, -116,
	29, 71, -195, 24, -115, -111, -135, -134, -91, 123,
	124, 125, 112, 113, 120, 89, 126, -121, -119, -120,
	-122, -124, -125, 73, 72, 81, 74, 75, 76, 77,
	82, 83, 84, -197, -132, -284, 58, 59, 139, 321,
	322, 323, 324, 361, 160, 325, 91, 47, 310, 319,
	318, 317, 315, 316, 312, 314, 313, 327, 328, 146,
	311, 118, 320, 350, 351, 352, 353, 354, 355, 356,
	357, 359, 360, 358, 340, 333, 334, 335, 336, 337,
	338, 339, 341, 342, 343, 344, 345, 346, 347, 348,
	349, -173, -173, 11, -95, -96, -102, -105, -204, -162,
	226, -169, -166, 299, 300, -167, -170, -164, -135, 286,
	408, 409, 298, 255, 297, -197, -204, -102, -248, -236,
	-239, -198, 155, -259, -197, -194, 152, 71, -195, 135,
	161, 87, 369, 23, 25, 281, 333, 90, 123, 334,
	335, 336, 16, 20, 91, 122, 321, 337, 130, 62,
	312, 314, 310, 311, 288, 29, 10, 26, 163, 193,
	22, 116, 132, 94, 95, 96, 166, 24, 164, 84,
	160, 19, 65, 11, 13, 331, 332, 14, 146, 145,
	107, 191, 141, 60, 8, 126, 27, 104, 56, 338,
	339, 373, 45, 374, 58, 105, 17, 315, 316, 31,
	361, 340, 171, 375, 341, 118, 196, 63, 50, 88,
	82, 34, 85, 66, 86, 15, 192, 61, 329, 195,
	376, 106, 133, 320, 59, 139, 6, 326, 30, 162,
	344, 343, 342, 345, 197, 57, 323, 324, 346, 433,
	140, 93, 327, 328, 144, 83, 5, 44, 32, 9,
	64, 67, 317, 318, 319, 47, 348, 347, 349, 92,
	12, 330, 365, 141, -102, 320, -181, 146, -181, 177,
	176, -181, 97, -48, -102, -180, 146, -197, -180, -180,
	-180, -180, -180, -102, 127, -102, 71, 30, -179, 105,
	12, 311, 139, 71, 176, 179, 140, 177, 143, -193,
	-284, -198, -193, -243, 11, 107, 180, 180, 180, 181,
	180, -178, -177, 178, 293, 294, 290, 292, 12, -80,
	105, -193, 71, 229, 144, -57, -2, -10, -8, -9,
	-2, 97, -192, -192, 30, 30, 73, 51, 30, -36,
	-35, -37, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 30, -269, 68, -231, 286, 71,
	-63, -6, -4, -284, 6, 21, 22, 140, -102, 69,
	23, -284, -285, 70, -154, 19, 31, -79, -204, -144,
	-147, -79, -196, 333, 334, 335, 336, 337, 350, 351,
	352, 338, 339, 353, 354, 355, 340, 341, 356, 357,
	359, 360, 358, 344, 343, 342, 345, 346, 348, 347,
	349, 50, -67, 21, 22, 79, 11, -200, 87, 86,
	104, -199, 23, 71, -195, -196, 73, 127, -79, -113,
	107, 88, 105, 106, 90, 109, 108, 119, 112, 113,
	114, 115, 116, 117, 118, 110, 111, 122, 97, 98,
	99, 100, 101, 102, 103, -174, -284, -91, -284, 128,
	129, -116, -116, -116, -116, -116, -116, -116, -116, -284,
	-2, -128, -79, -284, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -138, -79, -284, -289, -123, -284,
	-289, -123, -289, -123, -289, -284, -289, -123, -289, -123,
	-289, -289, -123, -289, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, -284, -284, -284, -104, 27,
	-102, -82, -85, -86, -87, -106, -90, -284, -102, -91,
	-102, -95, -286, 69, 11, 67, -286, 69, 127, 69,
	-163, -168, 301, 303, 226, -167, -167, -203, -197, 73,
	29, 97, 30, 127, 70, 69, -239, 155, 152, -210,
	-214, -216, -215, -217, -212, -213, 252, 255, 259, 257,
	253, 258, 123, 256, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 30, 165, 248, 249, 250,
	251, 272, 273, 274, 275, 276, 277, 278, 279, 232,
	254, 363, 233, 234, 235, 236, 237, 238, 240, 241,
	242, 243, 244, 245, 246, 71, -259, 68, -197, 23,
	143, 71, 88, 71, 71, 71, -102, 71, 69, 144,
	-95, 24, 66, -97, -102, 71, 71, 71, 71, -205,
	-204, -194, -193, -179, 73, -79, -181, -181, -193, -193,
	-193, -102, -102, -102, -102, -179, -179, -193, -193, -176,
	11, 107, 11, -176, -176, -79, -116, 71, 71, 229,
	71, -36, -36, 73, -36, 69, 97, -36, 70, -128,
	-268, 434, -69, -2, -63, -102, -193, -88, -90, -284,
	-155, -197, 9, 107, 69, 18, 127, 69, -152, 25,
	26, -152, -117, 51, 74, 77, -182, 49, -102, -79,
	-79, -126, 82, 88, 83, 84, -199, 114, -205, -198,
	-194, -116, -127, -132, -91, 78, 107, 105, 106, 90,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -207, 71, 73, 71, -115,
	-115, -197, -67, -285, 69, -285, -2, -75, -78, 114,
	-79, -204, -75, -285, -79, -79, -135, 73, -75, -135,
	73, -75, -75, -75, -67, -136, -137, 92, -135, -285,
	-116, -197, -197, -75, -76, -75, -75, -75, -285, -285,
	-78, -75, -78, -75, -75, -285, -285, -285, -285, -67,
	-67, -75, -75, -75, -67, -75, -75, -67, -75, -75,
	-75, -75, -67, -75, -75, -75, -158, 172, -102, 30,
	69, -98, -100, -99, -101, 56, 60, 62, 57, 58,
	59, 63, -188, 23, -82, -89, 47, -284, -107, 172,
	-108, 23, -206, 64, 145, 65, -158, 67, -82, -102,
	-82, -105, -204, 114, -166, -169, 69, 302, 304, 305,
	-163, -224, 122, 66, 85, -79, -198, -205, -249, -250,
	-251, -198, 73, 74, -236, -237, -238, -239, -252, 155,
	-258, 147, 149, 44, -240, 156, 141, 45, -211, -225,
	284, -218, 68, -218, -218, 260, 252, 255, 253, -218,
	-218, -218, -218, -218, -223, 255, -223, -223, -223, -223,
	253, 68, 68, -218, -218, -218, -227, 68, -227, 247,
	-228, 68, -228, -228, -228, -228, -259, -79, -201, 67,
	-150, -102, -193, 24, -193, -42, 186, 161, 68, -102,
	-102, -102, 69, 71, 71, -244, 11, 107, -179, -204,
	-204, -102, -118, 23, -179, -73, 166, 71, -35, -115,
	70, -103, 27, 73, -67, -285, -69, -50, -49, -185,
	135, 132, 133, 137, 138, -262, 281, 131, 255, 80,
	29, 15, 321, 172, 368, 71, 173, -285, 69, 127,
	52, -79, -79, -147, -172, 19, 11, 47, 47, -68,
	57, 82, 83, 84, 127, -284, -127, -116, -116, -116,
	-73, 87, -285, -76, -79, -285, 69, -285, 127, -285,
	69, 67, 23, 11, 11, -285, 11, 11, -285, -285,
	-285, -75, -139, -137, 94, -79, -285, -285, 69, 69,
	-285, -285, -285, -285, -148, 329, -148, -285, -285, -285,
	-285, -285, -148, -148, -148, -148, -75, -75, -285, -285,
	-285, -75, -285, -285, -75, -285, -285, -285, -285, -75,
	-285, -285, -285, -114, 30, 47, -2, -284, -284, -161,
	-165, -135, -85, -86, -86, -85, -86, 56, 56, 56,
	61, 56, 61, 56, -99, -206, -285, -285, -131, 185,
	-284, 34, -206, -108, 141, 141, 141, -109, 12, -82,
	-109, -109, 127, -168, -171, 306, 303, 309, 71, 73,
	127, 69, -251, 97, -239, 68, 71, 45, -240, 141,
	45, -240, -245, 71, -245, 45, -229, -221, -222, -230,
	-233, -219, 82, 88, 29, 66, 281, 147, 45, 44,
	80, -226, 285, 74, -223, -223, -218, -218, -218, 260,
	-218, -223, -224, 30, -224, -224, -224, -224, -223, -234,
	73, -234, 74, -227, 74, 70, 66, -197, -2, 23,
	-43, 8, 9, 10, -270, -271, -272, 71, 107, 191,
	192, 144, -193, -102, -193, -193, -109, 71, 71, -176,
	-179, 34, -116, -158, 140, -182, 69, -192, -189, -263,
	-240, -267, -238, -239, 148, 156, 147, 172, 155, -189,
	-263, 155, 152, -240, 156, 148, -186, -240, 144, 23,
	-189, -189, -246, 97, -189, 172, 23, -197, -197, 53,
	-102, -74, -151, 114, -198, -76, -73, 87, -116, -285,
	-78, 114, -205, -209, 123, 252, 165, 250, 243, 270,
	257, 283, 248, 284, -207, -209, -116, -116, -116, -116,
	362, -143, 96, -79, 93, -116, -116, -197, -284, -148,
	-148, -148, -148, -148, -285, -285, -149, -148, -149, -149,
	-285, -149, -149, -285, -149, -149, -149, -149, -285, -149,
	-149, -149, -160, 66, -161, -130, -133, -132, -284, -2,
	-155, -159, -197, -109, 69, 97, -93, -92, 66, 67,
	-94, 66, -92, 56, 56, -157, 68, 69, -132, -284,
	-159, -116, -108, -284, -284, -284, -143, -79, -109, 303,
	307, 308, -250, -251, -254, -253, -197, -258, 156, -245,
	-245, 68, 82, -116, 9, 45, 45, 73, 70, -224,
	-224, -223, -218, -224, 71, 123, -224, 70, 69, 70,
	69, 70, 69, -112, 383, 88, -102, -150, -150, 66,
	70, 69, -210, 71, 71, 71, -102, -179, -116, -223,
	-102, -68, -49, 68, -235, 71, -192, -245, -183, 71,
	71, -192, 71, 71, -197, 45, 71, -102, -197, -235,
	71, -79, -197, -197, -90, 127, -109, 11, 69, -77,
	-285, -116, 127, -285, -218, -218, -218, -228, -218, 237,
	-218, 237, -285, -285, 19, 19, 19, 19, -284, -71,
	326, -79, 69, 69, -143, 172, -149, -149, -149, -149,
	-149, 28, -160, 69, -285, -285, -285, -285, 69, -143,
	-165, -79, -79, 68, -79, -156, -197, 185, -285, -108,
	-188, -156, -156, -156, -153, 70, 69, -218, -156, -120,
	-224, -223, 73, -223, 74, 74, 383, 68, -2, -102,
	-273, -274, -275, 80, 364, 88, 193, 194, 157, 195,
	196, 197, -272, -210, -210, -210, -276, -178, -74, -235,
	-145, 160, 161, -210, -201, -242, -240, 71, -187, 144,
	23, 144, -145, -235, 30, 132, 27, -197, -140, 13,
	-82, -151, -151, 114, -223, 71, -116, -116, -116, -116,
	-116, -285, 73, -116, -116, -285, 16, 45, -133, 47,
	-2, -284, -197, -153, -156, 70, 69, -132, -107, -206,
	-285, -285, -285, -256, -255, 67, 151, 80, -253, -152,
	70, -224, -224, 70, 70, -254, -150, 19, -150, -275,
	73, 197, 193, 197, 197, 197, 197, 198, -277, 38,
	-279, 39, 11, 70, 71, -211, 68, -245, 71, -197,
	-145, 29, 29, -284, -141, 14, 16, -109, -77, -285,
	-285, -285, -285, -70, 107, 365, -285, -285, -128, 9,
	-130, -2, 70, -197, -108, -255, 71, -246, 73, 158,
	70, 184, -20, -2, -8, -9, -10, -11, -13, -44,
	-14, -15, -21, -22, -16, -51, -52, -61, -59, -60,
	-56, -55, -25, -23, -26, -18, -27, -28, -29, -24,
	91, 146, 214, 224, 36, 36, 189, 190, -220, 145,
	-280, 43, -278, -232, 42, 16, -82, -254, -201, -116,
	-260, -261, 172, -142, -79, -196, -129, -81, -79, -196,
	-140, -151, -285, 363, 63, 366, -143, -161, -285, 74,
	-102, -257, -256, 185, -150, -79, -79, 71, -40, -202,
	217, 218, 219, -198, -30, -20, -157, 74, -279, 16,
	-281, 40, 41, 73, -109, 70, 68, -285, 69, -197,
	69, -141, 53, 364, 367, -285, 68, -146, 187, 188,
	-31, -32, 92, 93, 215, 216, 220, -210, 69, 435,
	38, 73, 16, 16, -140, -257, -254, -261, 47, -81,
	53, -156, -150, 71, 71, 96, 94, -32, -79, -30,
	19, 19, 19, 29, -198, 96, -20, 73, 73, -141,
	70, 174, 365, 70, -12, -19, -11, -8, -9, -10,
	224, 91, -30, 93, 435, -41, 74, -2, -39, -38,
	74, -41, 222, 88, 223, 71, -116, -257, 175, 366,
	-265, -266, 66, -150, -30, 435, -30, 96, 94, -33,
	-34, 95, -20, 69, 221, -284, 367, -266, 66, -265,
	66, 10, 9, 435, 96, 435, 146, -30, 96, 94,
	-34, -79, -38, -116, 171, -264, 159, 154, 157, 30,
	-264, 96, 91, 435, 146, -30, 93, -285, -285, 153,
	29, 82, 96, 435, -30, 146, 96, 435, 146,
}
var yyDef = [...]int{

	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, -2, 527, 527, 527, 527, 527, 527, 0, -2,
	395, 396, 0, 0, 0, 0, -2, 496, 497, 498,
	500, 501, 516, -2, 1324, 1324, 0, 0, 1324, 0,
	182, 0, 0, 0, 0, 37, 0, 0, 53, 54,
	898, 0, 519, 508, 509, 0, 0, 1322, 1, 3,
	844, 0, 536, 529, 0, 898, 898, 0, 0, 84,
	0, 0, 0, 0, 0, 896, 896, 0, 896, 919,
	0, 915, 916, 917, 0, 894, 0, 894, 894, 894,
	894, 894, 0, 448, 620, 928, 929, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 0, 0, 0,
	489, 0, 1325, 1325, 463, 0, 465, 0, 0, 0,
	0, 0, 474, 477, 1325, 346, 347, 348, 493, 494,
	483, 495, 0, 0, 0, 0, 0, 520, 521, 522,
	523, 1324, 1324, 526, 161, 163, 0, 183, 0, 186,
	189, 934, 502, 0, 527, 0, 531, 0, 0, 899,
	499, 42, 43, 0, 604, 605, 606, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 0, 848, 0, 0, 539,
	537, 538, 528, 0, 550, 559, 0, 629, 0, 634,
	636, -2, -2, 0, 677, 678, 679, 680, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 706, 707,
	708, 709, 710, 814, 815, 816, 817, 818, 819, 820,
	821, 638, 639, 811, 868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 0, 773, 773,
	773, 773, 773, 773, 773, 773, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 66, 620, 70,
	1273, 0, 872, -2, -2, 874, 0, 0, 0, -2,
	-2, -2, -2, 1101, -2, 811, 0, 85, 0, 223,
	224, 0, 1113, 367, 926, 927, 1103, 922, 923, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 449, 1325, 489, 452, 0,
	0, 896, 896, 1325, 1325, 1325, 0, 0, 0, 461,
	1326, 1327, 462, 0, 369, 370, 489, 489, 1325, 1325,
	486, 0, 486, 486, 484, 485, 480, 481, 0, 476,
	0, 478, 503, 0, 0, 510, 512, 513, 514, 515,
	511, 0, 524, 525, 0, 0, 165, 0, 0, 185,
	167, 0, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 0, 188, 0, 932, 935, 507,
	536, 39, 49, 0, 527, 532, 533, 0, 1325, 0,
	0, 0, 48, 1323, 34, 0, 0, 845, 0, 836,
	837, 841, 841, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 0, 534, 540, 541, 530, 0, 551, 0, 0,
	0, 560, 0, 562, 563, 564, 565, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 656, 657,
	658, 659, 660, 661, 662, 635, 0, 649, 0, 0,
	0, 697, 698, 699, 700, 701, 702, 703, 0, 539,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 803, 0, 756, 765, 0,
	757, 766, 758, 767, 759, 0, 760, 768, 761, 769,
	762, 763, 770, 764, 0, 0, 0, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 539, 539, 0, 0, 0, 539, 0, 0, 539,
	0, 0, 0, 0, 539, 0, 0, 0, 68, 0,
	619, 0, 566, 568, 569, 570, -2, 0, 623, 669,
	-2, 0, 0, 0, 60, 61, 0, 0, 0, 0,
	71, 73, 0, 0, 1273, 875, 876, 322, 889, 890,
	891, 0, 887, 0, 384, 0, 225, 0, 0, 233,
	310, 241, 242, 243, 303, 245, 303, 303, 0, 303,
	303, 303, 303, 303, 319, 319, 319, 319, 319, 286,
	287, 288, 289, 290, 0, 0, 263, 303, 303, 303,
	267, 293, 294, 295, 296, 297, 298, 299, 300, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 305, 305,
	307, 307, 307, 307, 307, 0, 366, 0, 920, 82,
	0, 1325, 0, 1325, 0, 0, 221, 117, 0, 0,
	440, 895, 0, 442, 62, 443, 444, 445, 446, 621,
	930, 931, 450, 451, 490, 491, 0, 0, 455, 456,
	457, 458, 459, 460, 371, 466, 467, 468, 473, 489,
	0, 0, 0, 584, 489, 475, 663, 505, 504, 0,
	517, 162, 164, 166, 184, 0, 0, 187, 190, 0,
	0, 0, 539, 0, 536, 0, 426, 44, 45, 0,
	0, 857, 849, 0, 0, 0, 0, 0, 839, 842,
	843, 840, 0, 822, 0, 0, 542, 535, 36, 630,
	631, 633, 650, 0, 652, 654, 561, 552, 0, 812,
	-2, 640, 641, 665, 666, 667, 0, 0, 0, 0,
	663, 645, 0, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 696, 787, 788, 0, 694,
	695, 704, 671, 668, 0, 867, 0, 0, 673, 546,
	547, 0, 0, 743, 0, 0, 679, 814, 0, 679,
	814, 0, 0, 0, 0, 809, 806, 0, 0, 774,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 610, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 577, 1204,
	579, 0, 623, 0, 0, 0, 627, 0, 627, 65,
	627, 67, 0, 622, 873, 0, 0, 0, 76, 77,
	72, 877, 0, 883, 884, 885, 812, 0, 222, 385,
	387, 390, 391, 392, 226, 228, 229, 230, 0, 1113,
	359, 1214, 1254, -2, 353, 1140, -2, -2, 232, 312,
	311, 244, 0, 319, 319, 303, 303, 303, 303, 272,
	319, 275, 278, 279, 322, 0, 322, 322, 322, 322,
	319, 0, 0, 264, 265, 266, 255, 0, 256, 305,
	258, 0, 259, 260, 261, 262, 365, 0, 0, 0,
	0, 0, 89, 897, 90, 0, 118, 119, 93, 0,
	438, 1325, 0, 1325, 1325, 627, 0, 0, 469, 487,
	488, 486, 489, 0, 472, 479, 0, 506, 168, 169,
	191, 68, 0, 933, 534, 50, 539, 397, 398, 1324,
	-2, 427, 912, 427, 427, 416, 339, 427, 902, 903,
	904, 905, 906, 907, 908, 909, 0, 0, 0, 0,
	0, 846, 847, 838, 0, 892, 893, 823, 824, 83,
	543, 651, 653, 655, 0, 671, 642, 663, 646, 0,
	643, 0, 637, 0, 676, -2, 0, 741, 0, 742,
	0, 0, 0, 0, 0, 780, 0, 0, 781, 0,
	752, 835, 0, 807, 0, 0, 755, 775, 0, 0,
	776, 777, 778, 779, 730, 0, 731, 0, 0, 0,
	0, 0, 737, 738, 739, 740, 0, 0, 557, 557,
	557, 0, 557, 557, 0, 557, 557, 557, 557, 0,
	557, 557, 557, 861, 0, 0, 852, 0, 0, 627,
	869, 0, 567, 598, 600, 0, 595, 608, 609, 611,
	0, 613, 0, 615, 616, 586, 573, 670, 574, 0,
	0, 0, 623, 583, 0, 0, 0, 835, 0, 627,
	58, 59, 0, 74, 75, 0, 0, 81, 323, 324,
	0, 0, 388, 0, 227, 0, 0, 341, 353, 349,
	350, 353, 344, 354, 345, 0, 234, 235, 236, 237,
	238, 239, 314, 0, 0, 0, 318, 0, 326, 328,
	0, 240, 313, 0, 322, 322, 319, 270, 271, 303,
	276, 322, 280, 0, 281, 282, 283, 284, 322, 0,
	301, 0, 0, 257, 0, 381, 0, 921, 82, 82,
	0, 120, 121, 122, 0, 94, 95, 0, 0, 0,
	0, 0, 441, 63, 453, 454, 464, 372, 373, 489,
	471, 0, 664, 319, 0, 542, 0, 400, 0, 1324,
	353, 0, 417, 418, 428, 429, 430, 431, 0, 0,
	1324, 0, 0, 0, 429, 0, 0, 0, 913, 914,
	0, 0, 0, 340, 0, 0, 0, 859, 858, 850,
	35, 627, 0, 553, 813, 0, 644, 0, 647, 711,
	674, 548, 0, 0, 303, 303, 792, 303, 307, 795,
	303, 797, 303, 800, 0, 0, 0, 0, 0, 0,
	0, 804, 754, 810, 0, 0, 0, 554, 835, 732,
	733, 734, 735, 736, 557, 557, 715, 558, 716, 717,
	557, 719, 720, 557, 722, 723, 724, 725, 557, 727,
	728, 729, 51, 0, 861, 851, 863, 865, 0, 0,
	0, 0, 590, 835, 0, 0, 592, 599, 0, 0,
	593, 0, 594, 612, 614, 571, 0, 0, 575, 0,
	0, -2, 582, 0, 0, 0, 844, 628, 57, 78,
	79, 80, 386, 389, 0, 355, 303, 358, 0, 342,
	343, 0, 315, 316, 0, 325, 327, 329, 304, 268,
	269, 322, 277, 273, 320, 321, 285, 319, 0, 319,
	0, 308, 0, 368, 382, 0, 0, 87, 0, 0,
	101, 0, 97, 0, 0, 0, 439, 470, 585, 944,
	617, 83, 399, 0, 423, 0, 403, 920, 351, 394,
	404, 405, 410, 411, 412, 0, 0, 407, 0, 423,
	0, 420, 0, 0, 46, 0, 825, 0, 83, 83,
	712, 648, 0, 744, 789, 319, 793, 794, 796, 798,
	799, 801, 746, 745, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 713, 714, 718, 721,
	726, 0, 52, 0, 866, -2, 0, 69, 0, 844,
	870, 871, 596, 0, 601, 0, 588, 0, 623, 580,
	0, 0, 0, 0, 56, 331, 0, 841, 0, 317,
	274, 322, 302, 322, 0, 0, 383, 0, 82, 0,
	82, 102, 103, 0, 0, 0, 108, 0, 0, 0,
	0, 0, 96, 98, 99, 100, 946, 940, 0, 0,
	402, 424, 0, 233, 0, 353, 352, 419, 0, 910,
	911, 0, 414, 423, 0, 0, 0, 860, 831, 0,
	627, 0, 544, 549, 790, 791, 0, 0, 0, 0,
	782, 753, 805, 0, 0, 555, 0, 0, 864, 0,
	855, 0, 591, 55, 0, 587, 0, 576, 578, 623,
	624, 625, 626, 330, 334, 0, 339, 0, 356, 357,
	0, 291, 292, 306, 309, 0, 88, 0, 0, 104,
	105, 106, 107, 109, 110, 0, 0, 0, 900, 948,
	-2, 0, 0, 401, 425, 231, 0, 920, 406, 413,
	415, 0, 422, 0, 40, 0, 0, 825, 83, 747,
	749, 748, 750, 0, 0, 0, 771, 772, 835, 0,
	854, 0, 597, 589, 581, 335, 336, 0, 338, 0,
	332, 0, 82, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 0, 0, 0, 111, 112, 113, 114, 586, 0,
	940, 0, 942, 0, 939, 0, 627, 0, 0, 421,
	0, 433, 0, 832, 833, 834, 826, 827, 829, 830,
	831, 545, 751, 0, 0, 0, 0, 862, -2, 337,
	0, 86, 333, 123, 92, 0, 0, 922, 0, 0,
	150, 151, 152, 924, 0, 192, 33, 0, 947, 0,
	945, 0, 0, 941, 825, 332, 0, 432, 0, 0,
	0, 41, 783, 0, 786, 556, 0, 82, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 148, 0, 0,
	901, 949, 0, 0, 831, 408, 0, 434, 0, 828,
	784, 0, 0, 124, 125, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 925, 115, 193, 943, 937, 38,
	332, 0, 0, 360, 82, 126, 127, 128, 129, 130,
	0, 132, 0, 0, 0, 144, 145, 146, 0, 153,
	155, 156, 157, 0, 159, 160, 149, 409, 0, 0,
	361, 362, 0, 91, 0, 0, 0, 0, 0, 0,
	141, 0, 147, 0, 158, 0, 785, 363, 0, 364,
	0, 0, 0, 0, 0, 136, 137, 0, 0, 0,
	142, 0, 154, 0, 0, 374, 376, 377, 0, 0,
	375, 131, 133, 0, 139, 0, 0, 435, 436, 378,
	379, 380, 0, 0, 0, 138, 0, 143, 140,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 435,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:416
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:452
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:464
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:495
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:533
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:563
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:575
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:629
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:675
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:725
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:749
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:753
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:757
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:761
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:769
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 91:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:777
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:781
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:786
		{
			yyVAL.procedureParams = nil
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:806
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:823
		{
			yyVAL.characteristics = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:843
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:847
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:851
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:859
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:863
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:867
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:871
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:890
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.str = BeforeStr
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.str = AfterStr
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.str = InsertStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.str = UpdateStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.str = DeleteStr
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:923
		{
			yyVAL.triggerOrder = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:947
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:953
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:957
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:973
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:979
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 138:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:984
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:989
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 140:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:995
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1003
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1013
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1019
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1023
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1027
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1031
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1039
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1108
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.statement = &Resignal{}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1198
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.exprs = nil
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.exprs = nil
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1277
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1288
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1300
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1315
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1402
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1692
		{
			yyVAL.sqlVal = nil
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1701
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1705
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1713
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1723
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1731
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1740
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = ""
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.colKeyOpt = colKey
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1829
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1833
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1838
		{
			yyVAL.indexOptions = nil
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1858
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1887
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 360:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1973
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 361:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1977
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 362:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1981
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 363:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1985
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1989
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2009
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2038
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2071
		{
			yyVAL.boolean = true
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.boolean = true
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.boolean = false
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = yyDollar[1].str
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2141
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2158
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2168
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2175
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2194
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2203
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 409:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2207
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2225
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2229
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2236
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2258
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2267
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2271
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnOrder = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2290
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2296
		{
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
		}
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2307
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2323
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2327
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2343
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2351
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2363
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2379
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2395
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2405
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2414
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2425
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2433
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2437
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2442
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2446
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2450
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2454
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2458
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2462
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2478
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2486
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2490
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2494
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2498
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 470:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2502
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2507
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2521
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2529
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2553
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = "full "
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2609
		{
			yyVAL.showFilter = nil
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2623
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.str = SessionStr
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.str = GlobalStr
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &Begin{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2657
		{
			yyVAL.statement = &Begin{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.statement = &Commit{}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = &Rollback{}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2675
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2681
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2685
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2689
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2693
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2727
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.statement = &OtherRead{}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2774
		{
			setAllowComments(yylex, true)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2784
		{
			yyVAL.bytes2 = nil
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2788
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = UnionStr
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = UnionAllStr
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = UnionDistinctStr
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2807
		{
			yyVAL.byt = 0
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2811
		{
			yyVAL.byt = 1
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.str = SQLCacheStr
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2829
		{
			yyVAL.str = ""
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = DistinctStr
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = StraightJoinHint
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2852
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2860
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2883
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2901
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2912
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 556:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2916
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.over = nil
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.over = yyDollar[1].over
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2944
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2980
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3008
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3012
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3023
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3038
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3042
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3050
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = nil
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3070
		{
			yyVAL.columns = nil
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3094
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3107
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3111
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3115
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3127
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3131
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3137
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.empty = struct{}{}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = JoinStr
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = JoinStr
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = JoinStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = StraightJoinStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = LeftJoinStr
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = LeftJoinStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = RightJoinStr
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = RightJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = NaturalJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3201
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3217
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3227
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3242
		{
			yyVAL.indexHints = nil
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3246
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3250
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3254
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3259
		{
			yyVAL.expr = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3263
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3299
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = IsNullStr
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.str = IsNotNullStr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3369
		{
			yyVAL.str = IsTrueStr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.str = IsNotTrueStr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = IsFalseStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = IsNotFalseStr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = EqualStr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = LessThanStr
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = GreaterThanStr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = LessEqualStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = GreaterEqualStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = NotEqualStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3416
		{
			yyVAL.expr = nil
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3420
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3426
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3456
		{
			yyVAL.selectExprs = nil
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3477
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3601
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3605
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3625
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3775
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3787
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3795
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3799
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3803
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3807
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 753:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3815
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3819
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3867
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3872
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3885
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3895
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3899
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 772:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3903
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3924
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.str = BooleanModeStr
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = QueryExpansionStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4012
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4020
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4037
		{
			yyVAL.expr = nil
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string("")
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.expr = nil
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4075
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4085
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4089
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.expr = &NullVal{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.exprs = nil
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4156
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.expr = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.orderBy = nil
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4194
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4204
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = AscScr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = AscScr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = DescScr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			yyVAL.limit = nil
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4240
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4244
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = ForUpdateStr
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4257
		{
			yyVAL.str = ShareModeStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4278
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4283
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4287
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4291
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4302
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4310
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4315
		{
			yyVAL.assignExprs = nil
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4319
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4371
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4398
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4411
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4424
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.setScope = SetScope_Global
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.setScope = SetScope_Session
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.setScope = SetScope_Session
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4462
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4469
		{
			yyVAL.bytes = []byte("charset")
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &Default{}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4493
		{
			yyVAL.byt = 0
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4495
		{
			yyVAL.byt = 1
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.byt = 0
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yyVAL.byt = 1
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = IgnoreStr
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4508
		{
			yyVAL.sqlVal = nil
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.empty = struct{}{}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.empty = struct{}{}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.empty = struct{}{}
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.empty = struct{}{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4537
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = UniqueStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = FulltextStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.str = SpatialStr
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = yyDollar[1].str
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4557
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4559
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = string("")
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4608
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4611
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4616
		{
			yyVAL.EnclosedBy = nil
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4620
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4625
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.sqlVal = nil
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4638
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4643
		{
			yyVAL.sqlVal = nil
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.Fields = nil
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4656
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4661
		{
			yyVAL.Lines = nil
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4670
		{
			yyVAL.sqlVal = nil
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4674
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			decNesting(yylex)
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5090
		{
			skipToEnd(yylex)
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5095
		{
			skipToEnd(yylex)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			skipToEnd(yylex)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
