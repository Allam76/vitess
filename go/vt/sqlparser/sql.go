// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	tkner := yylex.(*Tokenizer)
	if tkner.specialComment != nil {
		return tkner.specialPosOffset + tkner.specialComment.Position
	}
	return tkner.Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:62
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824
const NVAR = 57825
const PASSWORD_LOCK = 57826

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1042,
	-1, 43,
	147, 1106,
	148, 1124,
	-2, 231,
	-1, 49,
	186, 675,
	187, 675,
	-2, 665,
	-1, 547,
	135, 1134,
	-2, 1128,
	-1, 548,
	135, 1135,
	-2, 1129,
	-1, 652,
	98, 1412,
	135, 1412,
	-2, 1090,
	-1, 653,
	98, 1530,
	135, 1530,
	-2, 1091,
	-1, 658,
	98, 1436,
	135, 1436,
	-2, 1092,
	-1, 659,
	98, 1483,
	135, 1483,
	-2, 1093,
	-1, 660,
	98, 1484,
	135, 1484,
	-2, 1094,
	-1, 661,
	98, 1362,
	135, 1362,
	-2, 1098,
	-1, 663,
	98, 1460,
	135, 1460,
	-2, 1100,
	-1, 1175,
	1, 772,
	5, 772,
	12, 772,
	13, 772,
	14, 772,
	15, 772,
	17, 772,
	19, 772,
	30, 772,
	31, 772,
	56, 772,
	57, 772,
	58, 772,
	59, 772,
	60, 772,
	62, 772,
	63, 772,
	66, 772,
	67, 772,
	69, 772,
	70, 772,
	405, 772,
	503, 772,
	-2, 804,
	-1, 1181,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1426,
	135, 1137,
	-2, 1133,
	-1, 1592,
	44, 524,
	-2, 1374,
	-1, 1596,
	68, 522,
	72, 522,
	-2, 1406,
	-1, 1597,
	68, 524,
	-2, 1324,
	-1, 1600,
	68, 520,
	72, 520,
	-2, 1242,
	-1, 1601,
	68, 521,
	72, 521,
	-2, 1252,
	-1, 1718,
	44, 567,
	154, 569,
	156, 567,
	157, 567,
	-2, 602,
	-1, 1792,
	5, 51,
	-2, 870,
	-1, 2092,
	69, 1299,
	70, 1299,
	135, 1299,
	-2, 706,
	-1, 2115,
	1, 825,
	5, 825,
	12, 825,
	13, 825,
	14, 825,
	15, 825,
	17, 825,
	19, 825,
	30, 825,
	31, 825,
	56, 825,
	57, 825,
	58, 825,
	59, 825,
	60, 825,
	62, 825,
	63, 825,
	66, 825,
	67, 825,
	69, 825,
	70, 825,
	405, 825,
	503, 825,
	-2, 804,
	-1, 2220,
	154, 570,
	-2, 568,
	-1, 2281,
	5, 51,
	-2, 1062,
	-1, 2482,
	41, 1144,
	-2, 1142,
	-1, 2618,
	5, 51,
	-2, 1065,
}

const yyPrivate = 57344

const yyLast = 34481

var yyAct = [...]int{
	614, 80, 2634, 2763, 2813, 2787, 870, 2635, 2777, 419,
	2600, 2778, 2765, 1645, 2535, 7, 2667, 2534, 6, 2533,
	5, 2536, 8, 2034, 2502, 2605, 2293, 2682, 2621, 2660,
	2665, 2598, 2429, 550, 2109, 2129, 1827, 2482, 2008, 1212,
	2389, 1130, 1643, 1857, 2017, 539, 1602, 1550, 2085, 2532,
	3, 1544, 553, 2484, 2370, 2180, 1878, 677, 2325, 83,
	2347, 2341, 1404, 2622, 2086, 613, 2130, 1548, 1302, 1655,
	402, 405, 675, 444, 444, 1572, 532, 450, 2016, 465,
	1593, 80, 902, 1584, 566, 2214, 1884, 1941, 1583, 2204,
	93, 1828, 2082, 106, 1741, 1582, 1634, 2101, 1717, 2094,
	2056, 548, 1397, 1451, 1460, 1412, 1347, 1304, 1681, 1589,
	2027, 1527, 1523, 1320, 1301, 1885, 1618, 1282, 1924, 1630,
	1028, 654, 672, 1192, 1534, 1172, 1517, 1428, 1031, 1175,
	531, 952, 1697, 1035, 931, 671, 1191, 650, 1171, 1048,
	886, 2026, 535, 651, 657, 464, 422, 646, 1352, 127,
	643, 421, 127, 930, 1146, 857, 1183, 2835, 127, 2831,
	2821, 2803, 2801, 2782, 2758, 1986, 2690, 1147, 447, 447,
	82, 1345, 2165, 555, 2461, 2319, 2794, 462, 36, 673,
	36, 127, 869, 2326, 2676, 2776, 69, 2616, 85, 1668,
	2459, 2328, 127, 414, 2746, 1668, 127, 680, 2651, 2177,
	127, 2675, 1822, 2615, 2077, 2462, 2578, 2601, 1763, 437,
	1039, 431, 442, 425, 127, 447, 36, 680, 2275, 1823,
	856, 2414, 36, 2474, 1952, 127, 87, 88, 89, 90,
	91, 890, 891, 1866, 432, 893, 1865, 1569, 1570, 1867,
	81, 36, 81, 72, 39, 40, 2125, 2126, 1696, 118,
	114, 115, 1351, 116, 1193, 59, 1194, 859, 2124, 862,
	863, 78, 1021, 1546, 1568, 41, 2331, 36, 892, 72,
	39, 40, 1393, 1394, 905, 1349, 1350, 1368, 81, 2516,
	667, 906, 907, 980, 81, 120, 119, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 413,
	412, 1074, 988, 81, 2329, 2330, 2332, 2333, 2334, 416,
	1907, 1604, 627, 1695, 633, 635, 634, 631, 632, 630,
	629, 628, 2671, 2671, 454, 949, 1619, 2562, 2057, 81,
	2785, 2788, 2784, 2311, 2312, 1348, 2262, 121, 2666, 122,
	2260, 424, 423, 426, 1610, 1612, 396, 1611, 1462, 411,
	1624, 430, 1619, 461, 1983, 1389, 2668, 2668, 1388, 1387,
	1386, 1725, 1719, 1720, 1385, 1718, 1721, 1722, 434, 2059,
	1384, 964, 438, 43, 74, 46, 45, 48, 984, 985,
	1898, 2672, 2672, 455, 109, 1947, 441, 912, 2563, 1606,
	1975, 1606, 72, 39, 40, 1903, 1902, 1631, 2460, 80,
	80, 1726, 2342, 2771, 49, 77, 76, 2400, 2187, 2487,
	2345, 47, 2203, 920, 41, 2692, 922, 1899, 921, 1980,
	2348, 2349, 2350, 2351, 2343, 2344, 1708, 99, 2691, 2641,
	2639, 1332, 1905, 915, 1891, 2582, 541, 2359, 2366, 1709,
	1892, 2698, 1379, 112, 2572, 1949, 1656, 2357, 919, 923,
	2791, 903, 2454, 904, 906, 907, 57, 58, 1017, 2564,
	2687, 2685, 2686, 2453, 913, 914, 1025, 889, 995, 2452,
	127, 996, 2451, 66, 962, 67, 2450, 427, 428, 429,
	435, 1358, 439, 440, 443, 117, 101, 2448, 2449, 2741,
	98, 2568, 2569, 1650, 397, 2712, 111, 110, 2580, 2478,
	68, 2190, 2623, 964, 1951, 1901, 2679, 2680, 1904, 406,
	2061, 987, 2456, 2295, 127, 2065, 1848, 2060, 2774, 2058,
	1649, 403, 901, 2769, 2063, 2530, 2764, 898, 2565, 75,
	113, 53, 54, 61, 2760, 62, 2178, 2062, 107, 2164,
	2767, 2327, 2181, 2182, 2183, 2184, 2185, 1083, 108, 2574,
	1085, 407, 2064, 2066, 2181, 2182, 2183, 2184, 2185, 415,
	2205, 1966, 1967, 899, 900, 127, 1702, 964, 897, 861,
	860, 2371, 2372, 963, 103, 1724, 104, 2528, 2614, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 2517, 79, 1128, 79, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 73, 1145, 1148, 1148,
	1148, 1154, 1148, 1148, 1154, 1148, 1154, 1163, 1164, 1165,
	1166, 1023, 1176, 1051, 1016, 1014, 1633, 2475, 1953, 971,
	79, 1914, 73, 1609, 2669, 2669, 79, 1333, 2640, 916,
	1619, 1950, 997, 1351, 1129, 399, 1002, 2579, 2477, 2573,
	2189, 974, 404, 2457, 404, 79, 2817, 2754, 1211, 1184,
	2827, 1210, 404, 2766, 2768, 433, 1349, 1350, 1211, 1211,
	1353, 2430, 1994, 1170, 1992, 2219, 109, 2836, 1942, 2833,
	400, 79, 404, 657, 1900, 2432, 2822, 969, 657, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 1012, 100, 1084, 2804, 1355, 858, 1205, 1354, 872,
	2584, 2133, 960, 970, 1943, 966, 1211, 1883, 2381, 460,
	1994, 2382, 127, 127, 127, 1974, 1883, 1271, 1971, 1955,
	1954, 1703, 2005, 1553, 1555, 1290, 1288, 917, 680, 1275,
	1855, 1854, 1883, 1853, 1883, 854, 1969, 1020, 864, 967,
	968, 1665, 1196, 2245, 1883, 73, 1664, 1197, 368, 2385,
	1086, 1087, 2431, 1149, 1151, 1153, 1155, 1157, 1159, 1160,
	1162, 1888, 2237, 1182, 1209, 1008, 1150, 1152, 2577, 1156,
	1158, 1187, 1161, 1973, 1972, 1870, 1862, 2815, 111, 110,
	2816, 1801, 2814, 1798, 959, 1179, 1758, 1007, 1003, 1004,
	1005, 1006, 1009, 1010, 1011, 1013, 1944, 1945, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	1882, 1554, 1074, 1746, 1731, 1407, 2000, 1992, 1204, 1882,
	1573, 1997, 2154, 1189, 1996, 1999, 1992, 1206, 1054, 882,
	1211, 1074, 2199, 1993, 1994, 1882, 2380, 1882, 1064, 1564,
	444, 1074, 2252, 1284, 1330, 2713, 2714, 1882, 2710, 2711,
	2004, 2611, 2610, 1036, 2001, 1682, 2599, 444, 2396, 2386,
	1303, 2011, 1528, 1055, 1321, 1672, 1400, 1047, 2464, 965,
	972, 973, 975, 976, 977, 978, 979, 2009, 981, 982,
	983, 2155, 986, 2099, 989, 990, 991, 992, 993, 1063,
	1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1064, 1283, 2465, 1074, 895, 2098, 1086, 1087, 1086, 1087,
	1306, 1796, 1435, 1795, 1340, 96, 545, 1067, 1068, 1069,
	1070, 1071, 1064, 1045, 551, 1074, 680, 1433, 1434, 1432,
	1202, 1046, 1045, 1131, 447, 447, 924, 444, 1046, 1045,
	1047, 888, 2079, 127, 1144, 2824, 127, 908, 865, 1047,
	1328, 447, 447, 2683, 127, 2722, 1047, 2721, 1518, 1343,
	95, 1322, 1673, 127, 127, 127, 127, 2820, 1046, 1045,
	2755, 1377, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 447, 1277, 1074, 1047, 1324, 80, 1325,
	1285, 1518, 1292, 1813, 2744, 1930, 1307, 459, 94, 2358,
	1361, 896, 2352, 2141, 467, 2807, 2788, 2806, 1316, 1317,
	1318, 1319, 1046, 1045, 1042, 1310, 1311, 1072, 1073, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1064, 1046, 1045, 1074,
	1047, 447, 447, 447, 2757, 887, 680, 1391, 2644, 1383,
	81, 910, 1797, 1032, 1359, 1047, 1033, 1046, 1045, 1335,
	1336, 1431, 2636, 1338, 2684, 2828, 80, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1064, 1047, 447, 1074, 871, 1341,
	2637, 447, 447, 1405, 1406, 2619, 1356, 1360, 2472, 1398,
	1357, 2471, 1426, 2734, 1382, 2470, 640, 641, 2469, 2463,
	1455, 1456, 127, 1429, 127, 1046, 1045, 680, 1743, 1744,
	1745, 2683, 2575, 1132, 1520, 1129, 1046, 1045, 1425, 2829,
	1409, 1046, 1045, 1047, 1378, 127, 2638, 1381, 2081, 2318,
	2317, 1051, 1929, 2733, 1047, 1178, 1452, 1390, 1453, 1047,
	1927, 2695, 1424, 1908, 1410, 1046, 1045, 1411, 1395, 1418,
	1420, 1421, 1868, 955, 1869, 1419, 954, 1547, 2576, 928,
	2693, 1556, 1498, 1047, 1176, 2650, 2571, 2570, 1176, 1422,
	2527, 1504, 1507, 2479, 2447, 2410, 2355, 680, 1519, 2354,
	2353, 2315, 927, 124, 2210, 2147, 1925, 1692, 1337, 1470,
	1308, 2720, 401, 2719, 1475, 874, 875, 876, 877, 878,
	879, 880, 2581, 2525, 680, 680, 1129, 2496, 1888, 2490,
	2378, 1430, 2248, 2233, 2229, 1559, 2221, 1309, 2191, 1561,
	2175, 2174, 2173, 657, 1960, 1959, 645, 1306, 1686, 1670,
	669, 1669, 1454, 1334, 855, 1331, 1300, 1326, 1552, 1299,
	1298, 1297, 1426, 1286, 1280, 1279, 1543, 1278, 867, 1276,
	127, 950, 884, 410, 408, 2421, 2747, 1027, 127, 881,
	127, 1291, 1579, 1271, 994, 127, 127, 2489, 1577, 127,
	127, 127, 673, 1557, 2441, 1805, 1131, 2440, 1662, 2304,
	2740, 2657, 1027, 2304, 2655, 2304, 2653, 1458, 2170, 680,
	680, 1466, 1578, 2304, 2529, 2148, 571, 570, 573, 574,
	575, 576, 1477, 1478, 1598, 572, 577, 1402, 1566, 1858,
	1154, 1590, 1571, 960, 1565, 1490, 1562, 2421, 2521, 1494,
	2421, 2437, 1640, 1641, 1587, 1620, 1621, 1622, 1623, 1580,
	1179, 2421, 1027, 1515, 1027, 2421, 2420, 1179, 1660, 1661,
	2705, 1179, 1636, 1637, 1638, 1639, 2304, 2303, 2097, 1536,
	1539, 1540, 1541, 1537, 1688, 1538, 1542, 127, 1401, 2102,
	2103, 2285, 1027, 1632, 1730, 1027, 1531, 127, 1530, 127,
	127, 447, 447, 447, 1415, 1416, 127, 1728, 2239, 1858,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 2162, 2161, 1074, 2158, 2159, 1185, 467, 2158,
	2157, 1756, 1027, 127, 127, 127, 1747, 1531, 1694, 1531,
	1027, 1705, 1704, 1496, 1689, 1496, 1027, 1185, 1362, 1208,
	1207, 1365, 1366, 1367, 2488, 1369, 1370, 84, 127, 1371,
	127, 1558, 1654, 1184, 680, 1372, 2240, 1496, 680, 1373,
	1374, 1674, 1375, 1376, 2083, 1426, 1680, 2097, 1858, 999,
	2662, 2279, 1668, 1186, 1687, 1188, 998, 2171, 1693, 958,
	680, 1131, 2160, 680, 1684, 1502, 1503, 957, 2111, 1700,
	958, 1425, 1653, 1186, 1985, 1184, 1052, 1872, 1429, 1567,
	1756, 1756, 2240, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1707, 1785, 1784, 1710, 1578, 1536, 1539, 1540, 1541,
	1537, 1339, 1538, 1542, 883, 2097, 1727, 960, 1824, 1826,
	1733, 1734, 1176, 1176, 1176, 1176, 1176, 1735, 1667, 1403,
	1022, 1380, 1346, 1289, 1287, 1752, 1190, 668, 1547, 81,
	1849, 1576, 2677, 2654, 2110, 2495, 2493, 2320, 1606, 1176,
	1748, 2291, 1635, 2140, 2102, 2103, 2798, 1631, 953, 1876,
	1179, 964, 1651, 1626, 1625, 1272, 947, 1825, 1762, 1764,
	418, 1644, 1683, 1829, 2796, 2779, 2169, 2105, 1830, 2083,
	1931, 1776, 1777, 1778, 1779, 1294, 1000, 1498, 961, 956,
	1852, 1714, 1742, 1860, 2108, 1861, 1430, 1790, 1840, 81,
	1859, 1838, 1842, 1841, 1540, 1541, 1839, 2107, 1837, 657,
	1836, 1642, 2716, 1844, 536, 537, 2674, 2014, 1732, 1270,
	1413, 1851, 2704, 127, 127, 127, 127, 127, 2282, 1040,
	1041, 1740, 1739, 1812, 2411, 127, 80, 2377, 449, 127,
	2307, 2228, 2227, 127, 1887, 1889, 1890, 1605, 1832, 1833,
	127, 1835, 2146, 2586, 2145, 1271, 1026, 1843, 1038, 1856,
	1831, 1873, 2144, 1834, 1880, 2135, 2589, 2649, 2648, 2483,
	2694, 2481, 2567, 2566, 680, 409, 1963, 1918, 1196, 1203,
	444, 1863, 1029, 1965, 1917, 1933, 1919, 1920, 1921, 1922,
	1871, 2466, 2467, 2729, 1030, 1179, 1179, 1179, 1179, 1179,
	1875, 1881, 945, 1886, 929, 1958, 926, 925, 885, 2500,
	2499, 1179, 1283, 2277, 1909, 1910, 1405, 1406, 2360, 80,
	2387, 1916, 1179, 1691, 1647, 2361, 2706, 1957, 1293, 2642,
	2485, 1923, 1934, 1040, 1041, 1926, 680, 1679, 612, 96,
	1396, 1274, 1036, 1928, 1738, 447, 1018, 1019, 2728, 2727,
	2726, 2444, 1737, 1713, 2035, 911, 533, 2697, 2696, 127,
	447, 1948, 2646, 2590, 2508, 2504, 534, 84, 1129, 2503,
	2390, 1858, 1936, 1937, 1938, 447, 2800, 2799, 86, 2208,
	1981, 1961, 1979, 1978, 1802, 1799, 1169, 1711, 1181, 1323,
	1043, 1970, 1968, 2799, 2800, 447, 2518, 680, 2143, 1399,
	668, 456, 458, 447, 2012, 2013, 1426, 55, 1976, 1962,
	1984, 2546, 52, 1, 2088, 80, 1982, 1701, 1989, 1363,
	2019, 2340, 680, 680, 1987, 1998, 2003, 2339, 127, 2346,
	664, 1990, 1425, 1706, 676, 1791, 2548, 19, 680, 2113,
	2547, 18, 2549, 20, 2117, 2118, 2119, 1327, 2021, 2084,
	2020, 2025, 2550, 21, 873, 680, 2029, 1814, 2545, 15,
	2078, 2096, 2176, 1524, 2089, 1829, 2179, 2036, 2544, 14,
	1830, 2039, 2040, 2041, 1946, 1995, 2044, 2006, 2007, 2087,
	2356, 2010, 2538, 10, 2561, 34, 2559, 33, 2068, 2116,
	2067, 2030, 2031, 2123, 2558, 32, 2557, 28, 1398, 1281,
	2037, 2038, 2556, 27, 2112, 2555, 26, 2121, 2553, 23,
	2552, 22, 2045, 2046, 2047, 2048, 680, 2091, 680, 2052,
	2053, 2054, 2106, 2554, 24, 2543, 13, 2455, 2137, 2540,
	12, 2138, 868, 2139, 2539, 11, 1652, 2167, 2168, 2114,
	1640, 680, 1641, 951, 2019, 2647, 444, 2585, 2134, 2186,
	2136, 2537, 9, 2128, 2587, 2480, 2362, 2324, 2127, 2323,
	1940, 1939, 680, 946, 680, 1344, 680, 467, 680, 1988,
	1991, 1663, 2172, 1723, 2597, 2149, 2150, 1712, 1001, 1591,
	1581, 670, 2153, 92, 1671, 894, 376, 1588, 1896, 2156,
	2588, 948, 1895, 1427, 1052, 1906, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 2188, 1603, 96, 2193, 1894, 1893, 645, 2151, 2583,
	1296, 1897, 1216, 127, 1214, 1215, 1213, 1218, 1217, 380,
	1198, 2629, 2247, 1044, 2217, 102, 56, 1312, 1313, 1314,
	1315, 447, 2379, 2002, 452, 453, 127, 447, 97, 105,
	2238, 382, 1082, 2241, 1553, 1555, 1271, 1736, 1864, 655,
	656, 127, 648, 447, 1024, 680, 447, 2609, 2273, 2211,
	447, 447, 2218, 447, 2212, 2196, 2198, 1510, 2659, 2202,
	2678, 1034, 2232, 2206, 2207, 1521, 2209, 2602, 1811, 1143,
	680, 1516, 2194, 554, 127, 680, 1847, 2395, 2604, 1417,
	569, 568, 680, 680, 567, 564, 1063, 1062, 1072, 1073,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 565, 2670,
	1074, 1678, 1408, 467, 1821, 1056, 2163, 552, 543, 1174,
	1167, 1690, 1535, 1533, 2299, 2300, 2301, 1532, 1295, 644,
	1829, 2104, 1554, 2100, 1545, 1830, 2286, 1173, 2258, 1177,
	70, 909, 2080, 2297, 398, 1270, 2244, 2309, 2274, 80,
	2515, 38, 457, 538, 2246, 25, 1392, 2278, 17, 918,
	16, 1716, 866, 42, 2249, 2250, 44, 1935, 1648, 2287,
	2628, 2762, 932, 2253, 2786, 127, 2681, 31, 2302, 1414,
	30, 29, 2551, 2560, 2542, 2541, 2298, 2122, 2749, 2748,
	4, 1015, 680, 2336, 2337, 2338, 1873, 71, 2321, 680,
	680, 680, 2308, 35, 666, 2, 0, 2313, 2310, 680,
	0, 0, 0, 0, 0, 0, 1467, 1468, 0, 0,
	1176, 0, 680, 0, 0, 0, 0, 0, 0, 1480,
	1481, 1482, 1483, 0, 0, 2373, 2374, 0, 0, 2335,
	2375, 0, 0, 0, 1495, 1497, 0, 0, 0, 0,
	1501, 127, 0, 0, 2314, 0, 2316, 0, 0, 2363,
	2088, 0, 0, 2088, 2416, 2392, 2393, 2383, 2364, 0,
	2368, 2391, 2365, 1640, 0, 0, 2113, 0, 0, 2369,
	0, 2134, 0, 467, 0, 2376, 0, 0, 0, 0,
	447, 0, 1122, 1123, 0, 0, 0, 0, 2419, 2384,
	0, 2388, 0, 2367, 1529, 0, 0, 0, 0, 2019,
	0, 2413, 0, 2415, 0, 2443, 0, 2445, 0, 680,
	1560, 127, 0, 0, 2412, 2087, 0, 680, 2087, 0,
	0, 0, 0, 0, 0, 0, 2442, 2234, 0, 0,
	0, 2422, 0, 2418, 2423, 2436, 541, 2428, 2434, 2435,
	0, 2433, 0, 2399, 0, 0, 1552, 0, 2424, 0,
	1749, 1750, 1751, 2446, 0, 0, 0, 680, 2501, 0,
	2438, 0, 2439, 680, 0, 0, 0, 0, 127, 664,
	127, 0, 2458, 0, 664, 1199, 680, 2468, 2473, 0,
	0, 0, 0, 1179, 0, 2088, 0, 80, 0, 2486,
	2491, 2492, 680, 0, 0, 0, 0, 0, 2476, 0,
	2276, 1646, 0, 2494, 0, 2505, 0, 1131, 2506, 2498,
	0, 1657, 0, 1658, 1659, 0, 80, 2288, 2289, 0,
	1666, 2290, 0, 2531, 2292, 2507, 0, 0, 1806, 1807,
	1808, 2524, 1131, 2519, 1027, 1685, 2520, 0, 0, 0,
	2526, 0, 2523, 0, 0, 0, 0, 0, 0, 1677,
	2087, 0, 0, 0, 680, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 0,
	0, 0, 953, 0, 0, 0, 467, 0, 0, 0,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 0, 680, 1074, 0, 1715, 0, 0, 2593,
	0, 2595, 1729, 0, 0, 0, 0, 2594, 0, 0,
	2592, 0, 0, 0, 0, 2624, 2607, 1879, 0, 0,
	2612, 2608, 0, 0, 2591, 2617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 0, 1754,
	127, 0, 0, 0, 1757, 680, 0, 680, 0, 1759,
	1760, 0, 0, 1273, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 0, 0, 1775, 0, 0, 0, 2643, 1780,
	1781, 1782, 1783, 2645, 0, 0, 1787, 1788, 1789, 1964,
	127, 0, 2663, 1792, 1793, 1794, 2652, 0, 0, 0,
	0, 1800, 2673, 0, 1803, 1804, 0, 0, 2633, 1809,
	0, 0, 0, 0, 1815, 2524, 1816, 1817, 1818, 0,
	1819, 1820, 1179, 0, 0, 0, 680, 0, 0, 2688,
	0, 0, 0, 0, 2708, 0, 0, 0, 0, 1845,
	1846, 0, 2700, 2709, 2702, 80, 0, 2725, 2707, 2703,
	2701, 80, 2718, 2699, 0, 0, 0, 0, 2732, 0,
	2023, 680, 0, 680, 2717, 444, 2715, 2035, 2738, 2723,
	0, 0, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 2739, 2756, 0, 0, 80, 0,
	2743, 2049, 2050, 2753, 0, 2742, 2752, 0, 2751, 2759,
	2750, 541, 0, 0, 0, 2069, 2070, 0, 2071, 2072,
	2772, 0, 2073, 0, 0, 80, 680, 2781, 80, 80,
	2783, 2775, 2780, 80, 0, 0, 2732, 0, 0, 2773,
	2789, 0, 0, 2730, 676, 2793, 0, 2761, 444, 680,
	0, 2792, 0, 80, 0, 0, 80, 2797, 2805, 2795,
	2732, 680, 2808, 0, 2810, 0, 0, 2115, 0, 0,
	447, 0, 80, 676, 80, 2818, 0, 680, 80, 2732,
	2823, 2732, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 80, 1956, 0, 80, 0, 2832, 0, 2732,
	0, 2132, 80, 0, 0, 0, 80, 0, 0, 2732,
	0, 0, 0, 2732, 1457, 2142, 0, 0, 0, 0,
	0, 0, 2603, 2606, 0, 0, 0, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1488, 1489, 447, 0, 0, 0, 1607, 1608, 2251,
	1613, 1614, 1615, 1616, 1617, 0, 0, 0, 0, 0,
	2024, 0, 2015, 0, 664, 0, 2032, 0, 1627, 1628,
	1629, 0, 0, 0, 0, 0, 0, 0, 2042, 2043,
	2195, 2625, 2626, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 2055, 1063, 1062, 1072, 1073,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0, 664,
	1074, 2216, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 2223, 2225, 676, 2268, 0, 676, 676, 0, 2090,
	0, 2216, 0, 0, 0, 0, 0, 0, 0, 2243,
	0, 1459, 1464, 1465, 0, 0, 0, 1469, 0, 1471,
	1472, 1473, 1474, 2076, 1476, 0, 0, 1479, 0, 0,
	0, 2120, 1484, 1485, 1486, 1487, 0, 0, 0, 1491,
	1492, 1493, 0, 0, 0, 0, 0, 1499, 1500, 0,
	0, 2606, 1506, 1509, 0, 1514, 0, 0, 0, 0,
	0, 2270, 2271, 2272, 0, 0, 0, 0, 0, 1037,
	0, 0, 2724, 0, 391, 0, 0, 1522, 0, 1525,
	1526, 0, 0, 0, 0, 0, 0, 0, 467, 0,
	0, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 0, 2267, 0, 0, 0, 125, 0, 0,
	395, 0, 0, 0, 0, 0, 125, 2166, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	0, 1699, 1074, 0, 0, 1699, 0, 0, 0, 466,
	2192, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	647, 665, 0, 0, 125, 2197, 0, 1699, 125, 0,
	1699, 0, 369, 0, 0, 0, 0, 2809, 0, 372,
	0, 0, 125, 0, 0, 0, 0, 0, 381, 389,
	390, 0, 0, 125, 0, 2242, 676, 0, 2230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 0,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 0, 378, 1074, 0, 379, 0, 2216, 387,
	388, 2254, 0, 0, 0, 0, 0, 0, 2397, 2398,
	0, 0, 2263, 2264, 0, 0, 0, 0, 2269, 0,
	0, 0, 2401, 2402, 2403, 2404, 0, 0, 0, 0,
	2408, 0, 0, 2280, 2281, 0, 2283, 0, 0, 2284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 2296,
	0, 467, 2022, 467, 0, 0, 0, 0, 0, 2132,
	0, 385, 0, 0, 0, 0, 0, 1911, 1912, 1913,
	1915, 0, 0, 0, 0, 2132, 0, 0, 0, 664,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 0, 36, 1074, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 664, 0, 41, 0, 0,
	0, 0, 0, 0, 0, 2322, 370, 0, 0, 0,
	0, 676, 1755, 0, 0, 0, 0, 0, 0, 0,
	1761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1774, 0, 0, 81, 0, 0, 0, 383,
	373, 374, 2075, 394, 1786, 0, 0, 375, 377, 0,
	371, 393, 392, 0, 0, 0, 0, 0, 0, 2562,
	0, 0, 0, 0, 2834, 0, 0, 0, 0, 1810,
	0, 0, 0, 1932, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 2405, 2406, 2407, 0, 2409,
	0, 0, 0, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 2425, 2426, 2427, 0, 0, 0,
	2563, 0, 125, 2266, 0, 0, 2596, 0, 2132, 0,
	2132, 0, 0, 0, 1977, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 676,
	676, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 57, 58,
	0, 2564, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 66, 0, 67, 0, 2265,
	0, 0, 2509, 2510, 0, 0, 2511, 2512, 2513, 2514,
	1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 68, 0, 1074, 0, 0, 0, 0, 0,
	2689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 2152, 676, 0, 2095, 0, 0, 0, 0,
	2565, 75, 2074, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 676,
	0, 676, 1225, 676, 0, 2131, 1063, 1062, 1072, 1073,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0, 0,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2613, 0, 0, 0, 0, 2618, 0, 0, 0, 0,
	0, 0, 0, 1239, 0, 0, 0, 0, 0, 0,
	125, 125, 125, 0, 0, 1753, 2770, 0, 73, 0,
	665, 0, 0, 0, 2620, 665, 0, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0,
	0, 1074, 0, 1063, 1062, 1072, 1073, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1064, 2255, 2256, 1074, 2257, 0,
	0, 2259, 2201, 2261, 0, 0, 0, 79, 0, 0,
	0, 0, 2656, 0, 0, 526, 0, 0, 0, 0,
	2811, 0, 0, 0, 2664, 0, 0, 2226, 0, 0,
	0, 0, 2231, 0, 0, 0, 2220, 0, 0, 2235,
	2236, 0, 0, 0, 0, 530, 1063, 1062, 1072, 1073,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0, 0,
	1074, 482, 0, 0, 0, 0, 0, 0, 0, 2305,
	2306, 0, 1252, 1255, 1256, 1257, 1258, 1259, 1260, 490,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 0, 1240,
	1241, 1242, 1243, 1219, 1223, 1253, 1220, 1226, 1222, 1224,
	1221, 0, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 0, 0, 1211, 0, 0, 664, 0, 0, 0,
	0, 488, 470, 0, 0, 0, 0, 0, 0, 2294,
	0, 492, 0, 0, 0, 0, 2294, 2294, 2294, 0,
	517, 0, 0, 483, 0, 477, 676, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 2294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 495, 493, 0, 0, 0, 496,
	0, 125, 125, 125, 125, 504, 471, 0, 508, 1254,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2825, 2826, 0, 0,
	486, 510, 0, 0, 0, 0, 0, 0, 484, 485,
	487, 514, 0, 516, 522, 0, 0, 0, 0, 0,
	1058, 0, 1061, 0, 0, 0, 0, 0, 0, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 676, 1059, 1060, 1057,
	0, 0, 0, 0, 676, 0, 0, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2417, 0, 0, 472, 0, 0,
	2294, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	125, 0, 466, 2131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2131,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 523, 524, 0, 0,
	0, 480, 473, 474, 475, 476, 478, 497, 498, 502,
	503, 520, 519, 518, 521, 525, 528, 527, 529, 479,
	481, 489, 499, 500, 501, 505, 506, 515, 511, 513,
	0, 0, 0, 0, 0, 0, 0, 1463, 1463, 1463,
	0, 2497, 0, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 0, 0, 1463, 0, 0, 0, 0, 1463, 1463,
	1463, 1463, 0, 0, 0, 1463, 1463, 1463, 0, 0,
	0, 0, 0, 1463, 1463, 0, 512, 0, 1463, 1463,
	2522, 1463, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 509, 0, 0, 0,
	0, 0, 0, 1463, 1463, 1463, 1463, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 466, 0,
	0, 0, 0, 125, 125, 0, 0, 125, 1563, 1305,
	665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	0, 0, 2131, 0, 2131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 2213, 0, 0, 0, 2215, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 676, 0, 125, 0, 125, 125, 490,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2658, 0,
	2661, 1675, 1676, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 470, 0, 0, 0, 125, 0, 466, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 0, 0, 483, 0, 477, 0, 0, 0, 0,
	491, 0, 0, 2131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2294, 0, 0, 0,
	0, 0, 0, 0, 495, 493, 0, 1305, 676, 496,
	0, 0, 0, 0, 0, 504, 471, 0, 508, 0,
	0, 0, 0, 0, 2661, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 2745, 0, 0, 0, 0, 0,
	486, 510, 0, 0, 0, 0, 0, 0, 484, 485,
	487, 514, 0, 516, 522, 0, 0, 0, 1463, 0,
	0, 0, 0, 0, 0, 0, 1463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1463, 1463, 0,
	0, 0, 0, 0, 36, 0, 72, 39, 40, 0,
	1463, 0, 0, 0, 1463, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 1463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 0, 0,
	665, 125, 125, 125, 125, 125, 494, 0, 0, 0,
	0, 0, 0, 466, 0, 0, 81, 125, 0, 0,
	0, 466, 0, 0, 0, 0, 1463, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	2562, 0, 0, 0, 0, 2830, 523, 524, 0, 0,
	0, 480, 473, 474, 475, 476, 478, 497, 498, 502,
	503, 520, 519, 518, 521, 525, 528, 527, 529, 479,
	481, 489, 499, 500, 501, 505, 506, 515, 511, 513,
	0, 0, 0, 0, 526, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2563, 0, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 512, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 507, 509, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 0,
	488, 470, 0, 0, 0, 0, 125, 0, 0, 0,
	492, 0, 0, 68, 0, 0, 0, 1463, 0, 517,
	0, 0, 483, 0, 477, 0, 1463, 0, 1305, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2565, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 504, 471, 0, 508, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 486,
	510, 0, 0, 0, 0, 0, 0, 484, 485, 487,
	514, 0, 516, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1269, 0, 472, 1238, 79, 0,
	0, 0, 0, 530, 0, 494, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 125,
	480, 473, 474, 475, 476, 478, 497, 498, 502, 503,
	520, 519, 518, 521, 525, 528, 527, 529, 479, 481,
	489, 499, 500, 501, 505, 506, 515, 511, 513, 0,
	0, 1211, 125, 0, 0, 0, 0, 0, 0, 488,
	470, 0, 0, 0, 0, 0, 0, 542, 1225, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 483, 0, 477, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 0, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 0, 0,
	0, 0, 0, 466, 469, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 510,
	0, 0, 0, 0, 0, 0, 484, 485, 487, 514,
	0, 516, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1252, 1255,
	1256, 1257, 1258, 1259, 1260, 472, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 494, 1240, 1241, 1242, 1243, 1219,
	1223, 1253, 1220, 1226, 1222, 1224, 1221, 0, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 0, 0, 125,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 1254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 811, 330, 756, 838, 714, 740,
	851, 744, 748, 791, 697, 769, 256, 736, 698, 0,
	718, 687, 728, 688, 715, 758, 176, 713, 813, 772,
	837, 213, 786, 0, 166, 221, 219, 0, 125, 0,
	263, 329, 836, 764, 0, 845, 216, 0, 781, 846,
	317, 240, 0, 0, 760, 822, 767, 809, 755, 793,
	706, 780, 840, 737, 788, 841, 0, 0, 665, 0,
	2627, 0, 0, 0, 0, 0, 0, 0, 125, 701,
	0, 784, 834, 731, 787, 790, 685, 783, 0, 692,
	699, 850, 829, 721, 722, 723, 0, 0, 0, 0,
	0, 0, 0, 759, 768, 803, 752, 349, 267, 284,
	305, 746, 275, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 778, 0, 0, 0, 700, 693,
	0, 0, 757, 0, 0, 0, 705, 684, 720, 805,
	0, 682, 241, 144, 810, 828, 754, 204, 360, 832,
	751, 750, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 802, 299, 733, 683, 814, 716, 729,
	167, 725, 291, 260, 348, 738, 775, 290, 217, 338,
	798, 833, 347, 742, 817, 357, 362, 724, 765, 703,
	314, 177, 0, 133, 735, 274, 172, 209, 753, 792,
	717, 164, 800, 779, 816, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 2630, 2631, 2632, 747, 739,
	0, 0, 353, 749, 302, 301, 743, 199, 808, 782,
	689, 283, 795, 205, 132, 327, 365, 150, 211, 332,
	681, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 730, 797, 807, 281, 304, 334,
	152, 321, 726, 727, 732, 804, 293, 815, 826, 839,
	224, 179, 182, 193, 200, 789, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 690, 0, 319, 351, 367, 154, 712, 307, 333,
	741, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 710,
	711, 708, 0, 709, 770, 771, 842, 843, 844, 806,
	702, 0, 823, 824, 0, 0, 0, 0, 0, 812,
	830, 831, 794, 852, 745, 707, 691, 694, 695, 696,
	704, 761, 762, 774, 777, 820, 819, 818, 821, 825,
	848, 847, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 131, 140, 215, 853, 282,
	185, 352, 686, 174, 0, 763, 766, 776, 801, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	799, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 827, 0, 785,
	796, 835, 811, 330, 756, 838, 714, 740, 851, 744,
	748, 791, 697, 769, 256, 736, 698, 0, 718, 687,
	728, 688, 715, 758, 176, 713, 813, 772, 837, 213,
	786, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	836, 764, 0, 845, 216, 0, 781, 846, 317, 240,
	0, 0, 760, 822, 767, 809, 755, 793, 706, 780,
	840, 737, 788, 841, 0, 0, 0, 0, 679, 0,
	1585, 1586, 0, 0, 0, 0, 0, 701, 0, 784,
	834, 731, 787, 790, 685, 783, 0, 692, 699, 850,
	829, 721, 722, 723, 1874, 0, 0, 0, 0, 0,
	0, 759, 768, 803, 752, 349, 267, 284, 305, 746,
	275, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 778, 0, 0, 0, 700, 693, 0, 0,
	757, 0, 0, 0, 705, 684, 720, 805, 0, 682,
	241, 144, 810, 828, 754, 204, 360, 832, 751, 750,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 802, 299, 733, 683, 814, 716, 729, 167, 725,
	291, 260, 348, 738, 775, 290, 217, 338, 798, 833,
	347, 742, 817, 357, 362, 724, 765, 703, 314, 177,
	0, 133, 735, 274, 172, 209, 753, 792, 717, 164,
	800, 779, 816, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 747, 739, 0, 0,
	353, 749, 302, 301, 743, 199, 808, 782, 689, 283,
	795, 205, 132, 327, 365, 150, 211, 332, 681, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 730, 797, 807, 281, 304, 334, 152, 321,
	726, 727, 732, 804, 293, 815, 826, 839, 224, 179,
	182, 193, 200, 789, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 690,
	0, 319, 351, 367, 154, 712, 307, 333, 741, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 710, 711, 708,
	0, 709, 770, 771, 842, 843, 844, 806, 702, 0,
	823, 824, 0, 0, 0, 0, 0, 812, 830, 831,
	794, 852, 745, 707, 691, 694, 695, 696, 704, 761,
	762, 774, 777, 820, 819, 818, 821, 825, 848, 847,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 131, 140, 215, 853, 282, 185, 352,
	686, 174, 0, 763, 766, 776, 801, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 799, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 827, 0, 785, 796, 835,
	811, 330, 756, 838, 714, 740, 851, 744, 748, 791,
	697, 769, 256, 736, 698, 0, 718, 687, 728, 688,
	715, 758, 176, 713, 813, 772, 837, 213, 786, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 836, 764,
	0, 845, 216, 0, 781, 846, 317, 240, 0, 0,
	760, 822, 767, 809, 755, 793, 706, 780, 840, 737,
	788, 841, 0, 0, 0, 0, 679, 0, 1585, 1586,
	0, 0, 0, 0, 0, 701, 0, 784, 834, 731,
	787, 790, 685, 783, 0, 692, 699, 850, 829, 721,
	722, 723, 0, 0, 0, 0, 0, 0, 0, 759,
	768, 803, 752, 349, 267, 284, 305, 746, 275, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	778, 0, 0, 0, 700, 693, 0, 0, 757, 0,
	0, 0, 705, 684, 720, 805, 0, 682, 241, 144,
	810, 828, 754, 204, 360, 832, 751, 750, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 802,
	299, 733, 683, 814, 716, 729, 167, 725, 291, 260,
	348, 738, 775, 290, 217, 338, 798, 833, 347, 742,
	817, 357, 362, 724, 765, 703, 314, 177, 0, 133,
	735, 274, 172, 209, 753, 792, 717, 164, 800, 779,
	816, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 747, 739, 0, 0, 353, 749,
	302, 301, 743, 199, 808, 782, 689, 283, 795, 205,
	132, 327, 365, 150, 211, 332, 681, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	730, 797, 807, 281, 304, 334, 152, 321, 726, 727,
	732, 804, 293, 815, 826, 839, 224, 179, 182, 193,
	200, 789, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 690, 0, 319,
	351, 367, 154, 712, 307, 333, 741, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 710, 711, 708, 0, 709,
	770, 771, 842, 843, 844, 806, 702, 0, 823, 824,
	0, 0, 0, 0, 0, 812, 830, 831, 794, 852,
	745, 707, 691, 694, 695, 696, 704, 761, 762, 774,
	777, 820, 819, 818, 821, 825, 848, 847, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 131, 140, 215, 853, 282, 185, 352, 686, 174,
	0, 763, 766, 776, 801, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 799, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 827, 0, 785, 796, 835, 2092, 330,
	756, 838, 714, 740, 851, 744, 748, 791, 697, 769,
	256, 736, 698, 0, 718, 687, 728, 688, 715, 758,
	176, 713, 813, 772, 837, 213, 786, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 836, 764, 0, 845,
	216, 0, 781, 846, 317, 240, 0, 0, 760, 822,
	767, 809, 755, 793, 706, 780, 840, 737, 788, 841,
	81, 0, 1027, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 784, 834, 731, 787, 790,
	685, 783, 0, 692, 699, 850, 829, 721, 722, 723,
	0, 0, 0, 0, 0, 0, 0, 759, 768, 803,
	752, 349, 267, 284, 305, 746, 275, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 778, 0,
	0, 0, 700, 693, 0, 0, 757, 0, 0, 0,
	705, 684, 720, 805, 0, 682, 241, 144, 810, 828,
	754, 204, 360, 832, 751, 750, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 802, 299, 733,
	683, 814, 716, 729, 167, 725, 291, 260, 348, 738,
	775, 290, 217, 338, 798, 833, 347, 742, 817, 357,
	362, 724, 765, 703, 314, 177, 0, 133, 735, 274,
	172, 209, 753, 792, 717, 164, 800, 779, 816, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 747, 739, 0, 0, 353, 749, 302, 301,
	743, 199, 808, 782, 689, 283, 795, 205, 132, 327,
	365, 150, 211, 332, 681, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 730, 797,
	807, 281, 304, 334, 152, 321, 726, 727, 732, 804,
	293, 815, 826, 839, 224, 179, 182, 193, 200, 789,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 690, 0, 319, 351, 367,
	154, 712, 307, 333, 741, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 710, 711, 708, 0, 709, 770, 771,
	842, 843, 844, 806, 702, 0, 823, 824, 0, 0,
	0, 0, 0, 812, 830, 831, 794, 852, 745, 707,
	691, 694, 695, 696, 704, 761, 762, 774, 777, 820,
	819, 818, 821, 825, 848, 847, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 131,
	140, 215, 2093, 282, 185, 352, 686, 174, 0, 763,
	766, 776, 801, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 799, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 827, 0, 785, 796, 835, 811, 330, 756, 838,
	714, 740, 851, 744, 748, 791, 697, 769, 256, 736,
	698, 0, 718, 687, 728, 688, 715, 758, 176, 713,
	813, 772, 837, 213, 786, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 836, 764, 0, 845, 216, 0,
	781, 846, 317, 240, 0, 0, 760, 822, 767, 809,
	755, 793, 706, 780, 840, 737, 788, 841, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 784, 834, 731, 787, 790, 685, 783,
	0, 692, 699, 850, 829, 721, 722, 723, 0, 0,
	0, 0, 0, 0, 0, 759, 768, 803, 752, 349,
	267, 284, 305, 746, 275, 734, 0, 0, 0, 0,
	0, 0, 2394, 0, 719, 0, 778, 0, 0, 0,
	700, 693, 0, 0, 757, 0, 0, 0, 705, 684,
	720, 805, 0, 682, 241, 144, 810, 828, 754, 204,
	360, 832, 751, 750, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 802, 299, 733, 683, 814,
	716, 729, 167, 725, 291, 260, 348, 738, 775, 290,
	217, 338, 798, 833, 347, 742, 817, 357, 362, 724,
	765, 703, 314, 177, 0, 133, 735, 274, 172, 209,
	753, 792, 717, 164, 800, 779, 816, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	747, 739, 0, 0, 353, 749, 302, 301, 743, 199,
	808, 782, 689, 283, 795, 205, 132, 327, 365, 150,
	211, 332, 681, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 730, 797, 807, 281,
	304, 334, 152, 321, 726, 727, 732, 804, 293, 815,
	826, 839, 224, 179, 182, 193, 200, 789, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 690, 0, 319, 351, 367, 154, 712,
	307, 333, 741, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 710, 711, 708, 0, 709, 770, 771, 842, 843,
	844, 806, 702, 0, 823, 824, 0, 0, 0, 0,
	0, 812, 830, 831, 794, 852, 745, 707, 691, 694,
	695, 696, 704, 761, 762, 774, 777, 820, 819, 818,
	821, 825, 848, 847, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 131, 140, 215,
	853, 282, 185, 352, 686, 174, 0, 763, 766, 776,
	801, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 799, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 827,
	0, 785, 796, 835, 811, 330, 756, 838, 714, 740,
	851, 744, 748, 791, 697, 769, 256, 736, 698, 0,
	718, 687, 728, 688, 715, 758, 176, 713, 813, 772,
	837, 213, 786, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 836, 764, 0, 845, 216, 0, 781, 846,
	317, 240, 0, 0, 760, 822, 767, 809, 755, 793,
	706, 780, 840, 737, 788, 841, 0, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 784, 834, 731, 787, 790, 685, 783, 0, 692,
	699, 850, 829, 721, 722, 723, 0, 0, 0, 0,
	0, 0, 0, 759, 768, 803, 752, 349, 267, 284,
	305, 746, 275, 734, 0, 0, 0, 0, 0, 0,
	2028, 0, 719, 0, 778, 0, 0, 0, 700, 693,
	0, 0, 757, 0, 0, 0, 705, 684, 720, 805,
	0, 682, 241, 144, 810, 828, 754, 204, 360, 832,
	751, 750, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 802, 299, 733, 683, 814, 716, 729,
	167, 725, 291, 260, 348, 738, 775, 290, 217, 338,
	798, 833, 347, 742, 817, 357, 362, 724, 765, 703,
	314, 177, 0, 133, 735, 274, 172, 209, 753, 792,
	717, 164, 800, 779, 816, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 747, 739,
	0, 0, 353, 749, 302, 301, 743, 199, 808, 782,
	689, 283, 795, 205, 132, 327, 365, 150, 211, 332,
	681, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 730, 797, 807, 281, 304, 334,
	152, 321, 726, 727, 732, 804, 293, 815, 826, 839,
	224, 179, 182, 193, 200, 789, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 690, 0, 319, 351, 367, 154, 712, 307, 333,
	741, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 710,
	711, 708, 0, 709, 770, 771, 842, 843, 844, 806,
	702, 0, 823, 824, 0, 0, 0, 0, 0, 812,
	830, 831, 794, 852, 745, 707, 691, 694, 695, 696,
	704, 761, 762, 774, 777, 820, 819, 818, 821, 825,
	848, 847, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 131, 140, 215, 853, 282,
	185, 352, 686, 174, 0, 763, 766, 776, 801, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	799, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 827, 0, 785,
	796, 835, 811, 330, 756, 838, 714, 740, 851, 744,
	748, 791, 697, 769, 256, 736, 698, 0, 718, 687,
	728, 688, 715, 758, 176, 713, 813, 772, 837, 213,
	786, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	836, 764, 0, 845, 216, 0, 781, 846, 317, 240,
	0, 0, 760, 822, 767, 809, 755, 793, 706, 780,
	840, 737, 788, 841, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 784,
	834, 731, 787, 790, 685, 783, 0, 692, 699, 850,
	829, 721, 722, 723, 0, 0, 0, 0, 0, 0,
	0, 759, 768, 803, 752, 349, 267, 284, 305, 746,
	275, 734, 0, 0, 0, 0, 0, 0, 2018, 0,
	719, 0, 778, 0, 0, 0, 700, 693, 0, 0,
	757, 0, 0, 0, 705, 684, 720, 805, 0, 682,
	241, 144, 810, 828, 754, 204, 360, 832, 751, 750,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 802, 299, 733, 683, 814, 716, 729, 167, 725,
	291, 260, 348, 738, 775, 290, 217, 338, 798, 833,
	347, 742, 817, 357, 362, 724, 765, 703, 314, 177,
	0, 133, 735, 274, 172, 209, 753, 792, 717, 164,
	800, 779, 816, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 747, 739, 0, 0,
	353, 749, 302, 301, 743, 199, 808, 782, 689, 283,
	795, 205, 132, 327, 365, 150, 211, 332, 681, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 730, 797, 807, 281, 304, 334, 152, 321,
	726, 727, 732, 804, 293, 815, 826, 839, 224, 179,
	182, 193, 200, 789, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 690,
	0, 319, 351, 367, 154, 712, 307, 333, 741, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 710, 711, 708,
	0, 709, 770, 771, 842, 843, 844, 806, 702, 0,
	823, 824, 0, 0, 0, 0, 0, 812, 830, 831,
	794, 852, 745, 707, 691, 694, 695, 696, 704, 761,
	762, 774, 777, 820, 819, 818, 821, 825, 848, 847,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 131, 140, 215, 853, 282, 185, 352,
	686, 174, 0, 763, 766, 776, 801, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 799, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 827, 0, 785, 796, 835,
	811, 330, 756, 838, 714, 740, 851, 744, 748, 791,
	697, 769, 256, 736, 698, 0, 718, 687, 728, 688,
	715, 758, 176, 713, 813, 772, 837, 213, 786, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 836, 764,
	0, 845, 216, 0, 781, 846, 317, 240, 0, 0,
	760, 822, 767, 809, 755, 793, 706, 780, 840, 737,
	788, 841, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 784, 834, 731,
	787, 790, 685, 783, 0, 692, 699, 850, 829, 721,
	722, 723, 0, 0, 0, 0, 0, 0, 0, 759,
	768, 803, 752, 349, 267, 284, 305, 746, 275, 734,
	0, 0, 0, 0, 0, 0, 1564, 0, 719, 0,
	778, 0, 0, 0, 700, 693, 0, 0, 757, 0,
	0, 0, 705, 684, 720, 805, 0, 682, 241, 144,
	810, 828, 754, 204, 360, 832, 751, 750, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 802,
	299, 733, 683, 814, 716, 729, 167, 725, 291, 260,
	348, 738, 775, 290, 217, 338, 798, 833, 347, 742,
	817, 357, 362, 724, 765, 703, 314, 177, 0, 133,
	735, 274, 172, 209, 753, 792, 717, 164, 800, 779,
	816, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 747, 739, 0, 0, 353, 749,
	302, 301, 743, 199, 808, 782, 689, 283, 795, 205,
	132, 327, 365, 150, 211, 332, 681, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	730, 797, 807, 281, 304, 334, 152, 321, 726, 727,
	732, 804, 293, 815, 826, 839, 224, 179, 182, 193,
	200, 789, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 690, 0, 319,
	351, 367, 154, 712, 307, 333, 741, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 710, 711, 708, 0, 709,
	770, 771, 842, 843, 844, 806, 702, 0, 823, 824,
	0, 0, 0, 0, 0, 812, 830, 831, 794, 852,
	745, 707, 691, 694, 695, 696, 704, 761, 762, 774,
	777, 820, 819, 818, 821, 825, 848, 847, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 131, 140, 215, 853, 282, 185, 352, 686, 174,
	0, 763, 766, 776, 801, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 799, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 827, 0, 785, 796, 835, 811, 330,
	756, 838, 714, 740, 851, 744, 748, 791, 697, 769,
	256, 736, 698, 0, 718, 687, 728, 688, 715, 758,
	176, 713, 813, 772, 837, 213, 786, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 836, 764, 0, 845,
	216, 0, 781, 846, 317, 240, 0, 0, 760, 822,
	767, 809, 755, 793, 706, 780, 840, 737, 788, 841,
	0, 0, 0, 0, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 784, 834, 731, 787, 790,
	685, 783, 0, 692, 699, 850, 829, 721, 722, 723,
	0, 0, 0, 0, 0, 0, 0, 759, 768, 803,
	752, 349, 267, 284, 305, 746, 275, 734, 0, 0,
	0, 0, 0, 0, 1423, 0, 719, 0, 778, 0,
	0, 0, 700, 693, 0, 0, 757, 0, 0, 0,
	705, 684, 720, 805, 0, 682, 241, 144, 810, 828,
	754, 204, 360, 832, 751, 750, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 802, 299, 733,
	683, 814, 716, 729, 167, 725, 291, 260, 348, 738,
	775, 290, 217, 338, 798, 833, 347, 742, 817, 357,
	362, 724, 765, 703, 314, 177, 0, 133, 735, 274,
	172, 209, 753, 792, 717, 164, 800, 779, 816, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 747, 739, 0, 0, 353, 749, 302, 301,
	743, 199, 808, 782, 689, 283, 795, 205, 132, 327,
	365, 150, 211, 332, 681, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 730, 797,
	807, 281, 304, 334, 152, 321, 726, 727, 732, 804,
	293, 815, 826, 839, 224, 179, 182, 193, 200, 789,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 690, 0, 319, 351, 367,
	154, 712, 307, 333, 741, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 710, 711, 708, 0, 709, 770, 771,
	842, 843, 844, 806, 702, 0, 823, 824, 0, 0,
	0, 0, 0, 812, 830, 831, 794, 852, 745, 707,
	691, 694, 695, 696, 704, 761, 762, 774, 777, 820,
	819, 818, 821, 825, 848, 847, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 131,
	140, 215, 853, 282, 185, 352, 686, 174, 0, 763,
	766, 776, 801, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 799, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 827, 0, 785, 796, 835, 811, 330, 756, 838,
	714, 740, 851, 744, 748, 791, 697, 769, 256, 736,
	698, 0, 718, 687, 728, 688, 715, 758, 176, 713,
	813, 772, 837, 213, 786, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 836, 764, 0, 845, 216, 0,
	781, 846, 317, 240, 0, 0, 760, 822, 767, 809,
	755, 793, 706, 780, 840, 737, 788, 841, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 0, 784, 834, 731, 787, 790, 685, 783,
	0, 692, 699, 850, 829, 721, 722, 723, 0, 0,
	0, 0, 0, 0, 0, 759, 768, 803, 752, 349,
	267, 284, 305, 746, 275, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 0, 778, 0, 0, 0,
	700, 693, 0, 0, 757, 0, 0, 0, 705, 684,
	720, 805, 0, 682, 241, 144, 810, 828, 754, 204,
	360, 832, 751, 750, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 802, 299, 733, 683, 814,
	716, 729, 167, 725, 291, 260, 348, 738, 775, 290,
	217, 338, 798, 833, 347, 742, 817, 357, 362, 724,
	765, 703, 314, 177, 0, 133, 735, 274, 172, 209,
	753, 792, 717, 164, 800, 779, 816, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	747, 739, 0, 0, 353, 749, 302, 301, 743, 199,
	808, 782, 689, 283, 795, 205, 132, 327, 365, 150,
	211, 332, 681, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 730, 797, 807, 281,
	304, 334, 152, 321, 726, 727, 732, 804, 293, 815,
	826, 839, 224, 179, 182, 193, 200, 789, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 690, 0, 319, 351, 367, 154, 712,
	307, 333, 741, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 710, 711, 708, 0, 709, 770, 771, 842, 843,
	844, 806, 702, 0, 823, 824, 0, 0, 0, 0,
	0, 812, 830, 831, 794, 852, 745, 707, 691, 694,
	695, 696, 704, 761, 762, 774, 777, 820, 819, 818,
	821, 825, 848, 847, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 131, 140, 215,
	853, 282, 185, 352, 686, 174, 0, 763, 766, 776,
	801, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 799, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 827,
	0, 785, 796, 835, 811, 330, 756, 838, 714, 740,
	851, 744, 748, 791, 697, 769, 256, 736, 698, 0,
	718, 687, 728, 688, 715, 758, 176, 713, 813, 772,
	837, 213, 786, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 836, 764, 0, 845, 216, 0, 781, 846,
	317, 240, 0, 0, 760, 822, 767, 809, 755, 793,
	706, 780, 840, 737, 788, 841, 0, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 784, 834, 731, 787, 790, 685, 783, 0, 692,
	699, 850, 829, 721, 722, 723, 0, 0, 0, 0,
	0, 0, 0, 759, 768, 803, 752, 349, 267, 284,
	305, 746, 275, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 778, 0, 0, 0, 700, 693,
	0, 0, 757, 0, 0, 0, 705, 684, 720, 805,
	0, 682, 241, 144, 810, 828, 754, 204, 360, 832,
	751, 750, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 802, 299, 733, 683, 814, 716, 729,
	167, 725, 291, 260, 348, 738, 775, 290, 217, 338,
	798, 833, 347, 742, 817, 357, 362, 724, 765, 703,
	314, 177, 0, 133, 735, 274, 172, 209, 753, 792,
	717, 164, 800, 779, 816, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 747, 739,
	0, 0, 353, 749, 302, 301, 743, 199, 808, 782,
	689, 283, 795, 205, 132, 327, 365, 150, 211, 332,
	681, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 730, 797, 807, 281, 304, 334,
	152, 321, 726, 727, 732, 804, 293, 815, 826, 839,
	224, 179, 182, 193, 200, 789, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 690, 0, 319, 351, 367, 154, 712, 307, 333,
	741, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 710,
	711, 708, 0, 709, 770, 771, 842, 843, 844, 806,
	702, 0, 823, 824, 0, 0, 0, 0, 0, 812,
	830, 831, 794, 852, 745, 707, 691, 694, 695, 696,
	704, 761, 762, 774, 777, 820, 819, 818, 821, 825,
	848, 847, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 131, 140, 215, 853, 282,
	185, 352, 686, 174, 0, 763, 766, 776, 801, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	799, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 827, 0, 785,
	796, 835, 811, 330, 756, 838, 714, 740, 851, 744,
	748, 791, 697, 769, 256, 736, 698, 0, 718, 687,
	728, 688, 715, 758, 176, 713, 813, 772, 837, 213,
	786, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	1597, 1601, 0, 845, 216, 0, 781, 846, 317, 240,
	0, 0, 760, 822, 767, 809, 755, 793, 706, 780,
	840, 737, 788, 841, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 784,
	834, 731, 787, 790, 685, 783, 0, 692, 699, 850,
	829, 721, 722, 723, 0, 0, 0, 0, 0, 0,
	0, 759, 768, 803, 752, 349, 267, 284, 305, 746,
	275, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 778, 0, 0, 0, 700, 693, 0, 0,
	757, 0, 0, 0, 705, 684, 720, 805, 0, 682,
	241, 144, 810, 828, 1600, 204, 360, 832, 751, 750,
	1594, 0, 1595, 1596, 214, 678, 128, 142, 1592, 1599,
	252, 802, 299, 733, 683, 814, 716, 729, 167, 725,
	291, 260, 348, 738, 775, 290, 217, 338, 798, 833,
	347, 742, 817, 357, 362, 724, 765, 703, 314, 177,
	0, 133, 735, 274, 172, 209, 753, 792, 717, 164,
	800, 779, 816, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 747, 739, 0, 0,
	353, 749, 302, 301, 743, 199, 808, 782, 689, 283,
	795, 205, 132, 327, 365, 150, 211, 332, 681, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 730, 797, 807, 281, 304, 334, 152, 321,
	726, 727, 732, 804, 293, 815, 826, 839, 224, 179,
	182, 193, 200, 789, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 690,
	0, 319, 351, 367, 154, 712, 307, 333, 741, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 710, 711, 708,
	0, 709, 770, 771, 842, 843, 844, 806, 702, 0,
	823, 824, 0, 0, 0, 0, 0, 812, 830, 831,
	794, 852, 745, 707, 691, 694, 695, 696, 704, 761,
	762, 774, 777, 820, 819, 818, 821, 825, 848, 847,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 131, 140, 215, 853, 282, 185, 352,
	686, 174, 0, 763, 766, 776, 801, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 799, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 827, 0, 785, 796, 835,
	811, 330, 756, 838, 714, 740, 851, 744, 748, 791,
	697, 769, 256, 736, 698, 0, 718, 687, 728, 688,
	715, 758, 176, 713, 813, 772, 837, 213, 786, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 836, 764,
	0, 845, 216, 0, 781, 846, 317, 240, 0, 0,
	760, 822, 767, 809, 755, 793, 706, 780, 840, 737,
	788, 841, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 784, 834, 731,
	787, 790, 685, 783, 0, 692, 699, 850, 829, 721,
	722, 723, 0, 0, 0, 0, 0, 0, 0, 759,
	768, 803, 752, 349, 267, 284, 305, 746, 275, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 0,
	778, 0, 0, 0, 700, 693, 0, 0, 757, 0,
	0, 0, 705, 684, 720, 805, 0, 682, 241, 144,
	810, 828, 754, 204, 360, 832, 751, 750, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 802,
	299, 733, 683, 814, 716, 729, 167, 725, 291, 260,
	348, 738, 775, 290, 217, 338, 798, 833, 347, 742,
	817, 357, 362, 724, 765, 703, 314, 177, 0, 133,
	735, 274, 172, 209, 753, 792, 717, 164, 800, 779,
	816, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 747, 739, 0, 0, 353, 749,
	302, 301, 743, 199, 808, 782, 689, 283, 795, 205,
	132, 327, 365, 150, 211, 332, 681, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	730, 797, 807, 281, 304, 334, 152, 321, 726, 727,
	732, 804, 293, 815, 826, 839, 224, 179, 182, 193,
	200, 789, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 690, 0, 319,
	351, 367, 154, 712, 307, 333, 741, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 710, 711, 708, 0, 709,
	770, 771, 842, 843, 844, 806, 702, 0, 823, 824,
	0, 0, 0, 0, 0, 812, 830, 831, 794, 852,
	745, 707, 691, 694, 695, 696, 704, 761, 762, 774,
	777, 820, 819, 818, 821, 825, 848, 847, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 131, 140, 215, 853, 282, 185, 352, 686, 174,
	0, 763, 766, 776, 801, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 799, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 827, 0, 785, 796, 835, 811, 330,
	756, 838, 714, 740, 851, 744, 748, 791, 697, 769,
	256, 736, 698, 0, 718, 687, 728, 688, 715, 758,
	176, 713, 813, 772, 837, 213, 786, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 836, 764, 0, 845,
	216, 0, 781, 846, 317, 240, 0, 0, 760, 822,
	767, 809, 755, 793, 706, 780, 840, 737, 788, 841,
	0, 0, 0, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 701, 0, 784, 834, 731, 787, 790,
	685, 783, 0, 692, 699, 850, 829, 721, 722, 723,
	0, 0, 0, 0, 0, 0, 0, 759, 768, 803,
	752, 349, 267, 284, 305, 746, 275, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 778, 0,
	0, 0, 700, 693, 0, 0, 757, 0, 0, 0,
	705, 684, 720, 805, 0, 682, 241, 144, 810, 828,
	754, 204, 360, 832, 751, 750, 277, 0, 324, 192,
	214, 678, 128, 142, 674, 191, 252, 802, 299, 733,
	683, 814, 716, 729, 167, 725, 291, 260, 348, 738,
	775, 290, 217, 338, 798, 833, 347, 742, 817, 357,
	362, 724, 765, 703, 314, 177, 0, 133, 735, 274,
	172, 209, 753, 792, 717, 164, 800, 779, 816, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 747, 739, 0, 0, 353, 749, 302, 301,
	743, 199, 808, 782, 689, 283, 795, 205, 132, 327,
	365, 150, 211, 332, 681, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 730, 797,
	807, 281, 304, 334, 152, 321, 726, 727, 732, 804,
	293, 815, 826, 839, 224, 179, 182, 193, 200, 789,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 690, 0, 319, 351, 367,
	154, 712, 307, 333, 741, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 710, 711, 708, 0, 709, 770, 771,
	842, 843, 844, 806, 702, 0, 823, 824, 0, 0,
	0, 0, 0, 812, 830, 831, 794, 852, 745, 707,
	691, 694, 695, 696, 704, 761, 762, 774, 777, 820,
	819, 818, 821, 825, 848, 847, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 131,
	140, 215, 853, 282, 185, 352, 686, 174, 0, 763,
	766, 776, 801, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 799, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 827, 330, 785, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 626, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 1574, 0, 81, 0, 0, 0, 547, 571, 570,
	573, 574, 575, 576, 0, 0, 530, 572, 577, 610,
	611, 1575, 0, 0, 544, 562, 0, 625, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 638, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 617, 0, 0, 204, 360, 0, 0, 636, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 585, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 587, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 627, 637, 633, 635,
	634, 631, 632, 630, 629, 628, 639, 618, 619, 620,
	621, 622, 0, 0, 0, 624, 0, 604, 605, 0,
	0, 0, 480, 578, 579, 580, 581, 582, 588, 589,
	593, 594, 602, 601, 600, 603, 606, 608, 607, 609,
	583, 584, 586, 590, 591, 592, 595, 596, 599, 597,
	598, 623, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 36, 330, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 176, 546, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 626, 216, 0, 0, 526,
	317, 240, 0, 0, 0, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	547, 571, 570, 573, 574, 575, 576, 0, 0, 530,
	572, 577, 610, 611, 0, 0, 0, 544, 562, 0,
	625, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 490, 0, 0, 0, 0, 559, 560,
	0, 0, 0, 0, 638, 0, 561, 0, 0, 556,
	557, 558, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 617, 0, 0, 204, 360, 0,
	0, 636, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 585, 470, 0, 0, 0,
	167, 0, 291, 260, 348, 587, 0, 290, 217, 338,
	0, 0, 347, 0, 517, 357, 362, 483, 0, 477,
	314, 177, 0, 133, 491, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 495, 493,
	0, 0, 353, 496, 302, 301, 0, 199, 0, 504,
	471, 283, 508, 205, 132, 327, 365, 150, 211, 332,
	469, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 486, 510, 0, 281, 304, 334,
	152, 321, 484, 485, 487, 514, 293, 516, 522, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 472, 0, 319, 351, 367, 154, 0, 307, 333,
	494, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 627,
	637, 633, 635, 634, 631, 632, 630, 629, 628, 639,
	618, 619, 620, 621, 622, 0, 0, 0, 624, 0,
	604, 605, 0, 0, 0, 480, 578, 579, 580, 581,
	582, 588, 589, 593, 594, 602, 601, 600, 603, 606,
	608, 607, 609, 583, 584, 586, 590, 591, 592, 595,
	596, 599, 597, 598, 623, 131, 140, 215, 79, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	512, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 176, 546,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 626, 216, 0,
	0, 526, 317, 240, 0, 0, 0, 0, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 547, 571, 570, 573, 574, 575, 576, 0,
	0, 530, 572, 577, 610, 611, 0, 0, 0, 544,
	562, 0, 625, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 490, 0, 0, 0, 0,
	559, 560, 540, 0, 0, 0, 638, 0, 561, 0,
	0, 556, 557, 558, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 617, 0, 0, 204,
	360, 0, 0, 636, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 585, 470, 0,
	0, 0, 167, 0, 291, 260, 348, 587, 0, 290,
	217, 338, 0, 0, 347, 0, 517, 357, 362, 483,
	0, 477, 314, 177, 0, 133, 491, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	495, 493, 0, 0, 353, 496, 302, 301, 0, 199,
	0, 504, 471, 283, 508, 205, 132, 327, 365, 150,
	211, 332, 469, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 486, 510, 0, 281,
	304, 334, 152, 321, 484, 485, 487, 514, 293, 516,
	522, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 472, 0, 319, 351, 367, 154, 0,
	307, 333, 494, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 627, 637, 633, 635, 634, 631, 632, 630, 629,
	628, 639, 618, 619, 620, 621, 622, 0, 0, 0,
	624, 0, 604, 605, 0, 0, 0, 480, 578, 579,
	580, 581, 582, 588, 589, 593, 594, 602, 601, 600,
	603, 606, 608, 607, 609, 583, 584, 586, 590, 591,
	592, 595, 596, 599, 597, 598, 623, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 512, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	176, 546, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 626,
	216, 0, 0, 526, 317, 240, 0, 0, 0, 0,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1027, 0, 547, 571, 570, 573, 574, 575,
	576, 0, 0, 530, 572, 577, 610, 611, 0, 0,
	0, 544, 562, 0, 625, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 490, 0, 0,
	0, 0, 559, 560, 0, 0, 0, 0, 638, 0,
	561, 0, 0, 556, 557, 558, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 617, 0,
	0, 204, 360, 0, 0, 636, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 585,
	470, 0, 0, 0, 167, 0, 291, 260, 348, 587,
	0, 290, 217, 338, 0, 0, 347, 0, 517, 357,
	362, 483, 0, 477, 314, 177, 0, 133, 491, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 353, 496, 302, 301,
	0, 199, 0, 504, 471, 283, 508, 205, 132, 327,
	365, 150, 211, 332, 469, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 486, 510,
	0, 281, 304, 334, 152, 321, 484, 485, 487, 514,
	293, 516, 522, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 472, 0, 319, 351, 367,
	154, 0, 307, 333, 494, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 627, 637, 633, 635, 634, 631, 632,
	630, 629, 628, 639, 618, 619, 620, 621, 622, 0,
	0, 0, 624, 0, 604, 605, 0, 0, 0, 480,
	578, 579, 580, 581, 582, 588, 589, 593, 594, 602,
	601, 600, 603, 606, 608, 607, 609, 583, 584, 586,
	590, 591, 592, 595, 596, 599, 597, 598, 623, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 512, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 176, 546, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 626, 216, 0, 0, 526, 317, 240, 0, 0,
	0, 0, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 547, 571, 570, 573,
	574, 575, 576, 0, 0, 530, 572, 577, 610, 611,
	0, 0, 0, 544, 562, 0, 625, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 490,
	0, 0, 0, 0, 559, 560, 1461, 0, 0, 0,
	638, 0, 561, 0, 0, 556, 557, 558, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	617, 0, 0, 204, 360, 0, 0, 636, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 585, 470, 0, 0, 0, 167, 0, 291, 260,
	348, 587, 0, 290, 217, 338, 0, 0, 347, 0,
	517, 357, 362, 483, 0, 477, 314, 177, 0, 133,
	491, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 495, 493, 0, 0, 353, 496,
	302, 301, 0, 199, 0, 504, 471, 283, 508, 205,
	132, 327, 365, 150, 211, 332, 469, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	486, 510, 0, 281, 304, 334, 152, 321, 484, 485,
	487, 514, 293, 516, 522, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 472, 0, 319,
	351, 367, 154, 0, 307, 333, 494, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 627, 637, 633, 635, 634,
	631, 632, 630, 629, 628, 639, 618, 619, 620, 621,
	622, 0, 0, 0, 624, 0, 604, 605, 0, 0,
	0, 480, 578, 579, 580, 581, 582, 588, 589, 593,
	594, 602, 601, 600, 603, 606, 608, 607, 609, 583,
	584, 586, 590, 591, 592, 595, 596, 599, 597, 598,
	623, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 512, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 176, 546, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 626, 216, 0, 0, 526, 317, 240,
	0, 0, 0, 0, 615, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 547, 571,
	1508, 573, 574, 575, 576, 0, 0, 530, 572, 577,
	610, 611, 0, 0, 0, 544, 562, 0, 625, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 490, 0, 0, 0, 0, 559, 560, 1461, 0,
	0, 0, 638, 0, 561, 0, 0, 556, 557, 558,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 617, 0, 0, 204, 360, 0, 0, 636,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 585, 470, 0, 0, 0, 167, 0,
	291, 260, 348, 587, 0, 290, 217, 338, 0, 0,
	347, 0, 517, 357, 362, 483, 0, 477, 314, 177,
	0, 133, 491, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 495, 493, 0, 0,
	353, 496, 302, 301, 0, 199, 0, 504, 471, 283,
	508, 205, 132, 327, 365, 150, 211, 332, 469, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 486, 510, 0, 281, 304, 334, 152, 321,
	484, 485, 487, 514, 293, 516, 522, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 472,
	0, 319, 351, 367, 154, 0, 307, 333, 494, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 627, 637, 633,
	635, 634, 631, 632, 630, 629, 628, 639, 618, 619,
	620, 621, 622, 0, 0, 0, 624, 0, 604, 605,
	0, 0, 0, 480, 578, 579, 580, 581, 582, 588,
	589, 593, 594, 602, 601, 600, 603, 606, 608, 607,
	609, 583, 584, 586, 590, 591, 592, 595, 596, 599,
	597, 598, 623, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 512, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 507, 509, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 176, 546, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 626, 216, 0, 0, 526,
	317, 240, 0, 0, 0, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	547, 571, 1505, 573, 574, 575, 576, 0, 0, 530,
	572, 577, 610, 611, 0, 0, 0, 544, 562, 0,
	625, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 490, 0, 0, 0, 0, 559, 560,
	1461, 0, 0, 0, 638, 0, 561, 0, 0, 556,
	557, 558, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 617, 0, 0, 204, 360, 0,
	0, 636, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 585, 470, 0, 0, 0,
	167, 0, 291, 260, 348, 587, 0, 290, 217, 338,
	0, 0, 347, 0, 517, 357, 362, 483, 0, 477,
	314, 177, 0, 133, 491, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 495, 493,
	0, 0, 353, 496, 302, 301, 0, 199, 0, 504,
	471, 283, 508, 205, 132, 327, 365, 150, 211, 332,
	469, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 486, 510, 0, 281, 304, 334,
	152, 321, 484, 485, 487, 514, 293, 516, 522, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 472, 0, 319, 351, 367, 154, 0, 307, 333,
	494, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 627,
	637, 633, 635, 634, 631, 632, 630, 629, 628, 639,
	618, 619, 620, 621, 622, 0, 0, 0, 624, 0,
	604, 605, 0, 0, 0, 480, 578, 579, 580, 581,
	582, 588, 589, 593, 594, 602, 601, 600, 603, 606,
	608, 607, 609, 583, 584, 586, 590, 591, 592, 595,
	596, 599, 597, 598, 623, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	512, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 176, 546,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 626, 216, 0,
	0, 526, 317, 240, 0, 0, 0, 0, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1342, 0, 547, 571, 570, 573, 574, 575, 576, 0,
	0, 530, 572, 577, 610, 611, 0, 0, 0, 544,
	562, 0, 625, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 490, 0, 0, 0, 0,
	559, 560, 0, 0, 0, 0, 638, 0, 561, 0,
	0, 556, 557, 558, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 617, 0, 0, 204,
	360, 0, 0, 636, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 585, 470, 0,
	0, 0, 167, 0, 291, 260, 348, 587, 0, 290,
	217, 338, 0, 0, 347, 0, 517, 357, 362, 483,
	0, 477, 314, 177, 0, 133, 491, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	495, 493, 0, 0, 353, 496, 302, 301, 0, 199,
	0, 504, 471, 283, 508, 205, 132, 327, 365, 150,
	211, 332, 469, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 486, 510, 0, 281,
	304, 334, 152, 321, 484, 485, 487, 514, 293, 516,
	522, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 472, 0, 319, 351, 367, 154, 0,
	307, 333, 494, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 627, 637, 633, 635, 634, 631, 632, 630, 629,
	628, 639, 618, 619, 620, 621, 622, 0, 0, 0,
	624, 0, 604, 605, 0, 0, 0, 480, 578, 579,
	580, 581, 582, 588, 589, 593, 594, 602, 601, 600,
	603, 606, 608, 607, 609, 583, 584, 586, 590, 591,
	592, 595, 596, 599, 597, 598, 623, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 512, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	176, 546, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 626,
	216, 0, 0, 526, 317, 240, 0, 0, 0, 0,
	615, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 547, 571, 570, 573, 574, 575,
	576, 0, 0, 530, 572, 577, 610, 611, 0, 0,
	0, 544, 562, 0, 625, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 490, 0, 0,
	0, 0, 559, 560, 0, 0, 0, 0, 638, 0,
	561, 0, 0, 556, 557, 558, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 617, 0,
	0, 204, 360, 0, 0, 636, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 585,
	470, 0, 0, 0, 167, 0, 291, 260, 348, 587,
	0, 290, 217, 338, 0, 0, 347, 0, 517, 357,
	362, 483, 0, 477, 314, 177, 0, 133, 491, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 353, 496, 302, 301,
	0, 199, 0, 504, 471, 283, 508, 205, 132, 327,
	365, 150, 211, 332, 469, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 486, 510,
	0, 281, 304, 334, 152, 321, 484, 485, 487, 514,
	293, 516, 522, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 472, 0, 319, 351, 367,
	154, 0, 307, 333, 494, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 627, 637, 633, 635, 634, 631, 632,
	630, 629, 628, 639, 618, 619, 620, 621, 622, 0,
	0, 0, 624, 0, 604, 605, 0, 0, 0, 480,
	578, 579, 580, 581, 582, 588, 589, 593, 594, 602,
	601, 600, 603, 606, 608, 607, 609, 583, 584, 586,
	590, 591, 592, 595, 596, 599, 597, 598, 623, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 512, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 626, 216, 0, 0, 526, 317, 240, 0, 0,
	0, 0, 615, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 547, 571, 570, 573,
	574, 575, 576, 0, 0, 530, 572, 577, 610, 611,
	0, 0, 0, 0, 562, 0, 625, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 490,
	0, 0, 0, 0, 559, 560, 0, 0, 0, 0,
	638, 0, 561, 0, 0, 556, 557, 558, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	617, 0, 0, 204, 360, 0, 0, 636, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 585, 470, 0, 0, 0, 167, 0, 291, 260,
	348, 587, 0, 290, 217, 338, 0, 0, 347, 0,
	517, 357, 362, 483, 0, 477, 314, 177, 0, 133,
	491, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 495, 493, 0, 0, 353, 496,
	302, 301, 0, 199, 0, 504, 471, 283, 508, 205,
	132, 327, 365, 150, 211, 332, 469, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	486, 510, 0, 281, 304, 334, 152, 321, 484, 485,
	487, 514, 293, 516, 522, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 472, 0, 319,
	351, 367, 154, 0, 307, 333, 494, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 627, 637, 633, 635, 634,
	631, 632, 630, 629, 628, 639, 618, 619, 620, 621,
	622, 1511, 1512, 1513, 624, 0, 604, 605, 0, 0,
	0, 480, 578, 579, 580, 581, 582, 588, 589, 593,
	594, 602, 601, 600, 603, 606, 608, 607, 609, 583,
	584, 586, 590, 591, 592, 595, 596, 599, 597, 598,
	623, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 512, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 626, 216, 0, 0, 526, 317, 240,
	0, 0, 0, 0, 615, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 547, 571,
	570, 573, 574, 575, 576, 0, 0, 530, 572, 577,
	610, 611, 0, 0, 0, 0, 562, 0, 625, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 490, 0, 0, 0, 0, 559, 560, 0, 0,
	0, 0, 638, 0, 561, 0, 0, 556, 557, 558,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 617, 0, 0, 204, 360, 0, 0, 636,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 585, 470, 0, 0, 0, 167, 0,
	291, 260, 348, 587, 2812, 290, 217, 338, 0, 0,
	347, 0, 517, 357, 362, 483, 0, 477, 314, 177,
	0, 133, 491, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 495, 493, 0, 0,
	353, 496, 302, 301, 0, 199, 0, 504, 471, 283,
	508, 205, 132, 327, 365, 150, 211, 332, 469, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 486, 510, 0, 281, 304, 334, 152, 321,
	484, 485, 487, 514, 293, 516, 522, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 472,
	0, 319, 351, 367, 154, 0, 307, 333, 494, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 627, 637, 633,
	635, 634, 631, 632, 630, 629, 628, 639, 618, 619,
	620, 621, 622, 0, 0, 0, 624, 0, 604, 605,
	0, 0, 0, 480, 578, 579, 580, 581, 582, 588,
	589, 593, 594, 602, 601, 600, 603, 606, 608, 607,
	609, 583, 584, 586, 590, 591, 592, 595, 596, 599,
	597, 598, 623, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 512, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 507, 509, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 626, 216, 0, 0, 526,
	317, 240, 0, 0, 0, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1027, 0,
	547, 571, 570, 573, 574, 575, 576, 0, 0, 530,
	572, 577, 610, 611, 0, 0, 0, 0, 562, 0,
	625, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 490, 0, 0, 0, 0, 559, 560,
	0, 0, 0, 0, 638, 0, 561, 0, 0, 556,
	557, 558, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 617, 0, 0, 204, 360, 0,
	0, 636, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 585, 470, 0, 0, 0,
	167, 0, 291, 260, 348, 587, 0, 290, 217, 338,
	0, 0, 347, 0, 517, 357, 362, 483, 0, 477,
	314, 177, 0, 133, 491, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 495, 493,
	0, 0, 353, 496, 302, 301, 0, 199, 0, 504,
	471, 283, 508, 205, 132, 327, 365, 150, 211, 332,
	469, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 486, 510, 0, 281, 304, 334,
	152, 321, 484, 485, 487, 514, 293, 516, 522, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 472, 0, 319, 351, 367, 154, 0, 307, 333,
	494, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 627,
	637, 633, 635, 634, 631, 632, 630, 629, 628, 639,
	618, 619, 620, 621, 622, 0, 0, 0, 624, 0,
	604, 605, 0, 0, 0, 480, 578, 579, 580, 581,
	582, 588, 589, 593, 594, 602, 601, 600, 603, 606,
	608, 607, 609, 583, 584, 586, 590, 591, 592, 595,
	596, 599, 597, 598, 623, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	512, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 626, 216, 0,
	0, 526, 317, 240, 0, 0, 0, 0, 615, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 547, 571, 570, 573, 574, 575, 576, 0,
	0, 530, 572, 577, 610, 611, 0, 0, 0, 0,
	562, 0, 625, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 490, 0, 0, 0, 0,
	559, 560, 0, 0, 0, 0, 638, 0, 561, 0,
	0, 556, 557, 558, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 617, 0, 0, 204,
	360, 0, 0, 636, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 585, 470, 0,
	0, 0, 167, 0, 291, 260, 348, 587, 0, 290,
	217, 338, 0, 0, 347, 0, 517, 357, 362, 483,
	0, 477, 314, 177, 0, 133, 491, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	495, 493, 0, 0, 353, 496, 302, 301, 0, 199,
	0, 504, 471, 283, 508, 205, 132, 327, 365, 150,
	211, 332, 469, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 486, 510, 0, 281,
	304, 334, 152, 321, 484, 485, 487, 514, 293, 516,
	522, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 472, 0, 319, 351, 367, 154, 0,
	307, 333, 494, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 627, 637, 633, 635, 634, 631, 632, 630, 629,
	628, 639, 618, 619, 620, 621, 622, 0, 0, 0,
	624, 0, 604, 605, 0, 0, 0, 480, 578, 579,
	580, 581, 582, 588, 589, 593, 594, 602, 601, 600,
	603, 606, 608, 607, 609, 583, 584, 586, 590, 591,
	592, 595, 596, 599, 597, 598, 623, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 512, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 1551, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 526, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 1555, 0, 0,
	0, 0, 0, 0, 126, 0, 468, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 1554, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 488,
	470, 0, 0, 0, 167, 0, 291, 260, 348, 492,
	0, 290, 217, 338, 0, 0, 347, 0, 517, 357,
	362, 483, 0, 477, 314, 177, 0, 133, 491, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 353, 496, 302, 301,
	0, 199, 0, 504, 471, 283, 508, 205, 132, 327,
	365, 150, 211, 332, 469, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 486, 510,
	0, 281, 304, 334, 152, 321, 484, 485, 487, 514,
	293, 516, 522, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 472, 0, 319, 351, 367,
	154, 0, 307, 333, 494, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 512, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 1551, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 526, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 1555,
	0, 0, 0, 0, 0, 0, 126, 0, 468, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 1549, 284, 305, 0, 275, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 1554, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 488, 470, 0, 0, 0, 167, 0, 291, 260,
	348, 492, 0, 290, 217, 338, 0, 0, 347, 0,
	517, 357, 362, 483, 0, 477, 314, 177, 0, 133,
	491, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 495, 493, 0, 0, 353, 496,
	302, 301, 0, 199, 0, 504, 471, 283, 508, 205,
	132, 327, 365, 150, 211, 332, 469, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	486, 510, 0, 281, 304, 334, 152, 321, 484, 485,
	487, 514, 293, 516, 522, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 472, 0, 319,
	351, 367, 154, 0, 307, 333, 494, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 480, 473, 474, 475, 476, 478, 497, 498, 502,
	503, 520, 519, 518, 521, 525, 528, 527, 529, 479,
	481, 489, 499, 500, 501, 505, 506, 515, 511, 513,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 512, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 1049,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 526, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1050, 0,
	1053, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 1046, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 488, 470, 0, 0, 0, 167, 0,
	291, 260, 348, 492, 0, 290, 217, 338, 0, 0,
	347, 0, 517, 357, 362, 483, 0, 477, 314, 177,
	0, 133, 491, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 495, 493, 0, 0,
	353, 496, 302, 301, 0, 199, 0, 504, 471, 283,
	508, 205, 132, 327, 365, 150, 211, 332, 469, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 486, 510, 0, 281, 304, 334, 152, 321,
	484, 485, 487, 514, 293, 516, 522, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 472,
	0, 319, 351, 367, 154, 0, 307, 333, 494, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 480, 473, 474, 475, 476, 478, 497,
	498, 502, 503, 520, 519, 518, 521, 525, 528, 527,
	529, 479, 481, 489, 499, 500, 501, 505, 506, 515,
	511, 513, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 512, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 507, 509, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 526,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 468, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 488, 470, 0, 0, 0,
	167, 0, 291, 260, 348, 492, 0, 290, 217, 338,
	0, 0, 347, 0, 517, 357, 362, 483, 0, 477,
	314, 177, 0, 133, 491, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 495, 493,
	0, 0, 353, 496, 302, 301, 0, 199, 0, 504,
	471, 283, 508, 205, 132, 327, 365, 150, 211, 332,
	469, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 486, 510, 0, 281, 304, 334,
	152, 321, 484, 485, 487, 514, 293, 516, 522, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 472, 0, 319, 351, 367, 154, 0, 307, 333,
	494, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 480, 473, 474, 475, 476,
	478, 497, 498, 502, 503, 520, 519, 518, 521, 525,
	528, 527, 529, 479, 481, 489, 499, 500, 501, 505,
	506, 515, 511, 513, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 463, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	512, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 1850, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 526, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 468, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 488, 470, 0,
	0, 0, 167, 0, 291, 260, 348, 492, 0, 290,
	217, 338, 0, 0, 347, 0, 517, 357, 362, 483,
	0, 477, 314, 177, 0, 133, 491, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	495, 493, 0, 0, 353, 496, 302, 301, 0, 199,
	0, 504, 471, 283, 508, 205, 132, 327, 365, 150,
	211, 332, 469, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 486, 510, 0, 281,
	304, 334, 152, 321, 484, 485, 487, 514, 293, 516,
	522, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 472, 0, 319, 351, 367, 154, 0,
	307, 333, 494, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 480, 473, 474,
	475, 476, 478, 497, 498, 502, 503, 520, 519, 518,
	521, 525, 528, 527, 529, 479, 481, 489, 499, 500,
	501, 505, 506, 515, 511, 513, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 512, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 507, 509, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 526, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 468, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 488,
	470, 0, 0, 0, 167, 0, 291, 260, 348, 492,
	0, 290, 217, 338, 0, 0, 347, 0, 517, 357,
	362, 483, 0, 477, 314, 177, 0, 133, 491, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 353, 496, 302, 301,
	0, 199, 0, 504, 471, 283, 508, 205, 132, 327,
	365, 150, 211, 332, 469, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 486, 510,
	0, 281, 304, 334, 152, 321, 484, 485, 487, 514,
	293, 516, 522, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 472, 0, 319, 351, 367,
	154, 0, 307, 333, 494, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 512, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 507, 509, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 526, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1050, 0, 1053, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 488, 470, 0, 0, 0, 167, 0, 291, 260,
	348, 492, 0, 290, 217, 338, 0, 0, 347, 0,
	517, 357, 362, 483, 0, 477, 314, 177, 0, 133,
	491, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 495, 493, 0, 0, 353, 496,
	302, 301, 0, 199, 0, 504, 471, 283, 508, 205,
	132, 327, 365, 150, 211, 332, 469, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	486, 510, 0, 281, 304, 334, 152, 321, 484, 485,
	487, 514, 293, 516, 522, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 472, 0, 319,
	351, 367, 154, 0, 307, 333, 494, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 480, 473, 474, 475, 476, 478, 497, 498, 502,
	503, 520, 519, 518, 521, 525, 528, 527, 529, 479,
	481, 489, 499, 500, 501, 505, 506, 515, 511, 513,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 512, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 526, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 488, 470, 0, 0, 0, 167, 0,
	291, 260, 348, 492, 0, 290, 217, 338, 0, 0,
	347, 0, 517, 357, 362, 483, 0, 477, 314, 177,
	0, 133, 491, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 495, 493, 0, 0,
	353, 496, 302, 301, 0, 199, 0, 504, 471, 283,
	508, 205, 132, 327, 365, 150, 211, 332, 469, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 486, 510, 0, 281, 304, 334, 152, 321,
	484, 485, 487, 514, 293, 516, 522, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 472,
	0, 319, 351, 367, 154, 0, 307, 333, 494, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 480, 473, 474, 475, 476, 478, 497,
	498, 502, 503, 520, 519, 518, 521, 525, 528, 527,
	529, 479, 481, 489, 499, 500, 501, 505, 506, 515,
	511, 513, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 512, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 0, 0, 507, 509, 437,
	330, 431, 442, 425, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 432, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 423, 426, 0, 0, 0, 241, 144, 0,
	0, 430, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 434, 299,
	0, 0, 438, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 441, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 451, 304, 334, 152, 321, 427, 428, 429,
	435, 436, 439, 440, 443, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 433, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 437, 330, 431, 442, 425, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 432, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 423, 426, 0, 0, 0,
	241, 144, 0, 0, 430, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 434, 299, 0, 0, 438, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 441,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 420, 304, 334, 152, 321,
	427, 428, 429, 435, 436, 439, 440, 443, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 433, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 1063, 1062, 1072, 1073, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1064, 0, 0, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 2737, 0, 0, 0, 0, 0, 0, 176, 2735,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 2736, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 36,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	1546, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 79, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 1329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 1201, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 0, 0, 0, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	0, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 281, 304, 334, 152,
	321, 0, 0, 0, 0, 293, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 2200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 0, 0, 0, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	0, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 281, 304, 334, 152,
	321, 0, 0, 0, 0, 293, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	123, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 0, 0, 0, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	0, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 281, 304, 334, 152,
	321, 0, 0, 0, 0, 293, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 662, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 658, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 663,
	661, 652, 653, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	659, 660, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 1195, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	649, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	662, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 658, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 663, 661, 652, 653, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2215,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 490, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 659, 660, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 488, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 0, 0, 483, 0, 477, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 504, 471,
	0, 508, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 486, 510, 0, 0, 0, 0, 0,
	0, 484, 485, 487, 514, 0, 516, 522, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 0, 0, 483, 0, 477, 0, 523,
	524, 0, 491, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 0, 0, 495, 493, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 504, 471, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	0, 0, 486, 510, 0, 0, 0, 0, 0, 512,
	484, 485, 487, 514, 0, 516, 522, 2222, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 0, 0, 483, 0, 477, 0, 523, 524,
	0, 491, 0, 480, 473, 474, 475, 476, 478, 497,
	498, 502, 503, 520, 519, 518, 521, 525, 528, 527,
	529, 479, 481, 489, 499, 500, 501, 505, 506, 515,
	511, 513, 0, 0, 0, 495, 493, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 504, 471, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 510, 0, 0, 0, 0, 0, 512, 484,
	485, 487, 514, 0, 516, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	36, 37, 72, 39, 40, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 59, 0, 41, 63, 64, 0, 78, 0,
	0, 60, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 50, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2562, 0, 0, 523, 524, 2819,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2563, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 49, 77, 76, 0, 0, 0, 512, 47, 36,
	0, 72, 39, 40, 65, 0, 0, 36, 0, 72,
	39, 40, 0, 59, 0, 0, 507, 509, 0, 78,
	0, 59, 0, 41, 0, 0, 0, 78, 0, 0,
	0, 41, 0, 0, 0, 57, 58, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2564, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	66, 81, 67, 0, 0, 0, 0, 0, 0, 81,
	2790, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 2562, 0, 68, 0, 0,
	2802, 0, 0, 2562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 75, 0,
	53, 54, 61, 0, 62, 2565, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 2563, 0, 0, 0,
	0, 0, 0, 0, 2563, 0, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	49, 77, 76, 0, 0, 0, 0, 47, 36, 0,
	72, 39, 40, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	59, 0, 41, 0, 0, 73, 78, 0, 0, 0,
	41, 0, 0, 73, 57, 58, 0, 2564, 0, 0,
	0, 0, 57, 58, 0, 2564, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 66,
	81, 67, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 68, 0,
	0, 0, 79, 0, 2562, 0, 68, 0, 0, 2731,
	0, 0, 2562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2565, 75, 0, 53,
	54, 61, 0, 62, 2565, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 2563, 0, 0, 0, 0,
	0, 0, 0, 2563, 0, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 73, 57, 58, 0, 2564, 0, 0, 0,
	0, 57, 58, 0, 2564, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 68, 0, 0,
	0, 79, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2565, 75, 0, 53, 54,
	61, 0, 62, 2565, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	79,
}

var yyPact = [...]int{
	33674, -1000, -333, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1762, -1000, -1000, -1000, -1000,
	-1000, -1000, 922, 340, -1000, 296, 103, 29673, 631, 3001,
	30657, -1000, -1000, -1000, 195, 523, 30657, 449, 479, 1202,
	1649, 1201, 51, -61, -62, 118, 23276, 22783, 33, -1000,
	1805, 1807, -1000, -1000, 587, 58, -1000, -1000, -1000, 20318,
	210, -1000, -1000, 1749, 1760, 1570, -1000, 13430, 587, 587,
	29181, 32625, -1000, 1804, 30657, 11952, -1000, 617, 30657, -171,
	573, 573, 387, 573, 573, 621, -1000, 880, -1000, -1000,
	-1000, -1000, 30657, 26229, 576, 30165, 576, 576, 576, 576,
	576, 576, 576, 30657, -1000, 724, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30657, 1200,
	1688, 959, 85, -1000, -1000, -1000, 923, -1000, 382, 341,
	377, 336, 90, 965, 1746, -1000, 1481, 1749, 1749, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 361, 606, 261, 210,
	868, -1000, 1687, 1686, 1128, 1684, 500, 1682, 1508, -25,
	-1000, 1199, 30657, -1000, -1000, 1101, 1098, 1533, 1421, 663,
	1532, -1000, -1000, 303, 499, 1503, 435, 1503, 1503, 1503,
	1503, 1503, -78, 1503, 1503, 1503, 106, 1503, 152, 1503,
	1503, 1503, 1503, 1503, 1213, -1000, -1000, -1000, 402, 1410,
	1458, 1530, 535, -1000, -1000, -1000, -1000, 1541, 1735, 620,
	-1000, -112, 1471, 21302, -1000, 1481, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1207, 1673, 998, 16382, 1618, -1000, -1000, 964, 1789,
	-1000, 19826, 723, -1000, 16382, 3881, 1481, -1000, -1000, 1481,
	-1000, -1000, -1000, 644, -1000, -1000, 18350, 18350, 18350, 18350,
	18350, 18350, 18350, 18350, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	-1000, -1000, 1481, -1000, 12938, 1481, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 16382, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	28689, 26721, 30657, 1426, 1406, -1000, -1000, 718, 1477, -118,
	32133, -1000, -1000, -1000, -1000, 31149, 25737, 862, -1000, -1000,
	-1000, -1000, 1659, -1000, -1000, 713, -1000, 1762, -1000, -1000,
	1370, 519, -1000, 4917, 4872, -1000, -1000, -1000, 1507, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30165, 1728, 609, 1197, 925, 1195,
	1193, 1192, 26229, 26229, 573, 1191, 1475, 605, 1474, 604,
	1210, 30657, 1714, 1529, 30657, 1189, 1188, 1187, 1184, 26229,
	26229, -1000, 11454, -1000, -1000, 959, -1000, 1136, 16382, 573,
	573, 30657, 30657, 30657, 30657, -1000, -1000, 959, 959, 959,
	959, 883, 1788, 883, -1000, 883, -1000, -1000, 16382, -1000,
	18350, 25245, 752, -1000, -1000, -1000, 1183, 359, -1000, -1000,
	-1000, -1000, -1000, -1000, 1181, 500, 500, -1000, 1134, 500,
	1452, -1000, 846, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 500, -1000, 15890, -329, -1000,
	-1000, 1473, -1000, 312, -1000, -1000, 543, 543, 203, 26229,
	26229, 26229, -1000, 1503, 30165, -1000, 1503, 1503, 1503, -84,
	1503, 1503, -1000, -1000, 1503, -1000, -1000, -1000, -1000, -1000,
	1503, -1000, -1000, -1000, 1503, 1503, -1000, 1503, 1503, -1000,
	-1000, -1000, -1000, -1000, 26229, 543, 204, 1472, 543, 26229,
	26229, -1000, 88, 82, 78, 77, -1000, -1000, -1000, -1000,
	76, 73, -1000, -1000, 1570, -1000, -1000, 210, -1000, -1000,
	30657, -103, 21302, 1471, 1727, 9960, -1000, -1000, -1000, 1800,
	788, 1309, -1000, -1000, 1470, -1000, 1078, 710, 1089, 1581,
	-1000, -1000, -1000, 30657, -1000, 16382, 16382, 1086, -1000, 21794,
	-1000, -1000, -1000, -1000, 9462, 792, 18350, 1002, 851, 18350,
	18350, 18350, 18350, 18350, 18350, 18350, 18350, 18350, 18350, 18350,
	18350, 18350, 18350, 18350, 1084, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1180, -1000, 210, 1243, 1243, 731, 731,
	731, 731, 731, 731, 731, 23768, 1722, 14414, 14414, 14414,
	1722, 1207, 1207, 14414, 14414, 14414, 14414, 14414, 14414, 14414,
	14414, 1722, 1722, 14414, 1207, 1207, 1207, 1207, 14414, 14414,
	14414, 14414, 30165, 30165, 1722, 14414, 14414, 14414, 1722, 1207,
	1366, 911, 12938, 14414, 14414, 1207, 16382, 16382, 15398, 14906,
	16874, 14414, 1722, 895, 911, 31149, -1000, -1000, 17858, -1000,
	-1000, -1000, -1000, -1000, 1207, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14414, 14414, 14414, 14414, 782, 30657, -1000,
	1358, 1460, -1000, -1000, -1000, 1726, 24753, -1000, 19334, -1000,
	1481, 782, 1384, 26721, 30657, -1000, -1000, 26721, 30657, 8964,
	31641, 1430, -1000, -109, -138, -118, -1000, -1000, 720, -1000,
	-1000, -1000, 12445, -1000, 10458, 1749, 1570, 6474, 10956, -1000,
	4872, 1507, -1000, -45, -1000, -1000, -1000, 1490, -1000, 1490,
	323, 22, 1490, 1490, 1490, 1490, 1490, 1, 1, 1,
	1, 27, -1000, -1000, -1000, -1000, -1000, 1506, 1505, -1000,
	1490, 1490, 1490, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1499, 329, 1494, 1494, 1494, 1494, 1494, 530,
	530, -1000, 16382, 1514, -1000, 30657, -1000, 1710, -1000, 325,
	1504, 1423, -1000, 211, 1264, 30657, -1000, 30657, 30657, 26229,
	26229, 26229, 610, -1000, 30657, 1469, -1000, -1000, -1000, -1000,
	-1000, 1403, -1000, 1264, -1000, -1000, -1000, -1000, -1000, 911,
	1179, 1177, -1000, -1000, -1000, 884, -1000, -1000, -1000, -1000,
	959, 30657, 30657, 30657, 1724, 959, 911, 712, 1515, 1481,
	1207, -1000, -1000, 1176, -1000, 1452, 1452, -1000, 1452, 500,
	1243, 1452, -1000, 1364, 1706, 1133, 30657, -1000, 21302, -37,
	-1000, -127, 28197, -1000, -1000, -1000, 28197, -1000, 106, 126,
	-1000, 600, -1000, 1362, -1000, -1000, -1000, -1000, 1503, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28197, 170,
	201, 28197, 1403, 1786, -1000, -1000, -1000, -1000, 1744, -1000,
	1722, 1207, 222, -1000, -1000, -1000, 1481, 1315, 709, -1000,
	1576, 998, 998, 16382, -1000, -1000, -1000, 10458, 1743, -1000,
	1595, 1594, 1545, -1000, -1000, 792, 865, -1000, -1000, 1045,
	-1000, -1000, -1000, -1000, 708, 1481, -1000, 3650, -1000, -1000,
	-1000, -1000, 1002, 18350, 18350, 18350, 712, 3650, 3587, 929,
	885, 731, 825, 825, 741, 741, 741, 741, 741, 967,
	967, -1000, -1000, -1000, 1207, -1000, -1000, -1000, 14414, 1352,
	-1000, -1000, 911, 681, 1352, 1352, 14414, -196, -196, 1352,
	1207, 1352, 1352, 1352, 1352, 1207, 1352, 14414, 14414, 1352,
	-196, -196, -196, -196, 1352, 1352, 1352, 1352, 1444, 1443,
	14414, 1352, 1352, 1352, 14414, -1000, 16382, -1000, 1207, 1352,
	1352, -1000, 874, 1049, 802, 1784, 1352, 800, 1783, 1352,
	1284, 18350, 18350, 18350, 1352, 14414, 928, -1000, 16382, 1207,
	-1000, 2394, 1352, 1207, 1431, 1352, 1352, 172, 1481, -1000,
	10458, 26721, 26721, 26721, 26721, 26721, -1000, 1564, 1562, -1000,
	1555, 1552, 1556, 21302, 1360, 1207, 322, 24753, -1000, 1481,
	-1000, 20810, 689, 615, 613, 612, 14414, 1769, 26721, 1317,
	-1000, 1317, -1000, 671, -1000, -1000, 31149, -118, -141, -1000,
	-1000, 1430, -1000, 1100, -1000, -1000, 911, -1000, 670, 1673,
	1722, 1428, 5976, -1000, -1000, -1000, -1000, 519, -1000, -1000,
	-1000, 1501, 4593, -1000, 1629, 717, 717, 719, 1156, 1611,
	-1000, -1000, 351, -47, -1000, -1000, 1088, 1, 1, 1490,
	1490, 321, 1490, -1000, 1, -1000, -1000, -1000, 720, 1657,
	720, 720, 720, 720, 1, 1132, 1132, -1000, -1000, -1000,
	-1000, 1085, -1000, 1499, -1000, 1077, -1000, -1000, -1000, -1000,
	-1000, -1000, 955, 1524, 30165, 210, 1719, -1000, 1774, -1000,
	-1000, 626, 117, 26229, 209, 416, 208, -1000, 599, -1000,
	598, -1000, -1000, -1000, -1000, -1000, -1000, 30657, 26229, -1000,
	-1000, 1769, 1173, 1172, -1000, -1000, -1000, 883, 959, 1652,
	-1000, -1000, 18350, 26229, -1000, 373, -1000, -1000, -1000, -1000,
	782, 619, -1000, -1000, -99, -1000, -1000, 597, 669, 668,
	594, -1000, 131, 26229, -1000, 30165, -1000, 1782, 1781, 163,
	1779, 26229, -1000, 62, 1581, -1000, 1425, -1000, 701, 692,
	729, 539, 539, -1000, 809, 539, 781, -1000, 216, -1000,
	9960, 9960, 1574, -1000, -1000, -1000, 30657, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8466, 14414, -1000, 712,
	3650, 3164, -1000, 18350, -1000, 1352, 14414, -196, 7968, -196,
	-196, 1352, -1000, 27705, -1000, -1000, -196, -1000, -196, -196,
	-196, -196, -196, 1352, 1352, -196, -1000, -1000, -1000, -1000,
	-196, -196, -196, -196, 18350, 18350, 1352, -196, -196, -196,
	1207, 911, -1000, -1000, -1000, 197, 1084, 197, 18350, 18350,
	-1000, 18350, 18350, -1000, -1000, 18350, 3571, 3351, 2972, -233,
	1432, 875, -1000, 16382, 1054, -1000, -1000, -1000, -1000, -1000,
	-1000, 1523, 10458, 1481, 6972, -1000, 30165, 1456, -1000, 837,
	815, 1460, 1498, 1521, 1313, -1000, -1000, -1000, -1000, 1561,
	-1000, 1548, -1000, -1000, 1486, -1000, -1000, 1419, 1481, 30165,
	18350, 689, -1000, 1481, 1481, 1481, 1207, 1762, 16382, 1317,
	-1000, -1000, 747, -1000, -1000, -116, -132, -1000, -1000, -1000,
	9960, -1000, 6474, -1000, 6474, -1000, 22286, 577, 1631, 529,
	-1000, 1156, -1000, -1000, 1156, -1000, 1156, -1000, -1000, -1000,
	1495, -1000, 950, -1000, -1000, -1000, -1000, -1000, 18350, 1799,
	-1000, 1627, -1000, 1619, 1617, 1131, -1000, -1000, 1245, 720,
	720, 1, -1000, -1000, 1490, -1000, 720, -1000, 780, -1000,
	-1000, -1000, -1000, 720, 1350, -1000, 1346, 1413, -1000, 1343,
	83, 30657, -1000, -1000, -1000, 1520, -1000, -1000, -1000, 1238,
	1408, -1000, 4917, 1170, 1169, 1168, -241, 295, -1000, 26229,
	162, 211, 427, 1166, 30657, 26229, -1000, -1000, -1000, -1000,
	-1000, 959, -1000, 18350, 3650, 1264, -1000, -1000, 1, 30657,
	-1000, 26229, 740, 27213, 26229, 156, 120, -1000, 26229, 26229,
	1778, 26229, 1403, 1130, 1545, 222, 4204, 1156, 652, -1000,
	-1000, 541, -1000, 3684, 1611, 1164, 33375, 33166, 30165, 1607,
	1606, 1162, 30657, 30165, -1000, -1000, 32957, 1161, 16382, -1000,
	30165, 30165, 657, -1000, -1000, -1000, 1387, 13430, -1000, -1000,
	1207, -1000, 18350, 3650, -196, -1000, -1000, -1000, -1000, 638,
	-1000, -1000, -196, -1000, -1000, 1160, -1000, -1000, -1000, -1000,
	-1000, -1000, -196, -196, -1000, -1000, -1000, -1000, -1000, 2810,
	803, -196, -1000, -1000, -1000, -1000, 1207, 1490, 1490, -1000,
	1490, 1494, -1000, 1490, 34, 1490, 30, 1207, 1207, 3510,
	3424, 3054, 2935, 2394, 18350, 18350, 18350, 1481, -183, -1000,
	911, 16382, -1000, 1695, 1398, 1402, -1000, -1000, 13922, 1207,
	1591, 1315, -1000, 20318, 1312, -1000, 1762, 10458, 16382, 16382,
	-1000, -1000, 16382, 1493, -1000, 16382, -1000, -1000, -1000, -1000,
	30165, 319, -1000, 16382, 1312, 2000, -1000, 30165, 30165, 30165,
	-1000, 1749, 911, -1000, -1000, -1000, -1000, 5976, -1000, 1297,
	-1000, 1490, 1490, 1605, -1000, 717, -1000, -1000, -1000, -1000,
	30165, -1000, 3650, -69, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 720, -1000, -1000, -1000, -1000, -1000, 1, 1127, 1,
	1075, -1000, 1074, -1000, -1000, -281, 1489, -1000, 210, 30657,
	102, 626, -1000, 4917, 4917, 4917, 158, 159, -1000, 944,
	-1000, -1000, -1000, 1126, 1125, 1122, 1264, 212, 941, 193,
	-1000, 1712, -1000, -1000, -1000, 3650, -83, -1000, 120, -1000,
	-1000, -1000, 120, -1000, -1000, 200, 1403, 1403, 26229, 1403,
	-1000, -1000, -1000, 32957, 404, 4917, 4917, 1514, 717, 1602,
	529, -1000, -1000, -1000, -1000, -1000, -1000, 1158, -1000, 715,
	-1000, 590, 404, 32957, 911, 749, 1703, 9960, 1767, 26721,
	-1000, -1000, -1000, 3650, -1000, 7470, -1000, 778, -1000, -1000,
	-1000, 18350, 18350, -1000, -1000, -1000, 335, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18350, 18350, 18350, 18350, -1000,
	2394, 2394, 2394, 18350, 1207, 1121, 911, 1599, -1000, 1481,
	-1000, -1000, 1481, 174, -1000, 30165, 1749, -1000, 911, 911,
	911, 30165, 911, 1286, -1000, 1481, 18842, -1000, 21302, 1282,
	1282, 1282, -1000, 624, 22286, 1701, 1701, -1000, 1156, 1271,
	-1000, 1481, 1481, -1000, 720, -1000, 720, 1227, 1224, -1000,
	22286, -1000, 1742, -1000, 102, -1000, 1120, 281, 286, -1000,
	270, 266, 263, 257, 245, -1000, -1000, -1000, -1000, 431,
	158, -1000, -63, 1044, 823, 1670, 159, -1000, 1043, 1040,
	1036, 1033, 307, -1000, -1000, -1000, -1000, 207, 211, -1000,
	425, 1119, 1643, 1640, 1717, 1717, 153, 1403, 1433, 1217,
	-1000, -1000, 1157, -1000, -1000, 1488, 1156, 1487, -1000, 1155,
	-1000, -1000, 30165, -1000, 404, 1691, 1690, 1481, -1000, 1765,
	1759, 1317, 13430, -1000, -1000, 1762, 1758, 2394, 2394, -1000,
	-1000, 2394, 2394, 2394, 2394, -1000, -1000, -1000, 171, -1000,
	-1000, 1797, -1000, 1402, 1481, -1000, 210, -1000, -1000, 1268,
	-1000, 30165, -1000, -1000, 689, -1000, -1000, -1000, 624, -1000,
	1151, 809, 1116, -1000, -1000, -1000, -1000, 412, -1000, -1000,
	-1000, -1000, 1244, -1000, 332, 34040, -1000, -1000, -1000, -1000,
	-1000, -1000, 1647, 1646, 293, -1000, 1113, 1112, -1000, 415,
	1103, 664, -201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 424, 1150, -1000, 191, -1000, -1000,
	578, 1620, 1634, 1757, -1000, 26229, -1000, -1000, 26721, -1000,
	-1000, 351, 351, 22286, 1514, 22286, -1000, -1000, -1000, 18350,
	-1000, 776, -198, 16382, 16382, 1767, -1000, 770, 16382, -1000,
	-1000, -1000, -1000, -1000, -1000, 1207, 140, -254, 10458, 1402,
	1207, -1000, -1000, -1000, -1000, -1000, 1030, -1000, 30657, 624,
	308, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16382, 16382, 5478, 34040, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1007, -1000, -1000, 1071, 401, 185,
	-1000, 1716, -1000, 1486, 993, 1640, 1756, 1638, 1636, -1000,
	1111, -242, 1317, 1236, 1485, 1234, 3650, 1232, -1000, 30165,
	-1000, 30165, -1000, 911, 1401, -1000, 911, 1765, -1000, 1207,
	247, 247, 1388, -1000, 1573, -238, -258, 1299, -1000, -1000,
	1484, -1000, 624, 310, -1000, 1038, 990, 236, 230, 3491,
	-1000, -1000, -1000, -1000, -337, -1000, 173, -1000, 160, -1000,
	-1000, -1000, 1106, -1000, 1642, -1000, 1087, -1000, 1752, 1751,
	-1000, 205, 1767, 624, 22286, 624, -1000, 776, 1585, 1291,
	-1000, 1713, 16382, -198, -1000, -1000, 248, -1000, 764, 301,
	761, -1000, 1243, -1000, -1000, 1569, -1000, 30165, -1000, 1141,
	1139, 890, -1000, 16382, 34040, 1741, 1740, 1739, 1674, 9960,
	34032, -1000, -1000, -1000, -1000, -1000, 1079, 1039, 24260, 1765,
	-1000, 1230, -1000, -1000, 309, 30165, 1481, -1000, -1000, 936,
	-1000, -1000, -1000, -1000, -1000, 30165, -246, 1206, 384, -1000,
	-1000, 908, 34040, -1000, 970, -339, 459, 210, 451, 18350,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 145, 1264, -198,
	624, 337, -1000, -1000, 248, -1000, -256, 1519, -1000, -1000,
	-1000, -1000, -1000, -1000, 34040, -1000, -340, 34040, 235, -1000,
	-1000, -1000, 33861, -1000, -1000, -1000, -1000, 219, -1000, -1000,
	3650, 26229, -1000, -1000, 1481, -1000, -266, 1518, 1500, 1777,
	-1000, -341, 33853, -342, 571, 34040, 940, -1000, 16382, -1000,
	451, -1000, 1264, 17366, -1000, -1000, 1795, -1000, 1793, 646,
	646, 33682, 905, 34040, -1000, -343, 553, 34040, -1000, 881,
	-1000, 2394, 1207, -1000, -1000, -1000, 520, 1056, -1000, -1000,
	-1000, 4508, -1000, -344, 34040, -1000, -1000, -1000, -1000, -1000,
	546, 3287, -346, -1000, 544, 34040, -1000,
}

var yyPgo = [...]int{
	0, 2225, 2224, 49, 2223, 186, 2217, 2211, 2210, 19,
	17, 14, 21, 2209, 1961, 1944, 1939, 1935, 1933, 2208,
	7, 2205, 2204, 1920, 2203, 2202, 1918, 1915, 1912, 1906,
	2201, 2200, 2197, 1904, 1896, 1894, 2, 2196, 27, 2194,
	5, 134, 153, 2192, 3, 2191, 2190, 12, 2188, 2187,
	1892, 2186, 2183, 2182, 98, 2181, 1878, 1868, 2180, 1862,
	1852, 2179, 2178, 1850, 1846, 1821, 2175, 188, 2173, 2172,
	2171, 210, 94, 142, 2170, 2168, 2164, 108, 78, 1873,
	112, 45, 104, 348, 2161, 25, 51, 177, 2160, 138,
	2159, 125, 2157, 145, 2154, 129, 173, 97, 2153, 2151,
	150, 2149, 2148, 2147, 124, 2143, 2142, 1155, 2141, 2140,
	147, 2139, 67, 47, 43, 2138, 2137, 2136, 2135, 2134,
	33, 946, 2132, 2131, 128, 2129, 2128, 84, 2115, 2114,
	167, 2111, 2110, 2109, 127, 41, 2108, 2107, 48, 2106,
	65, 64, 2103, 52, 2101, 126, 2099, 2098, 40, 24,
	2097, 59, 2091, 54, 2090, 133, 110, 141, 2088, 10,
	29, 23, 2077, 30, 16, 13, 44, 62, 76, 120,
	102, 2074, 26, 34, 111, 99, 92, 36, 2072, 136,
	2070, 91, 143, 121, 123, 137, 2069, 2068, 2067, 1027,
	2062, 113, 82, 2061, 140, 1098, 155, 105, 2059, 93,
	2058, 2055, 2054, 2053, 2052, 90, 165, 2046, 2045, 57,
	101, 954, 1748, 83, 139, 2043, 42, 2042, 2041, 2040,
	3029, 107, 79, 103, 2039, 100, 39, 46, 2038, 2037,
	2036, 2035, 2034, 2032, 1657, 2031, 2029, 2026, 2025, 116,
	75, 2022, 2005, 119, 96, 2002, 2001, 2000, 1998, 118,
	85, 135, 1997, 109, 122, 115, 1996, 86, 1995, 1994,
	56, 38, 1993, 1991, 1990, 95, 88, 1989, 66, 35,
	32, 63, 28, 1988, 1987, 80, 72, 1984, 31, 1983,
	4, 8, 11, 1981, 1980, 1979, 1975, 1973, 1971, 1970,
	87, 1969, 1967, 58, 1966, 1965, 1964, 37, 1957, 1955,
	1953, 131, 106, 68, 146, 114, 9, 1946, 1942, 6,
	1937, 117, 1909, 69, 1890, 55, 1884, 1876, 60, 1872,
	1839, 61, 1837, 1831, 151, 1580, 474, 1829, 148, 132,
	53, 89, 1827, 1823, 0, 1134, 156, 154, 1817, 1788,
}

var yyR1 = [...]int{
	0, 333, 333, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 336, 336, 102, 102, 100, 100, 101,
	101, 174, 174, 12, 12, 12, 179, 179, 184, 184,
	184, 187, 187, 187, 187, 165, 166, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 307,
	307, 316, 316, 316, 317, 317, 315, 315, 315, 315,
	315, 319, 319, 320, 320, 318, 318, 318, 318, 322,
	322, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 310, 310, 310,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 325, 325, 326, 326, 327, 327, 328, 328, 328,
	328, 329, 329, 329, 329, 329, 330, 330, 330, 330,
	330, 330, 330, 331, 331, 332, 332, 2, 288, 288,
	289, 289, 290, 290, 290, 290, 291, 291, 292, 292,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	24, 208, 208, 309, 309, 309, 303, 303, 303, 305,
	305, 304, 304, 304, 306, 306, 311, 311, 311, 311,
	311, 313, 313, 313, 313, 313, 313, 314, 314, 314,
	312, 312, 48, 48, 49, 49, 49, 154, 154, 154,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 287, 287, 287, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 262,
	263, 263, 263, 263, 263, 263, 263, 263, 250, 250,
	251, 227, 227, 227, 227, 227, 227, 227, 227, 226,
	226, 226, 226, 230, 230, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 229, 229, 229, 229, 229,
	229, 229, 229, 231, 231, 231, 231, 231, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 249, 249, 234, 234, 243, 243, 244, 244, 244,
	241, 241, 242, 242, 237, 238, 245, 239, 239, 239,
	240, 240, 240, 248, 248, 248, 248, 248, 235, 35,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 274, 274, 201, 201, 202, 202, 252, 252,
	272, 272, 271, 271, 270, 270, 270, 261, 261, 267,
	267, 267, 267, 267, 267, 267, 267, 256, 256, 256,
	255, 255, 257, 257, 260, 260, 269, 269, 268, 268,
	253, 253, 253, 275, 275, 275, 275, 275, 254, 254,
	254, 254, 276, 258, 258, 259, 259, 259, 281, 282,
	280, 280, 280, 280, 280, 117, 117, 117, 264, 264,
	264, 265, 265, 265, 266, 266, 266, 285, 285, 284,
	284, 50, 51, 55, 55, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 153,
	153, 153, 206, 206, 279, 277, 277, 278, 278, 15,
	15, 53, 53, 308, 308, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 283, 283, 283, 17, 17, 56,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 84, 193, 193, 192, 192, 191,
	191, 191, 194, 194, 194, 224, 224, 224, 58, 58,
	62, 62, 65, 65, 65, 63, 64, 27, 28, 28,
	28, 28, 29, 207, 207, 60, 60, 61, 61, 61,
	61, 76, 76, 338, 338, 59, 339, 67, 68, 68,
	69, 69, 69, 197, 197, 73, 73, 73, 71, 71,
	71, 72, 72, 78, 78, 82, 82, 82, 82, 81,
	81, 81, 81, 156, 156, 161, 217, 217, 137, 137,
	157, 157, 162, 162, 162, 163, 163, 164, 164, 164,
	164, 164, 159, 159, 158, 158, 160, 125, 125, 215,
	215, 215, 214, 214, 214, 214, 86, 86, 89, 89,
	91, 91, 91, 91, 91, 94, 139, 139, 111, 111,
	112, 112, 112, 112, 112, 123, 123, 173, 173, 172,
	172, 175, 175, 90, 92, 92, 92, 92, 97, 97,
	98, 98, 99, 99, 205, 205, 222, 222, 222, 103,
	103, 103, 105, 104, 104, 104, 104, 106, 106, 108,
	109, 109, 107, 107, 110, 113, 113, 113, 113, 114,
	114, 83, 83, 83, 83, 83, 83, 83, 190, 190,
	116, 116, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 133, 133, 133, 133, 133, 133, 118, 118,
	118, 118, 118, 118, 118, 77, 77, 134, 134, 134,
	96, 95, 95, 80, 80, 79, 79, 135, 135, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 128, 128, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 337, 337, 130, 129, 129, 129, 129, 129,
	129, 74, 74, 74, 74, 74, 223, 223, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 146, 146, 75, 75, 144, 144, 145, 147, 147,
	143, 143, 143, 120, 120, 120, 120, 120, 120, 120,
	120, 122, 122, 122, 148, 148, 136, 136, 85, 149,
	149, 150, 151, 151, 152, 152, 155, 167, 167, 167,
	168, 168, 168, 168, 124, 124, 169, 169, 169, 119,
	119, 119, 119, 119, 119, 119, 171, 171, 170, 170,
	170, 170, 176, 176, 138, 138, 141, 141, 140, 142,
	177, 177, 181, 181, 178, 178, 182, 182, 182, 182,
	185, 185, 186, 186, 186, 183, 183, 183, 180, 180,
	180, 219, 219, 219, 188, 188, 198, 198, 195, 195,
	196, 196, 189, 189, 236, 236, 204, 204, 203, 203,
	203, 199, 199, 199, 200, 200, 216, 216, 212, 212,
	218, 218, 213, 213, 220, 220, 221, 221, 286, 286,
	246, 246, 296, 296, 247, 247, 297, 297, 299, 299,
	294, 294, 295, 295, 298, 298, 30, 300, 300, 301,
	301, 302, 302, 302, 302, 31, 32, 32, 32, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 334, 335,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 2, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 0, 3, 1, 1, 0, 1, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	4, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 2, 0,
	2, 1, 5, 1, 3, 5, 4, 3, 5, 3,
	8, 10, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 8, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 4, 4, 4, 2, 2,
	2, 6, 2, 4, 4, 4, 5, 7, 6, 3,
	5, 4, 2, 4, 3, 2, 4, 5, 6, 2,
	6, 6, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 3, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -333, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -338, -207, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-334, 68, 503, -151, 15, -67, -339, -67, -67, -67,
	-67, -67, -262, -205, 106, 68, 23, -200, 150, 87,
	382, 146, -208, 234, 236, -198, -199, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -107, -220, 72, -210, 160, 451,
	259, 437, 246, 195, 293, 307, 309, 301, 336, 324,
	438, 452, 161, 216, 145, 292, 322, 325, 369, 159,
	249, 209, 272, 453, 358, 364, 219, 296, 378, 454,
	162, 213, 215, 214, 203, 220, 36, 172, 320, 255,
	313, 224, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 163, 157, 285, 458, 342, 346, 459, 370, 239,
	286, 460, 461, 462, 149, 245, 305, 306, 463, 199,
	372, 250, 340, 33, 158, 439, 48, 180, 373, 38,
	344, 37, 350, 464, 282, 339, 334, 351, 465, 466,
	467, 468, 263, 261, 262, 264, 338, 304, 333, 211,
	53, 144, 348, 347, 349, 212, 368, 329, 327, 469,
	470, 254, 164, 471, 472, 314, 18, 473, 474, 376,
	175, 256, 257, 42, 475, 476, 477, 110, 478, 479,
	480, 367, 343, 345, 197, 114, 317, 154, 481, 260,
	363, 269, 441, 243, 111, 374, 310, 483, 288, 300,
	179, 174, 377, 278, 484, 222, 485, 486, 487, 166,
	488, 237, 236, 297, 270, 112, 298, 360, 217, 489,
	490, 491, 492, 207, 192, 380, 371, 52, 221, 355,
	493, 273, 289, 303, 156, 223, 494, 247, 294, 43,
	7, 210, 251, 361, 271, 218, 208, 331, 181, 495,
	496, 318, 319, 337, 302, 332, 295, 184, 176, 109,
	379, 356, 443, 234, 290, 326, 323, 187, 330, 497,
	150, 498, 188, 299, 375, 248, 321, 357, 147, 131,
	325, 369, 138, 359, 360, 366, -256, 367, 182, 185,
	-224, 147, -193, 358, 239, 260, 412, 188, 189, 148,
	149, 33, 371, 370, 362, -220, 151, 299, -76, 142,
	177, -107, -47, 72, 223, -47, 30, 72, 72, 36,
	72, 298, 361, 361, 75, 441, 191, 21, -325, -306,
	269, -324, -304, 139, 138, 10, 140, 274, 275, 276,
	148, 8, 31, 482, 165, 277, 278, 6, 169, 279,
	280, 183, 9, 281, -309, 74, 72, -210, 21, -325,
	-306, 269, -202, -201, 291, 350, 6, -69, 5, -189,
	152, 295, -87, 450, -93, -222, -220, -211, 74, 252,
	168, 242, 353, 408, 409, 410, 411, 191, 412, 425,
	407, 426, 97, 189, 274, 275, 266, 276, 167, 427,
	115, 196, 177, 231, 362, 230, 235, 413, 414, 428,
	429, 430, 415, 416, 241, 431, 432, 501, 244, 502,
	267, 434, 482, 435, 277, 433, 279, 186, 419, 418,
	417, 420, 280, 402, 403, 421, 51, 423, 422, 424,
	81, -3, -168, 17, 16, -73, 54, 55, -68, -81,
	122, -83, -220, -115, 89, -121, 29, 72, -210, 24,
	-120, -211, -116, -143, -142, -96, 131, 132, 133, 120,
	121, 128, 90, 134, -128, -126, -127, -129, -131, -132,
	74, 73, 82, 75, 76, 77, 78, 83, 408, 409,
	410, 411, 412, 425, 426, 167, 427, 177, 413, 414,
	428, 429, 430, 415, 416, 431, 432, 434, 435, 433,
	419, 418, 417, 420, 402, 403, 421, 423, 422, 424,
	84, 85, -212, -140, -334, 58, 59, 146, 392, 393,
	394, 395, 396, 436, 400, 92, 47, 381, 390, 389,
	388, 386, 387, 383, 385, 384, 153, 382, 126, 391,
	-189, -189, 11, -100, -101, -107, -110, -220, -178, 295,
	-185, -182, 370, 371, -183, -186, -180, -143, 350, 479,
	480, 369, 325, 368, -212, -220, -2, -5, 6, -107,
	-263, -251, -254, -213, 162, -276, -212, -209, 159, 72,
	-210, 252, 143, 168, 139, 88, 444, 23, 25, 242,
	353, 408, 91, 131, 409, 410, 411, 16, 20, 92,
	130, 81, 392, 191, 412, 138, 62, 407, 383, 385,
	381, 382, 359, 29, 10, 26, 170, 202, 22, 124,
	140, 95, 96, 97, 189, 173, 274, 275, 24, 171,
	266, 85, 276, 167, 115, 196, 19, 65, 177, 231,
	11, 362, 185, 238, 13, 406, 113, 230, 14, 235,
	153, 152, 108, 200, 148, 60, 8, 134, 27, 105,
	56, 413, 414, 447, 45, 190, 448, 58, 106, 17,
	386, 387, 31, 436, 415, 178, 449, 416, 126, 205,
	63, 50, 241, 89, 83, 501, 34, 86, 66, 287,
	87, 15, 201, 61, 404, 244, 502, 267, 182, 482,
	204, 450, 165, 107, 277, 141, 391, 268, 240, 59,
	146, 6, 401, 30, 169, 279, 206, 186, 419, 418,
	417, 420, 57, 394, 395, 421, 280, 499, 147, 94,
	402, 403, 151, 183, 84, 5, 44, 32, 9, 281,
	64, 67, 388, 389, 390, 47, 51, 423, 422, 424,
	93, 12, 405, 440, 148, -107, 391, -196, 153, -196,
	183, 182, -196, -196, 147, 98, -53, -107, -308, -303,
	-309, -195, 153, -212, -195, -195, -195, -195, -195, -195,
	-195, -107, 135, -107, 72, 30, -194, 106, 12, 382,
	146, 147, 183, 150, -258, 11, 108, 186, 186, 186,
	187, 186, -192, 361, 363, 184, 364, 365, 12, -84,
	106, 19, -334, -168, -168, 72, 298, 151, -61, -3,
	-11, -9, -10, -3, 98, 30, 30, 74, 51, 30,
	-42, -41, -43, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 30, -287, 68, -246, 350,
	72, -300, -301, -107, 75, 75, 66, 66, 69, 151,
	69, 66, -326, 270, 68, -326, 236, 270, 271, 208,
	234, 150, -326, -326, 236, -326, -326, -326, -326, -326,
	361, -326, -326, -326, 272, 273, -326, 359, 150, -326,
	-326, -326, -326, -326, 71, 66, 69, 260, 66, 11,
	66, -273, 131, 283, 284, 285, 286, 282, 260, 287,
	288, 289, 186, 290, -67, -7, -5, -334, 21, 22,
	147, 374, 69, -87, -171, -334, -335, 70, -169, 19,
	31, -124, 75, 78, -152, -155, -83, -220, 50, -71,
	21, 22, 80, 11, -215, 88, 87, 105, -214, 23,
	72, -210, -211, 74, 135, -83, -118, 108, 89, 106,
	107, 91, 117, 116, 127, 120, 121, 122, 123, 124,
	125, 126, 118, 119, 130, 98, 99, 100, 101, 102,
	103, 104, -190, -334, -96, -334, 136, 137, -121, -121,
	-121, -121, -121, -121, -121, -121, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -3,
	-135, -83, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -146, -83, -334, -337, -130, -334, -337,
	-130, -337, -130, -337, -334, -337, -130, -337, -130, -337,
	-337, -130, -337, -334, -334, -334, -334, -109, 27, -107,
	-86, -89, -91, -92, -111, -95, -334, -90, -107, -96,
	72, -107, -100, -336, 69, 11, 67, -336, 69, 135,
	69, -179, -184, 372, 374, 295, -183, -183, -219, -212,
	74, 29, 98, 30, 135, -151, -67, 70, 69, -254,
	162, 159, -226, -230, -232, -231, -233, -228, -229, 322,
	325, 329, 327, 323, 328, 131, 326, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 30, 172,
	318, 319, 320, 321, 342, 343, 344, 345, 346, 347,
	348, 349, 301, 324, 438, 302, 303, 304, 305, 306,
	307, 309, 310, 311, 312, 313, 314, 315, 316, 72,
	-211, -276, 68, -212, 23, 150, 72, 89, 72, 72,
	72, -312, -311, -303, -306, -196, 72, 69, 151, 69,
	151, 71, -100, 24, 66, -102, -107, 72, 72, 72,
	72, -305, -303, -306, -221, -220, -209, -194, 74, -83,
	-196, -196, -107, -107, -107, -107, -194, -194, -194, -194,
	-191, 11, 108, 11, -191, -191, -83, -121, -303, 384,
	122, 72, 72, 298, 72, -42, -42, 74, -42, 69,
	98, -42, 70, -135, -286, 500, 69, -302, 23, 374,
	375, 351, -328, 147, 185, 182, -328, -324, 278, -305,
	-304, -303, -326, -327, -212, -326, -326, -326, 361, -326,
	-326, -326, -326, -326, -326, -326, -326, -309, -328, 238,
	69, -328, -305, -303, 282, 282, 282, 282, 282, 282,
	-73, -3, -107, 375, 376, -93, 23, -170, -213, 9,
	108, 69, 18, 69, -167, 25, 26, 135, -122, 51,
	75, 78, -197, 49, -107, -83, -83, -133, 83, 89,
	84, 85, -214, 122, -221, -213, -209, -121, -134, -140,
	-96, 79, 108, 106, 107, 91, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -223, 72, 74, 72, -120, -120, -212, -71, -79,
	-82, 122, -83, -220, -79, -79, -71, -335, -335, -79,
	-82, -79, -79, -79, -79, -82, -79, -71, -71, -79,
	-335, -335, -335, -335, -79, -79, -79, -79, -212, -212,
	-71, -79, -79, -79, -71, -335, 69, -335, -3, -79,
	-79, -335, -83, -83, -143, 74, -79, -143, 74, -79,
	-121, 397, 398, 399, -79, -71, -144, -145, 93, -143,
	-335, -121, -79, -80, -79, -79, -79, -174, 110, -107,
	30, 69, -103, -105, -104, -106, 56, 60, 62, 57,
	58, 59, 63, -205, -86, -94, 47, -334, -112, 110,
	-113, 23, -222, 64, 152, 65, -334, -174, 67, -86,
	-107, -86, -110, -220, 122, -182, -185, 69, 373, 375,
	376, -179, -240, 130, 66, 86, -83, -213, -221, -168,
	-73, -264, -265, -266, -213, 74, 75, -251, -252, -253,
	-254, -267, 162, -275, 154, 156, 157, 44, -255, 163,
	148, 45, -227, -241, 356, -234, 68, -234, -234, 330,
	322, 325, 323, -234, -234, -234, -234, -234, -239, 325,
	-239, -239, -239, -239, 323, 68, 68, -234, -234, -234,
	-243, 68, -243, 317, -244, 68, -244, -244, -244, -244,
	-276, -276, -83, -216, 67, -165, -107, 24, -48, 195,
	168, 68, -307, 69, 29, -313, 235, -107, -107, -107,
	-303, -303, -309, -283, 166, 161, -107, 69, 69, 72,
	72, -259, 11, 108, -194, -220, -220, -107, -123, 23,
	-194, -77, 173, 67, -337, -335, 72, -41, -120, 70,
	-108, 27, 74, -301, -222, 350, 375, -329, 122, -212,
	-329, -332, 440, 151, 70, 69, -326, -329, 256, 238,
	-329, 11, -274, 19, -71, -335, -55, -54, 143, 140,
	141, 144, 145, -279, 353, 139, 179, -95, -334, -335,
	69, 135, 52, -124, -124, -155, -188, 19, 11, 47,
	47, -72, 57, 83, 84, 85, 135, -334, -134, -121,
	-121, -121, -77, 88, -335, -79, 69, -335, 135, -335,
	-335, -79, -156, 404, -156, -335, -335, -335, -335, -335,
	-335, -335, -335, -79, -79, -335, -156, -156, -156, -156,
	-335, -335, -335, -335, 69, 69, -79, -335, -335, -335,
	-80, -83, -335, -335, -335, 69, 67, 23, 11, 11,
	-335, 11, 11, -335, -335, 11, -121, -121, -121, -335,
	-79, -147, -145, 95, -83, -335, -335, -335, -335, -335,
	-335, -119, 30, 47, -334, -3, -334, -177, -181, -143,
	-209, -89, -91, -91, -89, -91, 56, 56, 56, 61,
	56, 61, 56, -104, -222, -335, -335, -139, 194, -334,
	34, -222, -113, 148, 148, 148, -80, -114, 12, -86,
	-114, -114, 135, -184, -187, 377, 374, 380, 72, 74,
	135, -169, 69, -266, 98, -254, 68, 72, -260, -211,
	45, -255, 148, 45, -257, -255, -255, -260, 72, -260,
	45, 83, 89, -237, -238, -245, -248, -235, 29, 66,
	353, 154, 45, 44, 157, 81, -242, 357, 75, -239,
	-239, -234, -234, -234, 330, -234, -239, -240, 30, -240,
	-240, -240, -240, -239, -249, 74, -249, 75, -243, 75,
	70, 66, -212, -3, 23, -49, 8, 9, 10, -288,
	-289, -290, 72, 108, 200, 201, -316, 268, -311, 236,
	245, 88, 16, 440, 151, 151, -107, -303, -114, 72,
	72, -191, -194, 34, -121, -306, 188, 189, -174, 147,
	-302, 151, 135, 135, 151, 259, -305, -212, 11, 11,
	256, 11, -305, 292, -197, 69, -206, -255, -285, -253,
	-254, -284, 155, 162, 163, -206, 162, 159, -255, 163,
	154, 155, -203, -255, 151, 23, -206, -206, -261, 98,
	-206, 110, -213, -213, 53, -107, -78, -166, 122, -213,
	-80, -77, 88, -121, -335, -82, -157, -156, 122, -221,
	-157, -157, -335, -212, -161, -334, -156, -157, -157, -156,
	-156, -156, -335, -335, -156, -157, -157, -157, -157, -121,
	-121, -335, -157, -157, -157, -335, -225, 131, 322, 172,
	320, 313, 340, 327, 355, 318, 356, -223, -225, -121,
	-121, -121, -121, -121, 11, 11, 11, 437, -151, 97,
	-83, 94, -176, 66, -177, -138, -141, -140, -334, -3,
	-335, -170, 6, 440, -175, -212, -114, 69, 98, 98,
	-98, -97, 66, 67, -99, 66, -97, 56, 56, -173,
	68, 69, -140, -334, -175, -121, -113, -334, -334, -334,
	-335, -151, -83, -114, 374, 378, 379, -265, -266, -269,
	-268, -212, -211, 154, -275, 44, -275, -260, -260, -260,
	68, 83, -121, 9, 45, 45, 45, 74, 70, -240,
	-240, -239, -234, -240, 72, 131, -240, 70, 69, 70,
	69, 70, 69, -117, 456, 89, -107, -165, -165, 66,
	70, 69, -226, 72, 72, 72, -319, 440, 241, -317,
	-315, 247, 248, 249, 250, 251, -306, 246, -313, 243,
	74, 72, -107, -303, -194, -121, -239, -107, -305, 122,
	122, -212, -305, 256, -331, 440, -305, -305, 11, -305,
	74, -72, -54, 68, -250, 72, -211, -260, -199, 154,
	72, 72, 72, -211, 72, -211, -212, 45, 45, 72,
	-107, -212, -250, 72, -83, -212, -212, 135, -114, 11,
	69, -81, -335, -121, -157, 135, -157, -217, 72, -157,
	-157, 69, 69, -157, -335, -234, -234, -234, -244, -234,
	306, -234, 306, -335, -335, 19, 19, 19, 19, -335,
	-121, -121, -121, -334, -75, 401, -83, 28, -176, 69,
	-335, -335, 47, -335, -335, 69, -151, -181, -83, -83,
	-83, 68, -83, -172, -212, 194, -335, -113, -205, -172,
	-172, -172, -168, 70, 69, -234, -234, 45, -257, -172,
	-127, 402, 403, -240, -239, 74, -239, 75, 75, 456,
	68, -3, -107, -291, -292, -293, 81, 439, 89, 202,
	203, 164, 204, 205, 206, -290, -226, -226, -226, -322,
	-323, -321, 244, 266, 267, 252, -320, -318, 261, 262,
	263, 264, 88, 74, 74, 74, -314, 235, 88, 244,
	16, 23, -294, -192, -331, -331, 238, -305, -78, -250,
	-153, 167, 168, -226, -226, -216, -257, 45, 72, -204,
	151, 23, 151, -153, -250, 30, 140, 27, -213, -148,
	13, -86, -166, -166, 122, -137, 110, -121, -121, -239,
	72, -121, -121, -121, -121, -335, -335, -335, -121, -335,
	74, 45, -141, -138, 47, -3, -334, -212, -168, -172,
	70, 69, -140, -112, -222, -335, -335, -335, -271, -270,
	67, 158, 81, -268, -167, -167, -260, 70, -240, -240,
	70, 70, -269, -165, 19, -165, -293, 74, 206, 202,
	206, 206, 206, 206, 207, -310, 81, 242, -321, 253,
	461, 237, 268, 75, 75, 109, 31, 32, -318, 75,
	75, 75, 75, -315, 16, 440, -313, 243, 74, 74,
	-295, 38, -297, 39, -330, 23, -330, 256, 11, 70,
	72, -227, -227, 68, -260, 68, 72, -212, -153, 29,
	29, -334, -149, 14, 16, -114, -81, -151, 16, -335,
	-335, -335, -335, -335, -335, -74, 108, 440, 9, -138,
	-3, 70, -212, -113, -270, 72, -261, 74, 165, 70,
	193, -20, -3, -9, -10, -11, -12, -14, -50, -15,
	-16, -21, -22, -17, -56, -57, -65, -63, -64, -60,
	-59, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, -35, 92, 153, 224, 293, 36, 36, 198, 199,
	74, 74, 29, 254, 134, 29, 75, 134, 407, 243,
	74, 72, 244, -236, 152, -298, 43, -296, -247, 42,
	16, -303, -86, -269, -216, -269, -121, -277, -278, 110,
	-159, 405, -150, -83, -136, -85, -83, -148, -166, -162,
	112, 111, -135, -335, 438, 63, 441, -177, -335, 75,
	-107, -272, -271, 194, -165, -83, -83, 72, -46, -218,
	227, 228, 229, -213, -36, -20, 75, 29, 75, 29,
	257, 244, 23, -173, 75, -297, 16, -299, 40, 41,
	74, 440, -114, 70, 68, 70, -335, 69, -212, -158,
	-160, -212, 69, -149, -335, -163, 91, -164, 109, 407,
	-125, 75, 134, -163, 53, 439, 442, 68, -154, 196,
	197, -37, -38, 93, 94, 225, 226, 230, -226, 69,
	503, 255, 255, 74, 38, 74, 16, 16, 236, -148,
	-272, -269, -272, -278, 47, 69, 23, -85, -159, -164,
	114, 115, 194, 114, 115, -120, 53, -172, -165, 72,
	72, 97, 95, -38, -83, -36, 19, 19, 19, 29,
	-213, 97, -20, 74, 74, 29, 241, 21, -306, -149,
	70, 180, -160, -161, 88, -212, 440, 70, -13, -19,
	-12, -9, -10, -11, 293, 92, -36, 94, 503, -47,
	75, -3, -45, -44, 75, -47, 232, 89, 233, 72,
	-121, 258, -159, -272, 181, -164, 441, -281, -282, 66,
	-165, -36, 503, -36, 97, 95, -39, -40, 96, -20,
	69, 231, -306, -334, 442, -282, 66, -281, 66, 10,
	9, 503, 97, 503, 153, -36, 97, 95, -40, -83,
	-44, -121, 178, -280, 166, 161, 164, 30, -280, 97,
	92, 503, 153, -36, 94, -335, -335, 160, 29, 83,
	97, 503, -36, 153, 97, 503, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 706, 706, 706, 706,
	706, 706, 804, -2, 571, 0, 0, 0, 0, -2,
	679, 680, 681, 685, 686, 701, 703, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 40,
	0, 0, 56, 57, 1112, 0, 704, 693, 694, 0,
	0, 1644, 2, 1050, 0, 715, 708, 0, 1112, 1112,
	0, 0, 87, 0, 0, 0, 805, 0, 0, 0,
	1110, 1110, 0, 1110, 1110, 0, 1125, 0, 1107, 1121,
	1122, 1123, 0, 0, 1108, 0, 1108, 1108, 1108, 1108,
	1108, 1108, 1108, 0, 628, 822, 1134, 1135, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 0, 0,
	0, 672, 0, 638, 639, 640, 0, 642, 0, 0,
	0, 0, 0, 652, 655, 659, 0, 1050, 1050, 517,
	518, 519, 676, 677, 666, 678, 0, 0, 0, 0,
	0, 705, 305, 307, 0, 327, 0, 330, 333, 1140,
	687, 0, 0, 1165, 1166, 0, 0, 0, 0, 0,
	1495, 181, 244, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 0, 183, 183, 183, 1507, 183, 0, 183,
	183, 183, 183, 183, 243, 233, 234, 235, 0, 0,
	0, 1495, 0, 497, 494, 495, 706, 0, 710, 0,
	1113, 682, 45, 0, 47, 1066, 806, 807, 808, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 0, 1056, 0, 0, 718, 716, 717, 707, 0,
	729, 759, 0, 831, 0, 836, 838, -2, -2, 0,
	879, 880, 881, 882, 883, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 908, 909, 910, 911, 912, 913,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1586, 1587,
	1588, 1589, 1591, 1592, 1594, 1601, 1602, 1605, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1618, 1619, 1624, 1626, 1628,
	1631, 1632, 1633, 1634, 1636, 1637, 1638, 1640, 1641, 1642,
	840, 841, 1020, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1011, 0, 982, 982, 982,
	982, 982, 982, 982, 982, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 69, 822, 73, 1560,
	0, 1084, -2, -2, 1086, 0, 0, 0, -2, -2,
	-2, -2, 1361, -2, 1020, 0, 88, 1042, 706, 89,
	0, 370, 371, 0, 1374, 541, 1132, 1133, 1363, 1128,
	1129, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 609, 0, 610, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 627, 0, 629, 630, 672, 632, 0, 0, 1110,
	1110, 0, 0, 0, 0, 543, 544, 672, 672, 672,
	672, 669, 0, 669, 649, 669, 667, 668, 0, 654,
	0, 0, 0, 662, 663, 688, 0, 0, 695, 697,
	698, 699, 700, 696, 0, 0, 0, 309, 0, 0,
	329, 311, 0, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 325, 0, 332, 0, 1138, 1141,
	692, 1156, 1157, 0, 1167, 1168, 187, 187, 0, 0,
	0, 0, 150, 183, 0, 152, 183, 183, 183, 0,
	183, 183, 159, 160, 183, 162, 163, 164, 165, 166,
	183, 168, 169, 170, 183, 183, 173, 183, 183, 176,
	177, 178, 179, 180, 242, 187, 0, 0, 187, 0,
	0, 479, 0, 0, 0, 0, 484, 485, 486, 487,
	0, 0, 490, 491, 715, 42, 52, 0, 711, 712,
	0, 0, 0, 46, 0, 0, 51, 1645, 37, 0,
	0, 1051, 1054, 1055, 1043, 1044, 1047, 0, 0, 713,
	719, 720, 709, 0, 730, 0, 0, 0, 760, 0,
	762, 763, 764, 765, 0, 834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 858, 859, 860, 861, 862,
	863, 864, 837, 0, 851, 0, 0, 0, 900, 901,
	902, 903, 904, 905, 906, 0, 718, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 718, 0,
	0, 877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 1012, 0, 965, 974, 0, 966,
	975, 967, 976, 968, 0, 969, 977, 970, 978, 971,
	972, 979, 973, 0, 873, 0, 0, 71, 0, 821,
	0, 766, 768, 769, 770, -2, 0, 774, 825, 871,
	1134, -2, 0, 0, 0, 63, 64, 0, 0, 0,
	0, 74, 76, 0, 0, 1560, 1087, 1088, 470, 1101,
	1102, 1103, 0, 1099, 0, 1050, 715, 558, 0, 372,
	0, 0, 381, 460, 390, 391, 392, 453, 394, 453,
	453, 0, 453, 453, 453, 453, 453, 467, 467, 467,
	467, 467, 436, 437, 438, 439, 440, 0, 0, 413,
	453, 453, 453, 417, 443, 444, 445, 446, 447, 448,
	449, 450, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 455, 455, 457, 457, 457, 457, 457, 0,
	0, 540, 0, 1126, 85, 0, 93, 0, 94, 0,
	0, 99, 260, 246, 98, 0, 232, 0, 0, 0,
	0, 237, 624, 1109, 0, 617, 65, 618, 619, 620,
	621, 622, 239, 623, 823, 1136, 1137, 631, 673, 674,
	0, 0, 635, 636, 637, 545, 643, 644, 645, 651,
	672, 0, 0, 0, 785, 672, 653, 865, 656, 982,
	0, 690, 689, 0, 702, 306, 308, 310, 328, 0,
	0, 331, 334, 0, 0, 0, 0, 1159, 0, 1161,
	1163, 0, 0, 188, 189, 190, 0, 182, 0, 205,
	245, 0, 151, 0, 185, 153, 154, 155, 183, 157,
	158, 161, 167, 171, 172, 174, 175, 241, 0, 0,
	0, 0, 148, 0, 480, 481, 482, 483, 492, 489,
	718, 0, 0, 683, 684, 48, 0, 0, 1068, 1057,
	0, 0, 0, 0, 1046, 1048, 1049, 0, 0, 1031,
	0, 0, 721, 714, 39, 832, 833, 835, 852, 0,
	854, 856, 761, 731, 0, 1021, -2, 842, 843, 867,
	868, 869, 0, 0, 0, 0, 865, 847, 0, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 899, 996, 997, 0, 897, 898, 907, 0, 0,
	875, 725, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 873, 870, 0, 1078, 0, 0,
	0, 947, 0, 0, 882, 1023, 0, 882, 1023, 0,
	0, 0, 0, 0, 0, 0, 1018, 1015, 0, 0,
	983, 0, 0, 0, 874, 0, 0, 0, 0, 820,
	0, 0, 0, 0, 0, 0, 809, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 1481,
	780, 0, 825, 0, 0, 0, 873, 829, 0, 829,
	68, 829, 70, 0, 824, 1085, 0, 0, 0, 79,
	80, 75, 1089, 0, 1095, 1096, 1097, 1021, 0, 1056,
	718, 369, 559, 561, 564, 565, 566, 373, 375, 376,
	377, 0, -2, 532, 1491, 1538, -2, -2, 524, 1405,
	-2, -2, 380, 462, 461, 393, 0, 467, 467, 453,
	453, 453, 453, 422, 467, 425, 428, 429, 470, 0,
	470, 470, 470, 470, 467, 0, 0, 414, 415, 416,
	405, 0, 406, 455, 408, 0, 409, 410, 411, 412,
	538, 539, 0, 0, 0, 0, 0, 1111, 0, 262,
	263, 208, 101, 0, 0, 247, 0, 368, 0, 611,
	0, 613, 236, 615, 625, 626, 616, 0, 0, 633,
	634, 829, 0, 0, 646, 670, 671, 669, 672, 0,
	650, 664, 0, 0, 657, 0, 691, 312, 313, 335,
	71, 0, 1139, 1158, 0, 1162, 1164, 0, 191, 193,
	0, 142, 0, 0, 184, 0, 156, 0, 0, 0,
	0, 0, 488, 0, 713, 53, 572, 573, -2, 602,
	1118, 602, 602, 590, 507, 602, 0, 49, 0, 1067,
	0, 0, 0, 1052, 1053, 1045, 0, 1104, 1105, 1032,
	1033, 86, 722, 853, 855, 857, 0, 873, 844, 865,
	848, 0, 845, 0, 839, 0, 0, 740, 0, 740,
	740, 0, 933, 0, 934, 961, 0, 946, 740, 740,
	0, 0, 0, 0, 0, 0, 940, 941, 942, 943,
	740, 740, 740, 740, 0, 0, 0, 740, 740, 740,
	0, 878, -2, 944, 945, 0, 0, 0, 0, 0,
	989, 0, 0, 990, 955, 0, 0, 0, 0, 0,
	1042, 0, 1016, 0, 0, 964, 984, 985, 986, 987,
	988, 1072, 0, 0, 0, 1061, 0, 829, 1080, 0,
	0, 767, 800, 802, 0, 797, 810, 811, 813, 0,
	815, 0, 817, 818, 787, 773, 872, 775, 0, 0,
	0, 825, 784, 0, 0, 0, 0, 1042, 0, 829,
	61, 62, 0, 77, 78, 0, 0, 84, 471, 472,
	0, 207, 0, 562, 0, 374, 0, 525, 0, 0,
	509, 524, 520, 521, 524, 523, 524, 515, 525, 516,
	0, 382, 0, 384, 385, 386, 387, 388, 0, 0,
	466, 0, 474, 476, 0, 0, 389, 463, 0, 470,
	470, 467, 420, 421, 453, 426, 470, 430, 0, 431,
	432, 433, 434, 470, 0, 451, 0, 0, 407, 0,
	555, 0, 1127, 85, 85, 0, 264, 265, 266, 0,
	209, 210, 0, 0, 0, 0, 111, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 66, 240, 641, 546,
	547, 672, 648, 0, 866, 658, 660, 661, 467, 0,
	1160, 0, 0, 0, 0, 0, 203, 186, 0, 0,
	0, 0, 149, 0, 721, 0, 0, 524, 0, 591,
	592, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1119, 1120, 0, 0, 0, 508,
	0, 0, 1070, 1069, 1058, 38, 829, 0, 732, 1022,
	0, 846, 0, 849, 740, 876, 918, 741, 727, 0,
	919, 920, 740, 733, 734, 736, 935, 922, 923, 936,
	937, 938, 740, 740, 939, 927, 926, 925, 928, 0,
	0, 740, 931, 930, 932, 914, 0, 453, 453, 1001,
	453, 457, 1004, 453, 1006, 453, 1009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1013, 963,
	1019, 0, 54, 0, 1072, 1059, 1074, 1076, 0, 0,
	0, 0, -2, 1341, 0, 791, 1042, 0, 0, 0,
	794, 801, 0, 0, 795, 0, 796, 814, 816, 771,
	0, 0, 776, 0, 0, -2, 783, 0, 0, 0,
	793, 1050, 830, 60, 81, 82, 83, 560, 563, 0,
	526, 453, 453, 0, 530, 522, 531, 511, 512, 514,
	0, 383, 464, 0, 473, 475, 477, 478, 454, 418,
	419, 470, 427, 423, 468, 469, 435, 467, 0, 467,
	0, 458, 0, 542, 556, 0, 0, 91, 0, 0,
	216, 0, 212, 0, 0, 0, 119, 0, 102, 103,
	104, 106, 107, 0, 0, 0, 100, 0, 249, 0,
	252, 253, 612, 614, 647, 786, 1150, 819, 203, 192,
	194, 195, 203, 206, 143, 0, 144, 146, 0, 145,
	493, 86, 574, 0, 599, 0, 0, 1126, 522, 0,
	-2, 577, 582, 583, 584, 585, 586, 0, 597, 0,
	579, 0, 599, 0, 594, 0, 0, 0, 1034, 0,
	86, 86, 915, 850, 917, 0, 921, 738, 737, 916,
	924, 0, 0, 929, 948, 998, 467, 1002, 1003, 1005,
	1007, 1008, 1010, 950, 949, 0, 0, 0, 0, 956,
	0, 0, 0, 0, 0, 0, 1017, 0, 55, 0,
	1077, -2, 0, 0, 72, 0, 1050, 1081, 1082, 1083,
	798, 0, 803, 0, 789, 0, 825, 781, 0, 0,
	0, 0, 59, 499, 0, 1047, 1047, 510, 524, 0,
	465, 0, 0, 424, 470, 452, 470, 0, 0, 557,
	0, 85, 0, 85, 217, 218, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 211, 213, 214, 215, 137,
	120, 121, 0, 0, 0, 0, 112, 113, 0, 0,
	0, 0, 0, 108, 109, 110, 248, 0, 0, 251,
	0, 0, 1152, 1146, 196, 196, 0, 147, 0, 0,
	576, 600, 0, 381, 381, 0, 524, 0, 593, 0,
	1116, 1117, 0, 588, 599, 0, 0, 0, 1071, 1039,
	0, 829, 0, 723, 728, 1042, 0, 0, 0, 999,
	1000, 0, 0, 0, 0, 957, 958, 959, 991, 962,
	1014, 0, 1075, 1060, 0, 1064, 0, 792, 58, 0,
	788, 0, 777, 779, 825, 826, 827, 828, 498, 502,
	0, 507, 0, 527, 528, 529, 513, 0, 441, 442,
	456, 459, 0, 92, 0, 0, 219, 220, 221, 222,
	224, 225, 0, 0, 0, 97, 0, 0, 122, 0,
	0, 0, 0, 132, 133, 134, 135, 136, 114, 115,
	116, 117, 118, 105, 0, 0, 250, 0, 255, 256,
	1114, 1154, -2, 0, 140, 0, 141, 204, 0, 575,
	601, 378, 379, 0, 1126, 0, 578, 587, 589, 0,
	596, 0, 752, 0, 0, 1034, 86, 742, 0, 980,
	981, 951, 953, 952, 954, 0, 0, 0, 0, 1063,
	0, 799, 790, 782, 503, 504, 0, 506, 0, 500,
	0, 85, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 0, 0, 0, 226, 227, 228, 229,
	138, 139, 123, 124, 0, 126, 127, 0, 0, 0,
	258, 0, 254, 787, 0, 1146, 0, 1148, 0, 1145,
	0, 197, 829, 0, 0, 0, 595, 0, 605, 0,
	43, 0, 1040, 1041, 1035, 1036, 1038, 1039, 724, 0,
	0, 0, 739, 960, 0, 0, 0, 1073, -2, 505,
	0, 90, 501, 267, 96, 0, 0, 1128, 0, 0,
	294, 295, 296, 1130, 0, 336, 0, 128, 0, 130,
	131, 257, 0, 36, 0, 1153, 0, 1151, 0, 0,
	1147, 0, 1034, 500, 0, 500, 604, 0, 0, 753,
	754, 0, 0, 752, 735, 743, 0, 746, 0, 0,
	0, 757, 0, 744, 992, 0, 995, 0, 85, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 292, 0,
	0, 125, 129, 259, 1115, 1155, 0, 0, 0, 1039,
	580, 0, 598, 606, 0, 0, 0, 1037, 44, 0,
	747, 748, 749, 750, 751, 0, 993, 0, 0, 268,
	269, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	1131, 230, 337, 1149, 1143, 198, 199, 200, 202, 752,
	500, 0, 755, 756, 0, 758, 0, 533, 85, 270,
	271, 272, 273, 274, 0, 276, 0, 0, 0, 288,
	289, 290, 0, 297, 299, 300, 301, 0, 303, 304,
	293, 0, 41, 581, 0, 745, 0, 534, 535, 0,
	95, 0, 0, 0, 0, 0, 0, 285, 0, 291,
	0, 302, 201, 0, 994, 536, 0, 537, 0, 0,
	0, 0, 0, 280, 281, 0, 0, 0, 286, 0,
	298, 0, 0, 548, 550, 551, 0, 0, 549, 275,
	277, 0, 283, 0, 0, 607, 608, 552, 553, 554,
	0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:490
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:497
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:532
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:538
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:544
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:557
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:581
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:588
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:597
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:617
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:643
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:655
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:687
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:691
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:695
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:734
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:738
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:748
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:755
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:774
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:796
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:805
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:810
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:835
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:839
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:843
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:847
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:855
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:863
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:867
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:871
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:890
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:899
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:908
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:953
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:957
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:977
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:990
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1030
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1067
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1082
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1087
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1091
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1095
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1101
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1114
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1118
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1122
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1300
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1350
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1370
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1415
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1477
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1514
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1578
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1586
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1592
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1604
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1608
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1612
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1626
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1665
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1689
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1695
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1699
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1715
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1721
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1726
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1731
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1737
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1755
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1781
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1850
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2022
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2038
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2065
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2463
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2467
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2476
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2484
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2494
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2521
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2527
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2593
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.str = yyDollar[1].str
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2665
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2669
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2674
		{
			yyVAL.indexOptions = nil
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2703
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = ""
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2735
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2748
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = yyDollar[1].str
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2804
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2810
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2814
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2824
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 533:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2834
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 534:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2838
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 535:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2842
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 536:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2846
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 537:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2850
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2860
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2864
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2874
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.boolean = true
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.boolean = true
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2944
		{
			yyVAL.boolean = false
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = yyDollar[1].str
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = ""
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = string("")
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3014
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3037
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3044
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3051
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3055
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3064
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 581:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3068
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3072
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3096
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3100
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3107
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3129
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3138
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3142
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3150
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3157
		{
			yyVAL.columnOrder = nil
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3170
		{
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
		}
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3176
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3186
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 607:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3192
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3196
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3206
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3216
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3224
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3228
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3234
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3242
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3246
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3254
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3262
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3270
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3278
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3286
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3294
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3303
		{

		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3321
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3337
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3349
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3353
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3357
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3361
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3385
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3389
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3397
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3401
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3406
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3415
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3419
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3427
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3433
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3441
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3445
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3450
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3454
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 660:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 661:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3467
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3487
		{
			yyVAL.boolean = false
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.boolean = true
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3521
		{
			yyVAL.showFilter = nil
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = SessionStr
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = GlobalStr
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3549
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3559
		{
			yyVAL.statement = &Begin{}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3563
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3569
		{
			yyVAL.statement = &Begin{}
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3573
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &Commit{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3589
		{
			yyVAL.statement = &Rollback{}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3605
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3609
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3613
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3629
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3667
		{
			setAllowComments(yylex, true)
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3677
		{
			yyVAL.bytes2 = nil
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = UnionStr
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = UnionAllStr
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = UnionDistinctStr
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3700
		{
			yyVAL.byt = 0
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.byt = 1
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = SQLCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = DistinctStr
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = StraightJoinHint
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3753
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3776
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3794
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3800
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3810
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3815
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.exprs = nil
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3827
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.over = nil
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.over = yyDollar[1].over
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.frame = nil
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3856
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3913
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{
			yyVAL.window = nil
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3924
		{
			yyVAL.window = yyDollar[2].window
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3939
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3957
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3975
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4007
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4040
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4051
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4070
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4074
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4078
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.expr = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.columns = nil
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4112
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4122
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4128
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4141
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4145
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4153
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4161
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4165
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4173
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.empty = struct{}{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = JoinStr
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = JoinStr
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = JoinStr
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = StraightJoinStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = LeftJoinStr
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = LeftJoinStr
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = RightJoinStr
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = RightJoinStr
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = NaturalJoinStr
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4235
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4245
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4265
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.indexHints = nil
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4280
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4284
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4288
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4293
		{
			yyVAL.expr = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4311
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4315
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4319
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4347
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4365
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4369
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4377
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4381
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4385
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4389
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = IsNullStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = IsNotNullStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = IsTrueStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = IsNotTrueStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = IsFalseStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = IsNotFalseStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = EqualStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = LessThanStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = GreaterThanStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = LessEqualStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = GreaterEqualStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = NotEqualStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4450
		{
			yyVAL.expr = nil
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4454
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.selectExprs = nil
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4605
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4621
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4663
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4701
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4737
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4741
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4778
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4805
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4825
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 951:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4829
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 952:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4833
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 953:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4837
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 954:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4845
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4849
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4853
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4857
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 959:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4861
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 960:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4865
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 962:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4873
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4877
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4881
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4929
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4961
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4965
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = ""
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = BooleanModeStr
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = QueryExpansionStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5044
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5048
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5052
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5060
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5074
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5082
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5086
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = nil
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5108
		{
			yyVAL.str = string("")
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5128
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = nil
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5151
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5165
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5177
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5181
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5185
		{
			yyVAL.expr = &NullVal{}
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5204
		{
			yyVAL.exprs = nil
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5208
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5214
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5229
		{
			yyVAL.expr = nil
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5233
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5244
		{
			yyVAL.orderBy = nil
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5258
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5264
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = AscScr
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = AscScr
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = DescScr
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5282
		{
			yyVAL.limit = nil
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5286
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5290
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5294
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5300
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5304
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = ""
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = ForUpdateStr
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = ShareModeStr
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5330
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5334
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5342
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5347
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5351
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5355
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5361
		{
			yyVAL.columns = nil
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5365
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5375
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5379
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5383
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5388
		{
			yyVAL.assignExprs = nil
		}
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5392
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5398
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5408
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5412
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5418
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5444
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5447
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5453
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5457
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5474
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5487
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5500
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5520
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5534
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5538
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5545
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.expr = &Default{}
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.byt = 0
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.byt = 1
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5574
		{
			yyVAL.byt = 0
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5576
		{
			yyVAL.byt = 1
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5579
		{
			yyVAL.byt = 0
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5581
		{
			yyVAL.byt = 1
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5584
		{
			yyVAL.str = ""
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = IgnoreStr
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5589
		{
			yyVAL.sqlVal = nil
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5591
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.empty = struct{}{}
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5600
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.empty = struct{}{}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.empty = struct{}{}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5608
		{
			yyVAL.str = UniqueStr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5610
		{
			yyVAL.str = FulltextStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
			yyVAL.str = SpatialStr
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5615
		{
			yyVAL.str = ""
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5620
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5622
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5636
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5640
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5647
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5653
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5669
		{
			yyVAL.str = string("")
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5674
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5679
		{
			yyVAL.EnclosedBy = nil
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5683
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5688
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5692
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5697
		{
			yyVAL.sqlVal = nil
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5701
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5706
		{
			yyVAL.sqlVal = nil
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5710
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5715
		{
			yyVAL.Fields = nil
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5719
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5724
		{
			yyVAL.Lines = nil
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5733
		{
			yyVAL.sqlVal = nil
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5737
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5743
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5749
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5753
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5759
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5763
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.lockType = LockRead
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5773
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.lockType = LockWrite
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5781
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5787
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5793
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5797
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5801
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6313
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6322
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
