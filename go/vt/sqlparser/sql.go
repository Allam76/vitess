// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	boolean               bool
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	140, 878,
	-2, 130,
	-1, 44,
	181, 479,
	182, 479,
	-2, 467,
	-1, 51,
	1, 1281,
	424, 1281,
	-2, 499,
	-1, 388,
	126, 886,
	-2, 882,
	-1, 389,
	126, 887,
	-2, 883,
	-1, 490,
	96, 1201,
	126, 1201,
	-2, 71,
	-1, 491,
	96, 1103,
	126, 1103,
	-2, 72,
	-1, 496,
	96, 1059,
	126, 1059,
	-2, 845,
	-1, 498,
	96, 1141,
	126, 1141,
	-2, 847,
	-1, 705,
	5, 35,
	-2, 493,
	-1, 709,
	5, 35,
	-2, 492,
	-1, 931,
	1, 551,
	5, 551,
	12, 551,
	13, 551,
	14, 551,
	15, 551,
	17, 551,
	19, 551,
	30, 551,
	31, 551,
	55, 551,
	56, 551,
	57, 551,
	58, 551,
	59, 551,
	61, 551,
	62, 551,
	65, 551,
	66, 551,
	68, 551,
	69, 551,
	424, 551,
	-2, 578,
	-1, 934,
	66, 52,
	68, 52,
	-2, 56,
	-1, 1128,
	126, 889,
	-2, 885,
	-1, 1288,
	67, 331,
	-2, 1026,
	-1, 1291,
	67, 327,
	70, 327,
	-2, 961,
	-1, 1292,
	67, 328,
	70, 328,
	-2, 971,
	-1, 1373,
	67, 408,
	70, 408,
	-2, 370,
	-1, 1422,
	5, 36,
	-2, 644,
	-1, 1482,
	5, 35,
	-2, 822,
	-1, 1580,
	5, 35,
	-2, 73,
	-1, 1726,
	1, 599,
	5, 599,
	12, 599,
	13, 599,
	14, 599,
	15, 599,
	17, 599,
	19, 599,
	30, 599,
	31, 599,
	55, 599,
	56, 599,
	57, 599,
	58, 599,
	59, 599,
	61, 599,
	62, 599,
	65, 599,
	66, 599,
	68, 599,
	69, 599,
	424, 599,
	-2, 578,
	-1, 1849,
	5, 36,
	-2, 823,
	-1, 1880,
	5, 35,
	-2, 73,
	-1, 1939,
	5, 35,
	-2, 825,
	-1, 1979,
	41, 896,
	-2, 894,
	-1, 2024,
	5, 35,
	-2, 105,
	-1, 2084,
	5, 36,
	-2, 826,
	-1, 2147,
	424, 183,
	-2, 35,
}

const yyPrivate = 57344

const yyLast = 22664

var yyAct = [...]int{

	422, 60, 2146, 2212, 2180, 2190, 2121, 2088, 2181, 2154,
	24, 2153, 2155, 2150, 7, 2152, 2149, 6, 2075, 1250,
	2148, 5, 2023, 2066, 1806, 1953, 2145, 1637, 2151, 8,
	1739, 1336, 1979, 486, 1634, 393, 1917, 1334, 1243, 1293,
	1275, 351, 1901, 1706, 1740, 71, 1884, 2089, 1103, 1245,
	421, 856, 1707, 367, 671, 1787, 505, 1534, 959, 1241,
	406, 60, 1269, 1237, 92, 690, 1588, 1703, 1285, 1713,
	1274, 1717, 1166, 1862, 372, 1153, 1654, 1239, 1610, 1052,
	1281, 1325, 1362, 1611, 1070, 1189, 1059, 1571, 502, 1221,
	1321, 1228, 728, 391, 352, 353, 947, 1181, 356, 1130,
	501, 507, 1038, 734, 489, 778, 376, 946, 647, 2233,
	936, 481, 1309, 484, 2229, 2219, 2202, 492, 769, 2192,
	2184, 872, 2175, 927, 2124, 70, 1088, 75, 1770, 386,
	873, 1878, 2194, 2114, 2179, 1289, 2081, 2164, 1807, 503,
	1885, 2113, 1671, 928, 2080, 1451, 1184, 1834, 1887, 646,
	380, 1734, 1508, 102, 98, 99, 702, 100, 77, 78,
	79, 80, 81, 1263, 435, 395, 441, 443, 442, 439,
	440, 438, 437, 436, 1735, 1736, 2147, 3, 1264, 1265,
	355, 444, 445, 354, 61, 32, 33, 693, 694, 1517,
	104, 103, 1516, 692, 948, 1518, 949, 719, 649, 29,
	652, 61, 32, 33, 1554, 363, 34, 365, 1295, 1924,
	1310, 29, 1297, 61, 32, 33, 1639, 1890, 382, 1297,
	1825, 1301, 1303, 34, 1302, 94, 1315, 1322, 1310, 1823,
	366, 358, 1976, 1975, 1974, 34, 1973, 361, 1688, 2004,
	821, 820, 830, 831, 823, 824, 825, 826, 827, 828,
	829, 822, 1655, 701, 832, 1888, 1889, 1891, 1892, 1893,
	68, 1971, 1972, 1970, 2051, 2052, 87, 2118, 2119, 1343,
	2090, 29, 68, 61, 32, 33, 2022, 1094, 687, 688,
	700, 686, 685, 2046, 1641, 1091, 2187, 2191, 2186, 1589,
	651, 650, 2178, 695, 1657, 2046, 1342, 696, 693, 694,
	2232, 1546, 2163, 1093, 2020, 1640, 2067, 1636, 1222, 2225,
	348, 2234, 1902, 1903, 1332, 101, 1551, 1550, 1743, 89,
	91, 1332, 1095, 86, 670, 1590, 670, 670, 72, 96,
	95, 1616, 68, 1332, 670, 2231, 1526, 1547, 2047, 2220,
	670, 2203, 364, 1092, 648, 657, 349, 2054, 60, 60,
	2047, 1552, 365, 1544, 1912, 1593, 1028, 1019, 1507, 1545,
	1659, 706, 1506, 2216, 708, 1663, 1505, 1658, 707, 1656,
	1911, 93, 644, 60, 1661, 1608, 722, 320, 94, 97,
	1396, 1310, 2012, 1395, 844, 845, 1852, 1660, 841, 736,
	2156, 843, 1561, 1532, 1324, 1521, 711, 712, 1259, 1300,
	1662, 1664, 782, 1513, 1411, 57, 1101, 2156, 955, 1532,
	942, 1591, 1592, 1769, 1886, 812, 765, 57, 1549, 2156,
	1432, 854, 665, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 2079, 871, 874, 874, 874, 880,
	874, 874, 880, 874, 880, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 1384,
	932, 88, 96, 95, 1839, 62, 2214, 2005, 1531, 2215,
	1910, 2213, 29, 1383, 61, 32, 33, 1270, 1246, 1248,
	1954, 767, 62, 1759, 1531, 832, 58, 1429, 720, 1098,
	1618, 1616, 67, 1956, 62, 1624, 34, 84, 1623, 1626,
	1631, 944, 1100, 492, 705, 709, 846, 847, 848, 849,
	850, 851, 852, 853, 1388, 1619, 844, 845, 822, 727,
	1548, 832, 1532, 1382, 1532, 1066, 777, 1060, 1352, 766,
	2206, 2191, 2205, 68, 83, 1760, 842, 926, 875, 877,
	879, 881, 883, 885, 886, 888, 775, 876, 878, 1535,
	882, 884, 1099, 887, 62, 683, 2046, 1635, 1993, 1247,
	1054, 2157, 1673, 777, 1955, 342, 697, 731, 735, 776,
	775, 1367, 935, 940, 1380, 1374, 1375, 1137, 1373, 855,
	1376, 1377, 950, 724, 813, 725, 710, 777, 726, 1427,
	653, 1426, 1135, 1136, 1134, 36, 63, 41, 40, 43,
	776, 775, 339, 844, 845, 1182, 1747, 2222, 776, 775,
	2122, 2047, 2142, 1687, 2141, 1386, 1389, 1531, 777, 1531,
	1630, 857, 1061, 1353, 1627, 931, 777, 44, 66, 65,
	1021, 1182, 870, 1440, 42, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 674, 2218, 832, 670, 670,
	684, 2172, 1053, 2098, 321, 670, 670, 670, 699, 776,
	775, 324, 825, 826, 827, 828, 829, 822, 670, 670,
	832, 333, 340, 341, 772, 68, 1532, 777, 57, 2086,
	2048, 64, 1877, 48, 49, 1133, 1381, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1120,
	1122, 1123, 1876, 1576, 670, 1121, 27, 330, 1574, 1555,
	331, 2226, 1379, 673, 677, 338, 2161, 679, 907, 908,
	909, 910, 911, 895, 896, 897, 912, 913, 898, 899,
	900, 906, 914, 901, 902, 903, 904, 905, 917, 916,
	915, 918, 919, 921, 920, 922, 1055, 1040, 1029, 1086,
	675, 678, 2160, 676, 1385, 656, 1408, 1409, 1410, 1062,
	1428, 1043, 1044, 2227, 29, 1106, 61, 32, 33, 776,
	775, 1531, 362, 715, 322, 62, 2174, 1618, 1616, 782,
	371, 2127, 1332, 2140, 2104, 1620, 1617, 777, 34, 1104,
	1105, 1154, 389, 1155, 2019, 714, 776, 775, 1519, 1107,
	1520, 1387, 1619, 2123, 1969, 1931, 335, 325, 326, 1064,
	336, 337, 345, 1874, 777, 1752, 327, 329, 1572, 323,
	344, 343, 776, 775, 60, 68, 823, 824, 825, 826,
	827, 828, 829, 822, 1371, 109, 832, 1364, 109, 858,
	777, 1354, 1084, 1111, 109, 2139, 1131, 1127, 2046, 776,
	775, 478, 479, 2228, 1109, 2017, 659, 660, 661, 662,
	663, 1786, 1987, 943, 1788, 1124, 1112, 777, 1535, 1113,
	1983, 776, 775, 109, 1788, 672, 109, 510, 1675, 109,
	1171, 1174, 29, 1908, 61, 32, 33, 1183, 1809, 777,
	109, 1577, 510, 1108, 1128, 1126, 1063, 1803, 109, 1948,
	2165, 1868, 2162, 2047, 776, 775, 34, 776, 775, 1799,
	2122, 1948, 2159, 1240, 2108, 721, 857, 932, 1157, 1158,
	1796, 932, 777, 1795, 1129, 777, 1793, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1792, 68, 1780, 1868, 2105, 1948, 2070, 721,
	1195, 1779, 1197, 1160, 1868, 2021, 1948, 2013, 1981, 492,
	1778, 1132, 1948, 1959, 1948, 721, 2046, 1179, 1868, 1867,
	57, 2209, 2156, 1015, 1117, 1118, 411, 410, 413, 414,
	415, 416, 1161, 1163, 1185, 412, 417, 1600, 1168, 1599,
	1271, 1528, 1276, 503, 1254, 1854, 721, 1963, 1256, 1350,
	855, 670, 1349, 670, 1252, 1204, 1205, 1851, 721, 1962,
	1209, 1767, 1766, 1212, 1156, 1164, 1763, 1764, 1217, 1763,
	1762, 2047, 1193, 1194, 1040, 1423, 721, 1282, 1260, 1200,
	1201, 1202, 1203, 1261, 1068, 1257, 1037, 1128, 1272, 1279,
	1225, 721, 29, 420, 1230, 1233, 1234, 1235, 1231, 1036,
	1232, 1236, 1331, 1775, 1718, 1719, 1035, 857, 1162, 1368,
	938, 1169, 1170, 1162, 721, 1753, 1480, 62, 1311, 1312,
	1313, 1314, 1034, 1327, 1328, 1329, 1330, 1026, 931, 1024,
	1323, 1023, 931, 1481, 1022, 1020, 931, 938, 57, 855,
	2156, 820, 830, 831, 823, 824, 825, 826, 827, 828,
	829, 822, 736, 68, 832, 958, 957, 72, 1412, 667,
	359, 29, 1509, 109, 1509, 939, 510, 941, 510, 510,
	1704, 72, 1361, 943, 1645, 494, 510, 1253, 506, 937,
	2111, 1224, 510, 1847, 29, 1992, 1127, 1225, 1776, 1765,
	1522, 1262, 939, 658, 937, 1423, 1445, 1444, 1366, 1268,
	1348, 937, 1938, 1102, 1027, 373, 109, 68, 2116, 1638,
	1162, 2106, 2097, 1985, 1919, 1131, 1879, 1397, 1225, 1225,
	943, 1297, 68, 1335, 1423, 781, 1857, 1326, 1746, 1016,
	1401, 1423, 1322, 1128, 1272, 62, 1400, 1230, 1233, 1234,
	1235, 1231, 1527, 1232, 1236, 68, 1718, 1719, 1115, 2198,
	1344, 1417, 1483, 1484, 1317, 1316, 932, 932, 932, 932,
	932, 717, 1920, 2196, 1413, 1333, 68, 2182, 1774, 1721,
	1704, 1240, 1578, 1501, 1067, 1031, 1420, 1495, 1493, 1724,
	1723, 1492, 1496, 1494, 932, 1491, 377, 378, 1485, 1497,
	492, 1234, 1235, 2136, 2112, 1414, 1415, 1416, 1642, 770,
	771, 2133, 1406, 1355, 1405, 1936, 1537, 1798, 1439, 1751,
	1750, 1529, 2056, 2059, 1504, 2103, 2102, 1499, 1980, 2126,
	1978, 109, 109, 109, 1503, 2050, 2049, 768, 360, 1603,
	1132, 1296, 1565, 1419, 729, 956, 510, 713, 668, 1845,
	1915, 1422, 1424, 1370, 1425, 1523, 730, 1339, 1398, 1399,
	1431, 735, 1030, 1434, 1435, 1436, 1104, 1105, 1498, 1276,
	1442, 1510, 1443, 1581, 1358, 1446, 1447, 60, 1448, 1449,
	770, 771, 1453, 1454, 1455, 1456, 1457, 1536, 670, 1486,
	670, 670, 1489, 1464, 1465, 1466, 1238, 1468, 1469, 1514,
	1471, 1472, 1473, 1474, 1018, 1476, 1477, 1478, 1525, 1966,
	1487, 1488, 1564, 1490, 1566, 1567, 1568, 1569, 374, 375,
	1404, 1421, 368, 2129, 2128, 72, 1500, 506, 1403, 506,
	506, 931, 931, 931, 931, 931, 2100, 506, 1482, 2060,
	1998, 1441, 1935, 506, 369, 1573, 931, 1511, 1997, 1512,
	1922, 1556, 1557, 1509, 1609, 1575, 1433, 1164, 1563, 931,
	2200, 2199, 2200, 1530, 1533, 1583, 1584, 1585, 1570, 1430,
	1058, 773, 1450, 1452, 2199, 1238, 2009, 1602, 1749, 1458,
	1459, 1460, 1461, 1601, 1097, 74, 2038, 47, 2040, 19,
	76, 1605, 1679, 1621, 1614, 1632, 1633, 510, 1622, 1607,
	50, 1606, 1615, 2039, 18, 109, 1647, 2041, 20, 109,
	2042, 21, 109, 2037, 15, 1246, 1248, 69, 109, 1,
	510, 510, 1709, 1672, 60, 2036, 14, 510, 510, 510,
	109, 109, 109, 1604, 2101, 109, 1653, 1649, 1648, 2055,
	510, 510, 2057, 1665, 1598, 1666, 1728, 1729, 1730, 1612,
	1625, 1629, 1977, 1580, 1705, 1898, 492, 2030, 10, 821,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 1883, 1708, 832, 1882, 109, 510, 2044, 25, 1587,
	109, 1586, 1727, 2035, 13, 2032, 12, 716, 1651, 2031,
	11, 494, 2029, 9, 1731, 1087, 1247, 952, 1613, 1667,
	1668, 1722, 1669, 1670, 1808, 1738, 1916, 1652, 1378, 2065,
	1283, 1725, 1273, 500, 1676, 1677, 1647, 1276, 29, 1276,
	61, 32, 33, 82, 1351, 1331, 109, 682, 1744, 1906,
	328, 1745, 781, 1737, 1280, 1542, 2058, 1742, 718, 1541,
	1538, 1553, 34, 1294, 1540, 1539, 2053, 1543, 963, 1685,
	1686, 961, 1772, 1773, 1691, 962, 960, 1694, 965, 1754,
	1755, 29, 1699, 61, 32, 33, 1758, 964, 332, 487,
	951, 774, 1726, 1761, 90, 51, 1909, 1628, 1715, 68,
	1372, 85, 1065, 691, 334, 34, 932, 840, 1777, 1402,
	1515, 493, 2096, 1789, 1711, 2117, 733, 2071, 1996, 1674,
	1710, 1921, 2046, 1733, 1794, 1438, 510, 2201, 869, 1180,
	1790, 1756, 1832, 394, 2074, 1119, 1748, 409, 1791, 408,
	407, 1782, 68, 404, 405, 1357, 1110, 1479, 1802, 814,
	1768, 392, 1680, 1681, 1682, 1683, 1684, 384, 930, 923,
	1369, 1229, 510, 510, 1227, 2046, 1226, 1032, 1017, 482,
	1720, 1716, 929, 1644, 698, 347, 1833, 2047, 2003, 1114,
	1784, 31, 73, 1814, 379, 1838, 26, 17, 1732, 704,
	22, 506, 506, 1783, 16, 654, 35, 109, 506, 506,
	506, 1821, 39, 38, 37, 109, 109, 1582, 1341, 109,
	109, 506, 506, 109, 109, 109, 357, 1071, 1069, 2188,
	2047, 1855, 2120, 2094, 2045, 1860, 23, 2166, 4, 370,
	510, 510, 28, 1846, 60, 2, 0, 0, 1523, 0,
	1816, 0, 0, 0, 57, 1866, 2156, 506, 0, 0,
	1861, 0, 1276, 0, 1831, 1815, 0, 1813, 0, 0,
	0, 1817, 0, 1864, 1865, 0, 0, 0, 0, 0,
	1871, 931, 1826, 1827, 0, 0, 0, 0, 0, 1872,
	1870, 0, 0, 0, 0, 0, 0, 57, 1905, 2156,
	0, 0, 109, 510, 0, 510, 0, 1895, 1896, 1897,
	109, 109, 1900, 1894, 109, 1913, 0, 1904, 1709, 1331,
	1899, 1940, 0, 1804, 1190, 0, 1848, 1849, 1850, 1914,
	1853, 1742, 1918, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 1859, 109, 109, 1873, 506, 1875, 0, 0,
	109, 62, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 1835, 0, 832, 0, 1708, 0,
	1937, 0, 0, 0, 109, 109, 109, 109, 109, 1944,
	1964, 1947, 1965, 1957, 1967, 1952, 1991, 1159, 1958, 1946,
	0, 669, 0, 0, 62, 0, 0, 1907, 857, 0,
	1968, 1945, 1923, 0, 0, 494, 1960, 1856, 1961, 1709,
	1858, 60, 0, 1982, 1984, 0, 0, 0, 0, 0,
	1880, 0, 0, 1186, 1187, 1989, 0, 1990, 1925, 1926,
	1927, 1928, 1929, 0, 1986, 0, 1932, 1933, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 2016, 2034,
	1930, 2027, 2010, 2033, 2026, 1934, 2014, 2008, 2025, 1708,
	2018, 0, 0, 1994, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 1949,
	0, 1950, 1951, 0, 0, 0, 2062, 2073, 2077, 506,
	0, 506, 506, 2061, 2063, 0, 0, 1939, 0, 2068,
	0, 0, 2064, 0, 2069, 0, 0, 0, 109, 109,
	109, 109, 109, 2083, 0, 492, 0, 1918, 1276, 60,
	109, 0, 0, 109, 2082, 2091, 0, 109, 2043, 0,
	2034, 0, 2027, 0, 2033, 2026, 109, 0, 0, 2025,
	0, 2095, 1999, 2000, 2001, 2002, 0, 2028, 0, 2006,
	2007, 0, 0, 0, 506, 0, 506, 510, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2110, 1689,
	1690, 0, 1692, 1693, 0, 1695, 1696, 1697, 1698, 0,
	1700, 1701, 1702, 2130, 0, 2016, 0, 2011, 0, 0,
	0, 0, 0, 0, 60, 60, 0, 2143, 0, 0,
	2135, 2077, 2132, 0, 2043, 2134, 2034, 2131, 2027, 0,
	2033, 2026, 0, 60, 2024, 2025, 0, 2158, 510, 2138,
	2078, 2167, 2171, 2028, 857, 2170, 0, 60, 2084, 2169,
	510, 109, 510, 510, 0, 506, 0, 2168, 0, 2173,
	2177, 2125, 0, 0, 0, 60, 60, 0, 2189, 2193,
	0, 0, 0, 2176, 0, 60, 2197, 2189, 60, 2195,
	2137, 0, 0, 60, 2207, 2189, 0, 0, 2183, 0,
	0, 2185, 0, 60, 2217, 2189, 0, 60, 0, 0,
	0, 0, 2107, 0, 2204, 109, 2072, 2076, 0, 0,
	60, 0, 2189, 60, 510, 2024, 0, 0, 0, 2115,
	60, 0, 2189, 2221, 60, 0, 2189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 681, 2230,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 0,
	0, 703, 0, 0, 510, 2092, 2093, 0, 1298, 1299,
	0, 1304, 1305, 1306, 1307, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 1318,
	1319, 1320, 0, 0, 0, 0, 510, 510, 0, 0,
	0, 2024, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 510, 0, 832, 0, 0, 1840,
	1841, 0, 0, 2210, 0, 1842, 0, 0, 1843, 0,
	2076, 0, 0, 1844, 510, 510, 0, 510, 506, 0,
	510, 2144, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 816, 0, 819, 0, 0, 2223, 2224, 0,
	1363, 833, 834, 835, 836, 837, 838, 839, 0, 817,
	818, 815, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 0, 107, 832, 0, 346, 0,
	0, 109, 0, 0, 107, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	2208, 506, 0, 506, 506, 0, 0, 0, 0, 0,
	383, 109, 933, 485, 495, 0, 107, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 721,
	107, 109, 510, 0, 0, 0, 0, 0, 107, 510,
	0, 0, 510, 510, 510, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 506, 0, 821, 820, 830,
	831, 823, 824, 825, 826, 827, 828, 829, 822, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 499, 0, 0, 645,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	655, 0, 0, 0, 0, 0, 0, 1837, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 510, 510, 494, 0, 0, 1712, 1714, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 1830, 510,
	0, 0, 0, 0, 0, 1714, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 0, 0,
	832, 0, 1836, 0, 0, 506, 506, 109, 506, 1041,
	1042, 1741, 0, 0, 0, 0, 1045, 1046, 1047, 0,
	0, 0, 1558, 1559, 1560, 1562, 0, 0, 0, 1056,
	1057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 821, 820, 830, 831, 823, 824, 825, 826, 827,
	828, 829, 822, 0, 0, 832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1090, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 0, 0,
	832, 0, 0, 107, 510, 510, 0, 510, 0, 0,
	510, 0, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 510, 1801, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 1810, 1811, 1812, 107, 0, 0, 0,
	0, 0, 0, 0, 1165, 1167, 0, 0, 0, 1173,
	1176, 1177, 1178, 0, 0, 510, 0, 29, 0, 61,
	32, 33, 510, 109, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 666, 0, 0, 1188, 67, 1191, 1192,
	0, 34, 0, 1196, 0, 1198, 1199, 0, 0, 0,
	0, 510, 0, 1206, 1207, 1208, 0, 1210, 1211, 0,
	1213, 1214, 1215, 1216, 0, 1218, 1219, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 0, 68, 0,
	0, 0, 1863, 1863, 1863, 0, 0, 0, 510, 0,
	0, 506, 0, 0, 0, 510, 510, 0, 0, 0,
	1863, 2046, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 107, 107, 107, 0, 510, 0, 0, 0, 0,
	495, 0, 0, 109, 821, 820, 830, 831, 823, 824,
	825, 826, 827, 828, 829, 822, 0, 0, 832, 0,
	36, 63, 41, 40, 43, 0, 0, 1829, 0, 0,
	0, 0, 0, 1757, 0, 0, 2047, 0, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 0, 44, 66, 65, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 0, 934, 0, 0, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 1941, 1942, 0, 1943, 510,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 510,
	0, 0, 1741, 57, 0, 2048, 64, 0, 48, 49,
	0, 0, 1338, 1741, 1340, 821, 820, 830, 831, 823,
	824, 825, 826, 827, 828, 829, 822, 1818, 1819, 832,
	1820, 0, 0, 1822, 0, 1824, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 1828, 0, 0, 107,
	0, 0, 107, 0, 0, 0, 0, 0, 1039, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	107, 107, 107, 0, 0, 107, 0, 0, 0, 0,
	62, 0, 0, 0, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 1741,
	0, 0, 0, 0, 0, 0, 506, 506, 0, 1462,
	1463, 0, 0, 0, 1467, 107, 0, 1470, 0, 0,
	107, 0, 1475, 494, 0, 1025, 2085, 0, 0, 483,
	0, 0, 1033, 0, 821, 820, 830, 831, 823, 824,
	825, 826, 827, 828, 829, 822, 0, 1418, 832, 0,
	1048, 1049, 1050, 0, 0, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	0, 2109, 832, 821, 820, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 1089, 0, 832, 0, 0,
	1096, 0, 0, 0, 0, 1039, 0, 0, 0, 0,
	0, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 0, 383, 383, 0, 0, 0, 383, 383, 383,
	383, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 383, 383, 383, 0, 0,
	383, 383, 383, 383, 383, 0, 0, 0, 0, 0,
	0, 383, 383, 383, 0, 383, 383, 0, 383, 383,
	383, 383, 0, 383, 383, 383, 0, 107, 0, 1594,
	0, 1596, 1597, 0, 0, 107, 1249, 0, 0, 107,
	107, 0, 0, 107, 1258, 1039, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	107, 107, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	985, 107, 0, 1359, 1360, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 107, 107, 107, 107, 0,
	0, 0, 1337, 0, 1039, 0, 0, 0, 0, 0,
	1345, 1346, 0, 0, 1347, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	1365, 0, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 1391, 1392, 1393, 1394, 0,
	0, 0, 383, 0, 0, 29, 30, 61, 32, 33,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 58,
	0, 0, 0, 0, 0, 67, 0, 383, 383, 34,
	54, 55, 383, 0, 0, 383, 59, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 495, 107, 107,
	107, 107, 107, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 45, 107, 0, 0, 68, 1249, 0, 999,
	1002, 1003, 1004, 1005, 1006, 1007, 107, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 0, 987, 988, 989, 990, 966,
	970, 1000, 967, 973, 969, 971, 968, 0, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 991,
	992, 993, 994, 995, 996, 997, 998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 63,
	41, 40, 43, 0, 56, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 66, 65, 0, 0, 52, 53, 42, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1001, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 46, 64, 0, 48, 49, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 1643, 0, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 1249, 0, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 628, 608,
	282, 566, 631, 538, 555, 642, 556, 559, 597, 524,
	578, 219, 553, 525, 0, 542, 515, 549, 516, 539,
	568, 153, 537, 610, 581, 630, 183, 593, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 629, 574, 0,
	637, 186, 590, 303, 271, 204, 0, 0, 570, 617,
	576, 606, 565, 599, 531, 589, 632, 554, 595, 633,
	0, 0, 0, 509, 0, 1277, 1278, 0, 0, 0,
	0, 0, 135, 2087, 592, 627, 551, 594, 596, 513,
	591, 0, 519, 526, 641, 623, 545, 546, 547, 1524,
	0, 0, 0, 0, 0, 0, 569, 577, 603, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	587, 0, 0, 0, 527, 520, 0, 0, 567, 0,
	0, 0, 530, 114, 544, 604, 0, 511, 163, 205,
	125, 607, 622, 564, 176, 309, 626, 561, 560, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 552, 512, 611, 540, 550, 146, 548, 250,
	223, 298, 0, 584, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 563, 598, 541, 143, 601,
	588, 616, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 517, 0, 273, 301, 319, 192, 132, 536, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 534, 535, 532, 0, 533, 579, 580, 634,
	635, 636, 605, 528, 0, 618, 619, 0, 609, 624,
	625, 600, 643, 557, 558, 518, 521, 522, 523, 529,
	571, 572, 583, 586, 614, 613, 612, 615, 620, 639,
	638, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 110, 121, 185, 316, 243, 159,
	302, 514, 151, 0, 0, 573, 575, 585, 602, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 621, 628, 608, 282, 566,
	631, 538, 555, 642, 556, 559, 597, 524, 578, 219,
	553, 525, 0, 542, 515, 549, 516, 539, 568, 153,
	537, 610, 581, 630, 183, 593, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 629, 574, 0, 637, 186,
	590, 303, 271, 204, 0, 0, 570, 617, 576, 606,
	565, 599, 531, 589, 632, 554, 595, 633, 0, 0,
	0, 509, 0, 1277, 1278, 0, 0, 0, 0, 0,
	135, 0, 592, 627, 551, 594, 596, 513, 591, 0,
	519, 526, 641, 623, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 569, 577, 603, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 587, 0,
	0, 0, 527, 520, 0, 0, 567, 0, 0, 0,
	530, 114, 544, 604, 0, 511, 163, 205, 125, 607,
	622, 564, 176, 309, 626, 561, 560, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	552, 512, 611, 540, 550, 146, 548, 250, 223, 298,
	0, 584, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 563, 598, 541, 143, 601, 588, 616,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 517,
	0, 273, 301, 319, 192, 132, 536, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	534, 535, 532, 0, 533, 579, 580, 634, 635, 636,
	605, 528, 0, 618, 619, 0, 609, 624, 625, 600,
	643, 557, 558, 518, 521, 522, 523, 529, 571, 572,
	583, 586, 614, 613, 612, 615, 620, 639, 638, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 110, 121, 185, 316, 243, 159, 302, 514,
	151, 0, 0, 573, 575, 585, 602, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 621, 628, 608, 282, 566, 631, 538,
	555, 642, 556, 559, 597, 524, 578, 219, 553, 525,
	0, 542, 515, 549, 516, 539, 568, 153, 537, 610,
	581, 630, 183, 593, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 629, 574, 0, 637, 186, 590, 303,
	271, 204, 0, 0, 570, 617, 576, 606, 565, 599,
	531, 589, 632, 554, 595, 633, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	592, 627, 551, 594, 596, 513, 591, 0, 519, 526,
	641, 623, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 569, 577, 603, 562, 0, 0, 0, 0,
	0, 0, 1646, 0, 543, 0, 587, 0, 0, 0,
	527, 520, 0, 0, 567, 0, 0, 0, 530, 114,
	544, 604, 0, 511, 163, 205, 125, 607, 622, 564,
	176, 309, 626, 561, 560, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 552, 512,
	611, 540, 550, 146, 548, 250, 223, 298, 0, 584,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 563, 598, 541, 143, 601, 588, 616, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 517, 0, 273,
	301, 319, 192, 132, 536, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 534, 535,
	532, 0, 533, 579, 580, 634, 635, 636, 605, 528,
	0, 618, 619, 0, 609, 624, 625, 600, 643, 557,
	558, 518, 521, 522, 523, 529, 571, 572, 583, 586,
	614, 613, 612, 615, 620, 639, 638, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	110, 121, 185, 316, 243, 159, 302, 514, 151, 0,
	0, 573, 575, 585, 602, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 621, 628, 608, 282, 566, 631, 538, 555, 642,
	556, 559, 597, 524, 578, 219, 553, 525, 0, 542,
	515, 549, 516, 539, 568, 153, 537, 610, 581, 630,
	183, 593, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 629, 574, 0, 637, 186, 590, 303, 271, 204,
	0, 0, 570, 617, 576, 606, 565, 599, 531, 589,
	632, 554, 595, 633, 68, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 592, 627,
	551, 594, 596, 513, 591, 0, 519, 526, 641, 623,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	569, 577, 603, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 587, 0, 0, 0, 527, 520,
	0, 0, 567, 0, 0, 0, 530, 114, 544, 604,
	0, 511, 163, 205, 125, 607, 622, 564, 176, 309,
	626, 561, 560, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 552, 512, 611, 540,
	550, 146, 548, 250, 223, 298, 0, 584, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 563,
	598, 541, 143, 601, 588, 616, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 517, 0, 273, 301, 319,
	192, 132, 536, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 534, 535, 532, 0,
	533, 579, 580, 634, 635, 636, 605, 528, 0, 618,
	619, 0, 609, 624, 625, 600, 643, 557, 558, 518,
	521, 522, 523, 529, 571, 572, 583, 586, 614, 613,
	612, 615, 620, 639, 638, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 110, 121,
	185, 316, 243, 159, 302, 514, 151, 0, 0, 573,
	575, 585, 602, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 621,
	628, 608, 282, 566, 631, 538, 555, 642, 556, 559,
	597, 524, 578, 219, 553, 525, 0, 542, 515, 549,
	516, 539, 568, 153, 537, 610, 581, 630, 183, 593,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 629,
	574, 0, 637, 186, 590, 303, 271, 204, 0, 0,
	570, 617, 576, 606, 565, 599, 531, 589, 632, 554,
	595, 633, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 592, 627, 551, 594,
	596, 513, 591, 0, 519, 526, 641, 623, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 569, 577,
	603, 562, 0, 0, 0, 0, 0, 0, 1259, 0,
	543, 0, 587, 0, 0, 0, 527, 520, 0, 0,
	567, 0, 0, 0, 530, 114, 544, 604, 0, 511,
	163, 205, 125, 607, 622, 564, 176, 309, 626, 561,
	560, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 552, 512, 611, 540, 550, 146,
	548, 250, 223, 298, 0, 584, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 563, 598, 541,
	143, 601, 588, 616, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 517, 0, 273, 301, 319, 192, 132,
	536, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 534, 535, 532, 0, 533, 579,
	580, 634, 635, 636, 605, 528, 0, 618, 619, 0,
	609, 624, 625, 600, 643, 557, 558, 518, 521, 522,
	523, 529, 571, 572, 583, 586, 614, 613, 612, 615,
	620, 639, 638, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 110, 121, 185, 316,
	243, 159, 302, 514, 151, 0, 0, 573, 575, 585,
	602, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 621, 628, 608,
	282, 566, 631, 538, 555, 642, 556, 559, 597, 524,
	578, 219, 553, 525, 0, 542, 515, 549, 516, 539,
	568, 153, 537, 610, 581, 630, 183, 593, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 629, 574, 0,
	637, 186, 590, 303, 271, 204, 0, 0, 570, 617,
	576, 606, 565, 599, 531, 589, 632, 554, 595, 633,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 592, 627, 551, 594, 596, 513,
	591, 0, 519, 526, 641, 623, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 569, 577, 603, 562,
	0, 0, 0, 0, 0, 0, 1125, 0, 543, 0,
	587, 0, 0, 0, 527, 520, 0, 0, 567, 0,
	0, 0, 530, 114, 544, 604, 0, 511, 163, 205,
	125, 607, 622, 564, 176, 309, 626, 561, 560, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 552, 512, 611, 540, 550, 146, 548, 250,
	223, 298, 0, 584, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 563, 598, 541, 143, 601,
	588, 616, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 517, 0, 273, 301, 319, 192, 132, 536, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 534, 535, 532, 0, 533, 579, 580, 634,
	635, 636, 605, 528, 0, 618, 619, 0, 609, 624,
	625, 600, 643, 557, 558, 518, 521, 522, 523, 529,
	571, 572, 583, 586, 614, 613, 612, 615, 620, 639,
	638, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 110, 121, 185, 316, 243, 159,
	302, 514, 151, 0, 0, 573, 575, 585, 602, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 621, 628, 608, 282, 566,
	631, 538, 555, 642, 556, 559, 597, 524, 578, 219,
	553, 525, 0, 542, 515, 549, 516, 539, 568, 153,
	537, 610, 581, 630, 183, 593, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 629, 574, 0, 637, 186,
	590, 303, 271, 204, 0, 0, 570, 617, 576, 606,
	565, 599, 531, 589, 632, 554, 595, 633, 0, 0,
	0, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 592, 627, 551, 594, 596, 513, 591, 0,
	519, 526, 641, 623, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 569, 577, 603, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 587, 0,
	0, 0, 527, 520, 0, 0, 567, 0, 0, 0,
	530, 114, 544, 604, 0, 511, 163, 205, 125, 607,
	622, 564, 176, 309, 626, 561, 560, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	552, 512, 611, 540, 550, 146, 548, 250, 223, 298,
	0, 584, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 563, 598, 541, 143, 601, 588, 616,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 517,
	0, 273, 301, 319, 192, 132, 536, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	534, 535, 532, 0, 533, 579, 580, 634, 635, 636,
	605, 528, 0, 618, 619, 0, 609, 624, 625, 600,
	643, 557, 558, 518, 521, 522, 523, 529, 571, 572,
	583, 586, 614, 613, 612, 615, 620, 639, 638, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 110, 121, 185, 316, 243, 159, 302, 514,
	151, 0, 0, 573, 575, 585, 602, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 621, 628, 608, 282, 566, 631, 538,
	555, 642, 556, 559, 597, 524, 578, 219, 553, 525,
	0, 542, 515, 549, 516, 539, 568, 153, 537, 610,
	581, 630, 183, 593, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 629, 574, 0, 637, 186, 590, 303,
	271, 204, 0, 0, 570, 617, 576, 606, 565, 599,
	531, 589, 632, 554, 595, 633, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	592, 627, 551, 594, 596, 513, 591, 0, 519, 526,
	641, 623, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 569, 577, 603, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 587, 0, 0, 0,
	527, 520, 0, 0, 567, 0, 0, 0, 530, 114,
	544, 604, 0, 511, 163, 205, 125, 607, 622, 564,
	176, 309, 626, 561, 560, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 552, 512,
	611, 540, 550, 146, 548, 250, 223, 298, 0, 584,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 563, 598, 541, 143, 601, 588, 616, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 517, 0, 273,
	301, 319, 192, 132, 536, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 534, 535,
	532, 0, 533, 579, 580, 634, 635, 636, 605, 528,
	0, 618, 619, 0, 609, 624, 625, 600, 643, 557,
	558, 518, 521, 522, 523, 529, 571, 572, 583, 586,
	614, 613, 612, 615, 620, 639, 638, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	110, 121, 185, 316, 243, 159, 302, 514, 151, 0,
	0, 573, 575, 585, 602, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 621, 628, 608, 282, 566, 631, 538, 555, 642,
	556, 559, 597, 524, 578, 219, 553, 525, 0, 542,
	515, 549, 516, 539, 568, 153, 537, 610, 581, 630,
	183, 593, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 1288, 1292, 0, 637, 186, 590, 303, 271, 204,
	0, 0, 570, 617, 576, 606, 565, 599, 531, 589,
	632, 554, 595, 633, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 592, 627,
	551, 594, 596, 513, 591, 0, 519, 526, 641, 623,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	569, 577, 603, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 587, 0, 0, 0, 527, 520,
	0, 0, 567, 0, 0, 0, 530, 114, 544, 604,
	0, 511, 163, 205, 125, 607, 622, 1291, 176, 309,
	626, 561, 560, 1286, 0, 1287, 166, 184, 508, 111,
	123, 1284, 1290, 215, 248, 256, 552, 512, 611, 540,
	550, 146, 548, 250, 223, 298, 0, 584, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 563,
	598, 541, 143, 601, 588, 616, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 517, 0, 273, 301, 319,
	192, 132, 536, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 534, 535, 532, 0,
	533, 579, 580, 634, 635, 636, 605, 528, 0, 618,
	619, 0, 609, 624, 625, 600, 643, 557, 558, 518,
	521, 522, 523, 529, 571, 572, 583, 586, 614, 613,
	612, 615, 620, 639, 638, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 110, 121,
	185, 316, 243, 159, 302, 514, 151, 0, 0, 573,
	575, 585, 602, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 621,
	628, 608, 282, 566, 631, 538, 555, 642, 556, 559,
	597, 524, 578, 219, 553, 525, 0, 542, 515, 549,
	516, 539, 568, 153, 537, 610, 581, 630, 183, 593,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 629,
	574, 0, 637, 186, 590, 303, 271, 204, 0, 0,
	570, 617, 576, 606, 565, 599, 531, 589, 632, 554,
	595, 633, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 592, 627, 551, 594,
	596, 513, 591, 0, 519, 526, 641, 623, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 569, 577,
	603, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 587, 0, 0, 0, 527, 520, 0, 0,
	567, 0, 0, 0, 530, 114, 544, 604, 0, 511,
	163, 205, 125, 607, 622, 564, 176, 309, 626, 561,
	560, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 552, 512, 611, 540, 550, 146,
	548, 250, 223, 298, 0, 584, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 563, 598, 541,
	143, 601, 588, 616, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 517, 0, 273, 301, 319, 192, 132,
	536, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 534, 535, 532, 0, 533, 579,
	580, 634, 635, 636, 605, 528, 0, 618, 619, 0,
	609, 624, 625, 600, 643, 557, 558, 518, 521, 522,
	523, 529, 571, 572, 583, 586, 614, 613, 612, 615,
	620, 639, 638, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 110, 121, 185, 316,
	243, 159, 302, 514, 151, 0, 0, 573, 575, 585,
	602, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 621, 628, 608,
	282, 566, 631, 538, 555, 642, 556, 559, 597, 524,
	578, 219, 553, 525, 0, 542, 515, 549, 516, 539,
	568, 153, 537, 610, 581, 630, 183, 593, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 629, 574, 0,
	637, 186, 590, 303, 271, 204, 0, 0, 570, 617,
	576, 606, 565, 599, 531, 589, 632, 554, 595, 633,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 592, 627, 551, 594, 596, 513,
	591, 0, 519, 526, 641, 623, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 569, 577, 603, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	587, 0, 0, 0, 527, 520, 0, 0, 567, 0,
	0, 0, 530, 114, 544, 604, 0, 511, 163, 205,
	125, 607, 622, 564, 176, 309, 626, 561, 560, 239,
	0, 276, 166, 184, 508, 111, 123, 504, 165, 215,
	248, 256, 552, 512, 611, 540, 550, 146, 548, 250,
	223, 298, 0, 584, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 563, 598, 541, 143, 601,
	588, 616, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 517, 0, 273, 301, 319, 192, 132, 536, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 534, 535, 532, 0, 533, 579, 580, 634,
	635, 636, 605, 528, 0, 618, 619, 0, 609, 624,
	625, 600, 643, 557, 558, 518, 521, 522, 523, 529,
	571, 572, 583, 586, 614, 613, 612, 615, 620, 639,
	638, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 110, 121, 185, 316, 243, 159,
	302, 514, 151, 0, 0, 573, 575, 585, 602, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 621, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 1266, 0, 68, 0, 0, 388,
	411, 410, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 1267, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 0, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 721, 388, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 0, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 388,
	411, 410, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 0, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 381, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 411, 1175, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 381, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 388,
	411, 1172, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 0, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 381, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 29, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 1085,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 737, 738, 739, 740, 741, 745, 746, 750,
	751, 759, 758, 757, 760, 761, 763, 762, 764, 742,
	743, 744, 747, 748, 749, 752, 753, 756, 754, 755,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 0, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 2211, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 721,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 0, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 0, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1246, 1248, 0, 0, 0, 0, 0,
	108, 0, 1251, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 1247, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 785, 786, 787, 788, 792, 793, 797,
	798, 806, 805, 804, 807, 808, 810, 809, 811, 789,
	790, 791, 794, 795, 796, 799, 800, 803, 801, 802,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1246, 1248,
	0, 0, 0, 0, 0, 108, 0, 1251, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 1247,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 1242, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 785, 786,
	787, 788, 792, 793, 797, 798, 806, 805, 804, 807,
	808, 810, 809, 811, 789, 790, 791, 794, 795, 796,
	799, 800, 803, 801, 802, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 779, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	780, 0, 783, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 776, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 785, 786, 787, 788, 792, 793, 797,
	798, 806, 805, 804, 807, 808, 810, 809, 811, 789,
	790, 791, 794, 795, 796, 799, 800, 803, 801, 802,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 1502,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 1251, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 785, 786,
	787, 788, 792, 793, 797, 798, 806, 805, 804, 807,
	808, 810, 809, 811, 789, 790, 791, 794, 795, 796,
	799, 800, 803, 801, 802, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 1251, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 785, 786, 787, 788, 792, 793, 797,
	798, 806, 805, 804, 807, 808, 810, 809, 811, 789,
	790, 791, 794, 795, 796, 799, 800, 803, 801, 802,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 780, 0, 783, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 785, 786,
	787, 788, 792, 793, 797, 798, 806, 805, 804, 807,
	808, 810, 809, 811, 789, 790, 791, 794, 795, 796,
	799, 800, 803, 801, 802, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 820, 830,
	831, 823, 824, 825, 826, 827, 828, 829, 822, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 29, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 0, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	0, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 29, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 954, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 0, 953,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 924,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 105, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 497,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 498, 496, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 945, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 497,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 498, 496, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 488, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 497, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 498, 496,
	491, 490, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312,
}
var yyPact = [...]int{

	3519, -1000, -299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1370, 1440, -1000,
	-1000, -1000, -1000, -1000, -1000, 450, 181, -1000, -1000, -1000,
	240, 15, 19752, 238, 552, 20582, -1000, -1000, -1000, -1000,
	177, 20582, -1000, -1000, -94, -97, -1000, 18, 1060, 1262,
	1148, -1000, -1000, 63, 14, -1000, -1000, -1000, -1000, -1000,
	-1000, 1365, 1388, 1169, 1357, 1203, -1000, 9789, 208, 208,
	19337, 22242, -1000, 20582, 8543, 232, 20582, -160, 199, 199,
	115, 199, -1000, 514, -1000, -1000, -1000, 20582, 200, 20167,
	200, 200, 200, 200, 200, 20582, -1000, 296, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20582, 1059, 1278, 5617, 595, 5617, 5617, -1000, 564, -1000,
	101, 100, 97, 5617, 16, 574, 98, -24, -1000, 5617,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 265, 1148, 510,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1277, 743, 1164,
	-76, 900, 237, 20582, 474, -1000, -1000, 1285, 11865, 12280,
	1370, -1000, 1148, -1000, -1000, -1000, 1248, -1000, -1000, 616,
	1420, -1000, 14770, 289, -1000, 11865, 2265, 1110, -1000, -1000,
	1110, -1000, -1000, 257, -1000, -1000, 13525, 13525, 13525, 13525,
	13525, 13525, 13525, 13525, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1110, -1000, 11035, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 11865, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 18922, 18092,
	20582, 1096, 1069, -1000, -1000, 284, 815, 21827, -96, -1000,
	-1000, -1000, 506, 17677, -1000, 282, -1000, 1275, -1000, -1000,
	1057, -1000, -1000, 3370, 923, -1000, -1000, -1000, 1132, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20167, 1341, 215, 1035, 563, 1034,
	1031, 1029, 20582, 1027, 1106, 213, 20582, 1298, 1180, 20582,
	1022, 1006, 999, 986, -1000, 8125, -1000, 5617, 5617, -1000,
	-1000, -1000, 199, 199, 5617, 5617, 5617, 20582, 20582, 20582,
	-1000, -1000, 20582, -1000, -1000, 568, 568, 5617, 5617, -1000,
	1419, 536, 536, -1000, -1000, -1000, -1000, 11865, -1000, 13525,
	441, -1000, 1179, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	984, -1000, -1000, 507, -1000, 790, -1000, 11450, -297, -1000,
	-1000, -1000, 20582, 5617, 106, 164, 138, 20582, -1000, 1435,
	403, 504, 280, 1105, -1000, 784, 1301, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 1110, 1110, 1110, 1110, 1365, 900, 1203, 813, 1162,
	-1000, -1000, -1000, 20582, -1000, 11865, 11865, 638, -1000, 16015,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6453, 443, 13525, 628, 508, 13525, 13525, 13525,
	13525, 13525, 13525, 13525, 13525, 13525, 13525, 13525, 13525, 13525,
	13525, 13525, 741, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 964, -1000, 1148, 925, 925, 384, 384, 384, 384,
	384, 384, 384, 16430, 1319, 900, 1015, 594, 11035, 9789,
	9789, 900, 11865, 11865, 10619, 10204, 9789, 9789, 1319, 534,
	594, 21412, -1000, -1000, 13110, -1000, -1000, -1000, -1000, -1000,
	900, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20167,
	20167, 9789, 9789, 9789, 9789, 900, 900, 9789, 9789, 9789,
	9789, 9789, 900, 900, 900, 900, 1319, 1319, 9789, 9789,
	9789, 1319, 9789, 9789, 1319, 9789, 9789, 9789, 9789, 1319,
	9789, 9789, 9789, 137, 20582, -1000, 1121, 1152, -1000, -1000,
	-1000, 1333, 17262, 14355, 137, 1081, 18092, 20582, -1000, -1000,
	18092, 20582, 6035, 20997, 815, -96, 1093, -1000, -128, -115,
	8959, 376, -1000, -1000, -1000, 7289, -1000, 4781, 7707, -1000,
	-63, -1000, -1000, -1000, 1124, -1000, 1124, 152, -18, 1124,
	1124, 1124, 1124, 1124, -32, -32, -32, -32, -14, -1000,
	-1000, -1000, -1000, -1000, 1158, 1157, -1000, 1124, 1124, 1124,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1135, 160,
	1130, 1130, 1130, 1130, 1130, 170, 11865, 1127, -1000, 20582,
	5617, 1293, 5617, 109, 1153, -1000, -1000, 20582, 20582, 1103,
	-1000, 20582, 1102, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 952, 949, -1000, -1000, -1000, -1000, -1000,
	-1000, 537, -1000, 789, 11865, -1000, -1000, -1000, 20582, 1311,
	20582, 20582, 568, 594, 2195, -1000, 785, 20582, -1000, 1100,
	-1000, 495, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1010, 1286, 782, 464,
	-1000, 20582, 20582, 20582, 20582, 20582, 249, -1000, 1136, 11865,
	11865, 7289, 12280, -1000, -1000, -1000, -1000, 1285, -1000, 1319,
	1369, -1000, 1227, 1225, 9789, -1000, -1000, 443, 480, -1000,
	-1000, 695, -1000, -1000, -1000, -1000, 278, 1110, -1000, 3026,
	-1000, -1000, -1000, -1000, 628, 13525, 13525, 13525, 2195, 3026,
	3011, 546, 1003, 384, 569, 569, 420, 420, 420, 420,
	420, 735, 735, -1000, -1000, -1000, 900, -1000, -1000, -1000,
	9789, -1000, 11865, -1000, 900, 977, -1000, 977, -1000, 543,
	757, 496, 1418, 977, 409, 1405, 977, 977, 977, 9789,
	560, -1000, 11865, 900, -1000, 2370, 1099, 1098, 977, 900,
	1097, 977, 977, -173, -173, 900, 977, 900, 977, 977,
	-173, -173, -173, -173, 9789, 9789, 977, 977, 977, 9789,
	977, 977, 9789, 977, 977, 977, 977, 9789, 977, 977,
	977, 1056, 1110, -1000, 20997, 18092, 18092, 18092, 18092, 18092,
	-1000, 1200, 1196, -1000, 1193, 1192, 1204, 15600, -1000, 992,
	17262, -1000, 1110, -1000, 15185, 435, 226, 222, 218, -1000,
	-1000, -1000, 1401, 18092, 1120, -1000, 1120, -1000, 277, -1000,
	-1000, 1093, -96, -103, -1000, -1000, -1000, -1000, 594, -1000,
	748, -1000, 269, 1092, 4363, -1000, -1000, -1000, -1000, 182,
	-1000, -1000, -1000, 1145, 941, -1000, 1236, 348, 499, 818,
	1231, -1000, -1000, 272, -68, -1000, -1000, 656, -32, -32,
	1124, 1124, 145, 1124, -1000, -32, -1000, -1000, -1000, 376,
	1272, 376, 376, 376, 376, -32, 766, 766, -1000, -1000,
	-1000, -1000, 655, -1000, 1135, -1000, 650, -1000, -1000, -1000,
	-1000, -1000, 1132, 842, 1177, 20167, 1148, 1310, -1000, -1000,
	-1000, 1417, -1000, -1000, 219, 212, -1000, 5617, 20582, 5617,
	5617, 1401, 939, 937, -1000, 594, 536, 568, 1265, -1000,
	-1000, -1000, -1000, 13525, -1000, -1000, 507, 925, -1000, 137,
	236, -1000, -1000, 651, 364, 497, 184, 184, -1000, 481,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 136,
	1113, -1000, -1000, -1000, -1000, 37, 105, 1216, 594, 594,
	-1000, -1000, 20582, -1000, -1000, -1000, -1000, 1133, -1000, -1000,
	-1000, 5199, 9789, -1000, 2195, 3026, 2727, -1000, 13525, -1000,
	900, 594, -1000, 9789, -1000, -1000, 130, 741, 130, 13525,
	13525, -1000, 13525, 13525, -1000, -209, -1000, 1126, 487, -1000,
	11865, 806, -1000, -1000, 13525, 13525, -1000, -1000, -1000, -1000,
	-1000, 18507, -1000, -173, -173, -173, -173, -173, -1000, -1000,
	-1000, -1000, 977, 977, -173, -173, -173, 977, -173, -173,
	977, -173, -173, -173, -173, 977, -173, -173, -173, 1175,
	20997, 1110, -1000, 16846, 20167, 1122, 1152, 1151, 1174, 1009,
	-1000, -1000, -1000, -1000, 1195, -1000, 1194, -1000, -1000, -1000,
	-1000, 20167, 13525, 435, -1000, 1110, 1110, 1110, 1370, 11865,
	1120, -1000, -1000, 285, -1000, -1000, -141, -122, -1000, -1000,
	-1000, 6871, 4781, -1000, 4781, -1000, 923, 20167, 163, -1000,
	818, -1000, -1000, 818, -1000, -1000, -1000, 1131, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 545, 13525, 1429, -1000, 1235,
	-1000, 1234, 763, -1000, -1000, 1016, 376, 376, -32, -1000,
	-1000, 1124, -1000, 376, -1000, 433, -1000, -1000, -1000, -1000,
	376, 971, -1000, 968, 1091, -1000, 963, 41, 20582, -1000,
	-1000, -1000, 1173, -1000, -1000, -1000, 1004, 1090, -1000, 3370,
	910, 901, 894, 20582, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 568, -1000, 13525, 3026, -1000, -1000, -32, 20582, -1000,
	814, -1000, 818, 334, -1000, -1000, -1000, 1231, -1000, -1000,
	892, 876, -1000, 873, 870, 20167, 1232, 859, 20582, 20167,
	-1000, -1000, 824, 847, 11865, -1000, 20167, -216, 838, 20167,
	20167, 20167, -1000, -1000, 1401, 18092, -1000, -1000, 900, -1000,
	13525, 3026, -1000, -1000, 900, 1124, 1124, -1000, 1124, 1130,
	-1000, 1124, 5, 1124, -4, 900, 900, 2977, 2838, 2539,
	1775, 1110, -168, -1000, 594, 11865, 2514, 2459, -1000, 313,
	-1000, -1000, -1000, -1000, -1000, -173, -173, -1000, -1000, -1000,
	-1000, -173, -1000, -1000, -173, -1000, -1000, -1000, -1000, -173,
	-1000, -1000, -1000, -1000, 1281, 1075, 1085, -1000, -1000, 9374,
	900, 959, 260, 947, -1000, 1370, -1000, -1000, 11865, 1129,
	-1000, 11865, -1000, -1000, -1000, 947, 1412, -1000, 20167, 20167,
	20167, 1365, 594, -1000, -1000, -1000, -1000, 4363, -1000, 920,
	-1000, 1124, -1000, 1231, -1000, -1000, 20167, -1000, 3026, -135,
	-1000, -1000, -1000, -1000, -1000, -1000, 376, -1000, -1000, -1000,
	-1000, -1000, -32, 761, -32, 649, -1000, 629, -1000, -1000,
	-241, 1119, -1000, 1148, 20582, 61, 219, -1000, 3370, 3370,
	3370, -1000, -1000, 3026, -95, -1000, 824, 153, 3370, -1000,
	1127, 348, 163, -1000, -1000, -1000, -1000, -1000, 833, 347,
	-1000, 211, 153, 824, 594, 1283, -1000, 6871, -1000, -1000,
	1117, 1166, -1000, 1397, 1089, -1000, 3026, -1000, -1000, 139,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13525, 13525,
	13525, 13525, 13525, 900, 753, 594, 13525, 13525, 900, 1386,
	-1000, -1000, -1000, -1000, -1000, 1230, -1000, 1110, -1000, -1000,
	1125, 20167, 20167, -1000, 20167, 1365, 594, 20167, 594, 13940,
	-1000, 15600, 916, -1000, 916, 916, -1000, 434, 20167, 1301,
	914, -1000, -1000, 376, -1000, 376, 960, 948, -1000, 20167,
	-1000, 1350, -1000, 61, -1000, 752, 65, 67, -1000, 64,
	38, 36, 35, 33, -1000, -1000, -1000, -1000, 1252, 1249,
	909, -1000, -1000, 820, -1000, 1116, 818, -1000, -1000, 812,
	-1000, -1000, 20167, -1000, 153, 1110, 1087, -1000, 482, 20167,
	20582, 1394, 1384, -1000, -1000, 2370, 2370, 2370, 2370, 133,
	-1000, -1000, 2370, 2370, -1000, 11865, 1427, -1000, 1110, -1000,
	1148, 256, -1000, -1000, -1000, 908, -1000, 435, 20167, -1000,
	-1000, -1000, 434, -1000, 805, 481, 742, -1000, -1000, 147,
	-1000, -1000, -1000, -1000, 906, -1000, 91, 2721, -1000, -1000,
	-1000, -1000, -1000, -1000, 1260, 1259, 74, 203, 1239, 1241,
	1383, -1000, -1000, -1000, 272, 20167, 1127, -1000, -1000, -1000,
	-1000, 135, 6871, 4781, 899, -1000, -1000, 12280, 12280, -1000,
	-1000, -1000, -1000, 900, 82, -219, -1000, -1000, 1112, 20997,
	1085, 900, 20167, -1000, -1000, -1000, -1000, -1000, 626, -1000,
	20582, 434, 84, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11865, 11865, 2721, -1000,
	-1000, -1000, -1000, 1115, 600, 1249, 1380, 1246, 1244, -1000,
	732, -1000, 897, 1114, -1000, 866, -1000, 20167, -1000, -1000,
	1113, -1000, 594, -1000, 1082, -1000, 594, -1000, -1000, 1212,
	-212, -223, 900, 815, -1000, -1000, -1000, 1111, -1000, 434,
	79, -1000, 839, 731, -300, -1000, -1000, 20167, 1251, -1000,
	729, -1000, 1368, 1367, -1000, 434, 20167, -1000, 135, 1224,
	-216, 12280, -1000, 1211, -1000, -1000, 20167, -1000, 795, 733,
	539, -1000, 11865, 1615, 486, 863, -1000, -1000, 700, 664,
	-1000, 853, -1000, 129, -1000, -1000, -217, 851, 176, -1000,
	-1000, 581, 1615, -1000, 704, -302, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1615, -1000, -1000, -1000,
	-1000, -1000, 434, 118, -221, 1172, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -304, 1615, 193, -305, -1000, 1110, -224,
	1168, 1154, 1411, -1000, 1572, -308, 196, 1615, 457, -1000,
	-1000, 11865, 896, 12695, -1000, -1000, 1413, -1000, 1424, 333,
	333, 576, 1615, -1000, -309, 194, 1615, -1000, 535, -1000,
	2370, 900, -1000, -1000, -1000, 157, 702, -1000, -1000, 778,
	-1000, -310, 1615, -1000, -1000, -1000, -1000, -1000, 190, 205,
	-315, -1000, 166, 1615, -1000,
}
var yyPgo = [...]int{

	0, 1775, 176, 726, 1772, 1769, 1768, 20, 16, 13,
	28, 1767, 1552, 1549, 1545, 1543, 1766, 1537, 12, 2,
	15, 11, 9, 22, 1764, 26, 1763, 1762, 6, 1759,
	5, 84, 1758, 1757, 1756, 1748, 1747, 1517, 1744, 1743,
	1742, 1736, 1735, 1485, 1473, 1734, 1730, 1470, 1467, 1729,
	1727, 1463, 1448, 1446, 1726, 127, 1724, 1722, 1721, 118,
	1719, 106, 1718, 1716, 1715, 82, 1854, 85, 72, 218,
	1714, 18, 1713, 77, 123, 143, 1712, 71, 1711, 1710,
	111, 1709, 1707, 1706, 91, 1704, 1701, 2422, 1700, 1699,
	113, 1698, 59, 38, 152, 1697, 1691, 1690, 1689, 1687,
	93, 129, 1686, 1685, 1684, 60, 1683, 1680, 130, 1679,
	1677, 1675, 99, 51, 1674, 43, 50, 52, 1673, 165,
	35, 1669, 97, 1668, 1665, 1661, 1658, 1657, 45, 1656,
	42, 1655, 103, 238, 633, 31, 48, 53, 92, 1654,
	73, 1652, 89, 69, 67, 33, 107, 1651, 104, 96,
	1650, 1649, 792, 1647, 1644, 86, 1643, 65, 79, 1642,
	775, 108, 64, 1641, 1640, 1637, 1636, 63, 78, 1635,
	1634, 41, 1921, 101, 812, 19, 1063, 54, 105, 1631,
	37, 1630, 2342, 102, 49, 75, 1629, 1628, 76, 58,
	39, 1627, 1618, 1616, 1615, 1611, 1608, 1301, 1607, 1606,
	1605, 1604, 112, 62, 1603, 1601, 90, 81, 1600, 1599,
	1598, 1596, 1595, 87, 55, 100, 1594, 80, 88, 135,
	1590, 1589, 1587, 1584, 57, 34, 1583, 1573, 1572, 70,
	40, 1570, 44, 30, 25, 47, 7, 68, 56, 1569,
	23, 1568, 36, 1566, 24, 1564, 27, 83, 3, 4,
	8, 1558, 1555, 1547, 1541, 1539, 66, 1534, 1531, 46,
	1515, 1512, 1502, 32, 1499, 1494, 1479, 1477, 0, 146,
	110, 1460, 1450, 121,
}
var yyR1 = [...]int{

	0, 266, 267, 267, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 54,
	2, 2, 2, 6, 3, 4, 4, 5, 5, 7,
	7, 58, 58, 8, 9, 9, 9, 9, 270, 270,
	82, 82, 80, 80, 81, 81, 142, 142, 10, 10,
	10, 10, 146, 146, 149, 149, 149, 150, 150, 150,
	150, 186, 186, 135, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 254, 254, 255, 255, 256, 256, 256,
	256, 257, 257, 258, 258, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 26, 26,
	170, 170, 35, 35, 36, 36, 36, 131, 131, 131,
	11, 11, 11, 11, 11, 18, 20, 20, 27, 27,
	28, 21, 21, 21, 21, 29, 29, 30, 22, 22,
	34, 34, 32, 32, 31, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 17, 253, 253,
	253, 25, 25, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 246, 246, 245, 244, 244, 243, 243, 242,
	41, 226, 227, 227, 227, 227, 227, 227, 227, 214,
	215, 190, 190, 190, 190, 190, 190, 190, 189, 189,
	189, 189, 193, 193, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 192, 192, 192, 192, 192, 192, 192,
	192, 194, 194, 194, 194, 194, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 196, 196, 196, 196, 196, 196, 196, 196, 213,
	213, 197, 197, 206, 206, 207, 207, 207, 204, 204,
	205, 205, 208, 208, 200, 201, 209, 202, 202, 202,
	203, 203, 203, 212, 212, 212, 212, 198, 216, 216,
	236, 236, 235, 235, 234, 234, 234, 225, 225, 231,
	231, 231, 231, 231, 220, 220, 220, 219, 219, 221,
	221, 224, 224, 233, 233, 232, 217, 217, 237, 237,
	237, 237, 237, 218, 218, 238, 222, 222, 223, 223,
	223, 249, 250, 248, 248, 248, 248, 248, 97, 97,
	97, 228, 228, 228, 229, 229, 229, 230, 230, 230,
	251, 251, 37, 37, 37, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 130, 130, 130, 39,
	40, 40, 40, 40, 40, 40, 40, 40, 168, 168,
	247, 247, 247, 241, 239, 239, 240, 240, 13, 42,
	42, 14, 14, 14, 14, 14, 14, 14, 15, 15,
	43, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 70, 156, 156, 154, 154, 157,
	157, 155, 155, 155, 158, 158, 158, 159, 159, 187,
	187, 187, 45, 45, 50, 50, 53, 51, 52, 169,
	169, 48, 48, 49, 49, 49, 49, 64, 64, 271,
	271, 47, 47, 46, 46, 46, 46, 16, 272, 55,
	56, 56, 57, 57, 57, 61, 61, 61, 59, 59,
	59, 60, 60, 67, 67, 66, 66, 68, 68, 68,
	68, 133, 133, 133, 134, 134, 179, 179, 179, 178,
	178, 178, 178, 72, 72, 73, 73, 74, 74, 75,
	75, 75, 75, 91, 91, 92, 92, 92, 92, 92,
	103, 103, 141, 141, 140, 140, 143, 143, 76, 76,
	76, 76, 77, 77, 78, 78, 79, 79, 167, 167,
	184, 184, 184, 83, 83, 83, 85, 84, 84, 84,
	84, 86, 86, 88, 89, 89, 87, 87, 90, 93,
	93, 93, 93, 94, 94, 69, 69, 69, 69, 69,
	69, 69, 153, 153, 96, 96, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 111, 111, 111, 111,
	111, 111, 98, 98, 98, 98, 98, 98, 98, 65,
	65, 112, 112, 112, 119, 113, 113, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 106, 106, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 273, 273, 108, 107, 107, 107, 107,
	107, 107, 62, 62, 62, 62, 62, 185, 185, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 123, 123, 63, 63, 121, 121, 122, 124,
	124, 120, 120, 120, 100, 100, 100, 100, 100, 100,
	100, 100, 102, 102, 102, 125, 125, 114, 114, 71,
	71, 126, 126, 127, 127, 128, 128, 129, 129, 132,
	132, 136, 136, 136, 137, 137, 137, 137, 138, 138,
	138, 99, 99, 99, 99, 99, 99, 139, 139, 139,
	139, 144, 144, 115, 115, 117, 117, 116, 118, 145,
	145, 148, 148, 148, 148, 147, 147, 147, 181, 181,
	181, 151, 151, 160, 160, 161, 161, 152, 152, 199,
	199, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	166, 166, 165, 165, 165, 162, 162, 162, 163, 163,
	180, 180, 176, 176, 177, 177, 182, 182, 183, 183,
	252, 252, 210, 210, 262, 262, 211, 211, 263, 263,
	265, 265, 260, 260, 261, 261, 264, 264, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 268,
	269, 171, 172, 172, 172,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 1, 3,
	0, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 1, 1, 3, 4, 3, 3, 3, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 3, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 1, 4, 4, 3, 3,
	2, 4, 5, 2, 3, 4, 2, 2, 3, 3,
	3, 3, 3, 4, 1, 1, 1, 1, 1, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	0, 1, 1, 2, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 1, 1, 1, 6, 10, 9, 7, 7,
	7, 9, 7, 12, 14, 7, 7, 7, 9, 9,
	10, 5, 6, 6, 8, 7, 0, 1, 2, 4,
	7, 5, 5, 5, 12, 7, 5, 9, 0, 1,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	5, 4, 6, 4, 4, 4, 4, 4, 3, 2,
	3, 4, 4, 3, 6, 6, 4, 4, 4, 4,
	4, 4, 3, 3, 2, 6, 2, 4, 4, 4,
	3, 7, 6, 5, 4, 2, 4, 3, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 1, 2, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 2, 2, 2, 2, 3, 3, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 1, 3, 1, 2, 3,
	5, 2, 4, 7, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 1, 3, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 3, 2, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	4, 2, 1, 3, 5, 4, 6, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -266, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -54, -3, -4, 6,
	7, -58, 9, 10, 30, -41, 129, -38, -39, -40,
	132, 131, 168, 133, 161, 63, 214, -53, 217, 218,
	-271, -169, 166, 167, 31, 32, 135, 212, 20, 37,
	-268, 8, 309, 130, 215, 163, 162, 26, 67, -267,
	424, -128, 15, -57, 5, -55, -272, -55, -55, -55,
	-55, -55, -226, 104, 67, -163, 142, 85, 300, 138,
	-170, 139, -162, 190, 44, 149, 148, 139, 139, 140,
	142, 300, 138, 176, 175, 139, -87, -182, 70, -174,
	351, 152, 366, 367, 130, 187, 214, 225, 219, 253,
	241, 352, 368, 153, 207, 137, 239, 242, 287, 151,
	200, 369, 274, 282, 210, 79, 217, 296, 370, 154,
	204, 206, 205, 195, 211, 36, 164, 237, 230, 190,
	371, 359, 228, 28, 185, 372, 284, 258, 373, 356,
	283, 233, 229, 135, 374, 155, 149, 178, 375, 259,
	263, 376, 288, 377, 378, 379, 141, 223, 224, 380,
	191, 290, 257, 33, 150, 353, 48, 173, 291, 38,
	261, 37, 273, 381, 256, 251, 382, 383, 384, 385,
	255, 222, 250, 202, 52, 136, 265, 264, 266, 203,
	286, 246, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 189, 399, 234, 146,
	400, 175, 401, 355, 402, 292, 227, 403, 157, 172,
	166, 295, 404, 405, 406, 407, 158, 408, 409, 410,
	218, 276, 208, 411, 412, 413, 414, 199, 184, 298,
	289, 51, 212, 270, 415, 221, 148, 213, 416, 215,
	43, 181, 7, 201, 277, 209, 248, 174, 417, 418,
	235, 236, 254, 220, 249, 216, 176, 177, 168, 419,
	297, 271, 357, 50, 243, 240, 182, 247, 420, 142,
	179, 180, 421, 278, 279, 183, 354, 293, 238, 272,
	139, 122, 242, 287, 129, 275, 276, 284, -220, 285,
	175, 178, -187, 139, -154, 274, 278, 279, 183, 70,
	140, 141, 33, 289, 288, 280, -182, -64, 133, 169,
	-87, -171, -171, -171, 277, 277, -171, -34, 213, 70,
	36, -2, -152, 142, 279, 144, 216, -137, 17, 16,
	-5, -3, -268, 6, 21, 22, -61, 53, 54, -56,
	-68, 113, -69, -182, -95, 87, -101, 29, 70, -174,
	24, -100, -96, -120, -118, -119, 122, 123, 124, 111,
	112, 119, 88, 125, -106, -104, -105, -107, -109, -110,
	72, 71, 80, 73, 74, 75, 76, 81, 82, 83,
	-176, -116, -268, 57, 58, 138, 310, 311, 312, 313,
	350, 159, 314, 90, 47, 299, 308, 307, 306, 304,
	305, 301, 303, 302, 316, 317, 145, 300, 117, 309,
	339, 340, 341, 342, 343, 344, 345, 346, 348, 349,
	347, 329, 322, 323, 324, 325, 326, 327, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, -152, -152,
	11, -80, -81, -87, -90, -182, -145, -186, 216, -148,
	289, 288, -120, -147, -176, -182, 287, 242, 286, -87,
	-227, -215, -218, -177, 154, -238, -176, -173, 151, 70,
	-174, 134, 160, 86, 358, 23, 25, 268, 322, 89,
	122, 323, 324, 325, 16, 20, 90, 121, 310, 326,
	129, 61, 301, 303, 299, 300, 275, 29, 10, 26,
	162, 194, 22, 115, 131, 93, 94, 95, 165, 24,
	163, 83, 159, 19, 64, 11, 13, 320, 321, 14,
	145, 144, 106, 192, 140, 59, 8, 125, 27, 103,
	55, 327, 328, 362, 45, 363, 57, 104, 17, 304,
	305, 31, 350, 329, 170, 364, 330, 117, 197, 62,
	49, 87, 81, 34, 84, 65, 85, 15, 193, 60,
	318, 196, 365, 105, 132, 309, 58, 138, 6, 315,
	30, 161, 333, 332, 331, 334, 198, 56, 312, 313,
	335, 422, 139, 92, 316, 317, 143, 82, 5, 44,
	32, 9, 63, 66, 306, 307, 308, 47, 337, 336,
	338, 91, 12, 319, 140, -87, 309, -161, 145, -161,
	176, 175, -161, 96, -42, -87, -160, 145, -176, -160,
	-160, -160, -160, -160, -87, 126, -87, 70, 30, -172,
	-268, -177, 300, 138, 70, 175, 178, 139, 176, 142,
	-172, -172, -222, 11, 106, 181, 181, 181, 182, -172,
	-157, -156, 177, 282, 283, 277, 281, 12, -70, 104,
	182, 277, 180, -172, -49, -2, -9, -7, -8, -2,
	96, -171, -171, 30, 72, 50, -253, 67, -210, 273,
	-269, 69, 139, -87, 129, 131, 134, 65, -138, 19,
	31, -69, -182, -129, -132, -69, -175, 322, 323, 324,
	325, 326, 339, 340, 341, 327, 328, 342, 343, 344,
	329, 330, 345, 346, 348, 349, 347, 333, 332, 331,
	334, 335, 337, 336, 338, -128, -2, -55, 49, -59,
	21, 22, 78, 11, -179, 86, 85, 103, -178, 23,
	70, -174, -175, 72, 322, 323, 324, 325, 326, 339,
	340, 341, 327, 328, 342, 343, 344, 329, 330, 345,
	346, 348, 349, 347, 333, 332, 331, 334, 335, 337,
	336, 338, 126, -69, -98, 106, 87, 104, 105, 89,
	108, 107, 118, 111, 112, 113, 114, 115, 116, 117,
	109, 110, 121, 96, 97, 98, 99, 100, 101, 102,
	-153, -268, -119, -268, 127, 128, -101, -101, -101, -101,
	-101, -101, -101, -101, -268, -2, -113, -69, -268, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -123,
	-69, -268, -273, -108, -268, -273, -108, -273, -108, -273,
	-268, -273, -108, -273, -108, -273, -273, -108, -273, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -89, 27, -87, -73, -74, -75, -76,
	-91, -119, -268, -87, -87, -80, -270, 68, 11, 66,
	-270, 68, 126, 68, -145, 216, -146, -149, 290, 292,
	96, -181, -176, 72, 29, 126, 30, 69, 68, -189,
	-193, -195, -194, -196, -191, -192, 239, 242, 246, 244,
	240, 245, 122, 243, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 30, 164, 235, 236, 237,
	238, 259, 260, 261, 262, 263, 264, 265, 266, 219,
	241, 352, 220, 221, 222, 223, 224, 225, 227, 228,
	229, 230, 231, 232, 233, 70, 67, -176, 23, 142,
	70, 87, 70, 70, 70, -87, 70, 68, 143, -80,
	24, 65, -82, -87, 70, 70, 70, 70, -183, -182,
	-173, -172, -172, -161, -161, -172, -172, -172, -87, -87,
	-87, -87, -158, 104, 12, -158, -172, -172, 11, -155,
	11, 106, -155, -69, -101, -159, 104, 65, 70, -32,
	-31, -33, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 72, 69, -113, -252, 423, -87,
	-172, 179, 179, 139, 139, 184, -87, 9, 106, 68,
	18, 126, 68, -136, 25, 26, -136, -137, -269, -61,
	-102, 50, 73, 76, -60, 56, -87, -69, -69, -111,
	81, 87, 82, 83, -178, 113, -183, -177, -173, -101,
	-112, -116, -119, 77, 106, 104, 105, 89, -101, -101,
	-101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -101, -101, -185, 70, 72, 70, -100, -100, -176,
	-59, -269, 68, -269, -2, -66, -68, -66, -269, -69,
	-69, -120, 72, -66, -120, 72, -66, -66, -66, -59,
	-121, -122, 91, -120, -269, -101, -176, -176, -66, -67,
	-66, -66, -66, -269, -269, -68, -66, -68, -66, -66,
	-269, -269, -269, -269, -59, -59, -66, -66, -66, -59,
	-66, -66, -59, -66, -66, -66, -66, -59, -66, -66,
	-66, -142, 171, -87, 30, 68, -83, -85, -84, -86,
	55, 59, 61, 56, 57, 58, 62, -167, 23, -73,
	-268, -92, 171, -93, 23, -184, 63, 144, 64, -182,
	-175, 72, -142, 66, -73, -87, -73, -90, -182, 113,
	-148, -146, 68, 291, 293, 294, 65, 84, -69, -203,
	121, -177, -183, -228, -229, -230, -177, 72, 73, -215,
	-216, -217, -218, -231, 154, -237, 146, 148, 44, -219,
	155, 140, 45, -190, -204, 271, -197, 67, -197, -197,
	247, 239, 242, 240, -197, -197, -197, -197, -197, -202,
	242, -202, -202, -202, -202, 240, 67, 67, -197, -197,
	-197, -206, 67, -206, 234, -207, 67, -207, -207, -207,
	-207, -238, 151, -69, -180, 66, -135, -87, -172, 24,
	-172, -35, 187, 160, 67, -87, -87, -87, 68, 70,
	70, -223, 11, 106, 72, -69, -87, -103, 23, -182,
	-182, -158, -65, 165, 72, -87, 68, 96, 69, -88,
	27, 72, -164, 134, 131, 132, 136, 137, -241, 268,
	130, 242, 79, 29, 15, 310, 171, 357, 70, 172,
	-87, -87, -87, -87, -87, 134, 131, 51, -69, -69,
	-132, -138, -151, 19, 11, 47, 47, -66, 81, 82,
	83, 126, -268, -112, -101, -101, -101, -65, 86, -269,
	-67, -69, -269, 68, -269, -269, 68, 66, 23, 11,
	11, -269, 11, 11, -269, -269, -269, -66, -124, -122,
	93, -69, -269, -269, 68, 68, -269, -269, -269, -269,
	-133, 318, -133, -269, -269, -269, -269, -269, -133, -133,
	-133, -133, -66, -66, -269, -269, -269, -66, -269, -269,
	-66, -269, -269, -269, -269, -66, -269, -269, -269, -99,
	30, 47, -2, -268, -268, -145, -74, -75, -75, -74,
	-75, 55, 55, 55, 60, 55, 60, 55, -84, -184,
	-269, -268, 34, -184, -93, 140, 140, 140, -94, 12,
	-73, -94, -94, 126, -149, -150, 295, 292, 298, 70,
	72, 126, 68, -230, 96, -218, 154, 67, 70, 45,
	-219, 140, 45, -219, -224, 70, -224, 45, -208, -200,
	-201, -209, -212, -198, 81, 87, 29, 65, 268, 146,
	45, 44, 79, -205, 272, 73, -202, -202, -197, -197,
	-197, 247, -197, -202, -203, 30, -203, -203, -203, -203,
	-202, -213, 72, -213, 73, -206, 73, 69, 65, -176,
	-2, 23, -36, 8, 9, 10, -254, -255, -256, 70,
	106, 192, 193, 143, -172, -87, -172, -172, -94, 70,
	70, -155, -158, 34, -101, -31, -100, -142, 139, -171,
	-168, -247, -219, -251, -217, -218, 147, 155, 146, 171,
	154, -168, -247, 154, 151, -219, 155, 147, -165, -219,
	143, 23, -168, -168, -225, 96, 171, -246, 66, 179,
	268, 179, 52, -87, -72, 11, 113, -177, -67, -65,
	86, -101, -269, -68, -188, 122, 239, 164, 237, 230,
	257, 244, 270, 235, 271, -185, -188, -101, -101, -101,
	-101, 351, -128, 95, -69, 92, -101, -101, -176, -268,
	-133, -133, -133, -133, -133, -269, -269, -134, -133, -134,
	-134, -269, -134, -134, -269, -134, -134, -134, -134, -269,
	-134, -134, -134, -144, 65, -145, -115, -117, -116, -268,
	-2, -139, -176, -143, -176, -94, -78, -77, 65, 66,
	-79, 65, -77, 55, 55, -143, -101, -93, -268, -268,
	-268, -128, -69, -94, 292, 296, 297, -229, -230, -233,
	-232, -176, -237, 155, -224, -224, 67, 81, -101, 9,
	45, 45, 72, 69, -203, -203, -202, -197, -203, 70,
	122, -203, 69, 68, 69, 68, 69, 68, -97, 372,
	87, -87, -135, -135, 65, 69, 68, -189, 70, 70,
	70, -87, -158, -101, -202, -87, 67, -214, 70, -171,
	-224, -162, 70, 70, -171, 70, 70, -176, 45, 70,
	-87, -176, -214, 70, -69, -176, -244, 354, -245, 70,
	-176, -176, -176, -94, -73, -269, -101, -269, -197, -197,
	-197, -207, -197, 224, -197, 224, -269, -269, 19, 19,
	19, 19, -268, -63, 315, -69, 68, 68, -128, 171,
	-134, -134, -134, -134, -134, 28, -144, 68, -269, -269,
	-269, 68, 126, -269, 68, -128, -69, 67, -69, -269,
	-93, -167, -140, -176, -140, -140, -137, 69, 68, -197,
	-140, -105, -203, -202, 72, -202, 73, 73, 372, 67,
	-2, -87, -257, -258, -259, 79, 353, 87, 194, 195,
	156, 196, 197, 198, -256, -189, -189, -189, -260, -157,
	-214, -130, 159, 160, -189, -180, -221, -219, 70, -166,
	143, 23, 143, -130, -214, 27, -243, -242, -177, 67,
	66, -125, 13, -202, 70, -101, -101, -101, -101, -101,
	-269, 72, -101, -101, -269, 16, 45, -117, 47, -2,
	-268, -176, -176, -176, -137, -140, -92, -184, 68, -269,
	-269, -269, -235, -234, 66, 150, 79, -232, -136, 69,
	-203, -203, 69, 69, -233, -135, 19, -135, -259, 72,
	198, 194, 198, 198, 198, 198, 199, -261, 38, -263,
	39, 69, -171, 70, -190, 67, -224, 70, -176, -171,
	-130, -268, 68, 96, -140, -87, -126, 14, 16, -269,
	-269, -269, -269, -62, 106, 354, -269, -269, -113, 9,
	-115, -2, 126, 69, -93, -176, -234, 70, -225, 72,
	157, 69, 185, -23, -2, -7, -8, -9, -10, -12,
	-37, -13, -14, -20, -21, -15, -43, -44, -53, -51,
	-52, -48, -47, -22, -17, -24, 90, 145, 214, 36,
	36, 190, 191, -199, 144, -264, 43, -262, -211, 42,
	16, -171, -233, -180, -171, -239, -240, 171, -242, -230,
	69, -127, -69, -175, -114, -71, -69, -175, -269, 352,
	62, 355, -128, -145, -269, -176, 73, -87, -236, -235,
	186, -135, -69, -69, -26, -23, -141, 67, 73, -263,
	16, -265, 40, 41, 72, 69, 67, -269, 68, -176,
	-246, 68, 52, 353, 356, -269, 67, -131, 188, 189,
	-27, -28, 91, 92, 424, -140, 38, 72, 16, 16,
	-236, -233, -240, 47, -244, -71, 52, -140, -135, 70,
	70, 95, 93, -28, -69, -25, -19, -2, -7, -8,
	-9, -10, -20, -21, -22, -18, 214, 95, -23, 69,
	72, 72, 69, 173, 354, 69, -11, -18, -10, -7,
	-8, -9, 90, -25, 92, 424, -25, -236, 174, 355,
	-249, -250, 65, -135, 424, -25, 95, 93, -29, -19,
	-30, 94, 424, -268, 356, -250, 65, -249, 65, 10,
	9, 95, 424, 145, -25, 95, 93, -30, -69, 95,
	-101, 170, -248, 158, 153, 156, 30, -248, 90, 424,
	145, -25, 92, -269, -269, 152, 29, 81, 95, 424,
	-25, 145, 95, 424, 145,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 805, 0, 508,
	508, 508, 508, 508, 508, 0, -2, 372, 373, 374,
	0, 0, 0, 0, -2, 483, 484, 485, 487, 488,
	497, -2, 1281, 1281, 0, 0, 1281, 0, 0, 0,
	0, 41, 42, 857, 0, 500, 489, 490, 1279, 1,
	3, 814, 0, 0, 512, 515, 510, 0, 857, 857,
	0, 0, 74, 0, 0, 0, 0, 0, 855, 855,
	0, 855, 879, 0, 875, 876, 877, 0, 853, 0,
	853, 853, 853, 853, 853, 0, 429, 596, 886, 887,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	0, 0, 0, 1282, 0, 1282, 1282, 444, 0, 446,
	0, 0, 0, 1282, 0, 455, 0, 0, 462, 1282,
	324, 325, 326, 480, 481, 468, 482, 0, 0, 0,
	501, 502, 503, 504, 1281, 1281, 507, 158, 0, 178,
	892, 35, 0, 0, 0, 858, 486, 818, 0, 0,
	805, 37, 0, 508, 513, 514, 518, 516, 517, 509,
	0, 527, 536, 0, 605, 0, 610, 612, -2, -2,
	0, 647, 648, 649, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 676, 677, 678, 679, 680,
	784, 785, 786, 787, 788, 789, 790, 791, 614, 615,
	781, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 743, 743, 743, 743, 743,
	743, 743, 743, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 596, 58, 0, 1226, 839,
	-2, -2, 0, 0, 781, 0, -2, 1058, -2, 75,
	0, 202, 203, 0, 1070, 344, 884, 885, 1060, 882,
	883, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 0, 430, 1282, 1282, 433,
	1283, 1284, 855, 855, 1282, 1282, 1282, 0, 0, 0,
	442, 443, 0, 346, 347, 474, 474, 1282, 1282, 450,
	0, 471, 471, 469, 470, 465, 466, 0, 457, 0,
	477, 459, 460, 463, 491, -2, 494, 495, 496, -2,
	0, 505, 506, 0, 160, 0, 177, 0, 890, 893,
	36, 1280, 0, 1282, 0, 0, 0, 0, 30, 0,
	0, 815, 0, 806, 807, 811, 811, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 814, 35, 515, 0, 521,
	519, 520, 511, 0, 528, 0, 0, 0, 537, 0,
	539, 540, 541, 542, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 0, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 633, 634, 635, 636, 637, 638,
	611, 0, 625, 0, 0, 0, 667, 668, 669, 670,
	671, 672, 673, 0, 518, 35, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 0,
	773, 0, 726, 735, 0, 727, 736, 728, 737, 729,
	0, 730, 738, 731, 739, 732, 733, 740, 734, 0,
	0, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 518, 0, 0,
	0, 518, 0, 0, 518, 0, 0, 0, 0, 518,
	0, 0, 0, 56, 0, 595, 0, 545, 547, 548,
	549, -2, 0, 599, -2, 0, 0, 0, 48, 49,
	0, 0, 0, 0, 59, 1226, 61, 62, 0, 0,
	0, 300, 848, 849, 850, 0, 846, 361, 0, 211,
	288, 219, 220, 221, 281, 223, 281, 281, 0, 281,
	281, 281, 281, 281, 297, 297, 297, 297, 297, 264,
	265, 266, 267, 268, 0, 0, 241, 281, 281, 281,
	245, 271, 272, 273, 274, 275, 276, 277, 278, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 283, 283,
	285, 285, 285, 285, 285, 0, 0, 880, 73, 0,
	1282, 0, 1282, 0, 0, 200, 131, 0, 0, 421,
	854, 0, 423, 50, 424, 425, 426, 427, 597, 888,
	889, 431, 432, 0, 0, 436, 437, 438, 439, 440,
	441, 348, 447, 0, 0, 448, 449, 454, 0, 560,
	0, 0, 474, 456, 639, 458, 0, 0, 498, 159,
	162, 0, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 161, 179, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 0, 0, 809, 812, 813, 810, 818, 38, 518,
	0, 792, 0, 0, 0, 522, 33, 606, 607, 609,
	626, 0, 628, 630, 538, 529, 0, 782, -2, 616,
	617, 641, 642, 643, 0, 0, 0, 0, 639, 621,
	0, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 666, 757, 758, 0, 664, 665, 674,
	523, 644, 0, 837, 35, 0, 525, 0, 713, 0,
	0, 649, 784, 0, 649, 784, 0, 0, 0, 0,
	779, 776, 0, 0, 744, 0, 0, 0, 0, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 0, 0,
	583, 0, 0, 586, 0, 0, 0, 0, 579, 0,
	0, 553, 1160, 555, 0, 599, 0, 0, 0, 580,
	581, 582, 603, 0, 603, 53, 603, 55, 0, 598,
	840, 60, 0, 0, 65, 66, 841, 842, 843, 844,
	0, 782, 0, 201, 362, 364, 367, 368, 369, 204,
	206, 207, 208, 0, 1070, 337, 1170, 1207, -2, 331,
	1096, -2, -2, 210, 290, 289, 222, 0, 297, 297,
	281, 281, 281, 281, 250, 297, 253, 256, 257, 300,
	0, 300, 300, 300, 300, 297, 0, 0, 242, 243,
	244, 233, 0, 234, 283, 236, 0, 237, 238, 239,
	240, 343, 0, 0, 0, 0, 0, 0, 79, 856,
	80, 0, 132, 133, 83, 0, 419, 1282, 0, 1282,
	1282, 603, 0, 0, 475, 476, 471, 474, 0, 472,
	473, 453, 464, 0, 478, 461, 0, 0, 180, 56,
	0, 891, 1281, -2, 408, 872, 408, 408, 391, 317,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 0,
	192, 401, 403, 402, 406, 0, 0, 0, 816, 817,
	808, 31, 0, 851, 852, 793, 794, 543, 627, 629,
	631, 0, 523, 618, 639, 622, 0, 619, 0, 613,
	0, 646, -2, 0, 711, 712, 0, 0, 0, 0,
	0, 750, 0, 0, 751, 0, 722, 805, 0, 777,
	0, 0, 725, 745, 0, 0, 746, 747, 748, 749,
	700, 0, 701, 0, 0, 0, 0, 0, 707, 708,
	709, 710, 0, 0, 534, 534, 534, 0, 534, 534,
	0, 534, 534, 534, 534, 0, 534, 534, 534, 831,
	0, 0, -2, 0, 0, 603, 546, 574, 576, 0,
	571, 584, 585, 587, 0, 589, 0, 591, 592, 550,
	552, 0, 0, 599, 559, 0, 0, 0, 805, 0,
	603, 46, 47, 0, 63, 64, 0, 0, 70, 301,
	302, 0, 0, 365, 0, 205, 0, 0, 0, 319,
	331, 327, 328, 331, 322, 332, 323, 0, 212, 213,
	214, 215, 216, 217, 292, 0, 0, 0, 296, 0,
	304, 306, 0, 218, 291, 0, 300, 300, 297, 248,
	249, 281, 254, 300, 258, 0, 259, 260, 261, 262,
	300, 0, 279, 0, 0, 235, 0, 358, 0, 881,
	-2, 73, 0, 134, 135, 136, 0, 84, 85, 0,
	0, 0, 0, 0, 422, 51, 434, 435, 445, 349,
	350, 474, 452, 0, 640, 163, 164, 297, 0, 375,
	0, 1281, 331, 0, 392, 393, 409, 410, 411, 412,
	0, 0, 1281, 0, 0, 0, 410, 0, 0, 0,
	873, 874, 0, 0, 0, 318, 0, 195, 0, 0,
	0, 0, 820, 32, 603, 0, 530, 783, 0, 620,
	0, 623, 681, 526, 0, 281, 281, 762, 281, 285,
	765, 281, 767, 281, 770, 0, 0, 0, 0, 0,
	0, 0, 774, 724, 780, 0, 0, 0, 531, 805,
	702, 703, 704, 705, 706, 534, 534, 685, 535, 686,
	687, 534, 689, 690, 534, 692, 693, 694, 695, 534,
	697, 698, 699, 39, 0, 831, 821, 833, 835, 0,
	35, 0, 827, 0, 566, 805, 568, 575, 0, 0,
	569, 0, 570, 588, 590, 0, -2, 558, 0, 0,
	0, 814, 604, 45, 67, 68, 69, 363, 366, 0,
	333, 281, 336, 0, 320, 321, 0, 293, 294, 0,
	303, 305, 307, 282, 246, 247, 300, 255, 251, 298,
	299, 263, 297, 0, 297, 0, 286, 0, 345, 359,
	0, 0, 77, 0, 0, 91, 0, 87, 0, 0,
	0, 420, 451, 561, 902, 593, 0, 396, 0, 378,
	880, 329, 371, 379, 380, 385, 386, 387, 0, 0,
	382, 0, 396, 0, 395, 0, 400, 0, 193, 194,
	0, 0, 405, 795, 544, 682, 624, 714, 759, 297,
	763, 764, 766, 768, 769, 771, 716, 715, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 0, 0,
	683, 684, 688, 691, 696, 0, 40, 0, 836, -2,
	0, 0, 0, 57, 0, 814, 572, 0, 577, 599,
	556, 0, 0, 564, 0, 0, 44, 309, 0, 811,
	0, 295, 252, 300, 280, 300, 0, 0, 360, 0,
	-2, 0, 73, 92, 93, 0, 0, 0, 98, 0,
	0, 0, 0, 0, 86, 88, 89, 90, 904, 898,
	0, 1281, 397, 0, 211, 0, 331, 330, 394, 0,
	870, 871, 0, 1281, 396, 0, 196, 197, 0, 0,
	0, 801, 0, 760, 761, 0, 0, 0, 0, 752,
	723, 775, 0, 0, 532, 0, 0, 834, 0, -2,
	0, 829, 828, 567, 43, 0, 554, 599, 0, 600,
	601, 602, 308, 312, 0, 317, 0, 334, 335, 0,
	269, 270, 284, 287, 0, 78, 0, 0, 94, 95,
	96, 97, 99, 100, 0, 0, 0, 859, 906, -2,
	0, 1281, 377, 398, 209, 0, 880, 381, 388, 389,
	1281, 0, 0, 0, 0, 407, 34, 0, 0, 717,
	719, 718, 720, 0, 0, 0, 741, 742, 805, 0,
	824, 35, 0, 573, 557, 565, 313, 314, 0, 316,
	0, 310, 0, 73, -2, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 0, 0, 0, 101,
	102, 103, 104, 562, 0, 898, 0, 900, 0, 897,
	0, 376, 0, 0, 390, 0, 414, 0, 198, 199,
	192, 802, 803, 804, 796, 797, 799, 800, 721, 0,
	0, 0, 0, 832, -2, 830, 315, 0, 76, 311,
	137, 82, 0, 0, 0, 128, 29, 0, 0, 905,
	0, 903, 0, 0, 899, 310, 0, 413, 0, 0,
	195, 0, 753, 0, 756, 533, 0, 73, 0, 0,
	0, 148, 0, 0, 0, 0, 860, 907, 0, 0,
	383, 0, 415, 0, 404, 798, 754, 0, 0, 138,
	139, 0, 0, 149, 0, 0, 181, -2, 184, 185,
	186, 187, 188, 189, 190, 191, 0, 127, 129, 563,
	901, 895, 310, 0, 0, 338, 73, 140, 141, 142,
	143, 144, 146, 0, 0, 0, 0, 384, 0, 0,
	339, 340, 0, 81, 0, 0, 0, 0, 0, 182,
	155, 0, 0, 0, 755, 341, 0, 342, 0, 0,
	0, 0, 150, 151, 0, 0, 0, 156, 0, 145,
	0, 0, 351, 353, 354, 0, 0, 352, 147, 0,
	153, 0, 0, 416, 417, 355, 356, 357, 0, 0,
	0, 152, 0, 157, 154,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:388
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:393
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:394
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:398
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:425
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:431
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:437
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:445
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:449
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:455
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:462
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:472
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:482
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:489
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:501
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:523
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:529
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:541
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:546
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:555
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:565
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:575
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:580
		{
			yyVAL.partitions = nil
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:584
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:594
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:598
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:608
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:612
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:622
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:626
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:632
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:636
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:640
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.str = SessionStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.str = GlobalStr
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:659
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:665
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 76:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:686
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:690
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:698
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 81:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:706
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 82:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:710
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:715
		{
			yyVAL.procedureParams = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:735
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:752
		{
			yyVAL.characteristics = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:756
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:856
		{
			yyVAL.str = ""
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.str = BeforeStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.str = AfterStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.str = InsertStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.str = UpdateStr
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.str = DeleteStr
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.triggerOrder = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:897
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:919
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:923
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:939
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:945
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:950
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:955
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 154:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:961
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:979
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:989
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1043
		{
			yyVAL.exprs = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.exprs = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1057
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1134
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1155
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.columnType = ColumnType{}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1307
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1532
		{
			yyVAL.sqlVal = nil
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1541
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1545
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1563
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1571
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1580
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = ""
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.colKeyOpt = colKey
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1669
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1678
		{
			yyVAL.indexOptions = nil
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1692
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1702
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1707
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = ""
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1727
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1731
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = yyDollar[1].str
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1791
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1803
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 338:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1813
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 339:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1817
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 340:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1821
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 341:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1825
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 342:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1829
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1845
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1907
		{
			yyVAL.boolean = true
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.boolean = true
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.boolean = false
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = yyDollar[1].str
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1982
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 377:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1989
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1996
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2000
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2004
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2008
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2012
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 383:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2017
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 384:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:2021
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2025
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 386:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 388:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2039
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2043
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 390:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2050
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2056
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2060
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2066
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 394:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2077
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
			yyVAL.columnOrder = nil
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2096
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 404:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 407:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2159
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2172
		{
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2183
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2199
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2203
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2219
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2227
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2239
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2247
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2255
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2263
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2271
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2301
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2305
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2309
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2313
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2318
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2322
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2326
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2330
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2334
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2338
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2354
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2366
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2370
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2378
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 452:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2383
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2393
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2401
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2405
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2419
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = "full "
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.showFilter = nil
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.showFilter = nil
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = SessionStr
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = GlobalStr
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.statement = &Begin{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = &Begin{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.statement = &Commit{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.statement = &Rollback{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2586
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.statement = &OtherRead{}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			setAllowComments(yylex, true)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.bytes2 = nil
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = UnionStr
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = UnionAllStr
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = UnionDistinctStr
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = SQLCacheStr
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = DistinctStr
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = StraightJoinHint
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2719
		{
			yyVAL.selectExprs = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2751
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2762
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2766
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2771
		{
			yyVAL.over = nil
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.over = yyDollar[1].over
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2780
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2788
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2811
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2839
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2860
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2875
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2879
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2887
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.expr = nil
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2907
		{
			yyVAL.columns = nil
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2911
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2931
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2944
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2948
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2952
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2964
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2968
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2974
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2979
		{
			yyVAL.empty = struct{}{}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.empty = struct{}{}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = JoinStr
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = JoinStr
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = JoinStr
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = StraightJoinStr
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.str = LeftJoinStr
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = LeftJoinStr
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = RightJoinStr
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = RightJoinStr
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = NaturalJoinStr
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3079
		{
			yyVAL.indexHints = nil
		}
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3083
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3087
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3091
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3096
		{
			yyVAL.expr = nil
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = ""
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3156
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3160
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3164
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3168
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3172
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3180
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3184
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3188
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3192
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = IsNullStr
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = IsNotNullStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = IsTrueStr
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = IsNotTrueStr
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = IsFalseStr
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = IsNotFalseStr
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = EqualStr
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.str = LessThanStr
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.str = GreaterThanStr
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.str = LessEqualStr
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.str = GreaterEqualStr
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.str = NotEqualStr
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = nil
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3263
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3271
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3321
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3365
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3393
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3407
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3449
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3453
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3457
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3461
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3465
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3469
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3473
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3481
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3485
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3489
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3509
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3513
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3588
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 717:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 718:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 719:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 720:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 721:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 741:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 742:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = BooleanModeStr
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 755:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3770
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = QueryExpansionStr
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3790
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3802
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3820
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3832
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = nil
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = string("")
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3874
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = nil
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3893
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3897
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.expr = &NullVal{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3941
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3945
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3950
		{
			yyVAL.exprs = nil
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3979
		{
			yyVAL.expr = nil
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3998
		{
			yyVAL.orderBy = nil
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = AscScr
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = AscScr
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = DescScr
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.limit = nil
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4048
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4052
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = ""
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = ForUpdateStr
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = ShareModeStr
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4078
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4091
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4095
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4099
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4114
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4118
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4123
		{
			yyVAL.setExprs = nil
		}
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4127
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4137
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4153
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4198
		{
			yyVAL.bytes = []byte("charset")
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.expr = &Default{}
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4222
		{
			yyVAL.byt = 0
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.byt = 1
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4227
		{
			yyVAL.byt = 0
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4229
		{
			yyVAL.byt = 1
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = IgnoreStr
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			yyVAL.sqlVal = nil
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.empty = struct{}{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4268
		{
			yyVAL.empty = struct{}{}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.empty = struct{}{}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.empty = struct{}{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = UniqueStr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = FulltextStr
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = SpatialStr
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.str = yyDollar[1].str
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4290
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = string("")
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4332
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.EnclosedBy = nil
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4341
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4355
		{
			yyVAL.sqlVal = nil
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4359
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4364
		{
			yyVAL.sqlVal = nil
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4368
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4373
		{
			yyVAL.Fields = nil
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4377
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4382
		{
			yyVAL.Lines = nil
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4391
		{
			yyVAL.sqlVal = nil
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4805
		{
			decNesting(yylex)
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			skipToEnd(yylex)
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4815
		{
			skipToEnd(yylex)
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			skipToEnd(yylex)
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
