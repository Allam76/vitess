// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1040,
	-1, 43,
	147, 1104,
	148, 1122,
	-2, 231,
	-1, 49,
	186, 673,
	187, 673,
	-2, 663,
	-1, 518,
	135, 1132,
	-2, 1126,
	-1, 519,
	135, 1133,
	-2, 1127,
	-1, 623,
	98, 1403,
	135, 1403,
	-2, 1088,
	-1, 624,
	98, 1521,
	135, 1521,
	-2, 1089,
	-1, 629,
	98, 1427,
	135, 1427,
	-2, 1090,
	-1, 630,
	98, 1474,
	135, 1474,
	-2, 1091,
	-1, 631,
	98, 1475,
	135, 1475,
	-2, 1092,
	-1, 632,
	98, 1353,
	135, 1353,
	-2, 1096,
	-1, 634,
	98, 1451,
	135, 1451,
	-2, 1098,
	-1, 1139,
	1, 770,
	5, 770,
	12, 770,
	13, 770,
	14, 770,
	15, 770,
	17, 770,
	19, 770,
	30, 770,
	31, 770,
	56, 770,
	57, 770,
	58, 770,
	59, 770,
	60, 770,
	62, 770,
	63, 770,
	66, 770,
	67, 770,
	69, 770,
	70, 770,
	405, 770,
	501, 770,
	-2, 802,
	-1, 1145,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1390,
	135, 1135,
	-2, 1131,
	-1, 1556,
	44, 522,
	-2, 1365,
	-1, 1560,
	68, 522,
	-2, 1315,
	-1, 1563,
	68, 518,
	72, 518,
	-2, 1235,
	-1, 1564,
	68, 519,
	72, 519,
	-2, 1245,
	-1, 1681,
	44, 565,
	154, 567,
	156, 565,
	157, 565,
	-2, 600,
	-1, 1751,
	5, 51,
	-2, 868,
	-1, 2052,
	69, 1290,
	70, 1290,
	135, 1290,
	-2, 704,
	-1, 2075,
	1, 823,
	5, 823,
	12, 823,
	13, 823,
	14, 823,
	15, 823,
	17, 823,
	19, 823,
	30, 823,
	31, 823,
	56, 823,
	57, 823,
	58, 823,
	59, 823,
	60, 823,
	62, 823,
	63, 823,
	66, 823,
	67, 823,
	69, 823,
	70, 823,
	405, 823,
	501, 823,
	-2, 802,
	-1, 2178,
	154, 568,
	-2, 566,
	-1, 2239,
	5, 51,
	-2, 1060,
	-1, 2439,
	41, 1142,
	-2, 1140,
	-1, 2575,
	5, 51,
	-2, 1063,
}

const yyPrivate = 57344

const yyLast = 33762

var yyAct = [...]int{
	581, 80, 2770, 2720, 2735, 2734, 2744, 834, 2592, 2578,
	2591, 1608, 2624, 2557, 1994, 419, 2492, 7, 2491, 6,
	519, 2722, 2459, 2490, 5, 2493, 8, 2639, 2555, 2562,
	2346, 521, 2617, 2089, 1176, 2386, 1790, 2251, 2439, 2622,
	1977, 1548, 1090, 2069, 648, 1968, 1606, 1266, 1508, 524,
	1841, 510, 2045, 1514, 1565, 83, 2441, 1618, 2327, 2138,
	2304, 2282, 2489, 3, 1820, 2298, 2090, 1512, 127, 1368,
	2046, 127, 1557, 2266, 444, 444, 2579, 127, 580, 402,
	405, 80, 1901, 450, 2172, 1976, 2162, 447, 447, 866,
	537, 1547, 503, 93, 2042, 106, 1680, 1791, 1704, 465,
	127, 2054, 1546, 2061, 526, 1361, 2014, 1644, 1424, 1415,
	1311, 127, 1268, 1376, 1487, 127, 651, 1553, 1284, 127,
	1597, 1491, 1246, 2267, 1498, 1136, 1593, 1884, 992, 625,
	1135, 1156, 1392, 127, 447, 1479, 651, 644, 999, 1660,
	916, 628, 1139, 502, 127, 895, 506, 642, 621, 643,
	1155, 1987, 646, 1946, 850, 995, 622, 1012, 894, 1108,
	617, 833, 422, 421, 464, 614, 821, 1316, 1147, 1109,
	437, 85, 431, 442, 425, 2792, 2788, 2778, 2760, 1003,
	2758, 2739, 2715, 2647, 82, 1309, 2418, 462, 2276, 1581,
	36, 69, 2751, 36, 2633, 432, 36, 36, 72, 39,
	40, 36, 2416, 2733, 2573, 2431, 2703, 2608, 1536, 87,
	88, 89, 90, 91, 1265, 1912, 2135, 2419, 2632, 2035,
	2535, 1785, 2558, 1726, 2231, 1426, 820, 1659, 2123, 854,
	855, 2371, 2084, 857, 1510, 2085, 2086, 985, 1786, 72,
	39, 40, 1532, 2572, 1829, 1631, 1631, 1828, 869, 414,
	1830, 1157, 81, 1158, 2283, 81, 1533, 1534, 81, 81,
	1315, 41, 2285, 81, 1357, 1358, 856, 1332, 823, 944,
	826, 827, 596, 413, 602, 604, 603, 600, 601, 599,
	598, 597, 412, 1313, 1314, 638, 870, 871, 952, 1867,
	1567, 454, 1658, 605, 606, 913, 1573, 1575, 1587, 1574,
	1582, 1582, 424, 423, 426, 522, 2471, 2218, 2628, 2216,
	2628, 396, 430, 512, 1027, 1026, 1036, 1037, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1028, 2623, 411, 1038, 434,
	1594, 1312, 461, 438, 1943, 1353, 1352, 2288, 1351, 1350,
	1349, 1348, 2625, 1859, 2625, 948, 949, 441, 1907, 1935,
	455, 109, 1569, 2305, 2306, 2307, 2308, 1569, 1864, 1863,
	2299, 2728, 2444, 2161, 1940, 416, 1671, 2629, 2302, 2629,
	2355, 2145, 516, 2649, 2648, 2286, 2287, 2289, 2290, 2291,
	1860, 1911, 2300, 2301, 2598, 467, 2539, 876, 2316, 127,
	2323, 1672, 1343, 2655, 99, 1865, 1619, 1852, 1909, 80,
	80, 2314, 2748, 1853, 112, 2644, 2410, 1688, 1682, 1683,
	2417, 1681, 1684, 1685, 2411, 884, 2409, 886, 928, 118,
	114, 115, 885, 116, 2408, 867, 1296, 868, 870, 871,
	879, 2407, 2596, 127, 2642, 2643, 2405, 2529, 427, 428,
	429, 435, 1322, 439, 440, 443, 2406, 1689, 2139, 2140,
	2141, 2142, 2143, 101, 2015, 120, 119, 98, 981, 397,
	2669, 883, 887, 111, 110, 853, 989, 1613, 1862, 2136,
	959, 2636, 2637, 960, 2580, 2139, 2140, 2141, 2142, 2143,
	877, 878, 2253, 2487, 127, 2537, 2413, 406, 2435, 2148,
	1811, 113, 2525, 2526, 1612, 2017, 865, 951, 928, 1926,
	1927, 863, 864, 862, 861, 107, 2731, 121, 2698, 122,
	1317, 825, 824, 2485, 2726, 108, 1175, 2721, 1047, 1174,
	2717, 1049, 403, 2093, 2711, 2784, 2328, 2329, 1175, 407,
	1175, 2724, 1954, 1015, 1954, 1175, 1952, 2177, 1910, 2793,
	2790, 103, 2531, 104, 928, 1319, 2779, 2761, 1318, 822,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1482, 1596,
	1088, 73, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 2122, 1107, 1110, 1110, 1110,
	1116, 1110, 1110, 1116, 1110, 1116, 1125, 1126, 1127, 1128,
	1129, 1130, 2284, 1140, 1874, 415, 2163, 1665, 2571, 1572,
	927, 1687, 73, 1582, 79, 1048, 935, 79, 978, 2432,
	79, 79, 127, 127, 127, 79, 2019, 1148, 2472, 1913,
	2626, 2023, 2626, 2018, 1089, 2016, 433, 2414, 651, 980,
	2021, 987, 1297, 399, 2536, 117, 880, 2434, 2147, 1315,
	2597, 1134, 2530, 2020, 961, 404, 938, 1861, 404, 109,
	966, 628, 1902, 404, 2723, 2725, 628, 1846, 2022, 2024,
	404, 2774, 1313, 1314, 933, 836, 1517, 1519, 400, 100,
	2541, 2338, 460, 924, 1169, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 2339, 1903, 1934,
	934, 1931, 930, 1915, 2387, 1914, 1666, 1143, 1254, 1929,
	1252, 1965, 881, 1239, 1818, 976, 1817, 1846, 2389, 1628,
	1846, 1000, 1816, 818, 1627, 984, 828, 368, 2203, 1846,
	2342, 1019, 2195, 1846, 1761, 1933, 931, 932, 1050, 1051,
	1932, 1160, 1833, 1825, 1721, 1709, 1161, 1111, 1113, 1115,
	1117, 1119, 1121, 1122, 1124, 1694, 1849, 1112, 1114, 467,
	1118, 1120, 1758, 1123, 1518, 923, 1371, 1168, 1153, 1146,
	1845, 111, 110, 1018, 1151, 846, 1960, 1952, 2534, 1537,
	1028, 1957, 1173, 1038, 1956, 1959, 2112, 1038, 1235, 972,
	1904, 1905, 2157, 1528, 2421, 2388, 1294, 1091, 1364, 2670,
	2671, 1170, 2772, 2667, 2668, 2773, 2556, 2771, 1016, 2337,
	1106, 971, 967, 968, 969, 970, 973, 974, 975, 977,
	1845, 2568, 2567, 1845, 1969, 444, 2353, 1952, 2422, 651,
	1971, 1175, 1845, 1248, 1953, 1954, 1845, 447, 447, 1964,
	2343, 1492, 444, 1961, 852, 2113, 127, 1011, 872, 127,
	1267, 2764, 2745, 2763, 447, 447, 2059, 127, 2058, 1050,
	1051, 1304, 1166, 888, 1247, 1285, 127, 127, 127, 127,
	1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1028, 1270, 1635, 1038, 829, 2037, 447, 1050, 1051, 1480,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1027, 1026,
	1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028,
	835, 2777, 1038, 1292, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1028, 444, 859, 1038, 1031, 1032, 1033, 1034, 1035,
	1028, 2712, 1241, 1038, 447, 447, 447, 2701, 851, 651,
	2100, 1234, 874, 1399, 1307, 1036, 1037, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1028, 1645, 1341, 1038, 1397, 1398,
	1396, 2315, 1286, 1325, 2309, 1480, 1756, 1774, 1755, 447,
	1010, 1009, 80, 1006, 447, 447, 1288, 2781, 1289, 1636,
	2594, 1369, 1370, 1010, 1009, 1249, 1010, 1009, 1011, 2601,
	2714, 1256, 1757, 2593, 1271, 127, 1009, 127, 1010, 1009,
	651, 1011, 1347, 459, 1011, 2641, 1280, 1281, 1282, 1283,
	1274, 1275, 81, 1011, 96, 2640, 1011, 2679, 127, 2678,
	860, 1362, 996, 1395, 1015, 997, 2595, 838, 839, 840,
	841, 842, 843, 844, 1355, 1382, 1384, 1385, 1299, 1300,
	80, 1383, 1302, 1010, 1009, 1010, 1009, 1010, 1009, 1890,
	1389, 2640, 2576, 1390, 2039, 2785, 1010, 1009, 1305, 95,
	2429, 1011, 2428, 1011, 2532, 1011, 1010, 1009, 1273, 2427,
	651, 990, 1419, 1420, 1011, 2426, 1321, 1324, 2420, 1320,
	1010, 1009, 2275, 1092, 1011, 1706, 1707, 1708, 1290, 2274,
	1393, 1889, 611, 612, 1416, 1373, 1417, 94, 1011, 1986,
	1887, 1765, 1089, 542, 541, 544, 545, 546, 547, 2786,
	2533, 1868, 543, 548, 919, 1354, 1394, 1342, 918, 1374,
	1345, 1388, 1375, 1831, 2691, 1832, 892, 1091, 1323, 2690,
	2652, 1511, 2650, 2607, 2528, 1520, 651, 651, 1140, 1465,
	1468, 1359, 1140, 127, 2527, 1458, 2484, 1481, 2436, 891,
	2404, 127, 2365, 127, 2312, 2311, 2310, 2272, 127, 127,
	991, 1386, 127, 127, 127, 2168, 1433, 2105, 1346, 1885,
	1437, 1655, 1301, 1272, 1500, 1503, 1504, 1505, 1501, 2677,
	1502, 1506, 651, 651, 2062, 2063, 1523, 2676, 1270, 2538,
	1525, 2482, 2453, 1089, 628, 1849, 2447, 2335, 2206, 2191,
	1541, 2187, 2179, 1390, 644, 2149, 1027, 1026, 1036, 1037,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 2133, 2132,
	1038, 2131, 1920, 1507, 1919, 1379, 1380, 1649, 1633, 1632,
	1422, 1418, 1516, 1298, 1430, 1143, 1295, 1291, 1264, 1263,
	1262, 1261, 1143, 1439, 1440, 1250, 1143, 1244, 1243, 1242,
	127, 1240, 1543, 1625, 1450, 914, 848, 1521, 1454, 410,
	127, 408, 127, 127, 447, 447, 447, 2378, 2704, 127,
	1255, 1542, 2262, 2697, 1477, 2614, 991, 2262, 2612, 2262,
	2610, 991, 467, 958, 1116, 2446, 1561, 2262, 2486, 2378,
	2478, 1623, 1624, 1530, 2378, 2394, 127, 127, 127, 2398,
	1535, 1529, 2397, 1526, 2378, 991, 2128, 1544, 1091, 1016,
	1551, 2106, 1554, 1463, 1464, 924, 96, 1235, 2378, 2377,
	2445, 127, 1821, 127, 2262, 2261, 1651, 651, 2243, 991,
	2662, 651, 1693, 991, 2120, 2119, 1568, 2116, 2117, 2057,
	1599, 1600, 1601, 1602, 1595, 1617, 2197, 1821, 2116, 2115,
	1821, 1691, 1456, 651, 1719, 991, 651, 1517, 1519, 1495,
	991, 1668, 1667, 1456, 1652, 1456, 991, 1172, 1171, 1149,
	1149, 2619, 1583, 1584, 1585, 1586, 1603, 1604, 2198, 1495,
	1710, 2043, 1540, 1391, 2057, 1616, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1494, 1657, 1389, 2198, 84, 1390, 2057, 963, 1027,
	1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1028, 2237, 1522, 1038, 1148, 1150, 1150, 1152, 1148, 1637,
	1366, 1631, 962, 921, 1643, 922, 922, 2129, 467, 1650,
	1495, 1656, 2118, 1647, 2071, 1518, 1945, 1835, 1531, 1719,
	1663, 1779, 1605, 1778, 1303, 1143, 1630, 1367, 986, 1719,
	1344, 1310, 1253, 1251, 1471, 1393, 924, 1154, 639, 81,
	1234, 2634, 1670, 1483, 1542, 1673, 2611, 2070, 2452, 2450,
	418, 1365, 1787, 1789, 2277, 1569, 1140, 1140, 1140, 1140,
	1140, 1394, 2249, 1690, 1598, 2099, 1698, 1594, 1715, 2062,
	2063, 1607, 1511, 1839, 1812, 928, 127, 127, 127, 127,
	127, 1696, 1697, 1140, 1614, 1589, 1588, 1236, 127, 1711,
	911, 1646, 127, 2755, 1677, 2753, 127, 2736, 1705, 1793,
	81, 2127, 2065, 127, 1792, 1500, 1503, 1504, 1505, 1501,
	2043, 1502, 1506, 1891, 1788, 2068, 1258, 964, 449, 925,
	920, 1803, 1805, 1801, 1504, 1505, 1804, 651, 1802, 1749,
	1815, 1822, 2067, 1800, 1458, 1799, 507, 508, 2673, 2631,
	628, 1974, 1695, 1725, 1727, 1377, 2661, 2240, 1823, 1703,
	1824, 1004, 1005, 1000, 1737, 1738, 1739, 1740, 1702, 2368,
	1143, 1143, 1143, 1143, 1143, 2334, 2265, 1807, 2186, 80,
	2185, 1848, 1850, 1851, 1773, 1814, 1143, 2104, 467, 2103,
	1002, 1843, 1795, 1796, 2095, 1798, 1794, 1143, 651, 1797,
	2543, 1806, 2546, 2606, 2605, 1819, 2440, 447, 1836, 2651,
	2438, 2524, 2523, 409, 1431, 1432, 1923, 2423, 2424, 993,
	1878, 127, 447, 1167, 444, 1442, 1443, 1444, 1445, 909,
	1160, 994, 1925, 1826, 1247, 893, 890, 447, 1455, 1457,
	889, 1893, 1834, 849, 2686, 1462, 2457, 2456, 2235, 1917,
	1369, 1370, 1750, 1844, 1847, 2344, 1654, 447, 1610, 651,
	2317, 1257, 80, 2663, 2599, 447, 2442, 2318, 1894, 1918,
	1642, 1838, 1004, 1005, 2685, 96, 1775, 1360, 579, 1235,
	1238, 982, 983, 1701, 651, 651, 2684, 1886, 2683, 2401,
	127, 1700, 1676, 1888, 875, 504, 2654, 1995, 2653, 2603,
	651, 2547, 2465, 2461, 505, 1972, 1973, 84, 2460, 1908,
	2347, 1821, 1896, 1897, 1898, 2757, 2756, 651, 2166, 1941,
	1939, 1979, 1938, 1762, 1089, 1759, 1674, 1287, 1007, 1921,
	1869, 1870, 2756, 1389, 2757, 2475, 1390, 1876, 1930, 2102,
	1712, 1713, 1714, 1363, 639, 1928, 456, 1883, 458, 2503,
	52, 2505, 19, 2504, 18, 2506, 20, 2048, 80, 86,
	1877, 1944, 1879, 1880, 1881, 1882, 1922, 2507, 21, 1949,
	635, 2502, 15, 55, 647, 1947, 1958, 1963, 651, 1,
	651, 1664, 2073, 467, 2501, 14, 1327, 2077, 2078, 2079,
	1981, 467, 2044, 2297, 837, 1980, 2296, 2036, 1985, 1362,
	1793, 1950, 2303, 651, 1989, 1792, 1955, 2134, 1966, 1967,
	2495, 10, 1970, 2518, 34, 1766, 1767, 1768, 2516, 33,
	2049, 2515, 32, 2137, 651, 2056, 651, 1906, 651, 2313,
	651, 1245, 1842, 2412, 2026, 2047, 2025, 832, 2076, 2514,
	28, 2513, 27, 1648, 1615, 1979, 2081, 2512, 26, 915,
	1996, 1936, 2604, 1999, 2000, 2001, 2542, 2083, 2004, 1942,
	2072, 2510, 23, 2051, 2544, 2097, 2509, 22, 2098, 2511,
	24, 2066, 2500, 13, 2437, 2125, 2126, 2497, 12, 2496,
	11, 2319, 127, 2094, 2074, 2096, 2281, 444, 2494, 9,
	2280, 1900, 1899, 910, 1308, 2144, 1948, 1951, 1626, 2088,
	447, 1686, 2554, 1675, 1678, 127, 447, 2130, 2087, 965,
	1692, 1555, 1545, 641, 92, 1634, 858, 376, 1552, 1857,
	127, 2545, 447, 912, 651, 447, 1856, 1866, 1566, 447,
	447, 1855, 447, 2151, 1854, 2540, 1858, 1180, 1178, 2146,
	1179, 1177, 1182, 1181, 380, 1162, 2586, 2205, 1008, 651,
	102, 56, 2336, 127, 651, 1962, 452, 453, 97, 105,
	382, 651, 651, 1603, 1046, 1604, 1699, 1717, 2175, 1827,
	2038, 626, 1720, 627, 619, 988, 2566, 1722, 1723, 2616,
	2635, 998, 1728, 1729, 1730, 1731, 1732, 1733, 1924, 2559,
	1736, 1772, 1105, 1478, 525, 1741, 1742, 1743, 1744, 2199,
	1746, 1747, 1748, 1810, 2352, 2561, 2229, 1751, 1752, 1753,
	1754, 2196, 2170, 2169, 2176, 1381, 1760, 2082, 540, 1763,
	1764, 2190, 539, 538, 1769, 1770, 535, 536, 2627, 1641,
	1776, 2109, 1777, 1372, 1784, 1780, 1781, 1020, 1782, 1783,
	2121, 523, 514, 1138, 127, 1131, 2152, 1488, 2107, 2108,
	1653, 1499, 1497, 1496, 1259, 2111, 615, 1808, 1809, 1983,
	2064, 651, 2114, 2060, 1509, 1137, 1141, 70, 651, 651,
	651, 873, 1793, 398, 2230, 2470, 1235, 1792, 651, 38,
	457, 509, 2244, 25, 17, 2257, 2258, 2259, 2154, 882,
	651, 16, 1679, 830, 42, 44, 1895, 80, 1611, 2255,
	2585, 2027, 2028, 2719, 2029, 2030, 896, 2268, 2031, 2236,
	2214, 2743, 2638, 31, 30, 2092, 2156, 29, 127, 2160,
	2508, 2040, 2041, 2164, 2165, 2245, 2167, 2517, 2499, 2498,
	2706, 2705, 4, 979, 71, 35, 2293, 2294, 2295, 2256,
	637, 2, 0, 0, 2260, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 2075, 447, 0, 2278,
	0, 0, 0, 2269, 2192, 0, 0, 0, 1140, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 2330, 2331,
	0, 0, 2292, 0, 0, 0, 651, 0, 127, 0,
	0, 0, 2332, 0, 651, 0, 0, 0, 0, 0,
	0, 0, 2101, 0, 0, 0, 0, 2345, 2048, 2349,
	2350, 2048, 2373, 2321, 2320, 1979, 2348, 2322, 0, 2340,
	2333, 2094, 2174, 0, 2073, 2325, 2326, 0, 0, 1842,
	0, 0, 2181, 2183, 651, 2232, 0, 0, 0, 0,
	651, 0, 2174, 0, 1091, 127, 2341, 127, 0, 0,
	0, 0, 0, 651, 2246, 2247, 0, 2376, 2248, 0,
	2400, 2250, 2402, 2370, 0, 0, 2153, 1984, 651, 1091,
	0, 0, 1143, 1992, 2372, 2271, 0, 2273, 2369, 0,
	0, 2399, 0, 2002, 2003, 0, 2047, 2393, 2270, 2047,
	0, 0, 2380, 0, 2009, 0, 0, 0, 2013, 2390,
	635, 1603, 2379, 2391, 2392, 635, 1163, 2375, 2385, 0,
	0, 0, 0, 2403, 0, 2458, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 2201, 2381, 0, 0, 467,
	651, 0, 0, 2415, 2425, 0, 2050, 0, 0, 2430,
	0, 0, 2048, 2433, 80, 0, 0, 0, 0, 2443,
	0, 2324, 0, 0, 2451, 2448, 2449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 651,
	2455, 2463, 2354, 80, 1142, 2226, 2227, 2228, 2464, 0,
	0, 2488, 0, 2462, 0, 0, 0, 0, 0, 0,
	0, 2481, 0, 0, 2476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2483, 2480, 2477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 0,
	2047, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 0, 447, 0, 0, 127, 0, 0, 0,
	0, 651, 0, 651, 0, 0, 0, 2174, 0, 0,
	2395, 0, 2396, 0, 2550, 0, 2552, 0, 0, 0,
	2548, 0, 0, 2564, 2549, 616, 0, 2174, 2551, 640,
	2581, 0, 0, 819, 2565, 0, 127, 0, 2569, 0,
	0, 0, 2574, 0, 0, 0, 0, 831, 0, 0,
	1793, 0, 0, 80, 0, 1792, 0, 1237, 845, 0,
	1570, 1571, 0, 1576, 1577, 1578, 1579, 1580, 0, 0,
	0, 0, 651, 0, 0, 0, 0, 0, 0, 0,
	1143, 1590, 1591, 1592, 0, 0, 0, 0, 0, 2200,
	467, 0, 467, 2590, 0, 0, 0, 0, 2092, 0,
	0, 0, 0, 0, 0, 512, 0, 651, 0, 651,
	0, 2602, 0, 2092, 2600, 0, 0, 2620, 0, 0,
	0, 0, 0, 2210, 2356, 2357, 2358, 2359, 0, 0,
	0, 0, 2363, 0, 2219, 2220, 2366, 2367, 2630, 0,
	2225, 0, 0, 0, 2609, 2481, 0, 0, 0, 0,
	2657, 2645, 2659, 0, 0, 0, 0, 2238, 2239, 0,
	2241, 0, 651, 2242, 2665, 926, 2666, 1328, 0, 0,
	2656, 0, 80, 2660, 0, 2658, 0, 2675, 80, 2664,
	0, 0, 2682, 2254, 0, 651, 2689, 0, 0, 0,
	0, 2672, 0, 444, 1995, 0, 2680, 651, 0, 0,
	0, 2695, 2674, 0, 0, 0, 447, 0, 2700, 2696,
	80, 0, 0, 651, 0, 80, 2560, 2563, 2687, 0,
	2713, 1091, 2710, 651, 2709, 2699, 0, 0, 647, 2708,
	0, 2707, 0, 0, 0, 2716, 0, 2730, 0, 0,
	2729, 0, 80, 0, 2732, 80, 80, 2737, 0, 0,
	80, 0, 2738, 0, 2689, 2740, 0, 647, 2746, 0,
	0, 0, 2750, 0, 0, 0, 444, 0, 0, 2752,
	80, 2754, 0, 80, 2749, 2582, 2583, 2718, 2689, 447,
	2765, 2767, 0, 2762, 0, 0, 2092, 0, 2092, 80,
	2775, 80, 0, 0, 0, 80, 0, 2689, 1421, 2689,
	0, 0, 0, 847, 0, 2780, 0, 0, 0, 80,
	0, 0, 80, 0, 0, 0, 0, 2689, 0, 80,
	0, 0, 2789, 80, 0, 0, 0, 2689, 0, 0,
	0, 2689, 0, 0, 0, 2360, 2361, 2362, 0, 2364,
	0, 0, 0, 0, 0, 0, 635, 917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2553,
	0, 0, 1990, 1991, 1484, 1485, 2382, 2383, 2384, 1997,
	1998, 991, 0, 0, 0, 2563, 0, 0, 0, 0,
	0, 2005, 2006, 2007, 2008, 0, 2010, 2011, 2012, 0,
	0, 1001, 0, 635, 0, 0, 2681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 0,
	647, 647, 0, 0, 0, 0, 0, 1027, 1026, 1036,
	1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 0,
	0, 1038, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 395, 0, 0, 0, 0, 2092, 125, 1871,
	1872, 1873, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2466, 2467, 2468, 2469, 0,
	0, 466, 0, 0, 0, 2473, 2474, 0, 0, 513,
	2234, 0, 618, 636, 0, 0, 125, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2766, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2224, 125, 0, 0, 0, 2233,
	0, 0, 0, 0, 0, 0, 1202, 1027, 1026, 1036,
	1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 0,
	0, 1038, 0, 0, 0, 0, 1133, 0, 1145, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 2646, 1027, 1026, 1036, 1037,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 0, 2570,
	1038, 1662, 0, 0, 1662, 0, 2575, 0, 0, 2727,
	929, 936, 937, 939, 940, 941, 942, 943, 0, 945,
	946, 947, 0, 950, 0, 953, 954, 955, 956, 957,
	647, 1027, 1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1028, 0, 2202, 1038, 0, 1189, 0, 0,
	0, 0, 2204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2207, 2208, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 2768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2613, 0, 0, 0, 0, 1203, 1423,
	1428, 1429, 0, 0, 0, 2621, 1434, 1435, 1436, 0,
	1438, 0, 0, 1441, 0, 0, 0, 0, 1446, 1447,
	1448, 1449, 0, 1451, 1452, 1453, 0, 0, 0, 0,
	0, 1459, 1460, 1461, 0, 0, 0, 1467, 1470, 0,
	1475, 1476, 1022, 0, 1025, 0, 0, 0, 0, 0,
	0, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 0, 1023,
	1024, 1021, 0, 635, 0, 1486, 0, 1489, 1490, 1027,
	1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1028, 2110, 0, 1038, 0, 0, 0, 0, 0, 2223,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	616, 0, 0, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2222, 0, 647, 0, 0, 0, 0,
	1276, 1277, 1278, 1279, 0, 0, 0, 1216, 1219, 1220,
	1221, 1222, 1223, 1224, 125, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 0, 1204, 1205, 1206, 1207, 1183, 1187,
	1217, 1184, 1190, 1186, 1188, 1185, 0, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1892, 0, 1202, 0,
	0, 0, 0, 0, 0, 466, 1027, 1026, 1036, 1037,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 0, 0,
	1038, 0, 0, 2221, 0, 0, 0, 2782, 2783, 0,
	1027, 1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1028, 2211, 2212, 1038, 2213, 0, 0, 2215, 0,
	2217, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 647, 1218, 0, 0, 0, 0, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 647, 1189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 1993, 0, 0, 2263, 2264,
	1027, 1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1028, 0, 0, 1038, 0, 0, 0, 0, 0,
	1203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 125, 125, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 635, 0, 647, 0, 2055, 0,
	1718, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 1735, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 1493, 0, 0,
	0, 0, 647, 0, 647, 0, 647, 0, 2091, 0,
	0, 0, 0, 1524, 0, 1771, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 1329, 1330, 1331, 0,
	1333, 1334, 0, 0, 1335, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 1337, 1338, 0, 1339, 1340, 1216,
	1219, 1220, 1221, 1222, 1223, 1224, 0, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 0, 1204, 1205, 1206, 1207,
	1183, 1187, 1217, 1184, 1190, 1186, 1188, 1185, 0, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 0, 0,
	0, 0, 2159, 0, 1609, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 1620, 0, 1621, 1622, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 2184, 0, 0,
	0, 0, 2189, 0, 0, 0, 0, 0, 0, 2193,
	2194, 0, 0, 0, 0, 0, 0, 36, 0, 72,
	39, 40, 1640, 0, 0, 0, 0, 125, 0, 1982,
	125, 59, 0, 0, 0, 0, 0, 78, 1269, 0,
	0, 41, 0, 0, 0, 917, 0, 125, 125, 125,
	125, 0, 0, 0, 0, 0, 1218, 1027, 1026, 1036,
	1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 0,
	0, 1038, 0, 0, 0, 0, 0, 0, 0, 81,
	1027, 1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1028, 0, 0, 1038, 0, 635, 0, 0, 0,
	0, 0, 0, 2519, 0, 0, 2742, 2745, 2741, 2252,
	2033, 0, 0, 0, 0, 0, 2252, 2252, 2252, 0,
	0, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 466, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 1027, 1026, 1036, 1037, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1028, 0, 0, 1038,
	0, 0, 57, 58, 647, 2521, 0, 0, 0, 0,
	0, 0, 647, 2032, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 1427, 1427, 1427, 0, 0, 0, 1427,
	1427, 1427, 1427, 1427, 1427, 0, 0, 1427, 0, 0,
	0, 0, 1427, 1427, 1427, 1427, 68, 1427, 1427, 1427,
	0, 0, 2374, 0, 0, 1427, 1427, 1427, 2252, 0,
	0, 1427, 1427, 0, 1427, 1427, 0, 0, 1669, 636,
	0, 2091, 0, 0, 2522, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 2091, 0, 0, 1427,
	1427, 1427, 1427, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 466, 0, 0, 0, 1716, 125,
	125, 0, 0, 125, 1527, 1269, 636, 0, 1027, 1026,
	1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028,
	1269, 0, 1038, 0, 0, 1916, 1027, 1026, 1036, 1037,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028, 2454, 0,
	1038, 0, 0, 0, 36, 37, 72, 39, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 73, 0, 78, 0, 0, 0, 41, 63,
	64, 0, 0, 0, 0, 60, 0, 2479, 1027, 1026,
	1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1028,
	0, 125, 1038, 0, 1975, 0, 0, 0, 0, 0,
	0, 125, 50, 125, 125, 36, 81, 72, 39, 40,
	125, 79, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 41,
	0, 0, 0, 0, 0, 0, 0, 1638, 1639, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 466, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 635, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2519, 0, 0, 0, 0, 2791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	647, 0, 0, 1269, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2520, 0, 0, 2615, 0, 2618, 0, 57,
	58, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 1427, 47, 66, 0, 67, 0,
	0, 0, 1427, 0, 0, 0, 2124, 0, 0, 0,
	0, 1427, 1427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1427, 68, 0, 0, 1427, 0, 0, 2150,
	2091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 2521, 2155, 0, 0, 0, 0, 1427,
	0, 51, 75, 2252, 53, 54, 61, 66, 62, 67,
	0, 0, 0, 0, 0, 647, 636, 125, 125, 125,
	125, 125, 0, 0, 0, 0, 0, 2188, 0, 466,
	0, 2618, 0, 125, 68, 0, 36, 466, 72, 39,
	40, 2702, 1427, 0, 125, 0, 0, 0, 0, 0,
	59, 0, 636, 0, 0, 0, 78, 0, 0, 0,
	41, 0, 2522, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2519, 0, 0, 0, 0, 2787, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2520, 0, 0, 0, 0, 0, 0,
	0, 0, 2279, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 79,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 1427, 0, 41, 0, 0, 0, 0, 0,
	0, 1427, 0, 1269, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 2519, 0, 0, 0,
	0, 2776, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2522, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 57, 58, 0, 2521, 498,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 66, 81, 67, 0, 0, 0, 0, 0,
	2178, 125, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 2519, 0, 68,
	79, 36, 2759, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 2522, 75, 513,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2520, 0,
	0, 0, 0, 81, 2747, 2171, 0, 1175, 0, 2173,
	0, 0, 0, 0, 49, 77, 76, 0, 473, 0,
	2577, 47, 0, 0, 0, 0, 0, 2519, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 57, 58, 0, 2521,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 479,
	0, 0, 0, 66, 0, 67, 0, 0, 2520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	68, 47, 0, 0, 79, 0, 0, 0, 0, 125,
	0, 0, 477, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2522, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2521,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2522, 75,
	0, 53, 54, 61, 0, 62, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 466, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	474, 480, 481, 485, 486, 495, 494, 493, 496, 497,
	500, 499, 501, 475, 476, 478, 482, 483, 484, 487,
	488, 491, 489, 490, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 0, 0, 0, 469, 470, 471, 472, 474,
	480, 481, 485, 486, 495, 494, 493, 496, 497, 500,
	499, 501, 475, 476, 478, 482, 483, 484, 487, 488,
	491, 489, 490, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 125, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 636, 0, 2584,
	0, 0, 0, 0, 0, 0, 0, 125, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 2587, 2588, 2589, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 775, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 800, 730, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	0, 0, 0, 0, 650, 0, 1549, 1550, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	1837, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	720, 204, 360, 796, 717, 716, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 817, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 0, 0, 650,
	0, 1549, 1550, 0, 0, 0, 0, 0, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 2052, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 800, 730, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	81, 0, 991, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	0, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	720, 204, 360, 796, 717, 716, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 2053, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 0, 0, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 2351,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 775, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 800, 730, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	0, 0, 0, 0, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	0, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 1988, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	720, 204, 360, 796, 717, 716, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 817, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 0, 0, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 1978,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 775, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 800, 730, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	0, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 1528, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	720, 204, 360, 796, 717, 716, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 817, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 1387,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 775, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 800, 730, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	0, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	720, 204, 360, 796, 717, 716, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 817, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 775, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 1560, 1564, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	0, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	1563, 204, 360, 796, 717, 716, 1558, 0, 1559, 192,
	214, 649, 128, 142, 1556, 1562, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 817, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 799, 775, 330, 722, 802, 685, 708, 815,
	711, 714, 756, 668, 735, 256, 705, 669, 0, 689,
	658, 698, 659, 686, 724, 176, 684, 777, 738, 801,
	213, 751, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 800, 730, 0, 809, 216, 0, 747, 810, 317,
	240, 0, 0, 726, 786, 733, 773, 721, 758, 677,
	746, 804, 706, 753, 805, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	750, 798, 701, 752, 755, 656, 749, 0, 663, 670,
	814, 793, 692, 693, 694, 0, 0, 0, 0, 0,
	0, 0, 725, 734, 767, 718, 349, 267, 284, 305,
	713, 275, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 690, 0, 744, 0, 0, 0, 671, 664, 0,
	0, 723, 0, 0, 0, 676, 655, 691, 769, 0,
	653, 241, 144, 774, 792, 720, 204, 360, 796, 717,
	716, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 766, 299, 703, 654, 778, 687, 699, 167,
	695, 291, 260, 348, 0, 741, 290, 217, 338, 762,
	797, 347, 709, 780, 357, 362, 0, 731, 674, 314,
	177, 0, 133, 0, 274, 172, 209, 719, 757, 688,
	164, 764, 745, 785, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 707, 0,
	0, 353, 715, 302, 301, 710, 199, 772, 748, 660,
	283, 760, 205, 132, 327, 365, 150, 211, 332, 652,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 700, 761, 771, 281, 304, 334, 152,
	321, 696, 697, 702, 768, 293, 779, 790, 803, 224,
	179, 182, 193, 200, 754, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	661, 0, 319, 351, 367, 154, 683, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 681, 682,
	679, 0, 680, 736, 737, 806, 807, 808, 770, 673,
	0, 787, 788, 0, 0, 0, 0, 0, 776, 794,
	795, 759, 816, 712, 678, 662, 665, 666, 667, 675,
	727, 728, 740, 743, 783, 782, 781, 784, 789, 812,
	811, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 131, 140, 215, 817, 282, 185,
	352, 657, 174, 0, 729, 732, 742, 765, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 763,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 791, 799, 775, 330,
	722, 802, 685, 708, 815, 711, 714, 756, 668, 735,
	256, 705, 669, 0, 689, 658, 698, 659, 686, 724,
	176, 684, 777, 738, 801, 213, 751, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 800, 730, 0, 809,
	216, 0, 747, 810, 317, 240, 0, 0, 726, 786,
	733, 773, 721, 758, 677, 746, 804, 706, 753, 805,
	0, 0, 0, 0, 650, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 750, 798, 701, 752, 755,
	656, 749, 0, 663, 670, 814, 793, 692, 693, 694,
	0, 0, 0, 0, 0, 0, 0, 725, 734, 767,
	718, 349, 267, 284, 305, 713, 275, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 690, 0, 744, 0,
	0, 0, 671, 664, 0, 0, 723, 0, 0, 0,
	676, 655, 691, 769, 0, 653, 241, 144, 774, 792,
	720, 204, 360, 796, 717, 716, 277, 0, 324, 192,
	214, 649, 128, 142, 645, 191, 252, 766, 299, 703,
	654, 778, 687, 699, 167, 695, 291, 260, 348, 0,
	741, 290, 217, 338, 762, 797, 347, 709, 780, 357,
	362, 0, 731, 674, 314, 177, 0, 133, 0, 274,
	172, 209, 719, 757, 688, 164, 764, 745, 785, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 707, 0, 0, 353, 715, 302, 301,
	710, 199, 772, 748, 660, 283, 760, 205, 132, 327,
	365, 150, 211, 332, 652, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 700, 761,
	771, 281, 304, 334, 152, 321, 696, 697, 702, 768,
	293, 779, 790, 803, 224, 179, 182, 193, 200, 754,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 661, 0, 319, 351, 367,
	154, 683, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 681, 682, 679, 0, 680, 736, 737,
	806, 807, 808, 770, 673, 0, 787, 788, 0, 0,
	0, 0, 0, 776, 794, 795, 759, 816, 712, 678,
	662, 665, 666, 667, 675, 727, 728, 740, 743, 783,
	782, 781, 784, 789, 812, 811, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 131,
	140, 215, 817, 282, 185, 352, 657, 174, 0, 729,
	732, 742, 765, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 763, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 791, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 520,
	0, 0, 0, 176, 517, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 595, 216, 0, 0, 498, 317, 240, 0,
	0, 0, 0, 582, 583, 0, 0, 0, 0, 0,
	0, 1538, 0, 81, 0, 0, 0, 518, 542, 541,
	544, 545, 546, 547, 0, 0, 473, 543, 548, 577,
	578, 1539, 0, 0, 515, 533, 0, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 530, 531, 0, 0, 0,
	0, 609, 0, 532, 0, 0, 527, 528, 529, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 585, 0, 0, 204, 360, 0, 0, 607, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 592, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 584, 0, 290, 217, 338, 0, 0, 347,
	0, 492, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 479, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 477,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 596, 608, 602, 604,
	603, 600, 601, 599, 598, 597, 610, 586, 587, 588,
	589, 590, 0, 0, 0, 593, 0, 605, 606, 0,
	0, 0, 0, 549, 550, 551, 552, 553, 557, 558,
	562, 563, 571, 570, 569, 572, 573, 575, 574, 576,
	554, 555, 556, 559, 560, 561, 564, 565, 568, 566,
	567, 591, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 36, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 176, 517, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 595, 216, 0, 0, 498,
	317, 240, 0, 0, 0, 0, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	518, 542, 541, 544, 545, 546, 547, 0, 0, 473,
	543, 548, 577, 578, 0, 0, 0, 515, 533, 0,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 530, 531,
	0, 0, 0, 0, 609, 0, 532, 0, 0, 527,
	528, 529, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 585, 0, 0, 204, 360, 0,
	0, 607, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 592, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 584, 0, 290, 217, 338,
	0, 0, 347, 0, 492, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 477, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 596,
	608, 602, 604, 603, 600, 601, 599, 598, 597, 610,
	586, 587, 588, 589, 590, 0, 0, 0, 593, 0,
	605, 606, 0, 0, 0, 0, 549, 550, 551, 552,
	553, 557, 558, 562, 563, 571, 570, 569, 572, 573,
	575, 574, 576, 554, 555, 556, 559, 560, 561, 564,
	565, 568, 566, 567, 591, 131, 140, 215, 79, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 176, 517,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 595, 216, 0,
	0, 498, 317, 240, 0, 0, 0, 0, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 518, 542, 541, 544, 545, 546, 547, 0,
	0, 473, 543, 548, 577, 578, 0, 0, 0, 515,
	533, 0, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	530, 531, 511, 0, 0, 0, 609, 0, 532, 0,
	0, 527, 528, 529, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 585, 0, 0, 204,
	360, 0, 0, 607, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 592, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 584, 0, 290,
	217, 338, 0, 0, 347, 0, 492, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 477, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 596, 608, 602, 604, 603, 600, 601, 599, 598,
	597, 610, 586, 587, 588, 589, 590, 0, 0, 0,
	593, 0, 605, 606, 0, 0, 0, 0, 549, 550,
	551, 552, 553, 557, 558, 562, 563, 571, 570, 569,
	572, 573, 575, 574, 576, 554, 555, 556, 559, 560,
	561, 564, 565, 568, 566, 567, 591, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	176, 517, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 595,
	216, 0, 0, 498, 317, 240, 0, 0, 0, 0,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 991, 0, 518, 542, 541, 544, 545, 546,
	547, 0, 0, 473, 543, 548, 577, 578, 0, 0,
	0, 515, 533, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 530, 531, 0, 0, 0, 0, 609, 0,
	532, 0, 0, 527, 528, 529, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 585, 0,
	0, 204, 360, 0, 0, 607, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 592,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 584,
	0, 290, 217, 338, 0, 0, 347, 0, 492, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 477, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 596, 608, 602, 604, 603, 600, 601,
	599, 598, 597, 610, 586, 587, 588, 589, 590, 0,
	0, 0, 593, 0, 605, 606, 0, 0, 0, 0,
	549, 550, 551, 552, 553, 557, 558, 562, 563, 571,
	570, 569, 572, 573, 575, 574, 576, 554, 555, 556,
	559, 560, 561, 564, 565, 568, 566, 567, 591, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 520, 0,
	0, 0, 176, 517, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 595, 216, 0, 0, 498, 317, 240, 0, 0,
	0, 0, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 518, 542, 541, 544,
	545, 546, 547, 0, 0, 473, 543, 548, 577, 578,
	0, 0, 0, 515, 533, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 530, 531, 1425, 0, 0, 0,
	609, 0, 532, 0, 0, 527, 528, 529, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	585, 0, 0, 204, 360, 0, 0, 607, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 592, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 584, 0, 290, 217, 338, 0, 0, 347, 0,
	492, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 477, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 596, 608, 602, 604, 603,
	600, 601, 599, 598, 597, 610, 586, 587, 588, 589,
	590, 0, 0, 0, 593, 0, 605, 606, 0, 0,
	0, 0, 549, 550, 551, 552, 553, 557, 558, 562,
	563, 571, 570, 569, 572, 573, 575, 574, 576, 554,
	555, 556, 559, 560, 561, 564, 565, 568, 566, 567,
	591, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 176, 517, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 595, 216, 0, 0, 498, 317, 240,
	0, 0, 0, 0, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 518, 542,
	1469, 544, 545, 546, 547, 0, 0, 473, 543, 548,
	577, 578, 0, 0, 0, 515, 533, 0, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 530, 531, 1425, 0,
	0, 0, 609, 0, 532, 0, 0, 527, 528, 529,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 585, 0, 0, 204, 360, 0, 0, 607,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 592, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 584, 0, 290, 217, 338, 0, 0,
	347, 0, 492, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	477, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 596, 608, 602,
	604, 603, 600, 601, 599, 598, 597, 610, 586, 587,
	588, 589, 590, 0, 0, 0, 593, 0, 605, 606,
	0, 0, 0, 0, 549, 550, 551, 552, 553, 557,
	558, 562, 563, 571, 570, 569, 572, 573, 575, 574,
	576, 554, 555, 556, 559, 560, 561, 564, 565, 568,
	566, 567, 591, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 176, 517, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 595, 216, 0, 0, 498,
	317, 240, 0, 0, 0, 0, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	518, 542, 1466, 544, 545, 546, 547, 0, 0, 473,
	543, 548, 577, 578, 0, 0, 0, 515, 533, 0,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 530, 531,
	1425, 0, 0, 0, 609, 0, 532, 0, 0, 527,
	528, 529, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 585, 0, 0, 204, 360, 0,
	0, 607, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 592, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 584, 0, 290, 217, 338,
	0, 0, 347, 0, 492, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 477, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 596,
	608, 602, 604, 603, 600, 601, 599, 598, 597, 610,
	586, 587, 588, 589, 590, 0, 0, 0, 593, 0,
	605, 606, 0, 0, 0, 0, 549, 550, 551, 552,
	553, 557, 558, 562, 563, 571, 570, 569, 572, 573,
	575, 574, 576, 554, 555, 556, 559, 560, 561, 564,
	565, 568, 566, 567, 591, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 176, 517,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 595, 216, 0,
	0, 498, 317, 240, 0, 0, 0, 0, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1306, 0, 518, 542, 541, 544, 545, 546, 547, 0,
	0, 473, 543, 548, 577, 578, 0, 0, 0, 515,
	533, 0, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	530, 531, 0, 0, 0, 0, 609, 0, 532, 0,
	0, 527, 528, 529, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 585, 0, 0, 204,
	360, 0, 0, 607, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 592, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 584, 0, 290,
	217, 338, 0, 0, 347, 0, 492, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 477, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 596, 608, 602, 604, 603, 600, 601, 599, 598,
	597, 610, 586, 587, 588, 589, 590, 0, 0, 0,
	593, 0, 605, 606, 0, 0, 0, 0, 549, 550,
	551, 552, 553, 557, 558, 562, 563, 571, 570, 569,
	572, 573, 575, 574, 576, 554, 555, 556, 559, 560,
	561, 564, 565, 568, 566, 567, 591, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	176, 517, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 595,
	216, 0, 0, 498, 317, 240, 0, 0, 0, 0,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 518, 542, 541, 544, 545, 546,
	547, 0, 0, 473, 543, 548, 577, 578, 0, 0,
	0, 515, 533, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 530, 531, 0, 0, 0, 0, 609, 0,
	532, 0, 0, 527, 528, 529, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 585, 0,
	0, 204, 360, 0, 0, 607, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 592,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 584,
	0, 290, 217, 338, 0, 0, 347, 0, 492, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 477, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 596, 608, 602, 604, 603, 600, 601,
	599, 598, 597, 610, 586, 587, 588, 589, 590, 0,
	0, 0, 593, 0, 605, 606, 0, 0, 0, 0,
	549, 550, 551, 552, 553, 557, 558, 562, 563, 571,
	570, 569, 572, 573, 575, 574, 576, 554, 555, 556,
	559, 560, 561, 564, 565, 568, 566, 567, 591, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 595, 216, 0, 0, 498, 317, 240, 0, 0,
	0, 0, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 518, 542, 541, 544,
	545, 546, 547, 0, 0, 473, 543, 548, 577, 578,
	0, 0, 0, 0, 533, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	609, 0, 532, 0, 0, 527, 528, 529, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	585, 0, 0, 204, 360, 0, 0, 607, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 592, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 584, 0, 290, 217, 338, 0, 0, 347, 0,
	492, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 477, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 596, 608, 602, 604, 603,
	600, 601, 599, 598, 597, 610, 586, 587, 588, 589,
	590, 1472, 1473, 1474, 593, 0, 605, 606, 0, 0,
	0, 0, 549, 550, 551, 552, 553, 557, 558, 562,
	563, 571, 570, 569, 572, 573, 575, 574, 576, 554,
	555, 556, 559, 560, 561, 564, 565, 568, 566, 567,
	591, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 595, 216, 0, 0, 498, 317, 240,
	0, 0, 0, 0, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 518, 542,
	541, 544, 545, 546, 547, 0, 0, 473, 543, 548,
	577, 578, 0, 0, 0, 0, 533, 0, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 609, 0, 532, 0, 0, 527, 528, 529,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 585, 0, 0, 204, 360, 0, 0, 607,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 592, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 584, 2769, 290, 217, 338, 0, 0,
	347, 0, 492, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	477, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 596, 608, 602,
	604, 603, 600, 601, 599, 598, 597, 610, 586, 587,
	588, 589, 590, 0, 0, 0, 593, 0, 605, 606,
	0, 0, 0, 0, 549, 550, 551, 552, 553, 557,
	558, 562, 563, 571, 570, 569, 572, 573, 575, 574,
	576, 554, 555, 556, 559, 560, 561, 564, 565, 568,
	566, 567, 591, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 595, 216, 0, 0, 498,
	317, 240, 0, 0, 0, 0, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 991, 0,
	518, 542, 541, 544, 545, 546, 547, 0, 0, 473,
	543, 548, 577, 578, 0, 0, 0, 0, 533, 0,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 530, 531,
	0, 0, 0, 0, 609, 0, 532, 0, 0, 527,
	528, 529, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 585, 0, 0, 204, 360, 0,
	0, 607, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 592, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 584, 0, 290, 217, 338,
	0, 0, 347, 0, 492, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 477, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 596,
	608, 602, 604, 603, 600, 601, 599, 598, 597, 610,
	586, 587, 588, 589, 590, 0, 0, 0, 593, 0,
	605, 606, 0, 0, 0, 0, 549, 550, 551, 552,
	553, 557, 558, 562, 563, 571, 570, 569, 572, 573,
	575, 574, 576, 554, 555, 556, 559, 560, 561, 564,
	565, 568, 566, 567, 591, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 595, 216, 0,
	0, 498, 317, 240, 0, 0, 0, 0, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 518, 542, 541, 544, 545, 546, 547, 0,
	0, 473, 543, 548, 577, 578, 0, 0, 0, 0,
	533, 0, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	530, 531, 0, 0, 0, 0, 609, 0, 532, 0,
	0, 527, 528, 529, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 585, 0, 0, 204,
	360, 0, 0, 607, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 592, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 584, 0, 290,
	217, 338, 0, 0, 347, 0, 492, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 477, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 596, 608, 602, 604, 603, 600, 601, 599, 598,
	597, 610, 586, 587, 588, 589, 590, 0, 0, 0,
	593, 0, 605, 606, 0, 0, 0, 0, 549, 550,
	551, 552, 553, 557, 558, 562, 563, 571, 570, 569,
	572, 573, 575, 574, 576, 554, 555, 556, 559, 560,
	561, 564, 565, 568, 566, 567, 591, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 1515, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 498, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 1519, 0, 0,
	0, 0, 0, 0, 126, 0, 468, 0, 0, 0,
	0, 0, 0, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 1518, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 492, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 477, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 470, 471, 472, 474, 480, 481, 485, 486, 495,
	494, 493, 496, 497, 500, 499, 501, 475, 476, 478,
	482, 483, 484, 487, 488, 491, 489, 490, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 498, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 1519,
	0, 0, 0, 0, 0, 0, 126, 0, 468, 0,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 1513, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 1518, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	492, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 477, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 470, 471, 472, 474, 480, 481, 485,
	486, 495, 494, 493, 496, 497, 500, 499, 501, 475,
	476, 478, 482, 483, 484, 487, 488, 491, 489, 490,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 1013,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 498, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1014, 0,
	1017, 0, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 1010, 1009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1011, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 492, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	477, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 474, 480,
	481, 485, 486, 495, 494, 493, 496, 497, 500, 499,
	501, 475, 476, 478, 482, 483, 484, 487, 488, 491,
	489, 490, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 498,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 468, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 492, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 477, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	474, 480, 481, 485, 486, 495, 494, 493, 496, 497,
	500, 499, 501, 475, 476, 478, 482, 483, 484, 487,
	488, 491, 489, 490, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 463, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 1813, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 498, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 468, 0, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 492, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 477, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 474, 480, 481, 485, 486, 495, 494, 493,
	496, 497, 500, 499, 501, 475, 476, 478, 482, 483,
	484, 487, 488, 491, 489, 490, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 498, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 468, 0, 0, 0,
	0, 0, 0, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 492, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 477, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 470, 471, 472, 474, 480, 481, 485, 486, 495,
	494, 493, 496, 497, 500, 499, 501, 475, 476, 478,
	482, 483, 484, 487, 488, 491, 489, 490, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 498, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1014, 0, 1017, 0,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	492, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 477, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 470, 471, 472, 474, 480, 481, 485,
	486, 495, 494, 493, 496, 497, 500, 499, 501, 475,
	476, 478, 482, 483, 484, 487, 488, 491, 489, 490,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 498, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 492, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	477, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 474, 480,
	481, 485, 486, 495, 494, 493, 496, 497, 500, 499,
	501, 475, 476, 478, 482, 483, 484, 487, 488, 491,
	489, 490, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 437, 330, 431, 442, 425,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	448, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	432, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 423, 426,
	0, 0, 0, 241, 144, 0, 0, 430, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 434, 299, 0, 0, 438, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 441, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 451, 304,
	334, 152, 321, 427, 428, 429, 435, 436, 439, 440,
	443, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 433, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 437, 330,
	431, 442, 425, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 432, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 423, 426, 0, 0, 0, 241, 144, 0, 0,
	430, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 434, 299, 0,
	0, 438, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 441, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 420, 304, 334, 152, 321, 427, 428, 429, 435,
	436, 439, 440, 443, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 433, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	1027, 1026, 1036, 1037, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1028, 0, 0, 1038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 2694, 0, 0,
	0, 0, 0, 0, 176, 2692, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 2693, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 36, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 1510, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 1144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 79,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 1165, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 1144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 0, 0, 0, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	0, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 281, 304, 334, 152,
	321, 0, 0, 0, 0, 293, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 2158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 1132, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 0, 0, 613, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 0, 0, 0, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	0, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 281, 304, 334, 152,
	321, 0, 0, 0, 0, 293, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 123, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 0, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 0, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 0, 0, 0, 0, 0, 167, 0, 291,
	260, 348, 0, 0, 290, 217, 338, 0, 0, 347,
	0, 0, 357, 362, 0, 0, 0, 314, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 302, 301, 0, 199, 0, 0, 0, 283, 0,
	205, 132, 327, 365, 150, 211, 332, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 281, 304, 334, 152, 321, 0,
	0, 0, 0, 293, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	319, 351, 367, 154, 0, 307, 333, 0, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 0, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 0, 0, 0, 0, 0, 167,
	0, 291, 260, 348, 0, 0, 290, 217, 338, 0,
	0, 347, 0, 0, 357, 362, 0, 0, 0, 314,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 302, 301, 0, 199, 0, 0, 0,
	283, 0, 205, 132, 327, 365, 150, 211, 332, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 281, 304, 334, 152,
	321, 0, 0, 0, 0, 293, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 633, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 629, 227, 0,
	0, 0, 319, 351, 367, 154, 0, 307, 333, 0,
	280, 155, 187, 180, 271, 634, 632, 623, 624, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 630, 631, 278, 0,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 0, 0, 0, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 0, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 281, 304,
	334, 152, 321, 0, 0, 0, 0, 293, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 1159, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 620, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 633, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 629, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 634,
	632, 623, 624, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 131, 140,
	215, 78, 282, 185, 352, 41, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	630, 631, 278, 81, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	0, 0, 0, 0, 0, 0, 0, 2519, 0, 0,
	0, 36, 2688, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 1840, 0, 0, 0, 0, 2520, 0,
	0, 0, 473, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 498,
	0, 47, 0, 0, 0, 0, 0, 2519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2521,
	0, 0, 0, 43, 74, 46, 45, 48, 2173, 0,
	1175, 0, 0, 66, 0, 67, 0, 473, 2520, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 492, 0, 0,
	68, 47, 2182, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 2522, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 479, 0, 492, 0, 57, 58, 2180, 2521,
	0, 0, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 477, 0, 0, 0, 479,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 2522, 75,
	0, 53, 54, 61, 0, 62, 73, 479, 0, 0,
	0, 0, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 492, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 469,
	470, 471, 472, 474, 480, 481, 485, 486, 495, 494,
	493, 496, 497, 500, 499, 501, 475, 476, 478, 482,
	483, 484, 487, 488, 491, 489, 490, 0, 0, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 469, 470, 471, 472,
	474, 480, 481, 485, 486, 495, 494, 493, 496, 497,
	500, 499, 501, 475, 476, 478, 482, 483, 484, 487,
	488, 491, 489, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 474, 480,
	481, 485, 486, 495, 494, 493, 496, 497, 500, 499,
	501, 475, 476, 478, 482, 483, 484, 487, 488, 491,
	489, 490, 391, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 474, 480, 481, 485, 486, 495, 494, 493,
	496, 497, 500, 499, 501, 475, 476, 478, 482, 483,
	484, 487, 488, 491, 489, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 474, 480,
	481, 485, 486, 495, 494, 493, 496, 497, 500, 499,
	501, 475, 476, 478, 482, 483, 484, 487, 488, 491,
	489, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 381, 389, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 379, 0, 0, 387, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 373, 374,
	0, 394, 0, 0, 0, 375, 377, 0, 371, 393,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386,
}

var yyPact = [...]int{
	4048, -1000, -317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1722, -1000, -1000, -1000, -1000,
	-1000, -1000, 1001, 307, -1000, 257, 273, 29419, 590, 33349,
	30403, -1000, -1000, -1000, 160, 511, 30403, 450, 457, 1199,
	1607, 1197, 29, -79, -88, 174, 23022, 22529, 0, -1000,
	1770, 1773, -1000, -1000, 540, 37, -1000, -1000, -1000, 20068,
	195, -1000, -1000, 1708, 1718, 1522, -1000, 13180, 540, 540,
	28927, 32371, -1000, 1768, 30403, 11702, -1000, 585, 30403, -165,
	396, 396, 329, 396, 396, 589, -1000, 796, -1000, -1000,
	-1000, -1000, 30403, 25975, 532, 29911, 532, 532, 532, 532,
	532, 532, 532, 30403, -1000, 650, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30403, 1194,
	1643, 842, 83, -1000, -1000, -1000, 922, -1000, 318, 317,
	315, 310, 64, 846, 1705, -1000, 1411, 1708, 1708, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 358, 571, 190, 195,
	775, -1000, 1640, 1636, 1085, 1635, 486, 1629, 1462, -55,
	-1000, 1193, 30403, -1000, -1000, 1053, 1049, 1494, 1377, 624,
	1493, -1000, -1000, 350, 476, 1447, 430, 1447, 1447, 1447,
	1447, 1447, -92, 1447, 1447, 1447, 73, 1447, 138, 1447,
	1447, 1447, 1447, 1447, 1222, -1000, -1000, -1000, 404, 1376,
	1407, 1491, 539, -1000, -1000, -1000, -1000, 1472, 1690, 588,
	-1000, -137, 1399, 21052, -1000, 1411, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1221, 1630, 957, 16132, 1570, -1000, -1000, 903,
	1747, -1000, 19576, 648, -1000, 16132, 3093, 1411, -1000, -1000,
	1411, -1000, -1000, -1000, 612, -1000, -1000, 18100, 18100, 18100,
	18100, 18100, 18100, 18100, 18100, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1411,
	1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411,
	1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411,
	1411, 1411, 1411, 1411, 1411, 1411, 1411, -1000, -1000, 1411,
	-1000, 12688, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411,
	1411, 1411, 1411, 1411, 16132, 1411, 1411, 1411, 1411, 1411,
	1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411,
	1411, 28435, 26467, 30403, 1369, 1368, -1000, -1000, 643, 1408,
	-121, 31879, -1000, -1000, -1000, -1000, 30895, 25483, 774, -1000,
	-1000, -1000, -1000, 1623, -1000, -1000, 642, -1000, 1722, -1000,
	-1000, 1308, 357, -1000, 3288, 32908, -1000, -1000, -1000, 1459,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29911, 1687,
	573, 1189, 853, 1187, 1186, 1185, 25975, 25975, 396, 1183,
	1404, 569, 1403, 567, 1209, 30403, 1667, 1490, 30403, 1179,
	1178, 1177, 1176, 25975, 25975, -1000, 11207, -1000, -1000, 842,
	-1000, 1109, 16132, 396, 396, 30403, 30403, 30403, 30403, -1000,
	-1000, 842, 842, 842, 842, 864, 1746, 864, -1000, 864,
	-1000, -1000, 16132, -1000, 18100, 24991, 684, -1000, -1000, -1000,
	1174, 354, -1000, -1000, -1000, -1000, -1000, -1000, 1171, 486,
	486, -1000, 1108, 486, 1395, -1000, 773, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 486,
	-1000, 15640, -315, -1000, -1000, 1402, -1000, 308, -1000, -1000,
	363, 363, 164, 25975, 25975, 25975, -1000, 1447, 29911, -1000,
	1447, 1447, 1447, -94, 1447, 1447, -1000, -1000, 1447, -1000,
	-1000, -1000, -1000, -1000, 1447, -1000, -1000, -1000, 1447, 1447,
	-1000, 1447, 1447, -1000, -1000, -1000, -1000, -1000, 25975, 363,
	154, 1401, 363, 25975, 25975, -1000, 59, 58, 57, 56,
	-1000, -1000, -1000, -1000, 54, 53, -1000, -1000, 1522, -1000,
	-1000, 195, -1000, -1000, 30403, -111, 21052, 1399, 1684, 9722,
	-1000, -1000, -1000, 1764, 700, 1422, -1000, -1000, 1398, -1000,
	966, 641, 1054, 1536, -1000, -1000, -1000, 30403, -1000, 16132,
	16132, 962, -1000, 21544, -1000, -1000, -1000, -1000, 9227, 752,
	18100, 954, 862, 18100, 18100, 18100, 18100, 18100, 18100, 18100,
	18100, 18100, 18100, 18100, 18100, 18100, 18100, 18100, 1032, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1169, -1000, 195,
	1040, 1040, 667, 667, 667, 667, 667, 667, 667, 23514,
	1681, 14164, 14164, 14164, 1681, 1221, 1221, 14164, 14164, 14164,
	14164, 14164, 14164, 1681, 1681, 14164, 1221, 1221, 1221, 1221,
	14164, 14164, 14164, 14164, 1681, 14164, 14164, 14164, 1681, 1221,
	1306, 1003, 12688, 14164, 14164, 14164, 1221, 16132, 16132, 15148,
	14656, 16624, 14164, 14164, 1681, 806, 1003, 30895, -1000, -1000,
	17608, -1000, -1000, -1000, -1000, -1000, 1221, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29911, 29911, 14164, 14164, 14164,
	14164, 741, 30403, -1000, 1381, 1489, -1000, -1000, -1000, 1682,
	24499, -1000, 19084, -1000, 1411, 741, 1365, 26467, 30403, -1000,
	-1000, 26467, 30403, 8732, 31387, 1389, -1000, -131, -119, -121,
	-1000, -1000, 659, -1000, -1000, -1000, 12195, -1000, 10217, 1708,
	1522, 6257, 10712, -1000, 32908, 1459, -1000, -66, -1000, -1000,
	-1000, 1427, -1000, 1427, 289, -26, 1427, 1427, 1427, 1427,
	1427, -24, -24, -24, -24, -25, -1000, -1000, -1000, -1000,
	-1000, 1458, 1457, -1000, 1427, 1427, 1427, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1439, 262, 1436, 1436,
	1436, 1436, 1436, 376, 376, -1000, 16132, 1444, -1000, 30403,
	-1000, 1664, -1000, 299, 1456, 1326, -1000, 161, 1256, 30403,
	-1000, 30403, 30403, 25975, 25975, 25975, 568, -1000, 30403, 1397,
	-1000, -1000, -1000, -1000, -1000, 1372, -1000, 1256, -1000, -1000,
	-1000, -1000, -1000, 1003, 1167, 1166, -1000, -1000, -1000, 881,
	-1000, -1000, -1000, -1000, 842, 30403, 30403, 30403, 1677, 842,
	1003, 792, 1464, 1411, 1221, -1000, -1000, 1165, -1000, 1395,
	1395, -1000, 1395, 486, 1040, 1395, -1000, 1304, 1659, 1107,
	30403, -1000, 21052, -58, -1000, -148, 27943, -1000, -1000, -1000,
	27943, -1000, 73, 177, -1000, 565, -1000, 1302, -1000, -1000,
	-1000, -1000, 1447, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 27943, 110, 153, 27943, 1372, 1745, -1000, -1000,
	-1000, -1000, 1703, -1000, 1681, 1221, 268, -1000, -1000, -1000,
	1411, 1273, 630, -1000, 1530, 957, 957, 16132, -1000, -1000,
	-1000, 10217, 1702, -1000, 1551, 1542, 1481, -1000, -1000, 752,
	918, -1000, -1000, 1012, -1000, -1000, -1000, -1000, 620, 1411,
	-1000, 3972, -1000, -1000, -1000, -1000, 954, 18100, 18100, 18100,
	792, 3972, 3920, 837, 763, 667, 813, 813, 663, 663,
	663, 663, 663, 804, 804, -1000, -1000, -1000, 1221, -1000,
	-1000, -1000, 14164, 1295, -1000, -1000, 1003, 619, 1295, 1295,
	14164, -181, -181, 1221, 1295, 1295, 1295, 1221, 1295, 14164,
	14164, 1295, -181, -181, -181, -181, 1295, 1295, 1295, 1295,
	14164, 1295, 1295, 1295, 14164, -1000, 16132, -1000, 1221, 1295,
	1295, 1295, -1000, 909, 979, 761, 1744, 1295, 733, 1742,
	1295, 1100, 18100, 18100, 18100, 1295, 1295, 14164, 882, -1000,
	16132, 1221, -1000, 2771, 1394, 1392, 1295, 1221, 1390, 1295,
	1295, 191, 1411, -1000, 10217, 26467, 26467, 26467, 26467, 26467,
	-1000, 1519, 1517, -1000, 1507, 1505, 1506, 21052, 1300, 1221,
	296, 24499, -1000, 1411, -1000, 20560, 622, 584, 578, 576,
	14164, 1729, 26467, 1320, -1000, 1320, -1000, 618, -1000, -1000,
	30895, -121, -130, -1000, -1000, 1389, -1000, 1061, -1000, -1000,
	1003, -1000, 617, 1630, 1681, 1388, 5762, -1000, -1000, -1000,
	-1000, 357, -1000, -1000, -1000, 1445, 32861, -1000, 1576, 685,
	694, 1133, 1568, -1000, -1000, 314, -68, -1000, -1000, 1046,
	-24, -24, 1427, 1427, 284, 1427, -1000, -24, -1000, -1000,
	-1000, 659, 1620, 659, 659, 659, 659, -24, 1105, 1105,
	-1000, -1000, -1000, -1000, 1035, -1000, 1439, -1000, 1026, -1000,
	-1000, -1000, -1000, -1000, -1000, 989, 1487, 29911, 195, 1675,
	-1000, 1734, -1000, -1000, 600, 80, 25975, 162, 293, 199,
	-1000, 564, -1000, 562, -1000, -1000, -1000, -1000, -1000, -1000,
	30403, 25975, -1000, -1000, 1729, 1162, 1160, -1000, -1000, -1000,
	864, 842, 1612, -1000, -1000, 18100, 25975, -1000, 311, -1000,
	-1000, -1000, -1000, 741, 572, -1000, -1000, -91, -1000, -1000,
	560, 615, 610, 558, -1000, 90, 25975, -1000, 29911, -1000,
	1741, 1739, 108, 1738, 25975, -1000, 42, 1536, -1000, 1387,
	-1000, 682, 632, 698, 381, 381, -1000, 736, 381, 730,
	-1000, 187, -1000, 9722, 9722, 1528, -1000, -1000, -1000, 30403,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8237,
	14164, -1000, 792, 3972, 3611, -1000, 18100, -1000, 1295, 14164,
	-181, 7742, -181, -181, 1295, -1000, 27451, -1000, -181, -181,
	-181, -181, -181, -181, 1295, 1295, -181, -1000, -1000, -1000,
	-1000, -181, -181, -181, -181, 1295, -181, -181, -181, 1221,
	1003, -1000, -1000, -1000, -1000, 323, 1032, 323, 18100, 18100,
	-1000, 18100, 18100, -1000, -1000, 18100, 3902, 3769, 3634, -218,
	-1000, 1400, 798, -1000, 16132, 970, -1000, -1000, 18100, 18100,
	-1000, -1000, -1000, -1000, 1484, 10217, 1411, 6752, -1000, 29911,
	1348, -1000, 770, 768, 1489, 1443, 1476, 1128, -1000, -1000,
	-1000, -1000, 1516, -1000, 1499, -1000, -1000, 1419, -1000, -1000,
	1385, 1411, 29911, 18100, 622, -1000, 1411, 1411, 1411, 1221,
	1722, 16132, 1320, -1000, -1000, 681, -1000, -1000, -142, -143,
	-1000, -1000, -1000, 9722, -1000, 6257, -1000, 6257, -1000, 22036,
	369, 1580, 371, -1000, 1133, -1000, -1000, 1133, -1000, -1000,
	-1000, 1437, -1000, 867, -1000, -1000, -1000, -1000, -1000, 18100,
	1760, -1000, 1574, -1000, 1572, 1103, -1000, -1000, 1251, 659,
	659, -24, -1000, -1000, 1427, -1000, 659, -1000, 724, -1000,
	-1000, -1000, -1000, 659, 1289, -1000, 1278, 1383, -1000, 1275,
	139, 30403, -1000, -1000, -1000, 1475, -1000, -1000, -1000, 1246,
	1378, -1000, 3288, 1159, 1157, 1156, -224, 228, -1000, 25975,
	125, 161, 415, 1143, 30403, 25975, -1000, -1000, -1000, -1000,
	-1000, 842, -1000, 18100, 3972, 1256, -1000, -1000, -24, 30403,
	-1000, 25975, 680, 26959, 25975, 107, 176, -1000, 25975, 25975,
	1737, 25975, 1372, 1101, 1481, 268, 4807, 1133, 625, -1000,
	-1000, 383, -1000, 4718, 1568, 1140, 33026, 32980, 29911, 1565,
	1563, 1139, 30403, 29911, -1000, -1000, 32946, 1137, 16132, -1000,
	29911, 29911, 607, -1000, -1000, -1000, 1345, 13180, -1000, -1000,
	1221, -1000, 18100, 3972, -181, -1000, -1000, -1000, -1000, 603,
	-1000, -1000, -181, -1000, -1000, 1136, -1000, -1000, -1000, -1000,
	-1000, -1000, -181, -181, -1000, -1000, -1000, -1000, -1000, -181,
	-1000, -1000, -1000, -1000, 1221, 1427, 1427, -1000, 1427, 1436,
	-1000, 1427, 3, 1427, 1, 1221, 1221, 3324, 3234, 3210,
	2965, 2771, 18100, 18100, 18100, 1411, -177, -1000, 1003, 16132,
	2920, 2881, -1000, 1650, 1325, 1362, -1000, -1000, 13672, 1221,
	1540, 1273, -1000, 20068, 1269, -1000, 1722, 10217, 16132, 16132,
	-1000, -1000, 16132, 1434, -1000, 16132, -1000, -1000, -1000, -1000,
	29911, 288, -1000, 16132, 1269, 1303, -1000, 29911, 29911, 29911,
	-1000, 1708, 1003, -1000, -1000, -1000, -1000, 5762, -1000, 1265,
	-1000, 1427, 1427, 1561, -1000, 685, -1000, -1000, -1000, 29911,
	-1000, 3972, -109, -1000, -1000, -1000, -1000, -1000, -1000, 659,
	-1000, -1000, -1000, -1000, -1000, -24, 1093, -24, 1024, -1000,
	1017, -1000, -1000, -268, 1426, -1000, 195, 30403, 173, 600,
	-1000, 3288, 3288, 3288, 116, 92, -1000, 886, -1000, -1000,
	-1000, 1092, 1091, 1090, 1256, 166, 883, 144, -1000, 1674,
	-1000, -1000, -1000, 3972, -78, -1000, 176, -1000, -1000, -1000,
	176, -1000, -1000, 152, 1372, 1372, 25975, 1372, -1000, -1000,
	-1000, 32946, 359, 3288, 3288, 1444, 685, 1560, 371, -1000,
	-1000, -1000, -1000, -1000, -1000, 1135, -1000, 668, -1000, 556,
	359, 32946, 1003, 710, 1658, 9722, 1727, 26467, -1000, -1000,
	-1000, 3972, -1000, 7247, -1000, 726, -1000, -1000, -1000, -1000,
	-1000, -1000, 298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18100, 18100, 18100, 18100, -1000, 2771, 2771, 2771, 18100,
	1221, 1088, 1003, 18100, 18100, 1554, -1000, 1411, -1000, -1000,
	1411, 184, -1000, 29911, 1708, -1000, 1003, 1003, 1003, 29911,
	1003, 1259, -1000, 1411, 18592, -1000, 21052, 1245, 1245, 1245,
	-1000, 647, 22036, 1655, 1655, -1000, 1133, -1000, 1235, -1000,
	-1000, 659, -1000, 659, 1242, 1239, -1000, 22036, -1000, 1700,
	-1000, 173, -1000, 1086, 230, 244, -1000, 225, 218, 210,
	200, 207, -1000, -1000, -1000, -1000, 405, 116, -1000, -51,
	1013, 729, 1616, 92, -1000, 1010, 1004, 997, 995, 201,
	-1000, -1000, -1000, -1000, 189, 161, -1000, 414, 1084, 1602,
	1597, 1673, 1673, 106, 1372, 1319, 1225, -1000, -1000, 1134,
	-1000, -1000, 1421, 1133, 1420, -1000, 1130, -1000, -1000, 29911,
	-1000, 359, 1648, 1647, 1411, -1000, 1724, 1717, 1320, 13180,
	-1000, -1000, 1722, 1716, -1000, -1000, 2771, 2771, 2771, 2771,
	-1000, -1000, -1000, 198, -1000, -1000, 2771, 2771, 1756, -1000,
	1362, 1411, -1000, 195, -1000, -1000, 1230, -1000, 29911, -1000,
	-1000, 622, -1000, -1000, -1000, 647, -1000, 1129, 736, 1082,
	-1000, -1000, -1000, -1000, 348, -1000, -1000, -1000, -1000, 1228,
	-1000, 290, 32875, -1000, -1000, -1000, -1000, -1000, -1000, 1606,
	1605, 294, -1000, 1080, 1070, -1000, 408, 1045, 654, -187,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 411, 1127, -1000, 142, -1000, -1000, 538, 1587, 1590,
	1715, -1000, 25975, -1000, -1000, 26467, -1000, -1000, 314, 314,
	22036, 1444, 22036, -1000, -1000, -1000, 18100, -1000, 706, -183,
	16132, 16132, 1727, -1000, 720, 16132, -1000, -1000, -1000, -1000,
	1221, 180, -237, -1000, -1000, 10217, 1362, 1221, -1000, -1000,
	-1000, -1000, -1000, 987, -1000, 30403, 647, 280, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16132,
	16132, 5267, 32875, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 928, -1000, -1000, 961, 403, 140, -1000, 1671, -1000,
	1419, 924, 1597, 1713, 1594, 1592, -1000, 1069, -233, 1320,
	1220, 1418, 1218, 3972, 1216, -1000, 29911, -1000, 29911, -1000,
	1003, 1312, -1000, 1003, 1724, -1000, 1221, 235, 235, 1293,
	-1000, 1526, -221, -248, 1280, -1000, -1000, 1413, -1000, 647,
	275, -1000, 968, 921, 209, 175, 2966, -1000, -1000, -1000,
	-1000, -318, -1000, 119, -1000, 118, -1000, -1000, -1000, 1068,
	-1000, 1601, -1000, 1066, -1000, 1712, 1710, -1000, 157, 1727,
	647, 22036, 647, -1000, 706, 1539, 1271, -1000, 1670, 16132,
	-183, -1000, -1000, 233, -1000, 699, 266, 695, -1000, 1040,
	-1000, -1000, 1525, -1000, 29911, -1000, 1125, 1117, 932, -1000,
	16132, 32875, 1699, 1697, 1685, 1645, 9722, 32785, -1000, -1000,
	-1000, -1000, -1000, 1065, 1060, 24006, 1724, -1000, 1213, -1000,
	-1000, 328, 29911, 1411, -1000, -1000, 859, -1000, -1000, -1000,
	-1000, -1000, 29911, -234, 1208, 231, -1000, -1000, 849, 32875,
	-1000, 906, -319, 445, 195, 442, 18100, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 103, 1256, -183, 647, 325, -1000,
	-1000, 233, -1000, -238, 1471, -1000, -1000, -1000, -1000, -1000,
	-1000, 32875, -1000, -320, 32875, 3681, -1000, -1000, -1000, 4805,
	-1000, -1000, -1000, -1000, 171, -1000, -1000, 3972, 25975, -1000,
	-1000, 1411, -1000, -250, 1469, 1467, 1736, -1000, -321, 4715,
	-323, 394, 32875, 766, -1000, 16132, -1000, 442, -1000, 1256,
	17116, -1000, -1000, 1755, -1000, 1752, 651, 651, 4544, 829,
	32875, -1000, -324, 393, 32875, -1000, 893, -1000, 2771, 1221,
	-1000, -1000, -1000, 365, 1036, -1000, -1000, -1000, 4370, -1000,
	-325, 32875, -1000, -1000, -1000, -1000, -1000, 387, 4109, -326,
	-1000, 386, 32875, -1000,
}

var yyPgo = [...]int{
	0, 2171, 2170, 62, 2165, 191, 2164, 2163, 2162, 23,
	18, 16, 25, 2161, 1918, 1909, 1907, 1902, 1899, 2160,
	8, 2159, 2158, 1896, 2157, 2150, 1891, 1877, 1871, 1869,
	2147, 2144, 2143, 1851, 1848, 1843, 10, 2142, 27, 2141,
	6, 145, 158, 2136, 3, 2133, 2130, 21, 2128, 2126,
	1840, 2125, 2124, 2123, 96, 2122, 1814, 1801, 2121, 1797,
	1785, 2119, 2114, 1783, 1781, 1779, 2113, 171, 2111, 2110,
	2109, 179, 98, 146, 2105, 2104, 2103, 107, 85, 2077,
	114, 51, 108, 225, 2101, 29, 48, 187, 2097, 130,
	2096, 125, 2095, 164, 2094, 142, 104, 103, 2093, 2090,
	165, 2086, 2084, 2083, 124, 2082, 2081, 2404, 2080, 2075,
	160, 2073, 67, 53, 64, 2072, 2071, 2070, 2067, 2064,
	31, 372, 2063, 2059, 155, 2058, 2057, 90, 2056, 2053,
	169, 2052, 2048, 2045, 132, 42, 2035, 2034, 52, 2033,
	78, 70, 2024, 49, 2023, 135, 2022, 2021, 30, 22,
	2019, 55, 2011, 58, 2010, 138, 151, 1109, 2009, 13,
	32, 14, 2006, 39, 12, 11, 40, 69, 92, 128,
	105, 2005, 37, 43, 121, 101, 94, 36, 2004, 150,
	2003, 97, 156, 129, 131, 148, 2001, 1999, 1996, 1013,
	1994, 118, 89, 1990, 154, 920, 166, 113, 1989, 95,
	1988, 1987, 1986, 1985, 1982, 93, 153, 1981, 1980, 44,
	20, 305, 1708, 41, 157, 1978, 46, 1977, 1976, 1975,
	2861, 112, 99, 109, 1974, 106, 34, 54, 1973, 1972,
	1971, 1970, 1968, 1967, 1346, 1966, 1965, 1964, 1961, 189,
	208, 1958, 1957, 126, 120, 1956, 1953, 1951, 1949, 127,
	84, 147, 1948, 117, 149, 123, 1947, 73, 1946, 1945,
	50, 45, 1944, 1943, 1942, 102, 91, 1941, 66, 33,
	35, 76, 9, 1939, 1933, 72, 152, 1932, 28, 1931,
	2, 5, 4, 1928, 1927, 1926, 1924, 1923, 1922, 1921,
	82, 1920, 1916, 61, 1911, 1904, 1894, 38, 1886, 1882,
	1879, 140, 110, 47, 162, 214, 15, 1874, 1867, 7,
	1863, 122, 1861, 57, 1859, 59, 1857, 1853, 60, 1837,
	1832, 65, 1826, 1823, 163, 1490, 2635, 1816, 167, 139,
	56, 86, 1811, 1809, 0, 578, 168, 159, 1803, 1789,
}

var yyR1 = [...]int{
	0, 333, 333, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 336, 336, 102, 102, 100, 100, 101,
	101, 174, 174, 12, 12, 12, 179, 179, 184, 184,
	184, 187, 187, 187, 187, 165, 166, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 307,
	307, 316, 316, 316, 317, 317, 315, 315, 315, 315,
	315, 319, 319, 320, 320, 318, 318, 318, 318, 322,
	322, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 310, 310, 310,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 325, 325, 326, 326, 327, 327, 328, 328, 328,
	328, 329, 329, 329, 329, 329, 330, 330, 330, 330,
	330, 330, 330, 331, 331, 332, 332, 2, 288, 288,
	289, 289, 290, 290, 290, 290, 291, 291, 292, 292,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	24, 208, 208, 309, 309, 309, 303, 303, 303, 305,
	305, 304, 304, 304, 306, 306, 311, 311, 311, 311,
	311, 313, 313, 313, 313, 313, 313, 314, 314, 314,
	312, 312, 48, 48, 49, 49, 49, 154, 154, 154,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 287, 287, 287, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 262,
	263, 263, 263, 263, 263, 263, 263, 263, 250, 250,
	251, 227, 227, 227, 227, 227, 227, 227, 227, 226,
	226, 226, 226, 230, 230, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 229, 229, 229, 229, 229,
	229, 229, 229, 231, 231, 231, 231, 231, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 249, 249, 234, 234, 243, 243, 244, 244, 244,
	241, 241, 242, 242, 237, 238, 245, 239, 239, 239,
	240, 240, 240, 248, 248, 248, 248, 235, 35, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 274, 274, 201, 201, 202, 202, 252, 252, 272,
	272, 271, 271, 270, 270, 270, 261, 261, 267, 267,
	267, 267, 267, 267, 267, 256, 256, 256, 255, 255,
	257, 257, 260, 260, 269, 269, 268, 268, 253, 253,
	253, 275, 275, 275, 275, 275, 254, 254, 254, 254,
	276, 258, 258, 259, 259, 259, 281, 282, 280, 280,
	280, 280, 280, 117, 117, 117, 264, 264, 264, 265,
	265, 265, 266, 266, 266, 285, 285, 284, 284, 50,
	51, 55, 55, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 153, 153, 153,
	206, 206, 279, 277, 277, 278, 278, 15, 15, 53,
	53, 308, 308, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 283, 283, 283, 17, 17, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 84, 193, 193, 192, 192, 191, 191, 191,
	194, 194, 194, 224, 224, 224, 58, 58, 62, 62,
	65, 65, 65, 63, 64, 27, 28, 28, 28, 28,
	29, 207, 207, 60, 60, 61, 61, 61, 61, 76,
	76, 338, 338, 59, 339, 67, 68, 68, 69, 69,
	69, 197, 197, 73, 73, 73, 71, 71, 71, 72,
	72, 78, 78, 82, 82, 82, 82, 81, 81, 81,
	81, 156, 156, 161, 217, 217, 137, 137, 157, 157,
	162, 162, 162, 163, 163, 164, 164, 164, 164, 164,
	159, 159, 158, 158, 160, 125, 125, 215, 215, 215,
	214, 214, 214, 214, 86, 86, 89, 89, 91, 91,
	91, 91, 91, 94, 139, 139, 111, 111, 112, 112,
	112, 112, 112, 123, 123, 173, 173, 172, 172, 175,
	175, 90, 92, 92, 92, 92, 97, 97, 98, 98,
	99, 99, 205, 205, 222, 222, 222, 103, 103, 103,
	105, 104, 104, 104, 104, 106, 106, 108, 109, 109,
	107, 107, 110, 113, 113, 113, 113, 114, 114, 83,
	83, 83, 83, 83, 83, 83, 190, 190, 116, 116,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	133, 133, 133, 133, 133, 133, 118, 118, 118, 118,
	118, 118, 118, 77, 77, 134, 134, 134, 96, 95,
	95, 80, 80, 79, 79, 135, 135, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 128, 128, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	337, 337, 130, 129, 129, 129, 129, 129, 129, 74,
	74, 74, 74, 74, 223, 223, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 146,
	146, 75, 75, 144, 144, 145, 147, 147, 143, 143,
	143, 120, 120, 120, 120, 120, 120, 120, 120, 122,
	122, 122, 148, 148, 136, 136, 85, 149, 149, 150,
	151, 151, 152, 152, 155, 167, 167, 167, 168, 168,
	168, 168, 124, 124, 169, 169, 169, 119, 119, 119,
	119, 119, 119, 119, 171, 171, 170, 170, 170, 170,
	176, 176, 138, 138, 141, 141, 140, 142, 177, 177,
	181, 181, 178, 178, 182, 182, 182, 182, 185, 185,
	186, 186, 186, 183, 183, 183, 180, 180, 180, 219,
	219, 219, 188, 188, 198, 198, 195, 195, 196, 196,
	189, 189, 236, 236, 204, 204, 203, 203, 203, 199,
	199, 199, 200, 200, 216, 216, 212, 212, 218, 218,
	213, 213, 220, 220, 221, 221, 286, 286, 246, 246,
	296, 296, 247, 247, 297, 297, 299, 299, 294, 294,
	295, 295, 298, 298, 30, 300, 300, 301, 301, 302,
	302, 302, 302, 31, 32, 32, 32, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 334, 335,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -333, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -338, -207, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-334, 68, 501, -151, 15, -67, -339, -67, -67, -67,
	-67, -67, -262, -205, 106, 68, 23, -200, 150, 87,
	382, 146, -208, 234, 236, -198, -199, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -107, -220, 72, -210, 160, 451,
	259, 437, 246, 195, 293, 307, 309, 301, 336, 324,
	438, 452, 161, 216, 145, 292, 322, 325, 369, 159,
	249, 209, 272, 453, 358, 364, 219, 296, 378, 454,
	162, 213, 215, 214, 203, 220, 36, 172, 320, 255,
	313, 224, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 163, 157, 285, 458, 342, 346, 459, 370, 239,
	286, 460, 461, 462, 149, 245, 305, 306, 463, 199,
	372, 250, 340, 33, 158, 439, 48, 180, 373, 38,
	344, 37, 350, 464, 282, 339, 334, 351, 465, 466,
	467, 468, 263, 261, 262, 264, 338, 304, 333, 211,
	53, 144, 348, 347, 349, 212, 368, 329, 327, 469,
	470, 254, 164, 471, 472, 314, 18, 473, 474, 376,
	175, 256, 257, 42, 475, 476, 477, 110, 478, 479,
	480, 367, 343, 345, 197, 114, 317, 154, 481, 260,
	363, 269, 441, 243, 111, 374, 310, 483, 288, 300,
	179, 174, 377, 278, 484, 222, 485, 486, 487, 166,
	488, 237, 236, 297, 270, 112, 298, 360, 217, 489,
	490, 491, 492, 207, 192, 380, 371, 52, 221, 355,
	493, 273, 289, 303, 156, 223, 494, 247, 294, 43,
	7, 210, 251, 361, 271, 218, 208, 331, 181, 495,
	496, 318, 319, 337, 302, 332, 295, 184, 176, 109,
	379, 356, 443, 234, 290, 326, 323, 187, 330, 497,
	150, 498, 188, 299, 375, 248, 321, 357, 147, 131,
	325, 369, 138, 359, 360, 366, -256, 367, 182, 185,
	-224, 147, -193, 358, 239, 260, 412, 188, 189, 148,
	149, 33, 371, 370, 362, -220, 151, 299, -76, 142,
	177, -107, -47, 72, 223, -47, 30, 72, 72, 36,
	72, 298, 361, 361, 75, 441, 191, 21, -325, -306,
	269, -324, -304, 139, 138, 10, 140, 274, 275, 276,
	148, 8, 31, 482, 165, 277, 278, 6, 169, 279,
	280, 183, 9, 281, -309, 74, 72, -210, 21, -325,
	-306, 269, -202, -201, 291, 350, 6, -69, 5, -189,
	152, 295, -87, 450, -93, -222, -220, -211, 74, 408,
	409, 410, 411, 81, 412, 425, 426, 274, 427, 231,
	413, 414, 428, 429, 430, 415, 416, 431, 432, 434,
	435, 433, 186, 419, 418, 417, 420, 421, 51, 423,
	422, 424, -3, -168, 17, 16, -73, 54, 55, -68,
	-81, 122, -83, -220, -115, 89, -121, 29, 72, -210,
	24, -120, -211, -116, -143, -142, -96, 131, 132, 133,
	120, 121, 128, 90, 134, -128, -126, -127, -129, -131,
	-132, 74, 73, 82, 75, 76, 77, 78, 83, 408,
	409, 410, 411, 412, 425, 426, 427, 413, 414, 428,
	429, 430, 415, 416, 431, 432, 434, 435, 433, 419,
	418, 417, 420, 421, 423, 422, 424, 84, 85, -212,
	-140, -334, 58, 59, 177, 146, 392, 393, 394, 395,
	396, 436, 167, 400, 92, 47, 381, 390, 389, 388,
	386, 387, 383, 385, 384, 402, 403, 153, 382, 126,
	391, -189, -189, 11, -100, -101, -107, -110, -220, -178,
	295, -185, -182, 370, 371, -183, -186, -180, -143, 350,
	479, 480, 369, 325, 368, -212, -220, -2, -5, 6,
	-107, -263, -251, -254, -213, 162, -276, -212, -209, 159,
	72, -210, 252, 143, 168, 139, 88, 444, 23, 25,
	242, 353, 408, 91, 131, 409, 410, 411, 16, 20,
	92, 130, 81, 392, 191, 412, 138, 62, 407, 383,
	385, 381, 382, 359, 29, 10, 26, 170, 202, 22,
	124, 140, 95, 96, 97, 173, 274, 275, 24, 171,
	266, 85, 276, 167, 115, 19, 65, 231, 11, 185,
	238, 13, 406, 113, 14, 235, 153, 152, 108, 200,
	148, 60, 8, 134, 27, 105, 56, 413, 414, 447,
	45, 190, 448, 58, 106, 17, 386, 387, 31, 436,
	415, 178, 449, 416, 126, 205, 63, 50, 241, 89,
	83, 34, 86, 66, 287, 87, 15, 201, 61, 404,
	244, 267, 182, 482, 204, 450, 165, 107, 277, 141,
	391, 268, 240, 59, 146, 6, 401, 30, 169, 279,
	186, 419, 418, 417, 420, 206, 57, 394, 395, 421,
	280, 499, 147, 94, 402, 403, 151, 183, 84, 5,
	44, 32, 9, 281, 64, 67, 388, 389, 390, 47,
	51, 423, 422, 424, 93, 12, 405, 440, 148, -107,
	391, -196, 153, -196, 183, 182, -196, -196, 147, 98,
	-53, -107, -308, -303, -309, -195, 153, -212, -195, -195,
	-195, -195, -195, -195, -195, -107, 135, -107, 72, 30,
	-194, 106, 12, 382, 146, 147, 183, 150, -258, 11,
	108, 186, 186, 186, 187, 186, -192, 361, 363, 184,
	364, 365, 12, -84, 106, 19, -334, -168, -168, 72,
	298, 151, -61, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -42, -41, -43, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 30,
	-287, 68, -246, 350, 72, -300, -301, -107, 75, 75,
	66, 66, 69, 151, 69, 66, -326, 270, 68, -326,
	236, 270, 271, 208, 234, 150, -326, -326, 236, -326,
	-326, -326, -326, -326, 361, -326, -326, -326, 272, 273,
	-326, 359, 150, -326, -326, -326, -326, -326, 71, 66,
	69, 260, 66, 11, 66, -273, 131, 283, 284, 285,
	286, 282, 260, 287, 288, 289, 186, 290, -67, -7,
	-5, -334, 21, 22, 147, 374, 69, -87, -171, -334,
	-335, 70, -169, 19, 31, -124, 75, 78, -152, -155,
	-83, -220, 50, -71, 21, 22, 80, 11, -215, 88,
	87, 105, -214, 23, 72, -210, -211, 74, 135, -83,
	-118, 108, 89, 106, 107, 91, 117, 116, 127, 120,
	121, 122, 123, 124, 125, 126, 118, 119, 130, 98,
	99, 100, 101, 102, 103, 104, -190, -334, -96, -334,
	136, 137, -121, -121, -121, -121, -121, -121, -121, -121,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -3,
	-135, -83, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -146, -83, -334, -337, -130,
	-334, -337, -130, -337, -130, -337, -334, -337, -130, -337,
	-130, -337, -337, -130, -337, -334, -334, -334, -334, -334,
	-334, -109, 27, -107, -86, -89, -91, -92, -111, -95,
	-334, -90, -107, -96, 72, -107, -100, -336, 69, 11,
	67, -336, 69, 135, 69, -179, -184, 372, 374, 295,
	-183, -183, -219, -212, 74, 29, 98, 30, 135, -151,
	-67, 70, 69, -254, 162, 159, -226, -230, -232, -231,
	-233, -228, -229, 322, 325, 329, 327, 323, 328, 131,
	326, 331, 332, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 30, 172, 318, 319, 320, 321, 342, 343,
	344, 345, 346, 347, 348, 349, 301, 324, 438, 302,
	303, 304, 305, 306, 307, 309, 310, 311, 312, 313,
	314, 315, 316, 72, -211, -276, 68, -212, 23, 150,
	72, 89, 72, 72, 72, -312, -311, -303, -306, -196,
	72, 69, 151, 69, 151, 71, -100, 24, 66, -102,
	-107, 72, 72, 72, 72, -305, -303, -306, -221, -220,
	-209, -194, 74, -83, -196, -196, -107, -107, -107, -107,
	-194, -194, -194, -194, -191, 11, 108, 11, -191, -191,
	-83, -121, -303, 384, 122, 72, 72, 298, 72, -42,
	-42, 74, -42, 69, 98, -42, 70, -135, -286, 500,
	69, -302, 23, 374, 375, 351, -328, 147, 185, 182,
	-328, -324, 278, -305, -304, -303, -326, -327, -212, -326,
	-326, -326, 361, -326, -326, -326, -326, -326, -326, -326,
	-326, -309, -328, 238, 69, -328, -305, -303, 282, 282,
	282, 282, 282, 282, -73, -3, -107, 375, 376, -93,
	23, -170, -213, 9, 108, 69, 18, 69, -167, 25,
	26, 135, -122, 51, 75, 78, -197, 49, -107, -83,
	-83, -133, 83, 89, 84, 85, -214, 122, -221, -213,
	-209, -121, -134, -140, -96, 79, 108, 106, 107, 91,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -121, -121, -223, 72, 74, 72, -120,
	-120, -212, -71, -79, -82, 122, -83, -220, -79, -79,
	-71, -335, -335, -82, -79, -79, -79, -82, -79, -71,
	-71, -79, -335, -335, -335, -335, -79, -79, -79, -79,
	-71, -79, -79, -79, -71, -335, 69, -335, -3, -79,
	-79, -79, -335, -83, -83, -143, 74, -79, -143, 74,
	-79, -121, 397, 398, 399, -79, -79, -71, -144, -145,
	93, -143, -335, -121, -212, -212, -79, -80, -79, -79,
	-79, -174, 110, -107, 30, 69, -103, -105, -104, -106,
	56, 60, 62, 57, 58, 59, 63, -205, -86, -94,
	47, -334, -112, 110, -113, 23, -222, 64, 152, 65,
	-334, -174, 67, -86, -107, -86, -110, -220, 122, -182,
	-185, 69, 373, 375, 376, -179, -240, 130, 66, 86,
	-83, -213, -221, -168, -73, -264, -265, -266, -213, 74,
	75, -251, -252, -253, -254, -267, 162, -275, 154, 156,
	44, -255, 163, 148, 45, -227, -241, 356, -234, 68,
	-234, -234, 330, 322, 325, 323, -234, -234, -234, -234,
	-234, -239, 325, -239, -239, -239, -239, 323, 68, 68,
	-234, -234, -234, -243, 68, -243, 317, -244, 68, -244,
	-244, -244, -244, -276, -276, -83, -216, 67, -165, -107,
	24, -48, 195, 168, 68, -307, 69, 29, -313, 235,
	-107, -107, -107, -303, -303, -309, -283, 166, 161, -107,
	69, 69, 72, 72, -259, 11, 108, -194, -220, -220,
	-107, -123, 23, -194, -77, 173, 67, -337, -335, 72,
	-41, -120, 70, -108, 27, 74, -301, -222, 350, 375,
	-329, 122, -212, -329, -332, 440, 151, 70, 69, -326,
	-329, 256, 238, -329, 11, -274, 19, -71, -335, -55,
	-54, 143, 140, 141, 144, 145, -279, 353, 139, 179,
	-95, -334, -335, 69, 135, 52, -124, -124, -155, -188,
	19, 11, 47, 47, -72, 57, 83, 84, 85, 135,
	-334, -134, -121, -121, -121, -77, 88, -335, -79, 69,
	-335, 135, -335, -335, -79, -156, 404, -156, -335, -335,
	-335, -335, -335, -335, -79, -79, -335, -156, -156, -156,
	-156, -335, -335, -335, -335, -79, -335, -335, -335, -80,
	-83, -335, -335, -335, -335, 69, 67, 23, 11, 11,
	-335, 11, 11, -335, -335, 11, -121, -121, -121, -335,
	-335, -79, -147, -145, 95, -83, -335, -335, 69, 69,
	-335, -335, -335, -335, -119, 30, 47, -334, -3, -334,
	-177, -181, -143, -209, -89, -91, -91, -89, -91, 56,
	56, 56, 61, 56, 61, 56, -104, -222, -335, -335,
	-139, 194, -334, 34, -222, -113, 148, 148, 148, -80,
	-114, 12, -86, -114, -114, 135, -184, -187, 377, 374,
	380, 72, 74, 135, -169, 69, -266, 98, -254, 68,
	72, -260, -211, 45, -255, 148, 45, -255, -260, 72,
	-260, 45, 83, 89, -237, -238, -245, -248, -235, 29,
	66, 353, 154, 45, 44, 81, -242, 357, 75, -239,
	-239, -234, -234, -234, 330, -234, -239, -240, 30, -240,
	-240, -240, -240, -239, -249, 74, -249, 75, -243, 75,
	70, 66, -212, -3, 23, -49, 8, 9, 10, -288,
	-289, -290, 72, 108, 200, 201, -316, 268, -311, 236,
	245, 88, 16, 440, 151, 151, -107, -303, -114, 72,
	72, -191, -194, 34, -121, -306, 188, 189, -174, 147,
	-302, 151, 135, 135, 151, 259, -305, -212, 11, 11,
	256, 11, -305, 292, -197, 69, -206, -255, -285, -253,
	-254, -284, 155, 162, 163, -206, 162, 159, -255, 163,
	154, 155, -203, -255, 151, 23, -206, -206, -261, 98,
	-206, 110, -213, -213, 53, -107, -78, -166, 122, -213,
	-80, -77, 88, -121, -335, -82, -157, -156, 122, -221,
	-157, -157, -335, -212, -161, -334, -156, -157, -157, -156,
	-156, -156, -335, -335, -156, -157, -157, -157, -157, -335,
	-157, -157, -157, -335, -225, 131, 322, 172, 320, 313,
	340, 327, 355, 318, 356, -223, -225, -121, -121, -121,
	-121, -121, 11, 11, 11, 437, -151, 97, -83, 94,
	-121, -121, -176, 66, -177, -138, -141, -140, -334, -3,
	-335, -170, 6, 440, -175, -212, -114, 69, 98, 98,
	-98, -97, 66, 67, -99, 66, -97, 56, 56, -173,
	68, 69, -140, -334, -175, -121, -113, -334, -334, -334,
	-335, -151, -83, -114, 374, 378, 379, -265, -266, -269,
	-268, -212, -211, 154, -275, 44, -275, -260, -260, 68,
	83, -121, 9, 45, 45, 74, 70, -240, -240, -239,
	-234, -240, 72, 131, -240, 70, 69, 70, 69, 70,
	69, -117, 456, 89, -107, -165, -165, 66, 70, 69,
	-226, 72, 72, 72, -319, 440, 241, -317, -315, 247,
	248, 249, 250, 251, -306, 246, -313, 243, 74, 72,
	-107, -303, -194, -121, -239, -107, -305, 122, 122, -212,
	-305, 256, -331, 440, -305, -305, 11, -305, 74, -72,
	-54, 68, -250, 72, -211, -260, -199, 154, 72, 72,
	72, -211, 72, -211, -212, 45, 45, 72, -107, -212,
	-250, 72, -83, -212, -212, 135, -114, 11, 69, -81,
	-335, -121, -157, 135, -157, -217, 72, -157, -157, -157,
	-335, -234, -234, -234, -244, -234, 306, -234, 306, -335,
	-335, 19, 19, 19, 19, -335, -121, -121, -121, -334,
	-75, 401, -83, 69, 69, 28, -176, 69, -335, -335,
	47, -335, -335, 69, -151, -181, -83, -83, -83, 68,
	-83, -172, -212, 194, -335, -113, -205, -172, -172, -172,
	-168, 70, 69, -234, -234, 45, -257, -255, -172, -127,
	-240, -239, 74, -239, 75, 75, 456, 68, -3, -107,
	-291, -292, -293, 81, 439, 89, 202, 203, 164, 204,
	205, 206, -290, -226, -226, -226, -322, -323, -321, 244,
	266, 267, 252, -320, -318, 261, 262, 263, 264, 88,
	74, 74, 74, -314, 235, 88, 244, 16, 23, -294,
	-192, -331, -331, 238, -305, -78, -250, -153, 167, 168,
	-226, -226, -216, -257, 45, 72, -204, 151, 23, 151,
	-153, -250, 30, 140, 27, -213, -148, 13, -86, -166,
	-166, 122, -137, 110, -239, 72, -121, -121, -121, -121,
	-335, -335, -335, -121, -335, 74, -121, -121, 45, -141,
	-138, 47, -3, -334, -212, -168, -172, 70, 69, -140,
	-112, -222, -335, -335, -335, -271, -270, 67, 158, 81,
	-268, -167, -167, -260, 70, -240, -240, 70, 70, -269,
	-165, 19, -165, -293, 74, 206, 202, 206, 206, 206,
	206, 207, -310, 81, 242, -321, 253, 461, 237, 268,
	75, 75, 109, 31, 32, -318, 75, 75, 75, 75,
	-315, 16, 440, -313, 243, 74, 74, -295, 38, -297,
	39, -330, 23, -330, 256, 11, 70, 72, -227, -227,
	68, -260, 68, 72, -212, -153, 29, 29, -334, -149,
	14, 16, -114, -81, -151, 16, -335, -335, -335, -335,
	-74, 108, 440, -335, -335, 9, -138, -3, 70, -212,
	-113, -270, 72, -261, 74, 165, 70, 193, -20, -3,
	-9, -10, -11, -12, -14, -50, -15, -16, -21, -22,
	-17, -56, -57, -65, -63, -64, -60, -59, -25, -23,
	-26, -18, -27, -28, -29, -33, -34, -24, -35, 92,
	153, 224, 293, 36, 36, 198, 199, 74, 74, 29,
	254, 134, 29, 75, 134, 407, 243, 74, 72, 244,
	-236, 152, -298, 43, -296, -247, 42, 16, -303, -86,
	-269, -216, -269, -121, -277, -278, 110, -159, 405, -150,
	-83, -136, -85, -83, -148, -166, -162, 112, 111, -135,
	-335, 438, 63, 441, -177, -335, 75, -107, -272, -271,
	194, -165, -83, -83, 72, -46, -218, 227, 228, 229,
	-213, -36, -20, 75, 29, 75, 29, 257, 244, 23,
	-173, 75, -297, 16, -299, 40, 41, 74, 440, -114,
	70, 68, 70, -335, 69, -212, -158, -160, -212, 69,
	-149, -335, -163, 91, -164, 109, 407, -125, 75, 134,
	-163, 53, 439, 442, 68, -154, 196, 197, -37, -38,
	93, 94, 225, 226, 230, -226, 69, 501, 255, 255,
	74, 38, 74, 16, 16, 236, -148, -272, -269, -272,
	-278, 47, 69, 23, -85, -159, -164, 114, 115, 194,
	114, 115, -120, 53, -172, -165, 72, 72, 97, 95,
	-38, -83, -36, 19, 19, 19, 29, -213, 97, -20,
	74, 74, 29, 241, 21, -306, -149, 70, 180, -160,
	-161, 88, -212, 440, 70, -13, -19, -12, -9, -10,
	-11, 293, 92, -36, 94, 501, -47, 75, -3, -45,
	-44, 75, -47, 232, 89, 233, 72, -121, 258, -159,
	-272, 181, -164, 441, -281, -282, 66, -165, -36, 501,
	-36, 97, 95, -39, -40, 96, -20, 69, 231, -306,
	-334, 442, -282, 66, -281, 66, 10, 9, 501, 97,
	501, 153, -36, 97, 95, -40, -83, -44, -121, 178,
	-280, 166, 161, 164, 30, -280, 97, 92, 501, 153,
	-36, 94, -335, -335, 160, 29, 83, 97, 501, -36,
	153, 97, 501, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 704, 704, 704, 704,
	704, 704, 802, -2, 569, 0, 0, 0, 0, -2,
	677, 678, 679, 683, 684, 699, 701, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 40,
	0, 0, 56, 57, 1110, 0, 702, 691, 692, 0,
	0, 1606, 2, 1048, 0, 713, 706, 0, 1110, 1110,
	0, 0, 87, 0, 0, 0, 803, 0, 0, 0,
	1108, 1108, 0, 1108, 1108, 0, 1123, 0, 1105, 1119,
	1120, 1121, 0, 0, 1106, 0, 1106, 1106, 1106, 1106,
	1106, 1106, 1106, 0, 626, 820, 1132, 1133, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 0, 0,
	0, 670, 0, 636, 637, 638, 0, 640, 0, 0,
	0, 0, 0, 650, 653, 657, 0, 1048, 1048, 515,
	516, 517, 674, 675, 664, 676, 0, 0, 0, 0,
	0, 703, 305, 307, 0, 327, 0, 330, 333, 1138,
	685, 0, 0, 1163, 1164, 0, 0, 0, 0, 0,
	1486, 181, 244, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 0, 183, 183, 183, 1498, 183, 0, 183,
	183, 183, 183, 183, 243, 233, 234, 235, 0, 0,
	0, 1486, 0, 496, 493, 494, 704, 0, 708, 0,
	1111, 680, 45, 0, 47, 1064, 804, 805, 806, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 0, 1054, 0, 0, 716, 714, 715, 705,
	0, 727, 757, 0, 829, 0, 834, 836, -2, -2,
	0, 877, 878, 879, 880, 881, 882, 0, 0, 0,
	0, 0, 0, 0, 0, 906, 907, 908, 909, 910,
	911, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1573,
	1574, 1575, 1576, 1578, 1579, 1580, 1582, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597,
	1598, 1599, 1600, 1601, 1603, 1604, 1605, 838, 839, 1018,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1009, 0, 980, 980, 980, 980,
	980, 980, 980, 980, 980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 67, 69, 820, 73,
	1551, 0, 1082, -2, -2, 1084, 0, 0, 0, -2,
	-2, -2, -2, 1352, -2, 1018, 0, 88, 1040, 704,
	89, 0, 370, 371, 0, 1365, 539, 1130, 1131, 1354,
	1126, 1127, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	607, 0, 608, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 0, 627, 628, 670,
	630, 0, 0, 1108, 1108, 0, 0, 0, 0, 541,
	542, 670, 670, 670, 670, 667, 0, 667, 647, 667,
	665, 666, 0, 652, 0, 0, 0, 660, 661, 686,
	0, 0, 693, 695, 696, 697, 698, 694, 0, 0,
	0, 309, 0, 0, 329, 311, 0, 314, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 325, 0,
	332, 0, 1136, 1139, 690, 1154, 1155, 0, 1165, 1166,
	187, 187, 0, 0, 0, 0, 150, 183, 0, 152,
	183, 183, 183, 0, 183, 183, 159, 160, 183, 162,
	163, 164, 165, 166, 183, 168, 169, 170, 183, 183,
	173, 183, 183, 176, 177, 178, 179, 180, 242, 187,
	0, 0, 187, 0, 0, 478, 0, 0, 0, 0,
	483, 484, 485, 486, 0, 0, 489, 490, 713, 42,
	52, 0, 709, 710, 0, 0, 0, 46, 0, 0,
	51, 1607, 37, 0, 0, 1049, 1052, 1053, 1041, 1042,
	1045, 0, 0, 711, 717, 718, 707, 0, 728, 0,
	0, 0, 758, 0, 760, 761, 762, 763, 0, 832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 856,
	857, 858, 859, 860, 861, 862, 835, 0, 849, 0,
	0, 0, 898, 899, 900, 901, 902, 903, 904, 0,
	716, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 716, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 716, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 1010, 0, 963, 972,
	0, 964, 973, 965, 974, 966, 0, 967, 975, 968,
	976, 969, 970, 977, 971, 0, 0, 0, 871, 0,
	0, 71, 0, 819, 0, 764, 766, 767, 768, -2,
	0, 772, 823, 869, 1132, -2, 0, 0, 0, 63,
	64, 0, 0, 0, 0, 74, 76, 0, 0, 1551,
	1085, 1086, 470, 1099, 1100, 1101, 0, 1097, 0, 1048,
	713, 556, 0, 372, 0, 0, 381, 460, 390, 391,
	392, 453, 394, 453, 453, 0, 453, 453, 453, 453,
	453, 467, 467, 467, 467, 467, 436, 437, 438, 439,
	440, 0, 0, 413, 453, 453, 453, 417, 443, 444,
	445, 446, 447, 448, 449, 450, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 455, 455, 457, 457,
	457, 457, 457, 0, 0, 538, 0, 1124, 85, 0,
	93, 0, 94, 0, 0, 99, 260, 246, 98, 0,
	232, 0, 0, 0, 0, 237, 622, 1107, 0, 615,
	65, 616, 617, 618, 619, 620, 239, 621, 821, 1134,
	1135, 629, 671, 672, 0, 0, 633, 634, 635, 543,
	641, 642, 643, 649, 670, 0, 0, 0, 783, 670,
	651, 863, 654, 980, 0, 688, 687, 0, 700, 306,
	308, 310, 328, 0, 0, 331, 334, 0, 0, 0,
	0, 1157, 0, 1159, 1161, 0, 0, 188, 189, 190,
	0, 182, 0, 205, 245, 0, 151, 0, 185, 153,
	154, 155, 183, 157, 158, 161, 167, 171, 172, 174,
	175, 241, 0, 0, 0, 0, 148, 0, 479, 480,
	481, 482, 491, 488, 716, 0, 0, 681, 682, 48,
	0, 0, 1066, 1055, 0, 0, 0, 0, 1044, 1046,
	1047, 0, 0, 1029, 0, 0, 719, 712, 39, 830,
	831, 833, 850, 0, 852, 854, 759, 729, 0, 1019,
	-2, 840, 841, 865, 866, 867, 0, 0, 0, 0,
	863, 845, 0, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 897, 994, 995, 0, 895,
	896, 905, 0, 0, 873, 723, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 871, 868, 0, 1076, 0, 0,
	0, 0, 945, 0, 0, 880, 1021, 0, 880, 1021,
	0, 0, 0, 0, 0, 0, 0, 0, 1016, 1013,
	0, 0, 981, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 818, 0, 0, 0, 0, 0, 0,
	807, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 1472, 778, 0, 823, 0, 0, 0,
	871, 827, 0, 827, 68, 827, 70, 0, 822, 1083,
	0, 0, 0, 79, 80, 75, 1087, 0, 1093, 1094,
	1095, 1019, 0, 1054, 716, 369, 557, 559, 562, 563,
	564, 373, 375, 376, 377, 0, -2, 530, 1482, 1529,
	-2, 522, 1396, -2, -2, 380, 462, 461, 393, 0,
	467, 467, 453, 453, 453, 453, 422, 467, 425, 428,
	429, 470, 0, 470, 470, 470, 470, 467, 0, 0,
	414, 415, 416, 405, 0, 406, 455, 408, 0, 409,
	410, 411, 412, 536, 537, 0, 0, 0, 0, 0,
	1109, 0, 262, 263, 208, 101, 0, 0, 247, 0,
	368, 0, 609, 0, 611, 236, 613, 623, 624, 614,
	0, 0, 631, 632, 827, 0, 0, 644, 668, 669,
	667, 670, 0, 648, 662, 0, 0, 655, 0, 689,
	312, 313, 335, 71, 0, 1137, 1156, 0, 1160, 1162,
	0, 191, 193, 0, 142, 0, 0, 184, 0, 156,
	0, 0, 0, 0, 0, 487, 0, 711, 53, 570,
	571, -2, 600, 1116, 600, 600, 588, 506, 600, 0,
	49, 0, 1065, 0, 0, 0, 1050, 1051, 1043, 0,
	1102, 1103, 1030, 1031, 86, 720, 851, 853, 855, 0,
	871, 842, 863, 846, 0, 843, 0, 837, 0, 0,
	738, 0, 738, 738, 0, 931, 0, 932, 0, 738,
	738, 0, 0, 0, 0, 0, 0, 938, 939, 940,
	941, 738, 738, 738, 738, 0, 738, 738, 738, 0,
	876, -2, 942, 943, 944, 0, 0, 0, 0, 0,
	987, 0, 0, 988, 953, 0, 0, 0, 0, 0,
	959, 1040, 0, 1014, 0, 0, 962, 982, 0, 0,
	983, 984, 985, 986, 1070, 0, 0, 0, 1059, 0,
	827, 1078, 0, 0, 765, 798, 800, 0, 795, 808,
	809, 811, 0, 813, 0, 815, 816, 785, 771, 870,
	773, 0, 0, 0, 823, 782, 0, 0, 0, 0,
	1040, 0, 827, 61, 62, 0, 77, 78, 0, 0,
	84, 471, 472, 0, 207, 0, 560, 0, 374, 0,
	523, 0, 0, 508, 522, 518, 519, 522, 513, 523,
	514, 0, 382, 0, 384, 385, 386, 387, 388, 0,
	0, 466, 0, 474, 476, 0, 389, 463, 0, 470,
	470, 467, 420, 421, 453, 426, 470, 430, 0, 431,
	432, 433, 434, 470, 0, 451, 0, 0, 407, 0,
	553, 0, 1125, 85, 85, 0, 264, 265, 266, 0,
	209, 210, 0, 0, 0, 0, 111, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 66, 240, 639, 544,
	545, 670, 646, 0, 864, 656, 658, 659, 467, 0,
	1158, 0, 0, 0, 0, 0, 203, 186, 0, 0,
	0, 0, 149, 0, 719, 0, 0, 522, 0, 589,
	590, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 1118, 0, 0, 0, 507,
	0, 0, 1068, 1067, 1056, 38, 827, 0, 730, 1020,
	0, 844, 0, 847, 738, 874, 916, 739, 725, 0,
	917, 918, 738, 731, 732, 734, 933, 920, 921, 934,
	935, 936, 738, 738, 937, 925, 924, 923, 926, 738,
	929, 928, 930, 912, 0, 453, 453, 999, 453, 457,
	1002, 453, 1004, 453, 1007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1011, 961, 1017, 0,
	0, 0, 54, 0, 1070, 1057, 1072, 1074, 0, 0,
	0, 0, -2, 1332, 0, 789, 1040, 0, 0, 0,
	792, 799, 0, 0, 793, 0, 794, 812, 814, 769,
	0, 0, 774, 0, 0, -2, 781, 0, 0, 0,
	791, 1048, 828, 60, 81, 82, 83, 558, 561, 0,
	524, 453, 453, 0, 528, 520, 529, 510, 512, 0,
	383, 464, 0, 473, 475, 477, 454, 418, 419, 470,
	427, 423, 468, 469, 435, 467, 0, 467, 0, 458,
	0, 540, 554, 0, 0, 91, 0, 0, 216, 0,
	212, 0, 0, 0, 119, 0, 102, 103, 104, 106,
	107, 0, 0, 0, 100, 0, 249, 0, 252, 253,
	610, 612, 645, 784, 1148, 817, 203, 192, 194, 195,
	203, 206, 143, 0, 144, 146, 0, 145, 492, 86,
	572, 0, 597, 0, 0, 1124, 520, 0, -2, 575,
	580, 581, 582, 583, 584, 0, 595, 0, 577, 0,
	597, 0, 592, 0, 0, 0, 1032, 0, 86, 86,
	913, 848, 915, 0, 919, 736, 735, 914, 922, 927,
	946, 996, 467, 1000, 1001, 1003, 1005, 1006, 1008, 948,
	947, 0, 0, 0, 0, 954, 0, 0, 0, 0,
	0, 0, 1015, 0, 0, 0, 55, 0, 1075, -2,
	0, 0, 72, 0, 1048, 1079, 1080, 1081, 796, 0,
	801, 0, 787, 0, 823, 779, 0, 0, 0, 0,
	59, 498, 0, 1045, 1045, 509, 522, 521, 0, 465,
	424, 470, 452, 470, 0, 0, 555, 0, 85, 0,
	85, 217, 218, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 211, 213, 214, 215, 137, 120, 121, 0,
	0, 0, 0, 112, 113, 0, 0, 0, 0, 0,
	108, 109, 110, 248, 0, 0, 251, 0, 0, 1150,
	1144, 196, 196, 0, 147, 0, 0, 574, 598, 0,
	381, 381, 0, 522, 0, 591, 0, 1114, 1115, 0,
	586, 597, 0, 0, 0, 1069, 1037, 0, 827, 0,
	721, 726, 1040, 0, 997, 998, 0, 0, 0, 0,
	955, 956, 957, 989, 960, 1012, 0, 0, 0, 1073,
	1058, 0, 1062, 0, 790, 58, 0, 786, 0, 775,
	777, 823, 824, 825, 826, 497, 501, 0, 506, 0,
	525, 526, 527, 511, 0, 441, 442, 456, 459, 0,
	92, 0, 0, 219, 220, 221, 222, 224, 225, 0,
	0, 0, 97, 0, 0, 122, 0, 0, 0, 0,
	132, 133, 134, 135, 136, 114, 115, 116, 117, 118,
	105, 0, 0, 250, 0, 255, 256, 1112, 1152, -2,
	0, 140, 0, 141, 204, 0, 573, 599, 378, 379,
	0, 1124, 0, 576, 585, 587, 0, 594, 0, 750,
	0, 0, 1032, 86, 740, 0, 949, 951, 950, 952,
	0, 0, 0, 978, 979, 0, 1061, 0, 797, 788,
	780, 502, 503, 0, 505, 0, 499, 0, 85, 338,
	339, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 0,
	0, 0, 0, 226, 227, 228, 229, 138, 139, 123,
	124, 0, 126, 127, 0, 0, 0, 258, 0, 254,
	785, 0, 1144, 0, 1146, 0, 1143, 0, 197, 827,
	0, 0, 0, 593, 0, 603, 0, 43, 0, 1038,
	1039, 1033, 1034, 1036, 1037, 722, 0, 0, 0, 737,
	958, 0, 0, 0, 1071, -2, 504, 0, 90, 500,
	267, 96, 0, 0, 1126, 0, 0, 294, 295, 296,
	1128, 0, 336, 0, 128, 0, 130, 131, 257, 0,
	36, 0, 1151, 0, 1149, 0, 0, 1145, 0, 1032,
	499, 0, 499, 602, 0, 0, 751, 752, 0, 0,
	750, 733, 741, 0, 744, 0, 0, 0, 755, 0,
	742, 990, 0, 993, 0, 85, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 292, 0, 0, 125, 129,
	259, 1113, 1153, 0, 0, 0, 1037, 578, 0, 596,
	604, 0, 0, 0, 1035, 44, 0, 745, 746, 747,
	748, 749, 0, 991, 0, 0, 268, 269, 0, 0,
	279, 0, 0, 0, 0, 0, 0, 1129, 230, 337,
	1147, 1141, 198, 199, 200, 202, 750, 499, 0, 753,
	754, 0, 756, 0, 531, 85, 270, 271, 272, 273,
	274, 0, 276, 0, 0, 0, 288, 289, 290, 0,
	297, 299, 300, 301, 0, 303, 304, 293, 0, 41,
	579, 0, 743, 0, 532, 533, 0, 95, 0, 0,
	0, 0, 0, 0, 285, 0, 291, 0, 302, 201,
	0, 992, 534, 0, 535, 0, 0, 0, 0, 0,
	280, 281, 0, 0, 0, 286, 0, 298, 0, 0,
	546, 548, 549, 0, 0, 547, 275, 277, 0, 283,
	0, 0, 605, 606, 550, 551, 552, 0, 0, 0,
	282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 501,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:483
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:525
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:537
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:544
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:550
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:561
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:574
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:581
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:590
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:610
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:636
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:648
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:676
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:680
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:688
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:702
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:727
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:731
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:741
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:748
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:767
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:781
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:789
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:793
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:798
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:803
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:828
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:832
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:836
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:840
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:848
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:856
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:860
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:864
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:883
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:892
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:896
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:901
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:915
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:919
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:937
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:941
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:946
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:974
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:978
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:983
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:997
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1011
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1023
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1027
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1035
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1060
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1075
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1080
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1084
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1088
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1094
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1099
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1103
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1107
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1111
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1115
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1129
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1189
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1256
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1266
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1309
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1352
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1371
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1381
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1399
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1422
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1428
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1436
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1444
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1448
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1456
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1460
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1464
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1470
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1571
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1575
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1579
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1585
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1597
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1601
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1605
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1611
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1619
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1658
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1666
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1682
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1688
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1692
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1708
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1714
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1719
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1724
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1730
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1758
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1766
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1774
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1799
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1843
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1853
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2015
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2031
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2058
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2071
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2077
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2162
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2345
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2469
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2481
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2487
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2582
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2588
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2592
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2604
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2608
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2632
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = yyDollar[1].str
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2654
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2658
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.indexOptions = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2712
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2720
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2729
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = yyDollar[1].str
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2789
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2799
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 531:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2819
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 532:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2823
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 533:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2827
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 534:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2831
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 535:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2835
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2859
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2888
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2894
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2929
		{
			yyVAL.boolean = false
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = string("")
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2999
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3022
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3029
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3049
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 579:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3053
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3062
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3072
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3081
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3085
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3092
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3102
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3114
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3123
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3127
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3135
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.columnOrder = nil
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3155
		{
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3161
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3171
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3177
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3181
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3187
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3197
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3201
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3209
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3213
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3219
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3227
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3231
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3239
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3247
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3255
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3263
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3271
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3279
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3288
		{

		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3322
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3330
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3334
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3338
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3342
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3346
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3362
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3370
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3378
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3382
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3386
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 646:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3391
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3400
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3404
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3412
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3430
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3435
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3439
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3444
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3448
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3452
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3472
		{
			yyVAL.boolean = false
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.boolean = true
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3506
		{
			yyVAL.showFilter = nil
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3510
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3514
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = ""
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = SessionStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = GlobalStr
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.statement = &Begin{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3554
		{
			yyVAL.statement = &Begin{}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3558
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3562
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.statement = &Commit{}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.statement = &Rollback{}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3580
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3598
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3604
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3609
		{
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3614
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3652
		{
			setAllowComments(yylex, true)
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3662
		{
			yyVAL.bytes2 = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.str = UnionStr
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = UnionAllStr
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = UnionDistinctStr
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3685
		{
			yyVAL.byt = 0
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.byt = 1
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = SQLCacheStr
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = DistinctStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = StraightJoinHint
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3738
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3761
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3775
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3779
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3795
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3800
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.exprs = nil
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3817
		{
			yyVAL.over = nil
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.over = yyDollar[1].over
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3826
		{
			yyVAL.frame = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3830
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3841
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3906
		{
			yyVAL.window = nil
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3909
		{
			yyVAL.window = yyDollar[2].window
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3942
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3950
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3992
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4021
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4025
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4036
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4051
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4055
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4063
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4074
		{
			yyVAL.expr = nil
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.columns = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4087
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4107
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4113
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4126
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4130
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4134
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4146
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4150
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4156
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4161
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = JoinStr
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = JoinStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = JoinStr
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = StraightJoinStr
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = LeftJoinStr
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = LeftJoinStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = RightJoinStr
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = RightJoinStr
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = NaturalJoinStr
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4230
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.indexHints = nil
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4265
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4269
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4273
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.expr = nil
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4346
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4350
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4354
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4362
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4366
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4370
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4374
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = IsNullStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = IsNotNullStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = IsTrueStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = IsNotTrueStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = IsFalseStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = IsNotFalseStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = EqualStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = LessThanStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = GreaterThanStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = LessEqualStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = GreaterEqualStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = NotEqualStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = nil
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4439
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4459
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.selectExprs = nil
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4582
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4586
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4594
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4598
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 919:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 922:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4726
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4775
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4810
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4814
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4822
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 952:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4826
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 958:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 960:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4884
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4889
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4937
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4950
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = BooleanModeStr
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = QueryExpansionStr
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5029
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5037
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5045
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5049
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5071
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = nil
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5093
		{
			yyVAL.str = string("")
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5097
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5107
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5113
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = nil
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5136
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &NullVal{}
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.exprs = nil
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = nil
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5229
		{
			yyVAL.orderBy = nil
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5243
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5249
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = AscScr
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = AscScr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5262
		{
			yyVAL.str = DescScr
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5267
		{
			yyVAL.limit = nil
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5271
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5275
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5279
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = ForUpdateStr
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5302
		{
			yyVAL.str = ShareModeStr
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5315
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5319
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5327
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5332
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5336
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5340
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5346
		{
			yyVAL.columns = nil
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5350
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5360
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5364
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5368
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5373
		{
			yyVAL.assignExprs = nil
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5377
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5387
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5397
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5403
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5423
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5459
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5472
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5485
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5495
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5530
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5541
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5545
		{
			yyVAL.expr = &Default{}
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5554
		{
			yyVAL.byt = 0
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.byt = 1
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5559
		{
			yyVAL.byt = 0
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5561
		{
			yyVAL.byt = 1
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5564
		{
			yyVAL.byt = 0
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5566
		{
			yyVAL.byt = 1
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = ""
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = IgnoreStr
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5574
		{
			yyVAL.sqlVal = nil
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.empty = struct{}{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.empty = struct{}{}
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5585
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.empty = struct{}{}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = UniqueStr
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			yyVAL.str = FulltextStr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.str = SpatialStr
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5600
		{
			yyVAL.str = ""
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5605
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5625
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5632
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5649
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = string("")
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5659
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5664
		{
			yyVAL.EnclosedBy = nil
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5668
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5673
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5677
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5682
		{
			yyVAL.sqlVal = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5686
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5691
		{
			yyVAL.sqlVal = nil
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5700
		{
			yyVAL.Fields = nil
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5704
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5709
		{
			yyVAL.Lines = nil
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5713
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5718
		{
			yyVAL.sqlVal = nil
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5722
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5738
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5744
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5748
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.lockType = LockRead
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.lockType = LockWrite
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5766
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5772
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5778
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5786
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6255
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6264
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
