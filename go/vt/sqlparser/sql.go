// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:61
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	setExprs                 SetExprs
	setExpr                  *SetExpr
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const CLASS_ORIGIN = 57524
const SUBCLASS_ORIGIN = 57525
const MESSAGE_TEXT = 57526
const MYSQL_ERRNO = 57527
const CONSTRAINT_CATALOG = 57528
const CONSTRAINT_SCHEMA = 57529
const CONSTRAINT_NAME = 57530
const CATALOG_NAME = 57531
const SCHEMA_NAME = 57532
const TABLE_NAME = 57533
const COLUMN_NAME = 57534
const CURSOR_NAME = 57535
const SIGNAL = 57536
const RESIGNAL = 57537
const SQLSTATE = 57538
const DECLARE = 57539
const CONDITION = 57540
const CURSOR = 57541
const CONTINUE = 57542
const EXIT = 57543
const UNDO = 57544
const HANDLER = 57545
const FOUND = 57546
const SQLWARNING = 57547
const SQLEXCEPTION = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const BIT = 57554
const TINYINT = 57555
const SMALLINT = 57556
const MEDIUMINT = 57557
const INT = 57558
const INTEGER = 57559
const BIGINT = 57560
const INTNUM = 57561
const REAL = 57562
const DOUBLE = 57563
const FLOAT_TYPE = 57564
const DECIMAL = 57565
const NUMERIC = 57566
const DEC = 57567
const FIXED = 57568
const PRECISION = 57569
const TIME = 57570
const TIMESTAMP = 57571
const DATETIME = 57572
const YEAR = 57573
const CHAR = 57574
const VARCHAR = 57575
const BOOL = 57576
const CHARACTER = 57577
const VARBINARY = 57578
const NCHAR = 57579
const NVARCHAR = 57580
const NATIONAL = 57581
const VARYING = 57582
const TEXT = 57583
const TINYTEXT = 57584
const MEDIUMTEXT = 57585
const LONGTEXT = 57586
const LONG = 57587
const BLOB = 57588
const TINYBLOB = 57589
const MEDIUMBLOB = 57590
const LONGBLOB = 57591
const JSON = 57592
const ENUM = 57593
const GEOMETRY = 57594
const POINT = 57595
const LINESTRING = 57596
const POLYGON = 57597
const GEOMETRYCOLLECTION = 57598
const MULTIPOINT = 57599
const MULTILINESTRING = 57600
const MULTIPOLYGON = 57601
const NULLX = 57602
const AUTO_INCREMENT = 57603
const APPROXNUM = 57604
const SIGNED = 57605
const UNSIGNED = 57606
const ZEROFILL = 57607
const LOCAL = 57608
const COLLATION = 57609
const DATABASES = 57610
const SCHEMAS = 57611
const TABLES = 57612
const FULL = 57613
const PROCESSLIST = 57614
const COLUMNS = 57615
const FIELDS = 57616
const ENGINES = 57617
const PLUGINS = 57618
const NAMES = 57619
const CHARSET = 57620
const GLOBAL = 57621
const SESSION = 57622
const ISOLATION = 57623
const LEVEL = 57624
const READ = 57625
const WRITE = 57626
const ONLY = 57627
const REPEATABLE = 57628
const COMMITTED = 57629
const UNCOMMITTED = 57630
const SERIALIZABLE = 57631
const CURRENT_TIMESTAMP = 57632
const DATABASE = 57633
const CURRENT_DATE = 57634
const CURRENT_USER = 57635
const CURRENT_TIME = 57636
const LOCALTIME = 57637
const LOCALTIMESTAMP = 57638
const UTC_DATE = 57639
const UTC_TIME = 57640
const UTC_TIMESTAMP = 57641
const REPLACE = 57642
const CONVERT = 57643
const CAST = 57644
const SUBSTR = 57645
const SUBSTRING = 57646
const GROUP_CONCAT = 57647
const SEPARATOR = 57648
const TIMESTAMPADD = 57649
const TIMESTAMPDIFF = 57650
const OVER = 57651
const WINDOW = 57652
const GROUPING = 57653
const GROUPS = 57654
const AVG = 57655
const BIT_AND = 57656
const BIT_OR = 57657
const BIT_XOR = 57658
const COUNT = 57659
const JSON_ARRAYAGG = 57660
const JSON_OBJECTAGG = 57661
const MAX = 57662
const MIN = 57663
const STDDEV_POP = 57664
const STDDEV = 57665
const STD = 57666
const STDDEV_SAMP = 57667
const SUM = 57668
const VAR_POP = 57669
const VARIANCE = 57670
const VAR_SAMP = 57671
const CUME_DIST = 57672
const DENSE_RANK = 57673
const FIRST_VALUE = 57674
const LAG = 57675
const LAST_VALUE = 57676
const LEAD = 57677
const NTH_VALUE = 57678
const NTILE = 57679
const ROW_NUMBER = 57680
const PERCENT_RANK = 57681
const RANK = 57682
const MATCH = 57683
const AGAINST = 57684
const BOOLEAN = 57685
const LANGUAGE = 57686
const WITH = 57687
const QUERY = 57688
const EXPANSION = 57689
const UNUSED = 57690
const ARRAY = 57691
const DESCRIPTION = 57692
const EMPTY = 57693
const EXCEPT = 57694
const JSON_TABLE = 57695
const LATERAL = 57696
const MEMBER = 57697
const RECURSIVE = 57698
const ACTIVE = 57699
const ADMIN = 57700
const BUCKETS = 57701
const CLONE = 57702
const COMPONENT = 57703
const DEFINITION = 57704
const ENFORCED = 57705
const EXCLUDE = 57706
const FOLLOWING = 57707
const GEOMCOLLECTION = 57708
const GET_MASTER_PUBLIC_KEY = 57709
const HISTOGRAM = 57710
const HISTORY = 57711
const INACTIVE = 57712
const INVISIBLE = 57713
const LOCKED = 57714
const MASTER_COMPRESSION_ALGORITHMS = 57715
const MASTER_PUBLIC_KEY_PATH = 57716
const MASTER_TLS_CIPHERSUITES = 57717
const MASTER_ZSTD_COMPRESSION_LEVEL = 57718
const NESTED = 57719
const NETWORK_NAMESPACE = 57720
const NOWAIT = 57721
const NULLS = 57722
const OJ = 57723
const OLD = 57724
const OPTIONAL = 57725
const ORDINALITY = 57726
const ORGANIZATION = 57727
const OTHERS = 57728
const PATH = 57729
const PERSIST = 57730
const PERSIST_ONLY = 57731
const PRECEDING = 57732
const PRIVILEGE_CHECKS_USER = 57733
const PROCESS = 57734
const RANDOM = 57735
const REFERENCE = 57736
const REQUIRE_ROW_FORMAT = 57737
const RESOURCE = 57738
const RESPECT = 57739
const RESTART = 57740
const RETAIN = 57741
const REUSE = 57742
const ROLE = 57743
const SECONDARY = 57744
const SECONDARY_ENGINE = 57745
const SECONDARY_LOAD = 57746
const SECONDARY_UNLOAD = 57747
const SKIP = 57748
const SRID = 57749
const THREAD_PRIORITY = 57750
const TIES = 57751
const UNBOUNDED = 57752
const VCPU = 57753
const VISIBLE = 57754
const SYSTEM = 57755
const INFILE = 57756

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 43,
	-2, 4,
	-1, 37,
	141, 898,
	-2, 115,
	-1, 44,
	180, 486,
	181, 486,
	-2, 476,
	-1, 51,
	1, 1301,
	432, 1301,
	-2, 506,
	-1, 424,
	127, 908,
	-2, 902,
	-1, 425,
	127, 909,
	-2, 903,
	-1, 526,
	97, 1226,
	127, 1226,
	-2, 79,
	-1, 527,
	97, 1127,
	127, 1127,
	-2, 80,
	-1, 532,
	97, 1082,
	127, 1082,
	-2, 865,
	-1, 534,
	97, 1165,
	127, 1165,
	-2, 867,
	-1, 741,
	5, 43,
	-2, 500,
	-1, 745,
	5, 43,
	-2, 499,
	-1, 959,
	1, 560,
	5, 560,
	12, 560,
	13, 560,
	14, 560,
	15, 560,
	17, 560,
	19, 560,
	30, 560,
	31, 560,
	56, 560,
	57, 560,
	58, 560,
	59, 560,
	60, 560,
	62, 560,
	63, 560,
	66, 560,
	67, 560,
	69, 560,
	70, 560,
	432, 560,
	-2, 590,
	-1, 963,
	67, 60,
	69, 60,
	-2, 64,
	-1, 1150,
	127, 911,
	-2, 907,
	-1, 1312,
	68, 349,
	-2, 1048,
	-1, 1315,
	68, 345,
	71, 345,
	-2, 983,
	-1, 1316,
	68, 346,
	71, 346,
	-2, 993,
	-1, 1396,
	68, 421,
	71, 421,
	-2, 389,
	-1, 1442,
	5, 44,
	-2, 656,
	-1, 1503,
	5, 43,
	-2, 842,
	-1, 1603,
	5, 43,
	-2, 81,
	-1, 1753,
	1, 611,
	5, 611,
	12, 611,
	13, 611,
	14, 611,
	15, 611,
	17, 611,
	19, 611,
	30, 611,
	31, 611,
	56, 611,
	57, 611,
	58, 611,
	59, 611,
	60, 611,
	62, 611,
	63, 611,
	66, 611,
	67, 611,
	69, 611,
	70, 611,
	432, 611,
	-2, 590,
	-1, 1876,
	5, 44,
	-2, 843,
	-1, 1907,
	5, 43,
	-2, 81,
	-1, 1967,
	5, 43,
	-2, 845,
	-1, 2007,
	41, 918,
	-2, 916,
	-1, 2048,
	5, 43,
	-2, 193,
	-1, 2109,
	5, 44,
	-2, 846,
	-1, 2208,
	5, 43,
	-2, 145,
}

const yyPrivate = 57344

const yyLast = 25097

var yyAct = [...]int{

	458, 62, 2256, 2210, 2231, 2126, 2221, 2112, 2212, 2019,
	373, 2222, 2098, 1359, 2051, 7, 1884, 2050, 6, 2049,
	5, 2152, 2052, 8, 991, 2092, 2125, 1945, 1981, 2007,
	74, 1766, 1747, 1666, 1532, 1657, 1357, 1729, 522, 416,
	719, 1557, 429, 1124, 1264, 457, 1767, 1268, 1929, 884,
	1317, 2113, 1270, 1911, 1730, 403, 1816, 1665, 729, 541,
	1611, 1262, 1726, 62, 1309, 1293, 355, 358, 442, 1320,
	1299, 371, 95, 959, 1298, 1349, 1394, 408, 1735, 1426,
	1739, 543, 349, 1117, 1384, 1677, 1345, 1209, 1214, 1175,
	1633, 1594, 1136, 1071, 1634, 1253, 955, 1305, 422, 1091,
	976, 1206, 1152, 1188, 782, 789, 956, 538, 785, 2048,
	3, 427, 1246, 1313, 755, 537, 706, 975, 370, 412,
	525, 965, 684, 520, 834, 754, 2278, 528, 539, 517,
	900, 2274, 2264, 2246, 2244, 350, 351, 2226, 431, 354,
	901, 2205, 2160, 73, 1110, 1905, 1797, 1912, 2237, 2145,
	2220, 2106, 2193, 1333, 2144, 1914, 1711, 2105, 1694, 1472,
	78, 30, 1861, 683, 1541, 30, 1761, 1540, 1288, 1289,
	1542, 30, 364, 30, 1287, 2029, 849, 848, 858, 859,
	851, 852, 853, 854, 855, 856, 857, 850, 717, 1501,
	860, 1710, 80, 81, 82, 83, 84, 1762, 1763, 977,
	731, 978, 1966, 409, 353, 825, 1502, 352, 30, 773,
	63, 33, 34, 1577, 1266, 686, 1952, 689, 105, 101,
	102, 1319, 103, 71, 1917, 732, 733, 71, 30, 31,
	63, 33, 34, 71, 1321, 71, 1321, 1325, 1327, 1339,
	1326, 1334, 59, 1334, 1346, 1852, 1850, 368, 69, 2235,
	2157, 356, 35, 54, 55, 107, 106, 2155, 2156, 60,
	1915, 1916, 1918, 1919, 1920, 71, 1999, 2004, 2207, 2003,
	71, 471, 2002, 477, 479, 478, 475, 476, 474, 473,
	472, 2001, 2000, 1407, 1998, 1366, 45, 2046, 480, 481,
	71, 2078, 2079, 2219, 1612, 2149, 2150, 1406, 2114, 1886,
	728, 1524, 726, 727, 2192, 711, 63, 33, 34, 734,
	1365, 735, 732, 733, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 718, 718, 35, 725,
	1613, 724, 688, 687, 2093, 1659, 1247, 2044, 718, 1411,
	359, 990, 346, 1930, 1931, 1770, 62, 62, 1405, 2270,
	1821, 1551, 37, 65, 41, 40, 43, 990, 56, 990,
	742, 1047, 989, 744, 1639, 743, 2279, 1982, 1531, 1940,
	2276, 75, 781, 710, 714, 2265, 2247, 716, 347, 685,
	1984, 360, 694, 2081, 44, 68, 67, 104, 367, 52,
	53, 42, 366, 357, 367, 1616, 1061, 1334, 1052, 1403,
	1397, 1398, 1530, 1396, 1529, 1399, 1400, 357, 681, 62,
	712, 715, 1629, 713, 1614, 1615, 791, 777, 320, 1843,
	1348, 2260, 1939, 1584, 869, 1324, 100, 871, 1913, 838,
	2030, 990, 990, 57, 58, 747, 748, 821, 1796, 1836,
	1409, 1412, 990, 872, 873, 1545, 46, 66, 97, 48,
	49, 1983, 775, 1555, 2104, 741, 745, 882, 1537, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	1453, 899, 902, 902, 902, 908, 902, 902, 908, 902,
	908, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 720, 960, 70, 822, 64,
	1404, 70, 2201, 357, 774, 97, 739, 70, 1866, 70,
	1017, 874, 875, 876, 877, 878, 879, 880, 881, 64,
	1678, 1555, 709, 1938, 2216, 2258, 1402, 2211, 2259, 1554,
	2257, 1273, 1275, 99, 98, 1450, 1654, 1555, 1445, 70,
	954, 2214, 973, 1431, 70, 870, 528, 90, 883, 2159,
	823, 1415, 1128, 984, 971, 1569, 840, 702, 1555, 1294,
	1555, 1283, 1680, 1558, 70, 860, 1408, 872, 873, 1786,
	1574, 1573, 851, 852, 853, 854, 855, 856, 857, 850,
	1048, 1120, 860, 903, 905, 907, 909, 911, 913, 914,
	916, 708, 1570, 904, 906, 64, 910, 912, 736, 915,
	92, 94, 850, 1004, 89, 860, 1575, 833, 1567, 1092,
	99, 98, 1274, 1410, 1568, 1658, 1105, 1554, 87, 979,
	969, 1787, 1190, 1641, 1639, 988, 964, 746, 1647, 832,
	831, 1646, 1649, 1554, 962, 690, 2267, 1682, 2250, 2232,
	2249, 1375, 1686, 1159, 1681, 1018, 1679, 833, 1642, 1207,
	96, 1684, 872, 873, 1554, 86, 1554, 1653, 1157, 1158,
	1156, 1650, 1641, 1639, 1683, 831, 357, 990, 1696, 722,
	1643, 1640, 1207, 1572, 1461, 2213, 2215, 1685, 1687, 2153,
	2263, 2177, 833, 2176, 707, 718, 2202, 1642, 832, 831,
	1774, 738, 718, 718, 718, 2204, 853, 854, 855, 856,
	857, 850, 1054, 418, 860, 1093, 833, 718, 718, 1031,
	1034, 1035, 1036, 1037, 1038, 1039, 828, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 693, 1019, 1020, 1021, 1022, 998,
	1002, 1032, 999, 1005, 1001, 1003, 1000, 1376, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 2128, 2189, 718,
	71, 1116, 28, 2110, 1073, 723, 1142, 1144, 1145, 91,
	1155, 1904, 1143, 935, 936, 937, 938, 939, 923, 924,
	925, 940, 941, 926, 927, 928, 934, 942, 929, 930,
	931, 932, 933, 945, 944, 943, 946, 947, 949, 948,
	950, 1108, 1075, 1062, 1571, 832, 831, 1428, 1429, 1430,
	1095, 1096, 1078, 1079, 1903, 1127, 1448, 1098, 1447, 1599,
	1597, 1087, 1088, 833, 1125, 1126, 838, 1578, 696, 697,
	698, 699, 700, 2188, 1115, 832, 831, 1449, 2162, 407,
	1033, 848, 858, 859, 851, 852, 853, 854, 855, 856,
	857, 850, 62, 833, 860, 1100, 1101, 1129, 2134, 1103,
	365, 1149, 2043, 1997, 2271, 832, 831, 886, 1959, 1153,
	832, 831, 2154, 1074, 1111, 1106, 2153, 1600, 1114, 1901,
	1080, 1081, 1082, 833, 1133, 832, 831, 1176, 833, 1177,
	1130, 832, 831, 832, 831, 1089, 1090, 752, 1698, 962,
	832, 831, 1150, 833, 776, 786, 75, 1134, 787, 833,
	1135, 833, 1779, 1595, 1148, 1196, 1199, 2272, 833, 751,
	1391, 1151, 1208, 1131, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1102,
	1146, 1267, 514, 515, 1076, 1815, 960, 1113, 1817, 2175,
	960, 1183, 1185, 1543, 2174, 1544, 2041, 1193, 1973, 2194,
	1184, 883, 1154, 2015, 1179, 1180, 1895, 2191, 2139, 776,
	447, 446, 449, 450, 451, 452, 1186, 1558, 776, 448,
	453, 1210, 1895, 2136, 1895, 2045, 1973, 2037, 972, 2011,
	1278, 1218, 1219, 1817, 1280, 528, 1973, 1987, 1225, 1226,
	1227, 1228, 1973, 776, 2010, 1295, 1936, 1300, 539, 1220,
	1832, 1222, 1828, 1272, 1973, 1972, 849, 848, 858, 859,
	851, 852, 853, 854, 855, 856, 857, 850, 790, 1048,
	860, 1895, 1894, 1073, 718, 1825, 718, 1879, 776, 1414,
	776, 75, 1824, 1822, 841, 1807, 1150, 1806, 1322, 1323,
	883, 1328, 1329, 1330, 1331, 1332, 1276, 1805, 1296, 1838,
	1533, 1794, 1793, 1790, 1791, 1790, 1789, 1991, 1182, 1342,
	1343, 1344, 1285, 1284, 1281, 1306, 1443, 776, 1990, 962,
	1623, 885, 1204, 1303, 962, 1263, 1622, 1355, 962, 1250,
	776, 1533, 898, 1184, 1388, 1443, 1373, 62, 1372, 1351,
	1352, 1353, 1354, 1184, 776, 2009, 1178, 1099, 1347, 1070,
	1069, 1068, 1067, 1802, 791, 1059, 1057, 1839, 1056, 1780,
	1229, 1230, 1055, 1053, 704, 1234, 1273, 1275, 1237, 361,
	1432, 967, 1122, 1242, 987, 986, 967, 1727, 1533, 2141,
	972, 1335, 1336, 1337, 1338, 1277, 1874, 966, 1250, 1149,
	849, 848, 858, 859, 851, 852, 853, 854, 855, 856,
	857, 850, 1249, 1839, 860, 1803, 1792, 1749, 1631, 1546,
	849, 848, 858, 859, 851, 852, 853, 854, 855, 856,
	857, 850, 1153, 1121, 860, 1413, 1286, 968, 1377, 970,
	1150, 1443, 968, 1383, 966, 972, 1466, 1387, 1465, 1386,
	1104, 1250, 1296, 1371, 966, 1123, 883, 1274, 1385, 1419,
	1417, 1418, 1060, 779, 1420, 71, 780, 2147, 2137, 1748,
	2013, 1906, 1361, 1321, 1363, 1437, 1882, 1504, 1505, 1350,
	1773, 960, 960, 960, 960, 960, 1434, 1435, 1436, 1433,
	1740, 1741, 1746, 1346, 1550, 1367, 1439, 1341, 1267, 1340,
	1525, 1440, 1049, 771, 1442, 1444, 1358, 2241, 960, 1427,
	1446, 71, 2239, 2223, 1801, 1743, 1452, 1727, 1506, 1455,
	1456, 1457, 528, 1601, 1064, 1154, 1463, 1518, 1464, 1259,
	1260, 1467, 1468, 1745, 1469, 1470, 1513, 1460, 1474, 1475,
	1476, 1477, 1478, 1535, 1512, 1536, 2171, 1392, 2143, 1485,
	1486, 1487, 1534, 1489, 1490, 1528, 1492, 1493, 1494, 1495,
	1516, 1497, 1498, 1499, 1520, 1517, 1514, 413, 414, 1300,
	1663, 1515, 1416, 1527, 1137, 2169, 1425, 1507, 1424, 1964,
	1510, 1077, 1521, 1522, 1560, 1559, 1503, 1519, 1508, 1509,
	62, 1511, 1827, 1778, 1777, 1552, 2083, 2086, 1048, 1547,
	2132, 718, 2133, 718, 718, 1471, 1473, 1186, 425, 1097,
	2008, 2161, 1479, 1480, 1481, 1482, 2006, 1538, 2077, 962,
	962, 962, 962, 962, 1581, 1582, 1583, 1585, 1864, 1587,
	2076, 1589, 1590, 1591, 1592, 362, 962, 826, 827, 1621,
	1626, 1549, 1588, 985, 885, 783, 962, 769, 753, 750,
	749, 112, 705, 2184, 112, 1553, 1556, 784, 1872, 1943,
	112, 1125, 1126, 1596, 1390, 1598, 824, 849, 848, 858,
	859, 851, 852, 853, 854, 855, 856, 857, 850, 112,
	1362, 860, 858, 859, 851, 852, 853, 854, 855, 856,
	857, 850, 112, 1063, 860, 112, 546, 1660, 112, 1603,
	1604, 1382, 1668, 1702, 1139, 1140, 1579, 1580, 1632, 112,
	1624, 546, 1263, 1586, 1627, 1630, 1149, 112, 1644, 1695,
	1655, 1656, 1645, 1593, 1637, 826, 827, 2183, 1625, 1051,
	410, 411, 1628, 1732, 1638, 62, 1423, 2182, 2181, 1994,
	1635, 1648, 1652, 404, 1422, 2164, 2163, 2130, 2087, 1670,
	2021, 1669, 1963, 405, 75, 1751, 2020, 1150, 1673, 885,
	1755, 1756, 1757, 1194, 1195, 1689, 1946, 1672, 1688, 1676,
	1728, 1737, 1533, 1454, 528, 2243, 2242, 1674, 1731, 1690,
	1691, 1451, 1692, 1693, 1606, 1607, 1608, 2243, 1094, 1617,
	829, 1619, 1620, 1758, 1699, 1700, 2242, 2034, 1776, 1760,
	1750, 1708, 1709, 1119, 363, 77, 1714, 2062, 47, 1717,
	1754, 2064, 19, 79, 1722, 50, 1668, 1300, 1734, 1300,
	72, 1744, 2063, 18, 1, 1771, 2065, 20, 1772, 1255,
	1258, 1259, 1260, 1256, 1752, 1257, 1261, 2066, 21, 1740,
	1741, 1355, 2061, 15, 1733, 2131, 1769, 1799, 1800, 1765,
	2082, 1764, 1292, 2060, 14, 1753, 2054, 10, 2069, 25,
	2084, 1703, 1704, 1705, 1706, 1707, 2005, 1804, 2068, 24,
	2070, 26, 2059, 13, 1925, 1781, 1782, 2056, 12, 2055,
	11, 1910, 1785, 1909, 1784, 2053, 9, 1610, 1609, 1788,
	770, 1116, 1109, 1255, 1258, 1259, 1260, 1256, 1775, 1257,
	1261, 1636, 1401, 2091, 1307, 1215, 1297, 1819, 1712, 1713,
	536, 1715, 1716, 85, 1718, 1719, 1720, 1721, 1374, 1723,
	1724, 1725, 1356, 721, 1934, 1859, 328, 1304, 1565, 112,
	1837, 2085, 772, 1048, 546, 546, 1840, 1564, 1814, 1820,
	1813, 1561, 1831, 1576, 1318, 1563, 546, 1818, 1562, 2080,
	1566, 995, 993, 994, 992, 1810, 997, 996, 1823, 332,
	523, 980, 2120, 1865, 1835, 1783, 830, 93, 51, 1937,
	1651, 1809, 1395, 88, 730, 112, 334, 868, 1845, 1846,
	1421, 1847, 1539, 529, 1849, 2148, 1851, 1841, 1848, 788,
	2094, 1459, 897, 1205, 430, 1844, 790, 1523, 1880, 2097,
	1842, 1141, 1890, 1891, 1892, 445, 1853, 1854, 444, 443,
	440, 441, 1811, 1381, 1132, 1500, 842, 1795, 428, 420,
	1897, 1873, 958, 951, 456, 1389, 1254, 837, 1252, 962,
	1251, 62, 1065, 518, 1742, 1300, 1888, 1738, 1265, 957,
	369, 61, 737, 345, 1893, 1889, 1860, 2028, 32, 76,
	1875, 1876, 1877, 1878, 415, 27, 17, 1441, 740, 22,
	1922, 1923, 1924, 16, 1393, 1547, 691, 36, 1896, 960,
	1887, 39, 1932, 38, 1605, 1898, 1364, 2119, 2209, 1899,
	1462, 756, 2230, 2151, 2067, 2071, 1933, 2058, 2057, 2196,
	23, 2195, 4, 406, 1921, 29, 2, 0, 0, 0,
	1926, 1927, 1928, 1948, 1949, 1732, 0, 0, 1968, 530,
	1941, 1355, 542, 1947, 1668, 0, 1769, 1751, 0, 1942,
	0, 0, 0, 112, 112, 112, 0, 695, 0, 1971,
	1867, 1868, 0, 0, 0, 0, 1869, 0, 546, 1870,
	1907, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	1731, 1993, 0, 1995, 0, 0, 0, 0, 0, 1965,
	0, 0, 1974, 0, 1935, 1975, 1970, 0, 1992, 0,
	1986, 0, 1985, 1900, 2018, 1902, 1980, 0, 1958, 0,
	0, 0, 0, 1962, 1953, 1954, 1955, 1956, 1957, 1272,
	0, 1976, 1960, 1961, 1996, 0, 1988, 1732, 1989, 62,
	0, 0, 0, 0, 0, 0, 2014, 962, 1977, 1978,
	1979, 0, 2022, 2012, 0, 0, 0, 1967, 2023, 0,
	0, 2017, 0, 0, 0, 0, 62, 0, 0, 0,
	1951, 2047, 0, 0, 2035, 0, 0, 0, 0, 2040,
	960, 0, 1731, 2033, 0, 0, 0, 0, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2039,
	0, 2096, 2100, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 2025, 2026, 2027, 2089, 0, 0, 2031, 2032,
	2101, 2090, 0, 0, 2088, 0, 0, 2102, 0, 0,
	546, 2115, 0, 0, 2107, 0, 0, 0, 112, 0,
	0, 0, 112, 2108, 0, 112, 62, 528, 2036, 0,
	0, 112, 0, 546, 0, 0, 0, 0, 0, 0,
	546, 546, 546, 112, 112, 112, 0, 0, 0, 0,
	112, 0, 0, 0, 1697, 546, 546, 0, 0, 0,
	0, 2142, 2129, 2127, 0, 2124, 2103, 0, 0, 0,
	542, 542, 0, 2135, 2109, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 2166, 2158, 0, 0, 962, 0,
	0, 0, 2100, 0, 2170, 62, 112, 546, 112, 0,
	546, 62, 2173, 2165, 2172, 2168, 2187, 0, 0, 2167,
	0, 0, 0, 2178, 0, 2190, 1759, 0, 62, 2138,
	0, 2180, 0, 62, 0, 0, 0, 0, 2200, 0,
	2206, 2199, 0, 2198, 0, 2146, 2197, 0, 0, 2218,
	2185, 0, 62, 0, 2203, 62, 62, 0, 112, 2224,
	62, 2187, 0, 0, 837, 2233, 0, 0, 0, 0,
	2236, 0, 0, 0, 0, 0, 0, 62, 2225, 2240,
	62, 2227, 2187, 2238, 0, 2251, 0, 0, 2253, 0,
	0, 0, 0, 0, 0, 62, 2261, 62, 0, 0,
	2187, 62, 2187, 0, 0, 0, 2248, 0, 0, 0,
	546, 0, 0, 0, 0, 62, 0, 0, 62, 0,
	2187, 0, 0, 340, 0, 62, 0, 2266, 0, 62,
	2187, 0, 0, 2217, 2187, 0, 0, 0, 0, 0,
	0, 0, 2208, 0, 2275, 0, 546, 546, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 337, 0, 0, 0, 0, 0, 961, 530, 0,
	0, 0, 0, 0, 981, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 2254, 0, 0, 0, 112,
	112, 1862, 2268, 2269, 112, 112, 0, 0, 112, 112,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 321, 0, 546, 546, 0, 0, 348,
	324, 0, 0, 0, 0, 885, 0, 0, 0, 0,
	333, 338, 339, 1881, 0, 0, 1883, 0, 0, 0,
	0, 0, 0, 0, 885, 0, 0, 0, 0, 0,
	0, 519, 0, 0, 535, 0, 0, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 692, 331,
	1858, 0, 336, 0, 0, 0, 701, 0, 0, 0,
	0, 112, 546, 0, 546, 844, 0, 847, 1863, 112,
	112, 0, 0, 112, 861, 862, 863, 864, 865, 866,
	867, 1857, 845, 846, 843, 849, 848, 858, 859, 851,
	852, 853, 854, 855, 856, 857, 850, 0, 0, 860,
	0, 112, 112, 112, 0, 0, 1050, 849, 848, 858,
	859, 851, 852, 853, 854, 855, 856, 857, 850, 1856,
	0, 860, 322, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 0, 542, 542, 542, 849,
	848, 858, 859, 851, 852, 853, 854, 855, 856, 857,
	850, 542, 542, 860, 335, 325, 326, 0, 343, 0,
	0, 0, 327, 329, 0, 323, 342, 341, 0, 0,
	849, 848, 858, 859, 851, 852, 853, 854, 855, 856,
	857, 850, 0, 0, 860, 0, 0, 0, 0, 0,
	0, 0, 0, 1187, 1192, 0, 0, 0, 1198, 1201,
	1202, 1203, 0, 542, 0, 0, 1118, 0, 849, 848,
	858, 859, 851, 852, 853, 854, 855, 856, 857, 850,
	0, 418, 860, 0, 0, 1213, 0, 1216, 1217, 0,
	0, 0, 1221, 0, 1223, 1224, 885, 1855, 0, 0,
	0, 0, 1231, 1232, 1233, 0, 1235, 1236, 0, 1238,
	1239, 1240, 1241, 0, 1243, 1244, 1245, 0, 0, 112,
	112, 112, 112, 112, 0, 542, 0, 0, 703, 0,
	0, 112, 0, 0, 0, 0, 112, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 2095, 2099, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 546, 0, 0,
	0, 0, 0, 0, 778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 849, 848, 858, 859,
	851, 852, 853, 854, 855, 856, 857, 850, 0, 0,
	860, 0, 1211, 1212, 0, 2116, 2117, 0, 849, 848,
	858, 859, 851, 852, 853, 854, 855, 856, 857, 850,
	0, 1017, 860, 1671, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	112, 546, 546, 0, 849, 848, 858, 859, 851, 852,
	853, 854, 855, 856, 857, 850, 0, 530, 860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 542, 542, 0, 2099, 0, 0, 820, 0, 0,
	1438, 0, 0, 546, 546, 0, 2179, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 849, 848, 858, 859, 851, 852, 853, 854, 855,
	856, 857, 850, 0, 1004, 860, 0, 0, 0, 0,
	110, 0, 953, 344, 963, 0, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	542, 546, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 419, 0,
	0, 521, 531, 0, 110, 2252, 0, 110, 0, 0,
	1458, 0, 0, 546, 546, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 546, 1483, 1484, 0, 0, 0,
	1488, 0, 0, 1491, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 542, 546, 546, 0, 546, 0, 546,
	1031, 1034, 1035, 1036, 1037, 1038, 1039, 0, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 0, 1019, 1020, 1021, 1022,
	998, 1002, 1032, 999, 1005, 1001, 1003, 1000, 0, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1058, 112, 0,
	0, 519, 0, 0, 1066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	112, 546, 1083, 1084, 1085, 0, 0, 0, 546, 1086,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 546, 546, 546, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 1138, 0, 0,
	0, 0, 546, 1602, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 542, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	1662, 0, 0, 0, 0, 546, 0, 112, 0, 0,
	0, 0, 546, 0, 0, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 546, 0, 0, 0, 0, 112, 1701, 112, 0,
	1248, 0, 0, 0, 546, 0, 0, 30, 0, 63,
	33, 34, 0, 0, 1279, 546, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 530, 69, 0, 1118,
	1736, 35, 110, 110, 110, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 546,
	1736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	542, 542, 0, 542, 0, 1768, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 2229, 2232, 2228, 0, 0,
	1360, 0, 0, 0, 0, 0, 0, 0, 1368, 1369,
	0, 0, 1370, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 37, 65, 41, 40, 43, 0, 0, 0, 0,
	0, 0, 1380, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 68, 67, 0, 0, 0, 0,
	42, 0, 0, 1826, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 546, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 110, 0, 0,
	0, 110, 57, 58, 110, 2074, 0, 0, 0, 0,
	1072, 0, 0, 0, 0, 2075, 66, 0, 48, 49,
	0, 0, 110, 110, 110, 0, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	1885, 1885, 1885, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 0, 0, 110, 0, 372, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1072, 0,
	0, 1944, 0, 70, 0, 0, 0, 30, 542, 63,
	33, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 1191, 1191, 1885, 0, 0,
	1191, 1191, 1191, 1191, 0, 0, 0, 531, 0, 1618,
	1768, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 1768, 0, 0, 0, 0, 0, 1191, 1191, 1191,
	1191, 0, 0, 1191, 1191, 1191, 1191, 1191, 0, 0,
	0, 0, 2072, 0, 1191, 1191, 1191, 2277, 1191, 1191,
	0, 1191, 1191, 1191, 1191, 2016, 1191, 1191, 1191, 1664,
	110, 0, 0, 0, 0, 0, 0, 0, 110, 372,
	0, 0, 0, 110, 110, 0, 0, 110, 1282, 1072,
	531, 37, 65, 41, 40, 43, 0, 0, 2038, 0,
	0, 0, 1072, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 30, 0, 63, 33, 34, 0, 0, 0,
	0, 0, 0, 44, 68, 67, 59, 0, 0, 0,
	42, 0, 69, 0, 0, 0, 35, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 57, 58, 71, 2074, 0, 0, 110, 110,
	0, 0, 110, 0, 0, 2075, 66, 0, 48, 49,
	0, 0, 0, 0, 0, 0, 0, 2072, 0, 542,
	0, 0, 2273, 0, 0, 0, 0, 0, 0, 0,
	1378, 1379, 110, 0, 0, 0, 0, 0, 2140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 37, 65, 41, 40,
	43, 0, 0, 0, 0, 0, 1072, 0, 0, 1798,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 1808, 0, 0, 0, 44, 68,
	67, 0, 1885, 0, 0, 42, 0, 1812, 64, 0,
	0, 0, 0, 0, 542, 0, 0, 0, 30, 0,
	63, 33, 34, 0, 0, 0, 0, 0, 0, 1829,
	1191, 0, 59, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 35, 0, 0, 0, 0, 57, 58, 0,
	2074, 0, 1191, 70, 0, 0, 0, 0, 0, 0,
	2075, 66, 0, 48, 49, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1191, 1191, 0,
	71, 0, 1191, 0, 0, 1191, 0, 0, 0, 0,
	1191, 0, 0, 0, 0, 0, 0, 531, 110, 110,
	110, 110, 110, 2072, 0, 0, 0, 0, 2262, 0,
	372, 0, 0, 0, 0, 110, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 37, 65, 41, 40, 43, 0, 30, 0,
	63, 33, 34, 64, 0, 0, 0, 0, 2073, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 35, 0, 44, 68, 67, 0, 0, 1908,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 57, 58, 0, 2074, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 2075, 66, 2245, 48,
	49, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 30, 0, 63,
	33, 34, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 59, 37, 65, 41, 40, 43, 69, 0, 0,
	1191, 35, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 1191, 0, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 68, 67, 0, 0, 0,
	30, 42, 63, 33, 34, 0, 0, 0, 0, 71,
	2234, 0, 0, 0, 59, 0, 0, 0, 0, 64,
	69, 0, 0, 0, 35, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 57, 58, 0, 2074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2075, 66, 0, 48,
	49, 0, 71, 0, 70, 0, 0, 0, 0, 0,
	0, 37, 65, 41, 40, 43, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2072, 0, 2073, 0, 0,
	2186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 68, 67, 0, 0, 0, 0,
	42, 0, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 37, 65, 41, 40, 43, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	2073, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 0, 57, 58, 110, 2074, 44, 68, 67, 0,
	0, 0, 0, 42, 0, 2075, 66, 110, 48, 49,
	0, 0, 30, 0, 63, 33, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 110,
	0, 0, 69, 0, 70, 0, 35, 0, 0, 0,
	0, 0, 0, 0, 419, 57, 58, 0, 2074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2075, 66,
	0, 48, 49, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2072, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 37, 65, 41, 40,
	43, 0, 0, 70, 0, 0, 0, 0, 0, 0,
	0, 64, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 44, 68,
	67, 0, 0, 0, 0, 42, 0, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 57, 58, 0,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2075, 66, 0, 48, 49, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 644,
	287, 602, 667, 574, 591, 678, 592, 595, 633, 560,
	614, 223, 589, 561, 0, 578, 551, 585, 552, 575,
	604, 157, 573, 646, 617, 666, 187, 629, 70, 148,
	195, 193, 0, 0, 0, 229, 285, 665, 610, 0,
	673, 190, 0, 626, 308, 276, 208, 110, 0, 606,
	653, 612, 642, 601, 635, 567, 625, 668, 590, 631,
	669, 0, 0, 0, 2118, 0, 0, 0, 0, 0,
	0, 0, 531, 138, 0, 628, 663, 587, 630, 632,
	549, 627, 110, 555, 562, 677, 659, 581, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 605, 613, 639,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 623, 0, 0, 0, 563, 556, 0, 0, 603,
	0, 0, 0, 566, 117, 580, 640, 0, 547, 167,
	209, 128, 643, 658, 600, 180, 314, 662, 597, 596,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 588, 548, 647, 576, 586, 149, 584,
	254, 227, 303, 0, 620, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 599, 634, 577, 146, 637, 624,
	652, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	2121, 2122, 2123, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 553, 0, 278, 306, 319, 196, 135, 572, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	570, 571, 568, 0, 569, 615, 616, 670, 671, 672,
	641, 564, 0, 654, 655, 0, 645, 660, 661, 636,
	679, 593, 594, 554, 557, 558, 559, 565, 607, 608,
	619, 622, 650, 649, 648, 651, 656, 675, 674, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 618, 113, 124, 189, 680, 247, 163, 307, 550,
	155, 0, 0, 609, 611, 621, 638, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 657, 664, 644, 287, 602, 667, 574,
	591, 678, 592, 595, 633, 560, 614, 223, 589, 561,
	0, 578, 551, 585, 552, 575, 604, 157, 573, 646,
	617, 666, 187, 629, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 665, 610, 0, 673, 190, 0, 626,
	308, 276, 208, 0, 0, 606, 653, 612, 642, 601,
	635, 567, 625, 668, 590, 631, 669, 0, 0, 0,
	545, 0, 1301, 1302, 0, 0, 0, 0, 0, 138,
	0, 628, 663, 587, 630, 632, 549, 627, 0, 555,
	562, 677, 659, 581, 582, 583, 1548, 0, 0, 0,
	0, 0, 0, 605, 613, 639, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 623, 0, 0,
	0, 563, 556, 0, 0, 603, 0, 0, 0, 566,
	117, 580, 640, 0, 547, 167, 209, 128, 643, 658,
	600, 180, 314, 662, 597, 596, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 588,
	548, 647, 576, 586, 149, 584, 254, 227, 303, 0,
	620, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	599, 634, 577, 146, 637, 624, 652, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 553, 0, 278,
	306, 319, 196, 135, 572, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 570, 571, 568, 0,
	569, 615, 616, 670, 671, 672, 641, 564, 0, 654,
	655, 0, 645, 660, 661, 636, 679, 593, 594, 554,
	557, 558, 559, 565, 607, 608, 619, 622, 650, 649,
	648, 651, 656, 675, 674, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 113, 124,
	189, 680, 247, 163, 307, 550, 155, 0, 0, 609,
	611, 621, 638, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 657,
	664, 644, 287, 602, 667, 574, 591, 678, 592, 595,
	633, 560, 614, 223, 589, 561, 0, 578, 551, 585,
	552, 575, 604, 157, 573, 646, 617, 666, 187, 629,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 665,
	610, 0, 673, 190, 0, 626, 308, 276, 208, 0,
	0, 606, 653, 612, 642, 601, 635, 567, 625, 668,
	590, 631, 669, 0, 0, 0, 545, 0, 1301, 1302,
	0, 0, 0, 0, 0, 138, 0, 628, 663, 587,
	630, 632, 549, 627, 0, 555, 562, 677, 659, 581,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 605,
	613, 639, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 623, 0, 0, 0, 563, 556, 0,
	0, 603, 0, 0, 0, 566, 117, 580, 640, 0,
	547, 167, 209, 128, 643, 658, 600, 180, 314, 662,
	597, 596, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 588, 548, 647, 576, 586,
	149, 584, 254, 227, 303, 0, 620, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 599, 634, 577, 146,
	637, 624, 652, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 553, 0, 278, 306, 319, 196, 135,
	572, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 570, 571, 568, 0, 569, 615, 616, 670,
	671, 672, 641, 564, 0, 654, 655, 0, 645, 660,
	661, 636, 679, 593, 594, 554, 557, 558, 559, 565,
	607, 608, 619, 622, 650, 649, 648, 651, 656, 675,
	674, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 113, 124, 189, 680, 247, 163,
	307, 550, 155, 0, 0, 609, 611, 621, 638, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 657, 664, 644, 287, 602,
	667, 574, 591, 678, 592, 595, 633, 560, 614, 223,
	589, 561, 0, 578, 551, 585, 552, 575, 604, 157,
	573, 646, 617, 666, 187, 629, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 665, 610, 0, 673, 190,
	0, 626, 308, 276, 208, 0, 0, 606, 653, 612,
	642, 601, 635, 567, 625, 668, 590, 631, 669, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 628, 663, 587, 630, 632, 549, 627,
	0, 555, 562, 677, 659, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 605, 613, 639, 598, 0,
	0, 0, 0, 0, 0, 1950, 0, 579, 0, 623,
	0, 0, 0, 563, 556, 0, 0, 603, 0, 0,
	0, 566, 117, 580, 640, 0, 547, 167, 209, 128,
	643, 658, 600, 180, 314, 662, 597, 596, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 588, 548, 647, 576, 586, 149, 584, 254, 227,
	303, 0, 620, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 599, 634, 577, 146, 637, 624, 652, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 553,
	0, 278, 306, 319, 196, 135, 572, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 570, 571,
	568, 0, 569, 615, 616, 670, 671, 672, 641, 564,
	0, 654, 655, 0, 645, 660, 661, 636, 679, 593,
	594, 554, 557, 558, 559, 565, 607, 608, 619, 622,
	650, 649, 648, 651, 656, 675, 674, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	113, 124, 189, 680, 247, 163, 307, 550, 155, 0,
	0, 609, 611, 621, 638, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 657, 664, 644, 287, 602, 667, 574, 591, 678,
	592, 595, 633, 560, 614, 223, 589, 561, 0, 578,
	551, 585, 552, 575, 604, 157, 573, 646, 617, 666,
	187, 629, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 665, 610, 0, 673, 190, 0, 626, 308, 276,
	208, 0, 0, 606, 653, 612, 642, 601, 635, 567,
	625, 668, 590, 631, 669, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 628,
	663, 587, 630, 632, 549, 627, 0, 555, 562, 677,
	659, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 605, 613, 639, 598, 0, 0, 0, 0, 0,
	0, 1675, 0, 579, 0, 623, 0, 0, 0, 563,
	556, 0, 0, 603, 0, 0, 0, 566, 117, 580,
	640, 0, 547, 167, 209, 128, 643, 658, 600, 180,
	314, 662, 597, 596, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 588, 548, 647,
	576, 586, 149, 584, 254, 227, 303, 0, 620, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 599, 634,
	577, 146, 637, 624, 652, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 553, 0, 278, 306, 319,
	196, 135, 572, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 570, 571, 568, 0, 569, 615,
	616, 670, 671, 672, 641, 564, 0, 654, 655, 0,
	645, 660, 661, 636, 679, 593, 594, 554, 557, 558,
	559, 565, 607, 608, 619, 622, 650, 649, 648, 651,
	656, 675, 674, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 618, 113, 124, 189, 680,
	247, 163, 307, 550, 155, 0, 0, 609, 611, 621,
	638, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 657, 664, 644,
	287, 602, 667, 574, 591, 678, 592, 595, 633, 560,
	614, 223, 589, 561, 0, 578, 551, 585, 552, 575,
	604, 157, 573, 646, 617, 666, 187, 629, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 665, 610, 0,
	673, 190, 0, 626, 308, 276, 208, 0, 0, 606,
	653, 612, 642, 601, 635, 567, 625, 668, 590, 631,
	669, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 628, 663, 587, 630, 632,
	549, 627, 0, 555, 562, 677, 659, 581, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 605, 613, 639,
	598, 0, 0, 0, 0, 0, 0, 1667, 0, 579,
	0, 623, 0, 0, 0, 563, 556, 0, 0, 603,
	0, 0, 0, 566, 117, 580, 640, 0, 547, 167,
	209, 128, 643, 658, 600, 180, 314, 662, 597, 596,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 588, 548, 647, 576, 586, 149, 584,
	254, 227, 303, 0, 620, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 599, 634, 577, 146, 637, 624,
	652, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 553, 0, 278, 306, 319, 196, 135, 572, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	570, 571, 568, 0, 569, 615, 616, 670, 671, 672,
	641, 564, 0, 654, 655, 0, 645, 660, 661, 636,
	679, 593, 594, 554, 557, 558, 559, 565, 607, 608,
	619, 622, 650, 649, 648, 651, 656, 675, 674, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 618, 113, 124, 189, 680, 247, 163, 307, 550,
	155, 0, 0, 609, 611, 621, 638, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 657, 664, 644, 287, 602, 667, 574,
	591, 678, 592, 595, 633, 560, 614, 223, 589, 561,
	0, 578, 551, 585, 552, 575, 604, 157, 573, 646,
	617, 666, 187, 629, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 665, 610, 0, 673, 190, 0, 626,
	308, 276, 208, 0, 0, 606, 653, 612, 642, 601,
	635, 567, 625, 668, 590, 631, 669, 71, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 628, 663, 587, 630, 632, 549, 627, 0, 555,
	562, 677, 659, 581, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 605, 613, 639, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 623, 0, 0,
	0, 563, 556, 0, 0, 603, 0, 0, 0, 566,
	117, 580, 640, 0, 547, 167, 209, 128, 643, 658,
	600, 180, 314, 662, 597, 596, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 588,
	548, 647, 576, 586, 149, 584, 254, 227, 303, 0,
	620, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	599, 634, 577, 146, 637, 624, 652, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 553, 0, 278,
	306, 319, 196, 135, 572, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 570, 571, 568, 0,
	569, 615, 616, 670, 671, 672, 641, 564, 0, 654,
	655, 0, 645, 660, 661, 636, 679, 593, 594, 554,
	557, 558, 559, 565, 607, 608, 619, 622, 650, 649,
	648, 651, 656, 675, 674, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 113, 124,
	189, 680, 247, 163, 307, 550, 155, 0, 0, 609,
	611, 621, 638, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 657,
	664, 644, 287, 602, 667, 574, 591, 678, 592, 595,
	633, 560, 614, 223, 589, 561, 0, 578, 551, 585,
	552, 575, 604, 157, 573, 646, 617, 666, 187, 629,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 665,
	610, 0, 673, 190, 0, 626, 308, 276, 208, 0,
	0, 606, 653, 612, 642, 601, 635, 567, 625, 668,
	590, 631, 669, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 628, 663, 587,
	630, 632, 549, 627, 0, 555, 562, 677, 659, 581,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 605,
	613, 639, 598, 0, 0, 0, 0, 0, 0, 1283,
	0, 579, 0, 623, 0, 0, 0, 563, 556, 0,
	0, 603, 0, 0, 0, 566, 117, 580, 640, 0,
	547, 167, 209, 128, 643, 658, 600, 180, 314, 662,
	597, 596, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 588, 548, 647, 576, 586,
	149, 584, 254, 227, 303, 0, 620, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 599, 634, 577, 146,
	637, 624, 652, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 553, 0, 278, 306, 319, 196, 135,
	572, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 570, 571, 568, 0, 569, 615, 616, 670,
	671, 672, 641, 564, 0, 654, 655, 0, 645, 660,
	661, 636, 679, 593, 594, 554, 557, 558, 559, 565,
	607, 608, 619, 622, 650, 649, 648, 651, 656, 675,
	674, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 113, 124, 189, 680, 247, 163,
	307, 550, 155, 0, 0, 609, 611, 621, 638, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 657, 664, 644, 287, 602,
	667, 574, 591, 678, 592, 595, 633, 560, 614, 223,
	589, 561, 0, 578, 551, 585, 552, 575, 604, 157,
	573, 646, 617, 666, 187, 629, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 665, 610, 0, 673, 190,
	0, 626, 308, 276, 208, 0, 0, 606, 653, 612,
	642, 601, 635, 567, 625, 668, 590, 631, 669, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 628, 663, 587, 630, 632, 549, 627,
	0, 555, 562, 677, 659, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 605, 613, 639, 598, 0,
	0, 0, 0, 0, 0, 1147, 0, 579, 0, 623,
	0, 0, 0, 563, 556, 0, 0, 603, 0, 0,
	0, 566, 117, 580, 640, 0, 547, 167, 209, 128,
	643, 658, 600, 180, 314, 662, 597, 596, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 588, 548, 647, 576, 586, 149, 584, 254, 227,
	303, 0, 620, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 599, 634, 577, 146, 637, 624, 652, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 553,
	0, 278, 306, 319, 196, 135, 572, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 570, 571,
	568, 0, 569, 615, 616, 670, 671, 672, 641, 564,
	0, 654, 655, 0, 645, 660, 661, 636, 679, 593,
	594, 554, 557, 558, 559, 565, 607, 608, 619, 622,
	650, 649, 648, 651, 656, 675, 674, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	113, 124, 189, 680, 247, 163, 307, 550, 155, 0,
	0, 609, 611, 621, 638, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 657, 664, 644, 287, 602, 667, 574, 591, 678,
	592, 595, 633, 560, 614, 223, 589, 561, 0, 578,
	551, 585, 552, 575, 604, 157, 573, 646, 617, 666,
	187, 629, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 665, 610, 0, 673, 190, 0, 626, 308, 276,
	208, 0, 0, 606, 653, 612, 642, 601, 635, 567,
	625, 668, 590, 631, 669, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 628,
	663, 587, 630, 632, 549, 627, 0, 555, 562, 677,
	659, 581, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 605, 613, 639, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 623, 0, 0, 0, 563,
	556, 0, 0, 603, 0, 0, 0, 566, 117, 580,
	640, 0, 547, 167, 209, 128, 643, 658, 600, 180,
	314, 662, 597, 596, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 588, 548, 647,
	576, 586, 149, 584, 254, 227, 303, 0, 620, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 599, 634,
	577, 146, 637, 624, 652, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 553, 0, 278, 306, 319,
	196, 135, 572, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 570, 571, 568, 0, 569, 615,
	616, 670, 671, 672, 641, 564, 0, 654, 655, 0,
	645, 660, 661, 636, 679, 593, 594, 554, 557, 558,
	559, 565, 607, 608, 619, 622, 650, 649, 648, 651,
	656, 675, 674, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 618, 113, 124, 189, 680,
	247, 163, 307, 550, 155, 0, 0, 609, 611, 621,
	638, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 657, 664, 644,
	287, 602, 667, 574, 591, 678, 592, 595, 633, 560,
	614, 223, 589, 561, 0, 578, 551, 585, 552, 575,
	604, 157, 573, 646, 617, 666, 187, 629, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 665, 610, 0,
	673, 190, 0, 626, 308, 276, 208, 0, 0, 606,
	653, 612, 642, 601, 635, 567, 625, 668, 590, 631,
	669, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 628, 663, 587, 630, 632,
	549, 627, 0, 555, 562, 677, 659, 581, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 605, 613, 639,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 579,
	0, 623, 0, 0, 0, 563, 556, 0, 0, 603,
	0, 0, 0, 566, 117, 580, 640, 0, 547, 167,
	209, 128, 643, 658, 600, 180, 314, 662, 597, 596,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 588, 548, 647, 576, 586, 149, 584,
	254, 227, 303, 0, 620, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 599, 634, 577, 146, 637, 624,
	652, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 553, 0, 278, 306, 319, 196, 135, 572, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	570, 571, 568, 0, 569, 615, 616, 670, 671, 672,
	641, 564, 0, 654, 655, 0, 645, 660, 661, 636,
	679, 593, 594, 554, 557, 558, 559, 565, 607, 608,
	619, 622, 650, 649, 648, 651, 656, 675, 674, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 618, 113, 124, 189, 680, 247, 163, 307, 550,
	155, 0, 0, 609, 611, 621, 638, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 657, 664, 644, 287, 602, 667, 574,
	591, 678, 592, 595, 633, 560, 614, 223, 589, 561,
	0, 578, 551, 585, 552, 575, 604, 157, 573, 646,
	617, 666, 187, 629, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 1312, 1316, 0, 673, 190, 0, 626,
	308, 276, 208, 0, 0, 606, 653, 612, 642, 601,
	635, 567, 625, 668, 590, 631, 669, 0, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 628, 663, 587, 630, 632, 549, 627, 0, 555,
	562, 677, 659, 581, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 605, 613, 639, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 623, 0, 0,
	0, 563, 556, 0, 0, 603, 0, 0, 0, 566,
	117, 580, 640, 0, 547, 167, 209, 128, 643, 658,
	1315, 180, 314, 662, 597, 596, 1310, 0, 1311, 170,
	188, 544, 114, 126, 1308, 1314, 219, 252, 261, 588,
	548, 647, 576, 586, 149, 584, 254, 227, 303, 0,
	620, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	599, 634, 577, 146, 637, 624, 652, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 553, 0, 278,
	306, 319, 196, 135, 572, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 570, 571, 568, 0,
	569, 615, 616, 670, 671, 672, 641, 564, 0, 654,
	655, 0, 645, 660, 661, 636, 679, 593, 594, 554,
	557, 558, 559, 565, 607, 608, 619, 622, 650, 649,
	648, 651, 656, 675, 674, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 113, 124,
	189, 680, 247, 163, 307, 550, 155, 0, 0, 609,
	611, 621, 638, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 657,
	664, 644, 287, 602, 667, 574, 591, 678, 592, 595,
	633, 560, 614, 223, 589, 561, 0, 578, 551, 585,
	552, 575, 604, 157, 573, 646, 617, 666, 187, 629,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 665,
	610, 0, 673, 190, 0, 626, 308, 276, 208, 0,
	0, 606, 653, 612, 642, 601, 635, 567, 625, 668,
	590, 631, 669, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 628, 663, 587,
	630, 632, 549, 627, 0, 555, 562, 677, 659, 581,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 605,
	613, 639, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 0, 623, 0, 0, 0, 563, 556, 0,
	0, 603, 0, 0, 0, 566, 117, 580, 640, 0,
	547, 167, 209, 128, 643, 658, 600, 180, 314, 662,
	597, 596, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 588, 548, 647, 576, 586,
	149, 584, 254, 227, 303, 0, 620, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 599, 634, 577, 146,
	637, 624, 652, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 553, 0, 278, 306, 319, 196, 135,
	572, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 570, 571, 568, 0, 569, 615, 616, 670,
	671, 672, 641, 564, 0, 654, 655, 0, 645, 660,
	661, 636, 679, 593, 594, 554, 557, 558, 559, 565,
	607, 608, 619, 622, 650, 649, 648, 651, 656, 675,
	674, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 113, 124, 189, 680, 247, 163,
	307, 550, 155, 0, 0, 609, 611, 621, 638, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 657, 664, 644, 287, 602,
	667, 574, 591, 678, 592, 595, 633, 560, 614, 223,
	589, 561, 0, 578, 551, 585, 552, 575, 604, 157,
	573, 646, 617, 666, 187, 629, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 665, 610, 0, 673, 190,
	0, 626, 308, 276, 208, 0, 0, 606, 653, 612,
	642, 601, 635, 567, 625, 668, 590, 631, 669, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 628, 663, 587, 630, 632, 549, 627,
	0, 555, 562, 677, 659, 581, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 605, 613, 639, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 623,
	0, 0, 0, 563, 556, 0, 0, 603, 0, 0,
	0, 566, 117, 580, 640, 0, 547, 167, 209, 128,
	643, 658, 600, 180, 314, 662, 597, 596, 243, 0,
	281, 170, 188, 544, 114, 126, 540, 169, 219, 252,
	261, 588, 548, 647, 576, 586, 149, 584, 254, 227,
	303, 0, 620, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 599, 634, 577, 146, 637, 624, 652, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 553,
	0, 278, 306, 319, 196, 135, 572, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 570, 571,
	568, 0, 569, 615, 616, 670, 671, 672, 641, 564,
	0, 654, 655, 0, 645, 660, 661, 636, 679, 593,
	594, 554, 557, 558, 559, 565, 607, 608, 619, 622,
	650, 649, 648, 651, 656, 675, 674, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	113, 124, 189, 680, 247, 163, 307, 550, 155, 0,
	0, 609, 611, 621, 638, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 657, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 426,
	0, 0, 0, 157, 423, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 470, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 459, 460, 0, 0, 0, 0, 0,
	0, 1290, 0, 71, 0, 0, 424, 447, 446, 449,
	450, 451, 452, 0, 0, 138, 448, 453, 454, 455,
	1291, 0, 0, 421, 438, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 0,
	0, 0, 0, 484, 0, 437, 0, 0, 432, 433,
	434, 439, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 461, 0, 0, 180, 314, 0,
	0, 482, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 467, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 471, 483, 477, 479, 478, 475, 476, 474,
	473, 472, 485, 462, 463, 464, 465, 468, 0, 480,
	481, 0, 0, 0, 0, 498, 499, 500, 501, 502,
	503, 504, 497, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 486, 487, 488, 489, 490, 491, 492, 493,
	496, 494, 495, 466, 113, 124, 189, 0, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 30, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 426, 0, 0, 0, 157, 423, 0,
	0, 0, 187, 0, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 0, 0, 0, 470, 190, 0, 0,
	308, 276, 208, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	424, 447, 446, 449, 450, 451, 452, 0, 0, 138,
	448, 453, 454, 455, 0, 0, 0, 421, 438, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 0, 0, 0, 0, 484, 0, 437,
	0, 0, 432, 433, 434, 439, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 167, 209, 128, 461, 0,
	0, 180, 314, 0, 0, 482, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 467,
	0, 0, 0, 0, 149, 0, 254, 227, 303, 0,
	0, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	0, 0, 0, 146, 0, 0, 0, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 0, 0, 278,
	306, 319, 196, 135, 0, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 471, 483, 477, 479,
	478, 475, 476, 474, 473, 472, 485, 462, 463, 464,
	465, 468, 0, 480, 481, 0, 0, 0, 0, 498,
	499, 500, 501, 502, 503, 504, 497, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 486, 487, 488, 489,
	490, 491, 492, 493, 496, 494, 495, 466, 113, 124,
	189, 70, 247, 163, 307, 0, 155, 0, 0, 0,
	0, 0, 0, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 426, 0, 0, 0,
	157, 423, 0, 0, 0, 187, 0, 0, 148, 195,
	193, 0, 0, 0, 229, 285, 0, 0, 0, 470,
	190, 0, 0, 308, 276, 208, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 424, 447, 446, 449, 450, 451, 452,
	0, 0, 138, 448, 453, 454, 455, 0, 0, 0,
	421, 438, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 417, 0, 0, 0,
	484, 0, 437, 0, 0, 432, 433, 434, 439, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 167, 209,
	128, 461, 0, 0, 180, 314, 0, 0, 482, 243,
	0, 281, 170, 188, 132, 114, 126, 142, 169, 219,
	252, 261, 467, 0, 0, 0, 0, 149, 0, 254,
	227, 303, 0, 0, 233, 253, 191, 292, 245, 301,
	302, 171, 286, 311, 316, 273, 158, 0, 118, 0,
	240, 153, 184, 0, 0, 0, 146, 0, 0, 0,
	272, 133, 288, 207, 213, 143, 145, 144, 127, 267,
	290, 137, 147, 277, 257, 282, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 284, 300, 139,
	265, 121, 298, 280, 205, 181, 182, 120, 0, 250,
	156, 166, 151, 222, 0, 165, 242, 295, 296, 150,
	318, 129, 310, 123, 130, 309, 216, 0, 215, 312,
	291, 299, 206, 199, 0, 122, 297, 204, 198, 186,
	161, 173, 238, 194, 239, 174, 211, 210, 212, 0,
	0, 0, 278, 306, 319, 196, 135, 0, 266, 289,
	0, 0, 136, 164, 160, 237, 214, 131, 176, 275,
	185, 192, 249, 317, 226, 255, 140, 305, 274, 471,
	483, 477, 479, 478, 475, 476, 474, 473, 472, 485,
	462, 463, 464, 465, 468, 0, 480, 481, 0, 0,
	0, 0, 498, 499, 500, 501, 502, 503, 504, 497,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 486,
	487, 488, 489, 490, 491, 492, 493, 496, 494, 495,
	466, 113, 124, 189, 0, 247, 163, 307, 0, 155,
	0, 0, 0, 0, 0, 0, 115, 116, 125, 134,
	141, 154, 159, 162, 168, 172, 175, 177, 178, 179,
	183, 197, 200, 201, 202, 203, 217, 218, 220, 221,
	224, 225, 228, 230, 231, 232, 234, 235, 236, 241,
	244, 246, 248, 251, 256, 258, 259, 260, 262, 263,
	264, 268, 269, 270, 271, 279, 283, 293, 294, 304,
	313, 315, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 426,
	0, 0, 0, 157, 423, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 470, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 459, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 776, 424, 447, 446, 449,
	450, 451, 452, 0, 0, 138, 448, 453, 454, 455,
	0, 0, 0, 421, 438, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 436, 0,
	0, 0, 0, 484, 0, 437, 0, 0, 432, 433,
	434, 439, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 461, 0, 0, 180, 314, 0,
	0, 482, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 467, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 471, 483, 477, 479, 478, 475, 476, 474,
	473, 472, 485, 462, 463, 464, 465, 468, 0, 480,
	481, 0, 0, 0, 0, 498, 499, 500, 501, 502,
	503, 504, 497, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 486, 487, 488, 489, 490, 491, 492, 493,
	496, 494, 495, 466, 113, 124, 189, 0, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 157, 423, 0, 0,
	0, 187, 0, 0, 148, 195, 193, 0, 0, 0,
	229, 285, 0, 0, 0, 470, 190, 0, 0, 308,
	276, 208, 0, 0, 0, 0, 459, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 424,
	447, 446, 449, 450, 451, 452, 0, 0, 138, 448,
	453, 454, 455, 0, 0, 0, 421, 438, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 436, 1189, 0, 0, 0, 484, 0, 437, 0,
	0, 432, 433, 434, 439, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 167, 209, 128, 461, 0, 0,
	180, 314, 0, 0, 482, 243, 0, 281, 170, 188,
	132, 114, 126, 142, 169, 219, 252, 261, 467, 0,
	0, 0, 0, 149, 0, 254, 227, 303, 0, 0,
	233, 253, 191, 292, 245, 301, 302, 171, 286, 311,
	316, 273, 158, 0, 118, 0, 240, 153, 184, 0,
	0, 0, 146, 0, 0, 0, 272, 133, 288, 207,
	213, 143, 145, 144, 127, 267, 290, 137, 147, 277,
	257, 282, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 284, 300, 139, 265, 121, 298, 280,
	205, 181, 182, 120, 0, 250, 156, 166, 151, 222,
	0, 165, 242, 295, 296, 150, 318, 129, 310, 123,
	130, 309, 216, 0, 215, 312, 291, 299, 206, 199,
	0, 122, 297, 204, 198, 186, 161, 173, 238, 194,
	239, 174, 211, 210, 212, 0, 0, 0, 278, 306,
	319, 196, 135, 0, 266, 289, 0, 0, 136, 164,
	160, 237, 214, 131, 176, 275, 185, 192, 249, 317,
	226, 255, 140, 305, 274, 471, 483, 477, 479, 478,
	475, 476, 474, 473, 472, 485, 462, 463, 464, 465,
	468, 0, 480, 481, 0, 0, 0, 0, 498, 499,
	500, 501, 502, 503, 504, 497, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 486, 487, 488, 489, 490,
	491, 492, 493, 496, 494, 495, 466, 113, 124, 189,
	0, 247, 163, 307, 0, 155, 0, 0, 0, 0,
	0, 0, 115, 116, 125, 134, 141, 154, 159, 162,
	168, 172, 175, 177, 178, 179, 183, 197, 200, 201,
	202, 203, 217, 218, 220, 221, 224, 225, 228, 230,
	231, 232, 234, 235, 236, 241, 244, 246, 248, 251,
	256, 258, 259, 260, 262, 263, 264, 268, 269, 270,
	271, 279, 283, 293, 294, 304, 313, 315, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 426, 0, 0, 0, 157,
	423, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 470, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 459,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 424, 447, 1200, 449, 450, 451, 452, 0,
	0, 138, 448, 453, 454, 455, 0, 0, 0, 421,
	438, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 436, 1189, 0, 0, 0, 484,
	0, 437, 0, 0, 432, 433, 434, 439, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	461, 0, 0, 180, 314, 0, 0, 482, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 467, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 471, 483,
	477, 479, 478, 475, 476, 474, 473, 472, 485, 462,
	463, 464, 465, 468, 0, 480, 481, 0, 0, 0,
	0, 498, 499, 500, 501, 502, 503, 504, 497, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 486, 487,
	488, 489, 490, 491, 492, 493, 496, 494, 495, 466,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 157, 423, 0, 0, 0, 187, 0, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 470, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 424, 447, 1197, 449, 450,
	451, 452, 0, 0, 138, 448, 453, 454, 455, 0,
	0, 0, 421, 438, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 436, 1189, 0,
	0, 0, 484, 0, 437, 0, 0, 432, 433, 434,
	439, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 461, 0, 0, 180, 314, 0, 0,
	482, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 467, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 233, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	300, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 130, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 214, 131,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 471, 483, 477, 479, 478, 475, 476, 474, 473,
	472, 485, 462, 463, 464, 465, 468, 0, 480, 481,
	0, 0, 0, 0, 498, 499, 500, 501, 502, 503,
	504, 497, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 486, 487, 488, 489, 490, 491, 492, 493, 496,
	494, 495, 466, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 426, 0, 0, 0, 157, 423, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 470, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 1107, 424, 447,
	446, 449, 450, 451, 452, 0, 0, 138, 448, 453,
	454, 455, 0, 0, 0, 421, 438, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	436, 0, 0, 0, 0, 484, 0, 437, 0, 0,
	432, 433, 434, 439, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 461, 0, 0, 180,
	314, 0, 0, 482, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 467, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 471, 483, 477, 479, 478, 475,
	476, 474, 473, 472, 485, 462, 463, 464, 465, 468,
	0, 480, 481, 0, 0, 0, 0, 498, 499, 500,
	501, 502, 503, 504, 497, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 486, 487, 488, 489, 490, 491,
	492, 493, 496, 494, 495, 466, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 426, 0, 0, 0, 157, 423,
	0, 0, 0, 187, 0, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 470, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 424, 447, 446, 449, 450, 451, 452, 0, 0,
	138, 448, 453, 454, 455, 0, 0, 0, 421, 438,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 436, 0, 0, 0, 0, 484, 0,
	437, 0, 0, 432, 433, 434, 439, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 461,
	0, 0, 180, 314, 0, 0, 482, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	467, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 300, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 130, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 214, 131, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 471, 483, 477,
	479, 478, 475, 476, 474, 473, 472, 485, 462, 463,
	464, 465, 468, 0, 480, 481, 0, 0, 0, 0,
	498, 499, 500, 501, 502, 503, 504, 497, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 486, 487, 488,
	489, 490, 491, 492, 493, 496, 494, 495, 466, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 426, 0, 0,
	0, 157, 423, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	470, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 459, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 424, 447, 446, 449, 450, 451,
	452, 0, 0, 138, 448, 453, 454, 455, 0, 0,
	0, 421, 438, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 436, 0, 0, 0,
	0, 484, 0, 437, 0, 0, 432, 433, 434, 439,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 461, 0, 0, 180, 314, 0, 0, 482,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 467, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	471, 483, 477, 479, 478, 475, 476, 474, 473, 472,
	485, 462, 463, 464, 465, 468, 0, 480, 481, 0,
	0, 0, 0, 792, 793, 794, 795, 796, 800, 801,
	805, 806, 814, 813, 812, 815, 816, 818, 817, 819,
	797, 798, 799, 802, 803, 804, 807, 808, 811, 809,
	810, 466, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 187,
	0, 0, 148, 195, 193, 0, 0, 0, 229, 285,
	0, 0, 0, 470, 190, 0, 0, 308, 276, 208,
	0, 0, 0, 0, 459, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 424, 447, 446,
	449, 450, 451, 452, 0, 0, 138, 448, 453, 454,
	455, 0, 0, 0, 0, 438, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 436,
	0, 0, 0, 0, 484, 0, 437, 0, 0, 432,
	433, 434, 439, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 167, 209, 128, 461, 0, 0, 180, 314,
	0, 0, 482, 243, 0, 281, 170, 188, 132, 114,
	126, 142, 169, 219, 252, 261, 467, 0, 0, 0,
	0, 149, 0, 254, 227, 303, 0, 2255, 233, 253,
	191, 292, 245, 301, 302, 171, 286, 311, 316, 273,
	158, 0, 118, 0, 240, 153, 184, 0, 0, 0,
	146, 0, 0, 0, 272, 133, 288, 207, 213, 143,
	145, 144, 127, 267, 290, 137, 147, 277, 257, 282,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 284, 300, 139, 265, 121, 298, 280, 205, 181,
	182, 120, 0, 250, 156, 166, 151, 222, 0, 165,
	242, 295, 296, 150, 318, 129, 310, 123, 130, 309,
	216, 0, 215, 312, 291, 299, 206, 199, 0, 122,
	297, 204, 198, 186, 161, 173, 238, 194, 239, 174,
	211, 210, 212, 0, 0, 0, 278, 306, 319, 196,
	135, 0, 266, 289, 0, 0, 136, 164, 160, 237,
	214, 131, 176, 275, 185, 192, 249, 317, 226, 255,
	140, 305, 274, 471, 483, 477, 479, 478, 475, 476,
	474, 473, 472, 485, 462, 463, 464, 465, 468, 0,
	480, 481, 0, 0, 0, 0, 498, 499, 500, 501,
	502, 503, 504, 497, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 486, 487, 488, 489, 490, 491, 492,
	493, 496, 494, 495, 466, 113, 124, 189, 0, 247,
	163, 307, 0, 155, 0, 0, 0, 0, 0, 0,
	115, 116, 125, 134, 141, 154, 159, 162, 168, 172,
	175, 177, 178, 179, 183, 197, 200, 201, 202, 203,
	217, 218, 220, 221, 224, 225, 228, 230, 231, 232,
	234, 235, 236, 241, 244, 246, 248, 251, 256, 258,
	259, 260, 262, 263, 264, 268, 269, 270, 271, 279,
	283, 293, 294, 304, 313, 315, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 187, 0, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 0, 0, 0, 470, 190, 0, 0,
	308, 276, 208, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 776,
	424, 447, 446, 449, 450, 451, 452, 0, 0, 138,
	448, 453, 454, 455, 0, 0, 0, 0, 438, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 436, 0, 0, 0, 0, 484, 0, 437,
	0, 0, 432, 433, 434, 439, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 167, 209, 128, 461, 0,
	0, 180, 314, 0, 0, 482, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 467,
	0, 0, 0, 0, 149, 0, 254, 227, 303, 0,
	0, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	0, 0, 0, 146, 0, 0, 0, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 0, 0, 278,
	306, 319, 196, 135, 0, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 471, 483, 477, 479,
	478, 475, 476, 474, 473, 472, 485, 462, 463, 464,
	465, 468, 0, 480, 481, 0, 0, 0, 0, 498,
	499, 500, 501, 502, 503, 504, 497, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 486, 487, 488, 489,
	490, 491, 492, 493, 496, 494, 495, 466, 113, 124,
	189, 0, 247, 163, 307, 0, 155, 0, 0, 0,
	0, 0, 0, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 187, 0, 0, 148, 195,
	193, 0, 0, 0, 229, 285, 0, 0, 0, 470,
	190, 0, 0, 308, 276, 208, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 424, 447, 446, 449, 450, 451, 452,
	0, 0, 138, 448, 453, 454, 455, 0, 0, 0,
	0, 438, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 436, 0, 0, 0, 0,
	484, 0, 437, 0, 0, 432, 433, 434, 439, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 167, 209,
	128, 461, 0, 0, 180, 314, 0, 0, 482, 243,
	0, 281, 170, 188, 132, 114, 126, 142, 169, 219,
	252, 261, 467, 0, 0, 0, 0, 149, 0, 254,
	227, 303, 0, 0, 233, 253, 191, 292, 245, 301,
	302, 171, 286, 311, 316, 273, 158, 0, 118, 0,
	240, 153, 184, 0, 0, 0, 146, 0, 0, 0,
	272, 133, 288, 207, 213, 143, 145, 144, 127, 267,
	290, 137, 147, 277, 257, 282, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 284, 300, 139,
	265, 121, 298, 280, 205, 181, 182, 120, 0, 250,
	156, 166, 151, 222, 0, 165, 242, 295, 296, 150,
	318, 129, 310, 123, 130, 309, 216, 0, 215, 312,
	291, 299, 206, 199, 0, 122, 297, 204, 198, 186,
	161, 173, 238, 194, 239, 174, 211, 210, 212, 0,
	0, 0, 278, 306, 319, 196, 135, 0, 266, 289,
	0, 0, 136, 164, 160, 237, 214, 131, 176, 275,
	185, 192, 249, 317, 226, 255, 140, 305, 274, 471,
	483, 477, 479, 478, 475, 476, 474, 473, 472, 485,
	462, 463, 464, 465, 468, 0, 480, 481, 0, 0,
	0, 0, 498, 499, 500, 501, 502, 503, 504, 497,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 486,
	487, 488, 489, 490, 491, 492, 493, 496, 494, 495,
	466, 113, 124, 189, 0, 247, 163, 307, 0, 155,
	0, 0, 0, 0, 0, 0, 115, 116, 125, 134,
	141, 154, 159, 162, 168, 172, 175, 177, 178, 179,
	183, 197, 200, 201, 202, 203, 217, 218, 220, 221,
	224, 225, 228, 230, 231, 232, 234, 235, 236, 241,
	244, 246, 248, 251, 256, 258, 259, 260, 262, 263,
	264, 268, 269, 270, 271, 279, 283, 293, 294, 304,
	313, 315, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 0, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	1275, 0, 0, 0, 0, 0, 111, 0, 374, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 0, 0, 0, 180, 314, 0,
	1274, 0, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 0, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 376, 377, 378, 379,
	383, 384, 388, 389, 397, 396, 395, 398, 399, 401,
	400, 402, 380, 381, 382, 385, 386, 387, 390, 391,
	394, 392, 393, 0, 113, 124, 189, 0, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 1271, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 187, 0, 0, 148, 195, 193, 0, 0, 0,
	229, 285, 0, 0, 0, 0, 190, 0, 0, 308,
	276, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 1275, 0, 0, 0, 0, 0, 111,
	0, 374, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 167, 209, 128, 0, 0, 0,
	180, 314, 0, 1274, 0, 243, 0, 281, 170, 188,
	132, 114, 126, 142, 169, 219, 252, 261, 0, 0,
	0, 0, 0, 149, 0, 254, 227, 303, 0, 0,
	1269, 253, 191, 292, 245, 301, 302, 171, 286, 311,
	316, 273, 158, 0, 118, 0, 240, 153, 184, 0,
	0, 0, 146, 0, 0, 0, 272, 133, 288, 207,
	213, 143, 145, 144, 127, 267, 290, 137, 147, 277,
	257, 282, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 284, 300, 139, 265, 121, 298, 280,
	205, 181, 182, 120, 0, 250, 156, 166, 151, 222,
	0, 165, 242, 295, 296, 150, 318, 129, 310, 123,
	130, 309, 216, 0, 215, 312, 291, 299, 206, 199,
	0, 122, 297, 204, 198, 186, 161, 173, 238, 194,
	239, 174, 211, 210, 212, 0, 0, 0, 278, 306,
	319, 196, 135, 0, 266, 289, 0, 0, 136, 164,
	160, 237, 214, 131, 176, 275, 185, 192, 249, 317,
	226, 255, 140, 305, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 376,
	377, 378, 379, 383, 384, 388, 389, 397, 396, 395,
	398, 399, 401, 400, 402, 380, 381, 382, 385, 386,
	387, 390, 391, 394, 392, 393, 0, 113, 124, 189,
	0, 247, 163, 307, 0, 155, 0, 0, 0, 0,
	0, 0, 115, 116, 125, 134, 141, 154, 159, 162,
	168, 172, 175, 177, 178, 179, 183, 197, 200, 201,
	202, 203, 217, 218, 220, 221, 224, 225, 228, 230,
	231, 232, 234, 235, 236, 241, 244, 246, 248, 251,
	256, 258, 259, 260, 262, 263, 264, 268, 269, 270,
	271, 279, 283, 293, 294, 304, 313, 315, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 835, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 0, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 839, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 832, 831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	0, 0, 0, 180, 314, 0, 0, 0, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 0, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 376, 377, 378, 379, 383, 384, 388, 389,
	397, 396, 395, 398, 399, 401, 400, 402, 380, 381,
	382, 385, 386, 387, 390, 391, 394, 392, 393, 0,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 187, 1526, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 0, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 374, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 0, 0, 0, 180, 314, 0, 0,
	0, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 0, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 233, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	300, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 130, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 214, 131,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 377, 378, 379, 383,
	384, 388, 389, 397, 396, 395, 398, 399, 401, 400,
	402, 380, 381, 382, 385, 386, 387, 390, 391, 394,
	392, 393, 0, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 0, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	374, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 377,
	378, 379, 383, 384, 388, 389, 397, 396, 395, 398,
	399, 401, 400, 402, 380, 381, 382, 385, 386, 387,
	390, 391, 394, 392, 393, 0, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 187, 0, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 0, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 836, 0, 839, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 0,
	0, 0, 180, 314, 0, 0, 0, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	0, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 300, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 130, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 214, 131, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 376, 377, 378, 379, 383, 384, 388, 389, 397,
	396, 395, 398, 399, 401, 400, 402, 380, 381, 382,
	385, 386, 387, 390, 391, 394, 392, 393, 0, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	0, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 849, 848, 858, 859, 851, 852, 853, 854, 855,
	856, 857, 850, 0, 0, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 0, 0, 0, 180, 314, 0, 0, 0,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 0, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 30, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 1266, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 124, 189, 70,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 30, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 0, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	0, 0, 0, 180, 314, 0, 0, 0, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 0, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 124, 189, 70, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 983, 0, 0, 0, 187, 0, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 0, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 982, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 0, 0, 0, 180, 314, 0, 0,
	0, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 0, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 233, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	300, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 130, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 214, 131,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 0, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 300, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 130,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 214, 131, 176, 275, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 187, 0, 0, 148, 195, 193, 0,
	0, 0, 229, 285, 0, 0, 0, 0, 190, 0,
	0, 308, 276, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 167, 209, 128, 0,
	0, 0, 180, 314, 0, 0, 0, 243, 0, 281,
	170, 188, 132, 114, 126, 142, 169, 219, 252, 261,
	0, 0, 0, 0, 0, 149, 0, 254, 227, 303,
	0, 0, 233, 253, 191, 292, 245, 301, 302, 171,
	286, 311, 316, 273, 158, 0, 118, 0, 240, 153,
	184, 0, 0, 0, 146, 0, 0, 0, 272, 133,
	288, 207, 213, 143, 145, 144, 127, 267, 290, 137,
	147, 277, 257, 282, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 284, 300, 139, 265, 121,
	298, 280, 205, 181, 182, 120, 0, 250, 156, 166,
	151, 222, 0, 165, 242, 295, 296, 150, 318, 129,
	310, 123, 130, 309, 216, 0, 215, 312, 291, 299,
	206, 199, 0, 122, 297, 204, 198, 186, 161, 173,
	238, 194, 239, 174, 211, 210, 212, 0, 0, 0,
	278, 306, 319, 196, 135, 0, 266, 289, 0, 0,
	136, 164, 160, 237, 214, 131, 176, 275, 185, 192,
	249, 317, 226, 255, 140, 305, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
	124, 189, 0, 247, 163, 307, 0, 155, 0, 0,
	0, 0, 0, 0, 115, 116, 125, 134, 141, 154,
	159, 162, 168, 172, 175, 177, 178, 179, 183, 197,
	200, 201, 202, 203, 217, 218, 220, 221, 224, 225,
	228, 230, 231, 232, 234, 235, 236, 241, 244, 246,
	248, 251, 256, 258, 259, 260, 262, 263, 264, 268,
	269, 270, 271, 279, 283, 293, 294, 304, 313, 315,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	952, 157, 0, 0, 0, 0, 187, 0, 0, 148,
	195, 193, 0, 0, 0, 229, 285, 0, 0, 0,
	0, 190, 0, 0, 308, 276, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 167,
	209, 128, 0, 0, 0, 180, 314, 0, 0, 0,
	243, 0, 281, 170, 188, 132, 114, 126, 142, 169,
	219, 252, 261, 0, 0, 0, 0, 0, 149, 0,
	254, 227, 303, 0, 0, 233, 253, 191, 292, 245,
	301, 302, 171, 286, 311, 316, 273, 158, 0, 118,
	0, 240, 153, 184, 0, 0, 0, 146, 0, 0,
	0, 272, 133, 288, 207, 213, 143, 145, 144, 127,
	267, 290, 137, 147, 277, 257, 282, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 284, 300,
	139, 265, 121, 298, 280, 205, 181, 182, 120, 0,
	250, 156, 166, 151, 222, 0, 165, 242, 295, 296,
	150, 318, 129, 310, 123, 130, 309, 216, 0, 215,
	312, 291, 299, 206, 199, 0, 122, 297, 204, 198,
	186, 161, 173, 238, 194, 239, 174, 211, 210, 212,
	0, 0, 0, 278, 306, 319, 196, 135, 0, 266,
	289, 0, 0, 136, 164, 160, 237, 214, 131, 176,
	275, 185, 192, 249, 317, 226, 255, 140, 305, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 124, 189, 0, 247, 163, 307, 0,
	155, 0, 0, 0, 0, 0, 0, 115, 116, 125,
	134, 141, 154, 159, 162, 168, 172, 175, 177, 178,
	179, 183, 197, 200, 201, 202, 203, 217, 218, 220,
	221, 224, 225, 228, 230, 231, 232, 234, 235, 236,
	241, 244, 246, 248, 251, 256, 258, 259, 260, 262,
	263, 264, 268, 269, 270, 271, 279, 283, 293, 294,
	304, 313, 315, 287, 0, 0, 0, 516, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 187,
	0, 0, 148, 195, 193, 0, 0, 0, 229, 285,
	0, 0, 0, 0, 190, 0, 0, 308, 276, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 167, 209, 128, 0, 0, 0, 180, 314,
	0, 0, 0, 243, 0, 281, 170, 188, 132, 114,
	126, 142, 169, 219, 252, 261, 0, 0, 0, 0,
	0, 149, 0, 254, 227, 303, 0, 0, 233, 253,
	191, 292, 245, 301, 302, 171, 286, 311, 316, 273,
	158, 0, 118, 0, 240, 153, 184, 0, 0, 0,
	146, 0, 0, 0, 272, 133, 288, 207, 213, 143,
	145, 144, 127, 267, 290, 137, 147, 277, 257, 282,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 284, 300, 139, 265, 121, 298, 280, 205, 181,
	182, 120, 0, 250, 156, 166, 151, 222, 0, 165,
	242, 295, 296, 150, 318, 129, 310, 123, 130, 309,
	216, 0, 215, 312, 291, 299, 206, 199, 0, 122,
	297, 204, 198, 186, 161, 173, 238, 194, 239, 174,
	211, 210, 212, 0, 0, 0, 278, 306, 319, 196,
	135, 0, 266, 289, 0, 0, 136, 164, 160, 237,
	214, 131, 176, 275, 185, 192, 249, 317, 226, 255,
	140, 305, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 124, 189, 0, 247,
	163, 307, 0, 155, 0, 0, 0, 0, 0, 0,
	115, 116, 125, 134, 141, 154, 159, 162, 168, 172,
	175, 177, 178, 179, 183, 197, 200, 201, 202, 203,
	217, 218, 220, 221, 224, 225, 228, 230, 231, 232,
	234, 235, 236, 241, 244, 246, 248, 251, 256, 258,
	259, 260, 262, 263, 264, 268, 269, 270, 271, 279,
	283, 293, 294, 304, 313, 315, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 187, 0, 0, 148, 195, 193, 0, 0,
	0, 229, 285, 0, 0, 0, 0, 190, 0, 0,
	308, 276, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 167, 209, 128, 0, 108,
	0, 180, 314, 0, 0, 0, 243, 0, 281, 170,
	188, 132, 114, 126, 142, 169, 219, 252, 261, 0,
	0, 0, 0, 0, 149, 0, 254, 227, 303, 0,
	0, 233, 253, 191, 292, 245, 301, 302, 171, 286,
	311, 316, 273, 158, 0, 118, 0, 240, 153, 184,
	0, 0, 0, 146, 0, 0, 0, 272, 133, 288,
	207, 213, 143, 145, 144, 127, 267, 290, 137, 147,
	277, 257, 282, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 284, 300, 139, 265, 121, 298,
	280, 205, 181, 182, 120, 0, 250, 156, 166, 151,
	222, 0, 165, 242, 295, 296, 150, 318, 129, 310,
	123, 130, 309, 216, 0, 215, 312, 291, 299, 206,
	199, 0, 122, 297, 204, 198, 186, 161, 173, 238,
	194, 239, 174, 211, 210, 212, 0, 0, 0, 278,
	306, 319, 196, 135, 0, 266, 289, 0, 0, 136,
	164, 160, 237, 214, 131, 176, 275, 185, 192, 249,
	317, 226, 255, 140, 305, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 124,
	189, 0, 247, 163, 307, 0, 155, 0, 0, 0,
	0, 0, 0, 115, 116, 125, 134, 141, 154, 159,
	162, 168, 172, 175, 177, 178, 179, 183, 197, 200,
	201, 202, 203, 217, 218, 220, 221, 224, 225, 228,
	230, 231, 232, 234, 235, 236, 241, 244, 246, 248,
	251, 256, 258, 259, 260, 262, 263, 264, 268, 269,
	270, 271, 279, 283, 293, 294, 304, 313, 315, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 187, 0, 0, 148, 195,
	193, 0, 0, 0, 229, 285, 0, 0, 0, 0,
	190, 0, 0, 308, 276, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 167, 209,
	128, 0, 0, 0, 180, 314, 0, 0, 0, 243,
	0, 281, 170, 188, 132, 114, 126, 142, 169, 219,
	252, 261, 0, 0, 0, 0, 0, 149, 0, 254,
	227, 303, 0, 0, 233, 253, 191, 292, 245, 301,
	302, 171, 286, 311, 316, 273, 158, 0, 118, 0,
	240, 153, 184, 0, 0, 0, 146, 0, 0, 0,
	272, 133, 288, 207, 213, 143, 145, 144, 127, 267,
	290, 137, 147, 277, 257, 282, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 284, 300, 139,
	265, 121, 298, 280, 205, 181, 182, 120, 0, 250,
	156, 166, 151, 222, 0, 165, 242, 295, 296, 150,
	318, 129, 310, 123, 130, 309, 216, 0, 215, 312,
	291, 299, 206, 199, 0, 122, 297, 204, 198, 186,
	161, 173, 238, 194, 239, 174, 211, 210, 212, 0,
	0, 0, 278, 306, 319, 196, 135, 0, 266, 289,
	0, 0, 136, 164, 160, 237, 214, 131, 176, 275,
	185, 192, 249, 317, 226, 255, 140, 305, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 124, 189, 0, 247, 163, 307, 0, 155,
	0, 0, 0, 0, 0, 0, 115, 116, 125, 134,
	141, 154, 159, 162, 168, 172, 175, 177, 178, 179,
	183, 197, 200, 201, 202, 203, 217, 218, 220, 221,
	224, 225, 228, 230, 231, 232, 234, 235, 236, 241,
	244, 246, 248, 251, 256, 258, 259, 260, 262, 263,
	264, 268, 269, 270, 271, 279, 283, 293, 294, 304,
	313, 315, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 187, 0,
	0, 148, 195, 193, 0, 0, 0, 229, 285, 0,
	0, 0, 0, 190, 0, 0, 308, 276, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 167, 209, 128, 0, 0, 0, 180, 314, 0,
	0, 0, 243, 0, 281, 170, 188, 132, 114, 126,
	142, 169, 219, 252, 261, 0, 0, 0, 0, 0,
	149, 0, 254, 227, 303, 0, 0, 233, 253, 191,
	292, 245, 301, 302, 171, 286, 311, 316, 273, 158,
	0, 118, 0, 240, 153, 184, 0, 0, 0, 146,
	0, 0, 0, 272, 133, 288, 207, 213, 143, 145,
	144, 127, 267, 290, 137, 147, 277, 257, 282, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	284, 300, 139, 265, 121, 298, 280, 205, 181, 182,
	120, 0, 250, 156, 166, 151, 222, 0, 165, 242,
	295, 296, 150, 318, 129, 310, 123, 130, 309, 216,
	0, 215, 312, 291, 299, 206, 199, 0, 122, 297,
	204, 198, 186, 161, 173, 238, 194, 239, 174, 211,
	210, 212, 0, 0, 0, 278, 306, 319, 196, 135,
	0, 266, 289, 0, 0, 136, 164, 160, 237, 214,
	131, 176, 275, 185, 192, 249, 317, 226, 255, 140,
	305, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 124, 189, 0, 247, 163,
	307, 0, 155, 0, 0, 0, 0, 0, 0, 115,
	116, 125, 134, 141, 154, 159, 162, 168, 172, 175,
	177, 178, 179, 183, 197, 200, 201, 202, 203, 217,
	218, 220, 221, 224, 225, 228, 230, 231, 232, 234,
	235, 236, 241, 244, 246, 248, 251, 256, 258, 259,
	260, 262, 263, 264, 268, 269, 270, 271, 279, 283,
	293, 294, 304, 313, 315, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 187, 0, 0, 148, 195, 193, 0, 0, 0,
	229, 285, 0, 0, 0, 0, 190, 0, 0, 308,
	276, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 167, 209, 128, 0, 0, 0,
	180, 314, 0, 0, 0, 243, 0, 281, 170, 188,
	132, 114, 126, 142, 169, 219, 252, 261, 0, 0,
	0, 0, 0, 149, 0, 254, 227, 303, 0, 0,
	233, 253, 191, 292, 245, 301, 302, 171, 286, 311,
	316, 273, 158, 0, 118, 0, 240, 153, 184, 0,
	0, 0, 146, 0, 0, 0, 272, 133, 288, 207,
	213, 143, 145, 144, 127, 267, 290, 137, 147, 277,
	257, 282, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 284, 300, 139, 265, 121, 298, 280,
	205, 181, 182, 120, 0, 250, 156, 166, 151, 222,
	0, 165, 242, 295, 296, 150, 318, 129, 310, 123,
	533, 309, 216, 0, 215, 312, 291, 299, 206, 199,
	0, 122, 297, 204, 198, 186, 161, 173, 238, 194,
	239, 174, 211, 210, 212, 0, 0, 0, 278, 306,
	319, 196, 135, 0, 266, 289, 0, 0, 136, 164,
	160, 237, 534, 532, 176, 275, 185, 192, 249, 317,
	226, 255, 140, 305, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 113, 124, 189,
	0, 247, 163, 307, 0, 155, 0, 0, 0, 0,
	0, 0, 115, 116, 125, 134, 141, 154, 159, 162,
	168, 172, 175, 177, 178, 179, 183, 197, 200, 201,
	202, 203, 217, 218, 220, 221, 224, 225, 228, 230,
	231, 232, 234, 235, 236, 241, 244, 246, 248, 251,
	256, 258, 259, 260, 262, 263, 264, 268, 269, 270,
	271, 279, 283, 293, 294, 304, 313, 315, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 187, 0, 0, 148, 195, 193,
	0, 0, 0, 229, 285, 0, 0, 0, 0, 190,
	0, 0, 308, 276, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 167, 209, 128,
	0, 0, 0, 180, 314, 0, 0, 0, 243, 0,
	281, 170, 188, 132, 114, 126, 142, 169, 219, 252,
	261, 0, 0, 0, 0, 0, 149, 0, 254, 227,
	303, 0, 0, 233, 253, 191, 292, 245, 301, 302,
	171, 286, 311, 316, 273, 158, 0, 118, 0, 240,
	153, 184, 0, 0, 0, 146, 0, 0, 0, 272,
	133, 288, 207, 213, 143, 145, 144, 127, 267, 290,
	137, 147, 277, 257, 282, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 284, 300, 139, 265,
	121, 298, 280, 205, 181, 182, 120, 0, 250, 156,
	166, 151, 222, 0, 165, 242, 295, 296, 150, 318,
	129, 310, 123, 130, 309, 216, 0, 215, 312, 291,
	299, 206, 199, 0, 122, 297, 204, 198, 186, 161,
	173, 238, 194, 239, 174, 211, 210, 212, 0, 0,
	0, 278, 306, 319, 196, 135, 0, 266, 289, 0,
	0, 136, 164, 160, 237, 214, 131, 176, 275, 185,
	192, 249, 317, 226, 255, 140, 305, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 124, 189, 0, 247, 163, 307, 0, 155, 0,
	0, 0, 0, 0, 0, 115, 116, 125, 134, 141,
	154, 159, 162, 168, 172, 175, 177, 178, 179, 183,
	197, 200, 201, 202, 203, 217, 218, 220, 221, 224,
	225, 228, 230, 231, 232, 234, 235, 236, 241, 244,
	246, 248, 251, 256, 258, 259, 260, 262, 263, 264,
	268, 269, 270, 271, 279, 283, 293, 294, 304, 313,
	315, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 187, 0, 0,
	148, 195, 193, 0, 0, 0, 229, 285, 0, 0,
	0, 0, 190, 0, 0, 308, 276, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	167, 209, 128, 0, 0, 0, 180, 314, 0, 0,
	0, 243, 0, 281, 170, 188, 132, 114, 126, 142,
	169, 219, 252, 261, 0, 0, 0, 0, 0, 149,
	0, 254, 227, 303, 0, 0, 233, 253, 191, 292,
	245, 301, 302, 171, 286, 311, 316, 273, 158, 0,
	118, 0, 240, 153, 184, 0, 0, 0, 146, 0,
	0, 0, 272, 133, 288, 207, 213, 143, 145, 144,
	127, 267, 290, 137, 147, 277, 257, 282, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 284,
	974, 139, 265, 121, 298, 280, 205, 181, 182, 120,
	0, 250, 156, 166, 151, 222, 0, 165, 242, 295,
	296, 150, 318, 129, 310, 123, 533, 309, 216, 0,
	215, 312, 291, 299, 206, 199, 0, 122, 297, 204,
	198, 186, 161, 173, 238, 194, 239, 174, 211, 210,
	212, 0, 0, 0, 278, 306, 319, 196, 135, 0,
	266, 289, 0, 0, 136, 164, 160, 237, 534, 532,
	176, 275, 185, 192, 249, 317, 226, 255, 140, 305,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 124, 189, 0, 247, 163, 307,
	0, 155, 0, 0, 0, 0, 0, 0, 115, 116,
	125, 134, 141, 154, 159, 162, 168, 172, 175, 177,
	178, 179, 183, 197, 200, 201, 202, 203, 217, 218,
	220, 221, 224, 225, 228, 230, 231, 232, 234, 235,
	236, 241, 244, 246, 248, 251, 256, 258, 259, 260,
	262, 263, 264, 268, 269, 270, 271, 279, 283, 293,
	294, 304, 313, 315, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	187, 0, 0, 148, 195, 193, 0, 0, 0, 229,
	285, 0, 0, 0, 0, 190, 0, 0, 308, 276,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 167, 209, 128, 0, 0, 0, 180,
	314, 0, 0, 0, 243, 0, 281, 170, 188, 132,
	114, 126, 142, 169, 219, 252, 261, 0, 0, 0,
	0, 0, 149, 0, 254, 227, 303, 0, 0, 233,
	253, 191, 292, 245, 301, 302, 171, 286, 311, 316,
	273, 158, 0, 118, 0, 240, 153, 184, 0, 0,
	0, 146, 0, 0, 0, 272, 133, 288, 207, 213,
	143, 145, 144, 127, 267, 290, 137, 147, 277, 257,
	282, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 284, 524, 139, 265, 121, 298, 280, 205,
	181, 182, 120, 0, 250, 156, 166, 151, 222, 0,
	165, 242, 295, 296, 150, 318, 129, 310, 123, 533,
	309, 216, 0, 215, 312, 291, 299, 206, 199, 0,
	122, 297, 204, 198, 186, 161, 173, 238, 194, 239,
	174, 211, 210, 212, 0, 0, 0, 278, 306, 319,
	196, 135, 0, 266, 289, 0, 0, 136, 164, 160,
	237, 534, 532, 527, 526, 185, 192, 249, 317, 226,
	255, 140, 305, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 124, 189, 0,
	247, 163, 307, 0, 155, 0, 0, 0, 0, 0,
	0, 115, 116, 125, 134, 141, 154, 159, 162, 168,
	172, 175, 177, 178, 179, 183, 197, 200, 201, 202,
	203, 217, 218, 220, 221, 224, 225, 228, 230, 231,
	232, 234, 235, 236, 241, 244, 246, 248, 251, 256,
	258, 259, 260, 262, 263, 264, 268, 269, 270, 271,
	279, 283, 293, 294, 304, 313, 315,
}
var yyPact = [...]int{

	222, -1000, -289, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1509, 1570,
	-1000, -1000, -1000, -1000, -1000, -1000, 570, 481, -1000, -1000,
	286, 79, 22129, 278, 2240, 22975, -1000, -1000, -1000, -1000,
	208, 22975, -1000, -1000, -80, -83, -1000, 180, 310, 1078,
	1369, 1568, 165, -1000, -1000, 249, 21, -1000, -1000, -1000,
	17897, -1000, -1000, -1000, 1496, 1507, 197, 1479, 1283, -1000,
	11552, 243, 243, 21706, 24667, -1000, 22975, 10281, 267, 22975,
	-154, 233, 233, 156, 233, -1000, 558, -1000, -1000, -1000,
	22975, 236, 22552, 236, 236, 236, 236, 236, 22975, -1000,
	450, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22975, 1073, 1392, 599, 234, 7299, 7299, -1000, 678, -1000,
	151, 149, 122, 120, 22, 606, -1000, 7299, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 202, 165, 550, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1390, 1389, 866, 1388, 115,
	1387, 1205, -74, -1000, 854, 277, 22975, -1000, -1000, 1164,
	-1000, 1213, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1396, 851, 14513, 1509, -1000, 165, -1000,
	-1000, -1000, 1386, -1000, -1000, 657, 1549, -1000, 17051, 449,
	-1000, 14090, 2347, 1167, -1000, -1000, 1167, -1000, -1000, 315,
	-1000, -1000, 15782, 15782, 15782, 15782, 15782, 15782, 15782, 15782,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1167, -1000, 11129, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 14090,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 21283, 20437, 22975, 1145, 1140, -1000,
	-1000, 447, 939, 24244, -99, -1000, -1000, -1000, 542, 20014,
	-1000, 446, -1000, 1383, -1000, -1000, 1085, 207, -1000, 2701,
	290, -1000, -1000, -1000, 1204, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22552, 1476, 255, 1072, 634, 1071, 1067, 1065, 22975,
	1064, 1163, 252, 22975, 1439, 1228, 22975, 1061, 1060, 1059,
	1058, -1000, 9855, -1000, 7299, 599, -1000, 891, 14090, 233,
	233, 7299, 7299, 7299, 22975, 22975, 22975, -1000, -1000, -1000,
	-1000, 22975, -1000, -1000, 599, 599, 7299, 7299, 618, 1547,
	618, 618, -1000, -1000, -1000, -1000, 14090, -1000, 15782, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1056, -1000, -1000, 115,
	115, -1000, 886, 115, 1151, -1000, 539, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 115,
	-1000, 13667, -287, -1000, 1283, -1000, -1000, 22975, 7299, 17897,
	1167, 22552, -1000, 1564, 494, 1134, -1000, -1000, 1156, -1000,
	819, 1406, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
	445, 1496, 854, 1283, 853, 1295, -1000, -1000, -1000, 22975,
	-1000, 14090, 14090, 704, -1000, 18320, -1000, -1000, -1000, -1000,
	8151, 523, 15782, 712, 573, 15782, 15782, 15782, 15782, 15782,
	15782, 15782, 15782, 15782, 15782, 15782, 15782, 15782, 15782, 15782,
	836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1055,
	-1000, 165, 918, 918, 463, 463, 463, 463, 463, 463,
	463, 18743, 1474, 854, 1054, 739, 11129, 12398, 12398, 854,
	14090, 14090, 13244, 12821, 12398, 12398, 1474, 577, 739, 23821,
	-1000, -1000, 15359, -1000, -1000, -1000, -1000, -1000, 854, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 22552, 22552, 12398,
	12398, 12398, 12398, 854, 854, 12398, 12398, 12398, 12398, 12398,
	854, 854, 854, 854, 1474, 1474, 12398, 12398, 12398, 1474,
	12398, 12398, 1474, 12398, 12398, 12398, 12398, 1474, 12398, 12398,
	12398, 164, 22975, -1000, 1152, 1607, -1000, -1000, -1000, 1459,
	19167, 16628, -1000, 164, 1098, 20437, 22975, -1000, -1000, 20437,
	22975, 7725, 23398, 939, -99, 1137, -1000, -125, -133, 10705,
	457, -1000, -1000, -1000, 9003, -1000, 5595, 9429, -1000, 290,
	1204, -1000, -60, -1000, -1000, -1000, 1175, -1000, 1175, 168,
	-12, 1175, 1175, 1175, 1175, 1175, -9, -9, -9, -9,
	-11, -1000, -1000, -1000, -1000, -1000, 1201, 1199, -1000, 1175,
	1175, 1175, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1195, 176, 1181, 1181, 1181, 1181, 1181, 205, -1000, 14090,
	1209, -1000, 22975, 7299, 1426, 7299, 124, 1197, -1000, -1000,
	22975, 22975, 1155, -1000, 22975, 1154, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 739, 1047, 1045,
	-1000, -1000, -1000, -1000, -1000, -1000, 650, -1000, -1000, -1000,
	-1000, 599, 22975, 22975, 22975, 1448, 599, 739, 1062, -1000,
	1151, 1151, -1000, 1151, 115, 918, 1151, -1000, 1044, 1407,
	867, 1474, 268, -1000, -1000, -1000, 167, 990, 444, -1000,
	1290, 851, 851, 14513, -1000, -1000, -1000, -1000, 9003, 1396,
	-1000, 1474, 1495, -1000, 1301, 1299, 1222, -1000, -1000, 523,
	598, -1000, -1000, 745, -1000, -1000, -1000, -1000, 436, 1167,
	-1000, 2610, -1000, -1000, -1000, -1000, 712, 15782, 15782, 15782,
	1062, 2610, 2703, 1342, 752, 463, 602, 602, 503, 503,
	503, 503, 503, 480, 480, -1000, -1000, -1000, 854, -1000,
	-1000, -1000, 12398, -1000, 14090, -1000, 854, 1027, -1000, -1000,
	739, 431, 1027, -1000, 769, 834, 544, 1540, 1027, 459,
	1532, 1027, 1027, 1027, 12398, 600, -1000, 14090, 854, -1000,
	928, 1149, 1147, 1027, 854, 1142, 1027, 1027, -167, -167,
	854, 1027, 854, 1027, 1027, -167, -167, -167, -167, 12398,
	12398, 1027, 1027, 1027, 12398, 1027, 1027, 12398, 1027, 1027,
	1027, 1027, 12398, 1027, 1027, 1027, 159, 1167, -1000, 23398,
	20437, 20437, 20437, 20437, 20437, -1000, 1258, 1250, -1000, 1280,
	1274, 1241, 17897, -1000, 1040, 854, 116, 19167, -1000, 1167,
	-1000, 17474, 487, 263, 261, 227, 1530, 20437, 1099, -1000,
	1099, -1000, 331, -1000, -1000, 1137, -99, -136, -1000, -1000,
	-1000, -1000, 739, -1000, 902, -1000, 318, 1120, 5169, -1000,
	-1000, -1000, -1000, 207, -1000, -1000, -1000, 1196, 280, -1000,
	1320, 408, 512, 926, 1309, -1000, -1000, 546, -69, -1000,
	-1000, 773, -9, -9, 1175, 1175, 166, 1175, -1000, -9,
	-1000, -1000, -1000, 457, 1382, 457, 457, 457, 457, -9,
	860, 860, -1000, -1000, -1000, -1000, 766, -1000, 1195, -1000,
	765, -1000, -1000, -1000, -1000, -1000, 827, 1227, 22552, 165,
	1447, -1000, -1000, -1000, 1546, -1000, -1000, 223, 251, -1000,
	7299, 22975, 7299, 7299, 1530, 1035, 1029, -1000, -1000, -1000,
	618, 599, 1376, -1000, -1000, 15782, -1000, -1000, -1000, 164,
	272, -1000, 1295, 1119, -1000, -1000, 535, 496, 533, 216,
	216, -1000, 538, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 163, 1444, 22552, 22552, 1287, -1000, -1000, -1000,
	-1000, 22975, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6873, 12398, -1000, 1062, 2610, 2646, -1000, 15782, -1000,
	854, 739, -1000, 12398, -1000, 6447, -1000, 417, 836, 417,
	15782, 15782, -1000, 15782, 15782, -1000, -201, -1000, 1046, 592,
	-1000, 14090, 825, -1000, -1000, 15782, 15782, -1000, -1000, -1000,
	-1000, -1000, 20860, -1000, -167, -167, -167, -167, -167, -1000,
	-1000, -1000, -1000, 1027, 1027, -167, -167, -167, 1027, -167,
	-167, 1027, -167, -167, -167, -167, 1027, -167, -167, -167,
	1221, 23398, 1167, -1000, 19591, 22552, 1146, 1607, 1194, 1219,
	1543, -1000, -1000, -1000, -1000, 1247, -1000, 1206, -1000, -1000,
	1171, -1000, -1000, 1118, 1167, 22552, 15782, 487, -1000, 1167,
	1167, 1167, 1509, 14090, 1099, -1000, -1000, 467, -1000, -1000,
	-134, -107, -1000, -1000, -1000, 8577, 5595, -1000, 5595, -1000,
	22552, 189, -1000, 926, -1000, -1000, 926, -1000, -1000, -1000,
	1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 628, 15782,
	1559, -1000, 1319, -1000, 1318, 859, -1000, -1000, 1069, 457,
	457, -9, -1000, -1000, 1175, -1000, 457, -1000, 518, -1000,
	-1000, -1000, -1000, 457, 1016, -1000, 1014, 1117, -1000, 1012,
	58, 22975, -1000, -1000, -1000, 1218, -1000, -1000, -1000, 1063,
	1116, -1000, 2701, 1006, 996, 994, 22975, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 599, -1000, 15782, 2610, -9, 22975,
	1222, 268, -1000, 897, -1000, 926, 404, -1000, -1000, -1000,
	1309, -1000, -1000, 279, 992, -1000, 991, 984, 22552, 1317,
	961, 22975, 22552, -1000, -1000, 942, 959, 14090, -1000, 22552,
	1167, 312, -1000, -1000, -1000, 1068, 11552, -1000, -1000, 854,
	-1000, 15782, 2610, -1000, -1000, -1000, 292, 854, 1175, 1175,
	-1000, 1175, 1181, -1000, 1175, 12, 1175, 11, 854, 854,
	2588, 2470, 2432, 2401, 1167, -161, -1000, 739, 14090, 2369,
	1329, -1000, 356, -1000, -1000, -1000, -1000, -1000, -167, -167,
	-1000, -1000, -1000, -1000, -167, -1000, -1000, -167, -1000, -1000,
	-1000, -1000, -167, -1000, -1000, -1000, -1000, 1400, 1091, 1097,
	-1000, -1000, 11975, 854, 990, 988, -1000, 1509, -1000, -1000,
	14090, 1178, -1000, 14090, -1000, -1000, -1000, -1000, 22552, 114,
	-1000, 14090, 988, 1082, -1000, 22552, 22552, 22552, 1496, 739,
	-1000, -1000, -1000, -1000, 5169, -1000, 982, -1000, 1175, -1000,
	1309, -1000, -1000, 22552, -1000, 2610, -36, -1000, -1000, -1000,
	-1000, -1000, -1000, 457, -1000, -1000, -1000, -1000, -1000, -9,
	826, -9, 760, -1000, 717, -1000, -1000, -235, 1173, -1000,
	165, 22975, 67, 223, -1000, 2701, 2701, 2701, -1000, -1000,
	2610, -65, -1000, -1000, -1000, 942, 183, 2701, -1000, 1209,
	408, 189, -1000, -1000, -1000, -1000, -1000, 955, 399, -1000,
	225, 183, 942, 739, 1402, -1000, 22552, 1523, 20437, -1000,
	-1000, -1000, 2610, 6021, -1000, -1000, 145, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15782, 15782, 15782, 15782, 15782,
	854, 815, 739, 15782, 15782, 854, 1506, -1000, -1000, -1000,
	-1000, -1000, 1304, -1000, 1167, -1000, -1000, 155, -1000, 22552,
	1496, 739, 22552, 739, 965, -1000, 1167, 16205, -1000, 17897,
	953, 953, 953, -1000, 300, 22552, 1406, 947, -1000, -1000,
	457, -1000, 457, 1028, 1017, -1000, 22552, -1000, 1490, -1000,
	67, -1000, 810, 87, 73, -1000, 85, 84, 75, 72,
	69, -1000, -1000, -1000, -1000, 1348, 1341, 1114, 954, -1000,
	-1000, 938, -1000, 1172, 926, -1000, -1000, 912, -1000, -1000,
	22552, -1000, 183, 1167, -1000, 1512, 1504, 1099, 11552, -1000,
	-1000, -1000, -1000, 928, 928, 928, 928, 68, -1000, -1000,
	928, 928, -1000, 14090, 1558, -1000, 1167, -1000, 165, -1000,
	-1000, 937, -1000, 22552, -1000, -1000, 487, -1000, -1000, -1000,
	300, -1000, 905, 538, 809, -1000, -1000, 179, -1000, -1000,
	-1000, -1000, 935, -1000, 103, 4416, -1000, -1000, -1000, -1000,
	-1000, -1000, 1364, 1352, 102, 238, 1323, 1325, 1502, 20437,
	-1000, -1000, 546, 22552, 1209, -1000, -1000, -1000, 162, -1000,
	14513, 14513, 1523, -1000, -1000, -1000, -1000, -1000, 854, 94,
	-212, -1000, -1000, 911, 23398, 1097, 854, -1000, -1000, -1000,
	-1000, -1000, 709, -1000, 22975, 300, 113, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14090, 14090, 4743, 4416, -1000, -1000, -1000, -1000,
	1171, 703, 1341, 1501, 1330, 1331, -1000, 805, 1099, 933,
	1170, 919, -1000, 22552, -1000, 739, -1000, 1090, -1000, 739,
	-1000, 1512, -1000, -1000, 1265, -207, -215, 854, 939, -1000,
	-1000, 1169, -1000, 300, 108, -1000, 804, 799, 42, 30,
	500, -1000, -1000, -1000, -1000, -290, -1000, -1000, 1343, -1000,
	785, -1000, 1500, 1499, -1000, 1523, 300, 22552, -1000, 162,
	1298, 14513, -1000, -1000, 1263, -1000, -1000, 22552, -1000, 903,
	898, 607, -1000, 14090, 4416, 1489, 1488, 1478, 1394, 8577,
	4244, -1000, -1000, 780, 705, 1512, -1000, 917, -1000, 130,
	-1000, -210, 909, 298, -1000, -1000, 615, 4416, -1000, 622,
	-291, 194, 165, 473, 15782, -1000, -1000, -1000, -1000, -1000,
	-1000, 300, 118, -213, 1217, -1000, -1000, -1000, -1000, -1000,
	-1000, 4416, -1000, -295, 4416, 3271, -1000, -1000, -1000, 4191,
	-1000, -1000, -1000, -1000, 28, -1000, -1000, 2610, -1000, 1167,
	-216, 1216, 1211, 1536, -1000, -298, 4082, -299, 230, 4416,
	564, -1000, 14090, -1000, 473, -1000, 14936, -1000, -1000, 1548,
	-1000, 1556, 391, 391, 3952, 609, 4416, -1000, -300, 229,
	4416, -1000, 563, -1000, 928, 854, -1000, -1000, -1000, 196,
	855, -1000, -1000, -1000, 3776, -1000, -301, 4416, -1000, -1000,
	-1000, -1000, -1000, 224, 3631, -306, -1000, 220, 4416, -1000,
}
var yyPgo = [...]int{

	0, 1866, 109, 782, 1865, 1863, 1862, 19, 17, 14,
	22, 1861, 1655, 1649, 1647, 1642, 1860, 1640, 1859, 5,
	1858, 1857, 1638, 1855, 1854, 1628, 26, 1853, 21, 1852,
	4, 114, 125, 1851, 3, 1848, 1847, 8, 1846, 1844,
	1626, 1843, 1841, 1837, 1836, 76, 1834, 1623, 1612, 1833,
	1829, 1607, 1596, 1828, 1826, 1592, 1581, 1577, 1825, 160,
	1824, 1819, 1818, 205, 79, 119, 1817, 1816, 1813, 84,
	57, 1675, 88, 39, 103, 642, 1812, 12, 44, 1811,
	1810, 96, 106, 1809, 118, 1808, 73, 138, 80, 1807,
	1804, 129, 1803, 1802, 1800, 95, 1798, 1796, 2317, 1795,
	1793, 123, 1792, 47, 52, 34, 1789, 1788, 1787, 1786,
	1785, 111, 98, 1784, 1783, 108, 1781, 68, 1780, 1779,
	140, 1778, 1775, 1771, 102, 49, 1769, 37, 1767, 45,
	54, 1764, 42, 1763, 101, 1762, 1761, 27, 9, 1760,
	30, 1759, 48, 1755, 105, 156, 191, 13, 33, 43,
	55, 104, 83, 16, 32, 112, 78, 62, 38, 117,
	1753, 120, 100, 1752, 1750, 880, 1747, 1746, 99, 1744,
	58, 116, 744, 122, 92, 72, 1743, 1742, 1740, 1739,
	61, 90, 1738, 1737, 82, 188, 81, 1378, 10, 1794,
	40, 124, 1736, 36, 1732, 1731, 2787, 93, 71, 89,
	1730, 1729, 85, 24, 50, 1727, 1726, 1724, 1723, 1722,
	1721, 69, 1720, 1719, 1718, 1715, 153, 65, 1714, 1713,
	86, 75, 1711, 1707, 1702, 1701, 1698, 91, 56, 115,
	1697, 97, 107, 113, 1696, 1694, 1693, 1688, 41, 35,
	1683, 1680, 1676, 74, 70, 1674, 46, 31, 28, 51,
	7, 64, 59, 1673, 25, 1672, 94, 2, 6, 11,
	1671, 1662, 1660, 1658, 1657, 60, 1653, 1651, 53, 1644,
	1636, 1630, 29, 1620, 1615, 1594, 1590, 0, 87, 121,
	1585, 1583, 130,
}
var yyR1 = [...]int{

	0, 275, 276, 276, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	58, 2, 2, 2, 6, 3, 3, 3, 79, 80,
	80, 84, 84, 4, 4, 5, 5, 7, 7, 62,
	62, 8, 9, 9, 9, 9, 279, 279, 93, 93,
	91, 91, 92, 92, 155, 155, 10, 10, 10, 10,
	159, 159, 162, 162, 162, 163, 163, 163, 163, 200,
	200, 147, 148, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 263, 263, 264, 264, 265, 265, 265, 265,
	266, 266, 267, 267, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 23, 183, 183, 38, 38, 39,
	39, 39, 143, 143, 143, 11, 11, 11, 11, 11,
	18, 20, 20, 27, 27, 28, 21, 21, 21, 21,
	29, 29, 30, 24, 24, 24, 24, 24, 24, 36,
	36, 36, 35, 35, 34, 34, 34, 34, 34, 34,
	22, 22, 22, 22, 37, 37, 32, 32, 31, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 25, 25, 25, 25, 25, 25, 17, 262, 262,
	262, 26, 26, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 43, 240, 241,
	241, 241, 241, 241, 241, 241, 241, 228, 229, 204,
	204, 204, 204, 204, 204, 204, 203, 203, 203, 203,
	207, 207, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 206, 206, 206, 206, 206, 206, 206, 206, 208,
	208, 208, 208, 208, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 210,
	210, 210, 210, 210, 210, 210, 210, 227, 227, 211,
	211, 220, 220, 221, 221, 221, 218, 218, 219, 219,
	222, 222, 214, 215, 223, 216, 216, 216, 217, 217,
	217, 226, 226, 226, 226, 212, 230, 230, 250, 250,
	249, 249, 248, 248, 248, 239, 239, 245, 245, 245,
	245, 245, 234, 234, 234, 233, 233, 235, 235, 238,
	238, 247, 247, 246, 231, 231, 251, 251, 251, 251,
	251, 232, 232, 232, 252, 236, 236, 237, 237, 237,
	258, 259, 257, 257, 257, 257, 257, 108, 108, 108,
	242, 242, 242, 243, 243, 243, 244, 244, 244, 260,
	260, 40, 40, 41, 46, 46, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 142, 142, 142,
	42, 181, 181, 256, 256, 256, 255, 253, 253, 254,
	254, 13, 44, 44, 14, 14, 14, 14, 14, 14,
	14, 15, 15, 47, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 76, 169, 169, 167, 167, 170, 170,
	168, 168, 168, 171, 171, 171, 201, 201, 201, 49,
	49, 54, 54, 57, 55, 56, 182, 182, 52, 52,
	53, 53, 53, 53, 68, 68, 280, 280, 51, 51,
	50, 50, 50, 50, 16, 281, 59, 60, 60, 61,
	61, 61, 174, 174, 65, 65, 65, 63, 63, 63,
	64, 64, 70, 70, 74, 74, 74, 74, 73, 73,
	73, 73, 145, 145, 145, 146, 146, 192, 192, 192,
	191, 191, 191, 191, 78, 78, 81, 81, 82, 82,
	82, 82, 85, 128, 128, 102, 102, 103, 103, 103,
	103, 103, 114, 114, 154, 154, 153, 153, 156, 156,
	83, 83, 83, 83, 88, 88, 89, 89, 90, 90,
	180, 180, 198, 198, 198, 94, 94, 94, 96, 95,
	95, 95, 95, 97, 97, 99, 100, 100, 98, 98,
	101, 104, 104, 104, 104, 105, 105, 75, 75, 75,
	75, 75, 75, 75, 166, 166, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 123, 123,
	123, 123, 123, 123, 109, 109, 109, 109, 109, 109,
	109, 69, 69, 124, 124, 124, 87, 86, 86, 72,
	72, 71, 71, 125, 125, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 118,
	118, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 282, 282, 120, 119, 119, 119, 119, 119, 119,
	66, 66, 66, 66, 66, 199, 199, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	135, 135, 67, 67, 133, 133, 134, 136, 136, 132,
	132, 132, 111, 111, 111, 111, 111, 111, 111, 111,
	113, 113, 113, 137, 137, 126, 126, 77, 77, 138,
	138, 139, 139, 140, 140, 141, 141, 144, 144, 149,
	149, 149, 150, 150, 150, 150, 115, 115, 151, 151,
	151, 110, 110, 110, 110, 110, 110, 152, 152, 152,
	152, 157, 157, 127, 127, 130, 130, 129, 131, 158,
	158, 161, 161, 161, 161, 160, 160, 160, 195, 195,
	195, 164, 164, 172, 172, 173, 173, 165, 165, 213,
	213, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	179, 179, 178, 178, 178, 175, 175, 175, 176, 176,
	193, 193, 189, 189, 194, 194, 190, 190, 196, 196,
	197, 197, 261, 261, 224, 224, 271, 271, 225, 225,
	272, 272, 274, 274, 269, 269, 270, 270, 273, 273,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 277,
	278, 184, 185, 185, 185,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	11, 4, 6, 7, 5, 10, 12, 13, 2, 1,
	3, 3, 6, 1, 3, 1, 3, 7, 8, 1,
	1, 9, 8, 7, 6, 6, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 4, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 0, 0, 2, 3, 11, 7, 9, 5, 5,
	15, 11, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 4, 0, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 3, 5, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	2, 4, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	1, 2, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 2, 1, 2, 1, 2, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 1, 1, 5, 1, 3, 2, 5, 4, 3,
	3, 3, 5, 3, 8, 10, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 0, 1, 2,
	4, 0, 1, 1, 1, 1, 7, 1, 3, 8,
	8, 3, 3, 5, 4, 6, 4, 4, 4, 4,
	4, 3, 2, 3, 4, 4, 3, 6, 6, 4,
	4, 4, 4, 4, 4, 3, 3, 2, 6, 2,
	4, 4, 4, 5, 7, 6, 5, 4, 2, 4,
	3, 2, 3, 3, 1, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 2, 2,
	2, 2, 3, 3, 2, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 4, 7, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 1, 1, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 9,
	4, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 1, 0,
	2, 1, 1, 0, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 4, 4, 1, 1, 0, 2,
	4, 2, 1, 3, 5, 4, 6, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -275, -1, -2, -6, -7, -8, -9, -10, -12,
	-40, -13, -14, -15, -47, -48, -49, -54, -55, -56,
	-52, -51, -50, -16, -22, -25, -17, -58, -3, -4,
	6, 7, -62, 9, 10, 30, -43, 130, -41, -42,
	133, 132, 169, 134, 162, 64, 224, -57, 227, 228,
	-280, -182, 167, 168, 31, 32, 136, 211, 212, 20,
	37, -79, -277, 8, 317, 131, 225, 164, 163, 26,
	362, 68, -276, 432, -140, 15, -61, 5, -59, -281,
	-59, -59, -59, -59, -59, -240, 105, 68, -176, 143,
	86, 308, 139, -183, 140, -175, 189, 44, 150, 149,
	140, 140, 141, 143, 308, 139, 177, 176, 140, -98,
	-196, 71, -187, 359, 153, 374, 375, 131, 186, 224,
	235, 229, 263, 251, 360, 376, 154, 206, 138, 249,
	252, 295, 152, 199, 377, 284, 290, 209, 80, 227,
	304, 378, 155, 203, 205, 204, 194, 210, 36, 165,
	247, 240, 214, 189, 379, 367, 238, 28, 184, 380,
	292, 268, 381, 364, 291, 243, 239, 136, 382, 156,
	150, 179, 383, 269, 273, 384, 296, 385, 386, 387,
	142, 233, 234, 388, 190, 298, 267, 33, 151, 361,
	48, 174, 299, 38, 271, 37, 283, 389, 266, 261,
	390, 391, 392, 393, 265, 232, 260, 201, 53, 137,
	275, 274, 276, 202, 294, 256, 254, 394, 395, 157,
	396, 397, 241, 18, 398, 399, 302, 168, 400, 42,
	401, 402, 403, 172, 404, 405, 406, 293, 270, 272,
	188, 407, 244, 147, 408, 176, 409, 363, 410, 300,
	237, 411, 158, 173, 167, 303, 412, 212, 413, 414,
	415, 159, 416, 417, 418, 228, 286, 207, 419, 420,
	421, 422, 198, 183, 306, 297, 52, 211, 280, 423,
	231, 149, 213, 424, 225, 43, 180, 7, 200, 287,
	208, 258, 175, 425, 426, 245, 246, 264, 230, 259,
	226, 177, 178, 169, 427, 305, 281, 365, 51, 253,
	250, 181, 257, 428, 143, 429, 182, 301, 248, 282,
	140, 123, 252, 295, 130, 285, 286, 292, -234, 293,
	176, 179, -201, 140, -167, 284, 182, 71, 141, 142,
	33, 297, 296, 288, -196, -68, 134, 170, -98, -184,
	-184, -184, 287, 287, -184, -37, 71, 213, -37, 30,
	71, 71, 36, 6, -2, -165, 143, 145, 226, -80,
	-84, -198, -196, -188, 73, 330, 331, 332, 333, 334,
	347, 348, 349, 335, 336, 350, 351, 352, 337, 338,
	353, 354, 356, 357, 355, 341, 340, 339, 342, 343,
	345, 344, 346, -150, 17, 16, -5, -3, -277, 6,
	21, 22, -65, 54, 55, -60, -73, 114, -75, -196,
	-106, 88, -112, 29, 71, -187, 24, -111, -107, -132,
	-131, -87, 123, 124, 125, 112, 113, 120, 89, 126,
	-118, -116, -117, -119, -121, -122, 73, 72, 81, 74,
	75, 76, 77, 82, 83, 84, -189, -129, -277, 58,
	59, 139, 318, 319, 320, 321, 358, 160, 322, 91,
	47, 307, 316, 315, 314, 312, 313, 309, 311, 310,
	324, 325, 146, 308, 118, 317, 347, 348, 349, 350,
	351, 352, 353, 354, 356, 357, 355, 337, 330, 331,
	332, 333, 334, 335, 336, 338, 339, 340, 341, 342,
	343, 344, 345, 346, -165, -165, 11, -91, -92, -98,
	-101, -196, -158, -200, 226, -161, 297, 296, -132, -160,
	-189, -196, 295, 252, 294, -98, -241, -229, -232, -190,
	155, -252, -189, -186, 152, 71, -187, 135, 161, 87,
	366, 23, 25, 278, 330, 90, 123, 331, 332, 333,
	16, 20, 91, 122, 318, 334, 130, 62, 309, 311,
	307, 308, 285, 29, 10, 26, 163, 193, 22, 116,
	132, 94, 95, 96, 166, 24, 164, 84, 160, 19,
	65, 11, 13, 328, 329, 14, 146, 145, 107, 191,
	141, 60, 8, 126, 27, 104, 56, 335, 336, 370,
	45, 371, 58, 105, 17, 312, 313, 31, 358, 337,
	171, 372, 338, 118, 196, 63, 50, 88, 82, 34,
	85, 66, 86, 15, 192, 61, 326, 195, 373, 106,
	133, 317, 59, 139, 6, 323, 30, 162, 341, 340,
	339, 342, 197, 57, 320, 321, 343, 430, 140, 93,
	324, 325, 144, 83, 5, 44, 32, 9, 64, 67,
	314, 315, 316, 47, 345, 344, 346, 92, 12, 327,
	362, 141, -98, 317, -173, 146, -173, 177, 176, -173,
	97, -44, -98, -172, 146, -189, -172, -172, -172, -172,
	-172, -98, 127, -98, 71, 30, -171, 105, 12, 308,
	139, 71, 176, 179, 140, 177, 143, -185, -277, -190,
	-185, -236, 11, 107, 180, 180, 180, 181, 180, -170,
	-169, 178, 290, 291, 287, 289, 12, -76, 105, -185,
	-53, -2, -9, -7, -8, -2, 97, -184, -184, 30,
	30, 73, 51, 30, -32, -31, -33, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 30,
	-262, 68, -224, 283, -59, -278, 70, 140, -98, 69,
	23, -277, -151, 19, 31, -115, 74, 77, -141, -144,
	-75, -188, 330, 331, 332, 333, 334, 347, 348, 349,
	335, 336, 350, 351, 352, 337, 338, 353, 354, 356,
	357, 355, 341, 340, 339, 342, 343, 345, 344, 346,
	-196, -140, -2, -59, 50, -63, 21, 22, 79, 11,
	-192, 87, 86, 104, -191, 23, 71, -187, -188, 73,
	127, -75, -109, 107, 88, 105, 106, 90, 109, 108,
	119, 112, 113, 114, 115, 116, 117, 118, 110, 111,
	122, 97, 98, 99, 100, 101, 102, 103, -166, -277,
	-87, -277, 128, 129, -112, -112, -112, -112, -112, -112,
	-112, -112, -277, -2, -125, -75, -277, -277, -277, -277,
	-277, -277, -277, -277, -277, -277, -277, -135, -75, -277,
	-282, -120, -277, -282, -120, -282, -120, -282, -277, -282,
	-120, -282, -120, -282, -282, -120, -282, -277, -277, -277,
	-277, -277, -277, -277, -277, -277, -277, -277, -277, -277,
	-277, -277, -277, -277, -277, -277, -277, -277, -277, -277,
	-277, -277, -277, -277, -277, -277, -277, -277, -277, -277,
	-277, -100, 27, -98, -78, -81, -82, -83, -102, -86,
	-277, -98, -87, -98, -91, -279, 69, 11, 67, -279,
	69, 127, 69, -158, 226, -159, -162, 298, 300, 97,
	-195, -189, 73, 29, 127, 30, 70, 69, -232, 155,
	152, -203, -207, -209, -208, -210, -205, -206, 249, 252,
	256, 254, 250, 255, 123, 253, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 30, 165, 245,
	246, 247, 248, 269, 270, 271, 272, 273, 274, 275,
	276, 229, 251, 360, 230, 231, 232, 233, 234, 235,
	237, 238, 239, 240, 241, 242, 243, 71, -252, 68,
	-189, 23, 143, 71, 88, 71, 71, 71, -98, 71,
	69, 144, -91, 24, 66, -93, -98, 71, 71, 71,
	71, -197, -196, -186, -185, -171, 73, -75, -173, -173,
	-185, -185, -185, -98, -98, -98, -98, -171, -171, -185,
	-185, -168, 11, 107, 11, -168, -168, -75, -112, 71,
	-32, -32, 73, -32, 69, 97, -32, 70, -125, -261,
	431, -65, -98, -185, -84, -86, -277, -152, -189, 9,
	107, 69, 18, 69, -149, 25, 26, -149, 127, -150,
	-278, -65, -113, 51, 74, 77, -174, 49, -98, -75,
	-75, -123, 82, 88, 83, 84, -191, 114, -197, -190,
	-186, -112, -124, -129, -87, 78, 107, 105, 106, 90,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -112, -199, 71, 73, 71, -111,
	-111, -189, -63, -278, 69, -278, -2, -71, -74, 114,
	-75, -196, -71, -278, -75, -75, -132, 73, -71, -132,
	73, -71, -71, -71, -63, -133, -134, 92, -132, -278,
	-112, -189, -189, -71, -72, -71, -71, -71, -278, -278,
	-74, -71, -74, -71, -71, -278, -278, -278, -278, -63,
	-63, -71, -71, -71, -63, -71, -71, -63, -71, -71,
	-71, -71, -63, -71, -71, -71, -155, 172, -98, 30,
	69, -94, -96, -95, -97, 56, 60, 62, 57, 58,
	59, 63, -180, 23, -78, -85, 47, -277, -103, 172,
	-104, 23, -198, 64, 145, 65, -155, 67, -78, -98,
	-78, -101, -196, 114, -161, -159, 69, 299, 301, 302,
	66, 85, -75, -217, 122, -190, -197, -242, -243, -244,
	-190, 73, 74, -229, -230, -231, -232, -245, 155, -251,
	147, 149, 44, -233, 156, 141, 45, -204, -218, 281,
	-211, 68, -211, -211, 257, 249, 252, 250, -211, -211,
	-211, -211, -211, -216, 252, -216, -216, -216, -216, 250,
	68, 68, -211, -211, -211, -220, 68, -220, 244, -221,
	68, -221, -221, -221, -221, -252, -75, -193, 67, -147,
	-98, -185, 24, -185, -38, 186, 161, 68, -98, -98,
	-98, 69, 71, 71, -237, 11, 107, -171, -196, -196,
	-98, -114, 23, -171, -69, 166, -31, -111, 70, -99,
	27, 73, -63, -46, -45, -177, 135, 132, 133, 137,
	138, -255, 278, 131, 252, 80, 29, 15, 318, 172,
	365, 71, 173, -278, 69, 127, 52, -115, -115, -144,
	-151, -164, 19, 11, 47, 47, -64, 57, 82, 83,
	84, 127, -277, -124, -112, -112, -112, -69, 87, -278,
	-72, -75, -278, 69, -278, 127, -278, 69, 67, 23,
	11, 11, -278, 11, 11, -278, -278, -278, -71, -136,
	-134, 94, -75, -278, -278, 69, 69, -278, -278, -278,
	-278, -145, 326, -145, -278, -278, -278, -278, -278, -145,
	-145, -145, -145, -71, -71, -278, -278, -278, -71, -278,
	-278, -71, -278, -278, -278, -278, -71, -278, -278, -278,
	-110, 30, 47, -2, -277, -277, -158, -81, -82, -82,
	-81, -82, 56, 56, 56, 61, 56, 61, 56, -95,
	-198, -278, -278, -128, 185, -277, 34, -198, -104, 141,
	141, 141, -105, 12, -78, -105, -105, 127, -162, -163,
	303, 300, 306, 71, 73, 127, 69, -244, 97, -232,
	68, 71, 45, -233, 141, 45, -233, -238, 71, -238,
	45, -222, -214, -215, -223, -226, -212, 82, 88, 29,
	66, 278, 147, 45, 44, 80, -219, 282, 74, -216,
	-216, -211, -211, -211, 257, -211, -216, -217, 30, -217,
	-217, -217, -217, -216, -227, 73, -227, 74, -220, 74,
	70, 66, -189, -2, 23, -39, 8, 9, 10, -263,
	-264, -265, 71, 107, 191, 192, 144, -185, -98, -185,
	-185, -105, 71, 71, -168, -171, 34, -112, -155, 140,
	-174, 69, -184, -181, -256, -233, -260, -231, -232, 148,
	156, 147, 172, 155, -181, -256, 155, 152, -233, 156,
	148, -178, -233, 144, 23, -181, -181, -239, 97, 172,
	23, -189, -189, 53, -98, -70, -148, 114, -190, -72,
	-69, 87, -112, -278, -74, 114, -197, -202, 123, 249,
	165, 247, 240, 267, 254, 280, 245, 281, -199, -202,
	-112, -112, -112, -112, 359, -140, 96, -75, 93, -112,
	-112, -189, -277, -145, -145, -145, -145, -145, -278, -278,
	-146, -145, -146, -146, -278, -146, -146, -278, -146, -146,
	-146, -146, -278, -146, -146, -146, -157, 66, -158, -127,
	-130, -129, -277, -2, -152, -156, -189, -105, -89, -88,
	66, 67, -90, 66, -88, 56, 56, -154, 68, 69,
	-129, -277, -156, -112, -104, -277, -277, -277, -140, -75,
	-105, 300, 304, 305, -243, -244, -247, -246, -189, -251,
	156, -238, -238, 68, 82, -112, 9, 45, 45, 73,
	70, -217, -217, -216, -211, -217, 71, 123, -217, 70,
	69, 70, 69, 70, 69, -108, 380, 88, -98, -147,
	-147, 66, 70, 69, -203, 71, 71, 71, -98, -171,
	-112, -216, -98, -64, -45, 68, -228, 71, -184, -238,
	-175, 71, 71, -184, 71, 71, -189, 45, 71, -98,
	-189, -228, 71, -75, -189, -86, 127, -105, 11, 69,
	-73, -278, -112, 127, -278, -211, -211, -211, -221, -211,
	234, -211, 234, -278, -278, 19, 19, 19, 19, -277,
	-67, 323, -75, 69, 69, -140, 172, -146, -146, -146,
	-146, -146, 28, -157, 69, -278, -278, -278, -278, 69,
	-140, -75, 68, -75, -153, -189, 185, -278, -104, -180,
	-153, -153, -153, -150, 70, 69, -211, -153, -117, -217,
	-216, 73, -216, 74, 74, 380, 68, -2, -98, -266,
	-267, -268, 80, 361, 88, 193, 194, 157, 195, 196,
	197, -265, -203, -203, -203, -269, -170, -70, -228, -142,
	160, 161, -203, -193, -235, -233, 71, -179, 144, 23,
	144, -142, -228, 27, -189, -137, 13, -78, -148, -148,
	114, -216, 71, -112, -112, -112, -112, -112, -278, 73,
	-112, -112, -278, 16, 45, -130, 47, -2, -277, -189,
	-150, -153, 70, 69, -129, -103, -198, -278, -278, -278,
	-249, -248, 67, 151, 80, -246, -149, 70, -217, -217,
	70, 70, -247, -147, 19, -147, -268, 73, 197, 193,
	197, 197, 197, 197, 198, -270, 38, -272, 39, 11,
	70, 71, -204, 68, -238, 71, -189, -142, -277, -138,
	14, 16, -105, -73, -278, -278, -278, -278, -66, 107,
	362, -278, -278, -125, 9, -127, -2, 70, -189, -104,
	-248, 71, -239, 73, 158, 70, 184, -19, -2, -7,
	-8, -9, -10, -12, -40, -13, -14, -20, -21, -15,
	-47, -48, -57, -55, -56, -52, -51, -24, -22, -25,
	-17, -23, 91, 146, 214, 224, 36, 36, 189, 190,
	-213, 145, -273, 43, -271, -225, 42, 16, -78, -247,
	-193, -253, -254, 172, -139, -75, -188, -126, -77, -75,
	-188, -137, -148, -278, 360, 63, 363, -140, -158, -278,
	74, -98, -250, -249, 185, -147, -75, -75, 71, -36,
	-194, 217, 218, 219, -190, -26, -19, -154, 74, -272,
	16, -274, 40, 41, 73, -105, 70, 68, -278, 69,
	-189, 69, -138, 53, 361, 364, -278, 68, -143, 187,
	188, -27, -28, 92, 93, 215, 216, 220, -203, 69,
	432, 38, 73, 16, 16, -137, -250, -247, -254, 47,
	-77, 53, -153, -147, 71, 71, 96, 94, -28, -75,
	-26, 19, 19, 19, 29, -190, 96, -19, 73, 73,
	-138, 70, 174, 362, 70, -11, -18, -10, -7, -8,
	-9, 224, 91, -26, 93, 432, -37, 74, -2, -35,
	-34, 74, -37, 222, 88, 223, 71, -112, -250, 175,
	363, -258, -259, 66, -147, -26, 432, -26, 96, 94,
	-29, -30, 95, -19, 69, 221, -277, 364, -259, 66,
	-258, 66, 10, 9, 432, 96, 432, 146, -26, 96,
	94, -30, -75, -34, -112, 171, -257, 159, 154, 157,
	30, -257, 96, 91, 432, 146, -26, 93, -278, -278,
	153, 29, 82, 96, 432, -26, 146, 96, 432, 146,
}
var yyDef = [...]int{

	29, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 823, 0,
	515, 515, 515, 515, 515, 515, 0, -2, 391, 392,
	0, 0, 0, 0, -2, 490, 491, 492, 494, 495,
	504, -2, 1301, 1301, 0, 0, 1301, 0, 181, 0,
	0, 0, 0, 49, 50, 877, 0, 507, 496, 497,
	0, 1299, 1, 3, 832, 0, 0, 519, 524, 517,
	0, 877, 877, 0, 0, 83, 0, 0, 0, 0,
	0, 875, 875, 0, 875, 899, 0, 895, 896, 897,
	0, 873, 0, 873, 873, 873, 873, 873, 0, 442,
	608, 908, 909, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	0, 0, 0, 483, 0, 1302, 1302, 457, 0, 459,
	0, 0, 0, 0, 0, 468, 471, 1302, 342, 343,
	344, 487, 488, 477, 489, 0, 0, 0, 508, 509,
	510, 511, 1301, 1301, 514, 160, 162, 0, 182, 0,
	185, 188, 914, 515, 43, 0, 0, 878, 493, 38,
	39, 0, 592, 593, 594, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 838, 0, 0, 823, 45, 0, 515,
	520, 521, 527, 525, 526, 516, 0, 538, 547, 0,
	617, 0, 622, 624, -2, -2, 0, 665, 666, 667,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	693, 694, 695, 696, 697, 698, 802, 803, 804, 805,
	806, 807, 808, 809, 626, 627, 799, 858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 761, 761, 761, 761, 761, 761, 761, 761, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	62, 608, 66, 0, 1251, 859, -2, -2, 0, 0,
	799, 0, -2, 1081, -2, 84, 0, 219, 220, 0,
	1093, 363, 906, 907, 1083, 902, 903, 930, 931, 932,
	933, 934, 935, 936, 937, 938, 939, 940, 941, 942,
	943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 0, 443, 1302, 483, 446, 0, 0, 875,
	875, 1302, 1302, 1302, 0, 0, 0, 455, 1303, 1304,
	456, 0, 365, 366, 483, 483, 1302, 1302, 480, 0,
	480, 480, 478, 479, 474, 475, 0, 470, 0, 472,
	498, -2, 501, 502, 503, -2, 0, 512, 513, 0,
	0, 164, 0, 0, 184, 166, 0, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 0,
	187, 0, 912, 915, 524, 44, 1300, 0, 1302, 0,
	0, 0, 31, 0, 0, 833, 836, 837, 824, 825,
	829, 829, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	0, 832, 43, 524, 0, 522, 528, 529, 518, 0,
	539, 0, 0, 0, 548, 0, 550, 551, 552, 553,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 645, 646, 647, 648, 649, 650, 623, 0,
	637, 0, 0, 0, 685, 686, 687, 688, 689, 690,
	691, 0, 527, 43, 0, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 791, 0,
	744, 753, 0, 745, 754, 746, 755, 747, 0, 748,
	756, 749, 757, 750, 751, 758, 752, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 527, 0, 0, 0, 527,
	0, 0, 527, 0, 0, 0, 0, 527, 0, 0,
	0, 64, 0, 607, 0, 554, 556, 557, 558, -2,
	0, 611, 657, -2, 0, 0, 0, 56, 57, 0,
	0, 0, 0, 67, 1251, 69, 70, 0, 0, 0,
	318, 868, 869, 870, 0, 866, 380, 0, 221, 0,
	0, 229, 306, 237, 238, 239, 299, 241, 299, 299,
	0, 299, 299, 299, 299, 299, 315, 315, 315, 315,
	315, 282, 283, 284, 285, 286, 0, 0, 259, 299,
	299, 299, 263, 289, 290, 291, 292, 293, 294, 295,
	296, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	301, 301, 303, 303, 303, 303, 303, 0, 362, 0,
	900, 81, 0, 1302, 0, 1302, 0, 0, 217, 116,
	0, 0, 434, 874, 0, 436, 58, 437, 438, 439,
	440, 609, 910, 911, 444, 445, 484, 485, 0, 0,
	449, 450, 451, 452, 453, 454, 367, 460, 461, 462,
	467, 483, 0, 0, 0, 572, 483, 469, 651, 505,
	161, 163, 165, 183, 0, 0, 186, 189, 0, 0,
	0, 527, 0, 420, 40, 41, 0, 0, 847, 839,
	0, 0, 0, 0, 827, 830, 831, 828, 0, 838,
	46, 527, 0, 810, 0, 0, 530, 523, 34, 618,
	619, 621, 638, 0, 640, 642, 549, 540, 0, 800,
	-2, 628, 629, 653, 654, 655, 0, 0, 0, 0,
	651, 633, 0, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 684, 775, 776, 0, 682,
	683, 692, 659, 656, 0, 857, 43, 0, 661, 534,
	535, 0, 0, 731, 0, 0, 667, 802, 0, 667,
	802, 0, 0, 0, 0, 797, 794, 0, 0, 762,
	0, 0, 0, 0, 0, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 598, 0,
	0, 0, 0, 591, 0, 0, 0, 0, 565, 1184,
	567, 0, 611, 0, 0, 0, 615, 0, 615, 61,
	615, 63, 0, 610, 860, 68, 0, 0, 73, 74,
	861, 862, 863, 864, 0, 800, 0, 218, 381, 383,
	386, 387, 388, 222, 224, 225, 226, 0, 1093, 355,
	1194, 1232, -2, 349, 1120, -2, -2, 228, 308, 307,
	240, 0, 315, 315, 299, 299, 299, 299, 268, 315,
	271, 274, 275, 318, 0, 318, 318, 318, 318, 315,
	0, 0, 260, 261, 262, 251, 0, 252, 301, 254,
	0, 255, 256, 257, 258, 361, 0, 0, 0, 0,
	0, 88, 876, 89, 0, 117, 118, 92, 0, 432,
	1302, 0, 1302, 1302, 615, 0, 0, 463, 481, 482,
	480, 483, 0, 466, 473, 0, 167, 168, 190, 64,
	0, 913, 522, 393, 394, 1301, -2, 421, 892, 421,
	421, 412, 335, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 0, 0, 0, 0, 0, 834, 835, 826,
	32, 0, 871, 872, 811, 812, 82, 531, 639, 641,
	643, 0, 659, 630, 651, 634, 0, 631, 0, 625,
	0, 664, -2, 0, 729, 0, 730, 0, 0, 0,
	0, 0, 768, 0, 0, 769, 0, 740, 823, 0,
	795, 0, 0, 743, 763, 0, 0, 764, 765, 766,
	767, 718, 0, 719, 0, 0, 0, 0, 0, 725,
	726, 727, 728, 0, 0, 545, 545, 545, 0, 545,
	545, 0, 545, 545, 545, 545, 0, 545, 545, 545,
	851, 0, 0, -2, 0, 0, 615, 555, 586, 588,
	0, 583, 596, 597, 599, 0, 601, 0, 603, 604,
	574, 561, 658, 562, 0, 0, 0, 611, 571, 0,
	0, 0, 823, 0, 615, 54, 55, 0, 71, 72,
	0, 0, 78, 319, 320, 0, 0, 384, 0, 223,
	0, 0, 337, 349, 345, 346, 349, 340, 350, 341,
	0, 230, 231, 232, 233, 234, 235, 310, 0, 0,
	0, 314, 0, 322, 324, 0, 236, 309, 0, 318,
	318, 315, 266, 267, 299, 272, 318, 276, 0, 277,
	278, 279, 280, 318, 0, 297, 0, 0, 253, 0,
	377, 0, 901, -2, 81, 0, 119, 120, 121, 0,
	93, 94, 0, 0, 0, 0, 0, 435, 59, 447,
	448, 458, 368, 369, 483, 465, 0, 652, 315, 0,
	530, 0, 396, 0, 1301, 349, 0, 413, 414, 422,
	423, 424, 425, 0, 0, 1301, 0, 0, 0, 423,
	0, 0, 0, 893, 894, 0, 0, 0, 336, 0,
	0, 849, 848, 840, 33, 615, 0, 541, 801, 0,
	632, 0, 635, 699, 662, 536, 0, 0, 299, 299,
	780, 299, 303, 783, 299, 785, 299, 788, 0, 0,
	0, 0, 0, 0, 0, 792, 742, 798, 0, 0,
	0, 542, 823, 720, 721, 722, 723, 724, 545, 545,
	703, 546, 704, 705, 545, 707, 708, 545, 710, 711,
	712, 713, 545, 715, 716, 717, 47, 0, 851, 841,
	853, 855, 0, 43, 0, 0, 578, 823, 580, 587,
	0, 0, 581, 0, 582, 600, 602, 559, 0, 0,
	563, 0, 0, -2, 570, 0, 0, 0, 832, 616,
	53, 75, 76, 77, 382, 385, 0, 351, 299, 354,
	0, 338, 339, 0, 311, 312, 0, 321, 323, 325,
	300, 264, 265, 318, 273, 269, 316, 317, 281, 315,
	0, 315, 0, 304, 0, 364, 378, 0, 0, 86,
	0, 0, 100, 0, 96, 0, 0, 0, 433, 464,
	573, 924, 605, 82, 395, 0, 417, 0, 399, 900,
	347, 390, 400, 401, 406, 407, 408, 0, 0, 403,
	0, 417, 0, 416, 0, 42, 0, 813, 0, 82,
	82, 700, 636, 0, 732, 777, 315, 781, 782, 784,
	786, 787, 789, 734, 733, 0, 0, 0, 0, 0,
	0, 0, 796, 0, 0, 0, 0, 701, 702, 706,
	709, 714, 0, 48, 0, 856, -2, 0, 65, 0,
	832, 584, 0, 589, 0, 576, 0, 611, 568, 0,
	0, 0, 0, 52, 327, 0, 829, 0, 313, 270,
	318, 298, 318, 0, 0, 379, 0, -2, 0, 81,
	101, 102, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 95, 97, 98, 99, 926, 920, 0, 0, 398,
	418, 0, 229, 0, 349, 348, 415, 0, 890, 891,
	0, 410, 417, 0, 850, 819, 0, 615, 0, 532,
	537, 778, 779, 0, 0, 0, 0, 770, 741, 793,
	0, 0, 543, 0, 0, 854, 0, -2, 0, 579,
	51, 0, 575, 0, 564, 566, 611, 612, 613, 614,
	326, 330, 0, 335, 0, 352, 353, 0, 287, 288,
	302, 305, 0, 87, 0, 0, 103, 104, 105, 106,
	108, 109, 0, 0, 0, 879, 928, -2, 0, 0,
	397, 419, 227, 0, 900, 402, 409, 411, 0, 35,
	0, 0, 813, 82, 735, 737, 736, 738, 0, 0,
	0, 759, 760, 823, 0, 844, 43, 585, 577, 569,
	331, 332, 0, 334, 0, 328, 0, 81, -2, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 0, 0, 0, 0, 110, 111, 112, 113,
	574, 0, 920, 0, 922, 0, 919, 0, 615, 0,
	0, 0, 427, 0, 820, 821, 822, 814, 815, 817,
	818, 819, 533, 739, 0, 0, 0, 0, 852, -2,
	333, 0, 85, 329, 122, 91, 0, 0, 902, 0,
	0, 149, 150, 151, 904, 0, 191, 30, 0, 927,
	0, 925, 0, 0, 921, 813, 328, 0, 426, 0,
	0, 0, 36, 771, 0, 774, 544, 0, 81, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 147, 0,
	0, 880, 929, 0, 0, 819, 404, 0, 428, 0,
	816, 772, 0, 0, 123, 124, 0, 0, 134, 0,
	0, 0, 0, 0, 0, 905, 114, 192, 923, 917,
	37, 328, 0, 0, 356, 81, 125, 126, 127, 128,
	129, 0, 131, 0, 0, 0, 143, 144, -2, 0,
	152, 154, 155, 156, 0, 158, 159, 148, 405, 0,
	0, 357, 358, 0, 90, 0, 0, 0, 0, 0,
	0, 140, 0, 146, 0, 157, 0, 773, 359, 0,
	360, 0, 0, 0, 0, 0, 135, 136, 0, 0,
	0, 141, 0, 153, 0, 0, 370, 372, 373, 0,
	0, 371, 130, 132, 0, 138, 0, 0, 429, 430,
	374, 375, 376, 0, 0, 0, 137, 0, 142, 139,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 432,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:403
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:408
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:409
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:441
		{
			setParseTree(yylex, nil)
		}
	case 30:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:447
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 31:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:453
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:461
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:465
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 34:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:471
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 35:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:478
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 36:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:485
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 37:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:492
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:501
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:507
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:511
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:521
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:531
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:537
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:541
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:548
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:572
		{
			yyVAL.str = InsertStr
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:576
		{
			yyVAL.str = ReplaceStr
		}
	case 51:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:582
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:588
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:592
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:606
		{
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:610
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:639
		{
			yyVAL.partitions = nil
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:643
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:657
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:671
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:677
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:691
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.str = SessionStr
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.str = GlobalStr
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:718
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:723
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:742
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:746
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:750
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:754
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:762
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 90:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:770
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:774
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.procedureParams = nil
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:807
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:816
		{
			yyVAL.characteristics = nil
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:820
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:848
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:856
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:868
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:878
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:883
		{
			yyVAL.str = ""
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
			yyVAL.str = BeforeStr
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:897
		{
			yyVAL.str = AfterStr
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.str = InsertStr
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
			yyVAL.str = UpdateStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:911
		{
			yyVAL.str = DeleteStr
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:916
		{
			yyVAL.triggerOrder = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:940
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:946
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:950
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:966
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:972
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 137:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:977
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:982
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 139:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:988
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1000
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1006
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1016
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1020
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1024
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1032
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1053
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1071
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.statement = &Resignal{}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.exprs = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.exprs = nil
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1305
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1414
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.sqlVal = nil
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1691
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1695
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1703
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1721
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1730
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = ""
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = ""
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.colKeyOpt = colKey
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1819
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1823
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.indexOptions = nil
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1852
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = yyDollar[1].str
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 356:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1963
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 357:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1967
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 358:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1971
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 359:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1975
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 360:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1979
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1999
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2014
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2028
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2034
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2061
		{
			yyVAL.boolean = true
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.boolean = true
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.boolean = false
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = ""
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = yyDollar[1].str
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2131
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2158
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2184
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2193
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 405:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2197
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2215
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2219
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2226
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2248
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnOrder = nil
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2272
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2278
		{
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
		}
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2289
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2305
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2309
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2325
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2333
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2341
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2345
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2353
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2361
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2402
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2407
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 447:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2415
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2419
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2460
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2472
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2476
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2484
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2489
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2499
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2503
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2507
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2511
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2557
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.str = "full "
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = ""
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.showFilter = nil
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2605
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.str = SessionStr
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2613
		{
			yyVAL.str = GlobalStr
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.statement = &Begin{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2639
		{
			yyVAL.statement = &Begin{}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.statement = &Commit{}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.statement = &Rollback{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.statement = &OtherRead{}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2726
		{
			setAllowComments(yylex, true)
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2736
		{
			yyVAL.bytes2 = nil
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = UnionStr
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = UnionAllStr
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = UnionDistinctStr
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2759
		{
			yyVAL.byt = 0
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.byt = 1
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = SQLCacheStr
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = ""
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = DistinctStr
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = StraightJoinHint
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2804
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2812
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2831
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2835
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2853
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2864
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 544:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2868
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2873
		{
			yyVAL.over = nil
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.over = yyDollar[1].over
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2882
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2890
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2918
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2932
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2948
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2964
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2970
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2975
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2990
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2994
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3013
		{
			yyVAL.expr = nil
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3022
		{
			yyVAL.columns = nil
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3059
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3063
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3067
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3079
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3083
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3089
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3094
		{
			yyVAL.empty = struct{}{}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.empty = struct{}{}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3111
		{
			yyVAL.str = JoinStr
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.str = JoinStr
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = JoinStr
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = StraightJoinStr
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = LeftJoinStr
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = LeftJoinStr
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = RightJoinStr
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = RightJoinStr
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.str = NaturalJoinStr
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3169
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3173
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3194
		{
			yyVAL.indexHints = nil
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3198
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3202
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3206
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = nil
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3225
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3229
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3251
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = IsNullStr
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = IsNotNullStr
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = IsTrueStr
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = IsNotTrueStr
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = IsFalseStr
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = IsNotFalseStr
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3339
		{
			yyVAL.str = EqualStr
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = LessThanStr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = GreaterThanStr
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = LessEqualStr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = GreaterEqualStr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = NotEqualStr
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3368
		{
			yyVAL.expr = nil
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3392
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3402
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.selectExprs = nil
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3425
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3535
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3603
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3611
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3615
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3619
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3627
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3664
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3727
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3731
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3735
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3747
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3751
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 739:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3755
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 741:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3771
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3815
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3819
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 759:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3851
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3855
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.str = BooleanModeStr
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 773:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = QueryExpansionStr
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3934
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3950
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3954
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3972
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.expr = nil
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3998
		{
			yyVAL.str = string("")
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4012
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4023
		{
			yyVAL.expr = nil
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4037
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4041
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.expr = &NullVal{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4085
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4094
		{
			yyVAL.exprs = nil
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4098
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4108
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4123
		{
			yyVAL.expr = nil
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4127
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.orderBy = nil
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4156
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = AscScr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = AscScr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = DescScr
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4184
		{
			yyVAL.limit = nil
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4188
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4192
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4196
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4211
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = ForUpdateStr
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = ShareModeStr
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4240
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4245
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4249
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4253
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4268
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4272
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4277
		{
			yyVAL.setExprs = nil
		}
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4281
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4337
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4352
		{
			yyVAL.bytes = []byte("charset")
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.expr = &Default{}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4376
		{
			yyVAL.byt = 0
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4378
		{
			yyVAL.byt = 1
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4381
		{
			yyVAL.byt = 0
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.byt = 1
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = IgnoreStr
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4391
		{
			yyVAL.sqlVal = nil
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.empty = struct{}{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.empty = struct{}{}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.empty = struct{}{}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.empty = struct{}{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.empty = struct{}{}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.empty = struct{}{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.empty = struct{}{}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.empty = struct{}{}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.empty = struct{}{}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.empty = struct{}{}
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.empty = struct{}{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.str = UniqueStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.str = FulltextStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = SpatialStr
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4442
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4444
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4462
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4475
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = string("")
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4496
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.EnclosedBy = nil
		}
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4505
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4510
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.sqlVal = nil
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.sqlVal = nil
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4532
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4537
		{
			yyVAL.Fields = nil
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4541
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4546
		{
			yyVAL.Lines = nil
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.sqlVal = nil
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4559
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			decNesting(yylex)
		}
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4972
		{
			skipToEnd(yylex)
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4977
		{
			skipToEnd(yylex)
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			skipToEnd(yylex)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
