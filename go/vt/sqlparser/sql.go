// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	"fmt"
	__yyfmt__ "fmt"
)

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const NULLX = 57606
const AUTO_INCREMENT = 57607
const APPROXNUM = 57608
const SIGNED = 57609
const UNSIGNED = 57610
const ZEROFILL = 57611
const LOCAL = 57612
const COLLATION = 57613
const DATABASES = 57614
const SCHEMAS = 57615
const TABLES = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const NAMES = 57623
const CHARSET = 57624
const GLOBAL = 57625
const SESSION = 57626
const ISOLATION = 57627
const LEVEL = 57628
const READ = 57629
const WRITE = 57630
const ONLY = 57631
const REPEATABLE = 57632
const COMMITTED = 57633
const UNCOMMITTED = 57634
const SERIALIZABLE = 57635
const CURRENT_TIMESTAMP = 57636
const DATABASE = 57637
const CURRENT_DATE = 57638
const CURRENT_USER = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const UTC_DATE = 57643
const UTC_TIME = 57644
const UTC_TIMESTAMP = 57645
const REPLACE = 57646
const CONVERT = 57647
const CAST = 57648
const SUBSTR = 57649
const SUBSTRING = 57650
const GROUP_CONCAT = 57651
const SEPARATOR = 57652
const TIMESTAMPADD = 57653
const TIMESTAMPDIFF = 57654
const OVER = 57655
const WINDOW = 57656
const GROUPING = 57657
const GROUPS = 57658
const AVG = 57659
const BIT_AND = 57660
const BIT_OR = 57661
const BIT_XOR = 57662
const COUNT = 57663
const JSON_ARRAYAGG = 57664
const JSON_OBJECTAGG = 57665
const MAX = 57666
const MIN = 57667
const STDDEV_POP = 57668
const STDDEV = 57669
const STD = 57670
const STDDEV_SAMP = 57671
const SUM = 57672
const VAR_POP = 57673
const VARIANCE = 57674
const VAR_SAMP = 57675
const CUME_DIST = 57676
const DENSE_RANK = 57677
const FIRST_VALUE = 57678
const LAG = 57679
const LAST_VALUE = 57680
const LEAD = 57681
const NTH_VALUE = 57682
const NTILE = 57683
const ROW_NUMBER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const MATCH = 57687
const AGAINST = 57688
const BOOLEAN = 57689
const LANGUAGE = 57690
const WITH = 57691
const QUERY = 57692
const EXPANSION = 57693
const UNUSED = 57694
const ARRAY = 57695
const DESCRIPTION = 57696
const EMPTY = 57697
const EXCEPT = 57698
const JSON_TABLE = 57699
const LATERAL = 57700
const MEMBER = 57701
const RECURSIVE = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const SYSTEM = 57759
const INFILE = 57760

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 31,
	5, 47,
	-2, 839,
	-1, 39,
	140, 900,
	141, 926,
	-2, 118,
	-1, 46,
	180, 494,
	181, 494,
	-2, 484,
	-1, 53,
	1, 1333,
	436, 1333,
	-2, 520,
	-1, 435,
	127, 936,
	-2, 930,
	-1, 436,
	127, 937,
	-2, 931,
	-1, 537,
	97, 1155,
	127, 1155,
	-2, 884,
	-1, 538,
	97, 1256,
	127, 1256,
	-2, 885,
	-1, 543,
	97, 1175,
	127, 1175,
	-2, 886,
	-1, 544,
	97, 1214,
	127, 1214,
	-2, 887,
	-1, 545,
	97, 1215,
	127, 1215,
	-2, 888,
	-1, 546,
	97, 1110,
	127, 1110,
	-2, 892,
	-1, 548,
	97, 1193,
	127, 1193,
	-2, 894,
	-1, 984,
	1, 574,
	5, 574,
	12, 574,
	13, 574,
	14, 574,
	15, 574,
	17, 574,
	19, 574,
	30, 574,
	31, 574,
	56, 574,
	57, 574,
	58, 574,
	59, 574,
	60, 574,
	62, 574,
	63, 574,
	66, 574,
	67, 574,
	69, 574,
	70, 574,
	436, 574,
	-2, 604,
	-1, 988,
	67, 64,
	69, 64,
	-2, 68,
	-1, 1179,
	127, 939,
	-2, 935,
	-1, 1344,
	68, 355,
	-2, 1076,
	-1, 1347,
	68, 351,
	71, 351,
	-2, 1011,
	-1, 1348,
	68, 352,
	71, 352,
	-2, 1021,
	-1, 1431,
	68, 429,
	71, 429,
	-2, 395,
	-1, 1476,
	5, 48,
	-2, 672,
	-1, 1793,
	1, 627,
	5, 627,
	12, 627,
	13, 627,
	14, 627,
	15, 627,
	17, 627,
	19, 627,
	30, 627,
	31, 627,
	56, 627,
	57, 627,
	58, 627,
	59, 627,
	60, 627,
	62, 627,
	63, 627,
	66, 627,
	67, 627,
	69, 627,
	70, 627,
	436, 627,
	-2, 604,
	-1, 1917,
	5, 48,
	-2, 859,
	-1, 2052,
	41, 946,
	-2, 944,
	-1, 2160,
	5, 48,
	-2, 862,
}

const yyPrivate = 57344

const yyLast = 25327

var yyAct = [...]int{

	469, 76, 2307, 2261, 2282, 2177, 2272, 1391, 2163, 2263,
	2066, 2273, 2098, 7, 2097, 6, 2096, 5, 2099, 8,
	2203, 1990, 2143, 1019, 2052, 2149, 2176, 389, 2026, 1787,
	1704, 1568, 1389, 1694, 427, 1806, 1299, 440, 1293, 1349,
	1767, 1156, 80, 1540, 1807, 468, 2164, 1954, 1927, 1972,
	420, 1768, 1703, 1594, 1856, 1297, 1648, 453, 909, 1291,
	1381, 1341, 748, 101, 984, 1764, 362, 1345, 725, 368,
	371, 1331, 1429, 1541, 1330, 1460, 560, 76, 1773, 1779,
	1715, 1217, 1204, 1320, 1149, 1417, 1243, 1165, 557, 1670,
	1631, 1275, 999, 1671, 1377, 1099, 1282, 738, 433, 387,
	1235, 810, 1181, 539, 1337, 817, 2095, 3, 813, 438,
	556, 777, 981, 1119, 998, 1238, 535, 423, 980, 531,
	536, 363, 364, 1365, 859, 367, 542, 386, 776, 990,
	925, 2329, 562, 2325, 2315, 2297, 2295, 528, 926, 2277,
	703, 2256, 2211, 79, 1141, 1837, 1948, 2288, 2196, 2271,
	82, 65, 2076, 874, 873, 883, 884, 876, 877, 878,
	879, 880, 881, 882, 875, 1749, 2157, 885, 32, 2244,
	1955, 2195, 32, 1732, 1506, 1902, 32, 702, 1957, 32,
	2156, 1802, 1803, 419, 84, 85, 86, 87, 88, 730,
	558, 1801, 1535, 1317, 1318, 112, 108, 109, 1577, 110,
	1000, 1576, 1001, 1316, 1578, 750, 751, 752, 366, 1536,
	365, 32, 795, 68, 35, 36, 1614, 2011, 736, 482,
	1295, 488, 490, 489, 486, 487, 485, 484, 483, 1351,
	77, 1353, 114, 113, 77, 1353, 491, 492, 77, 705,
	1997, 77, 552, 1366, 68, 35, 36, 1960, 1357, 1359,
	442, 1358, 1371, 1893, 1366, 1891, 356, 729, 733, 1378,
	377, 735, 850, 1128, 759, 384, 37, 369, 2286, 2208,
	2206, 2207, 372, 77, 2049, 2258, 2048, 1606, 2047, 2046,
	2045, 2043, 1219, 1958, 1959, 1961, 1962, 1963, 2044, 2128,
	2129, 104, 1611, 1610, 731, 734, 1442, 732, 1398, 2267,
	2200, 2201, 2262, 747, 2165, 1929, 1649, 1560, 2093, 744,
	1441, 745, 746, 373, 1607, 743, 2265, 2270, 753, 2243,
	754, 751, 752, 1397, 707, 706, 2144, 1697, 1612, 1276,
	1604, 1973, 1974, 96, 359, 2311, 1605, 737, 737, 2091,
	1018, 1018, 1650, 357, 1810, 2027, 1982, 1018, 1983, 737,
	1017, 1676, 1446, 1861, 2330, 2321, 1588, 2327, 2029, 76,
	76, 1440, 1075, 1302, 1304, 2316, 2298, 429, 111, 704,
	360, 764, 713, 766, 2131, 765, 81, 382, 383, 383,
	800, 1653, 1089, 761, 1080, 1567, 98, 1566, 807, 1666,
	95, 1565, 700, 803, 708, 1609, 106, 105, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	370, 2077, 1438, 1432, 1433, 370, 1431, 331, 1434, 1435,
	107, 1884, 1129, 760, 1621, 1366, 1651, 1652, 1356, 2028,
	728, 1877, 769, 770, 1018, 894, 102, 1018, 896, 1380,
	1581, 1836, 370, 1018, 1303, 1592, 103, 897, 898, 1573,
	819, 2264, 2266, 1444, 1447, 1956, 370, 863, 1479, 2309,
	1986, 2252, 2310, 104, 2308, 763, 767, 1981, 907, 1465,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 2155, 924, 927, 927, 927, 933, 927, 927, 933,
	927, 933, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 69, 985, 75, 797,
	1608, 799, 75, 1907, 1592, 808, 75, 1439, 1487, 75,
	1484, 1591, 899, 900, 901, 902, 903, 904, 905, 906,
	32, 1450, 68, 35, 36, 1160, 739, 69, 1011, 97,
	1595, 996, 1987, 1437, 61, 979, 1716, 758, 106, 105,
	74, 75, 865, 542, 37, 721, 908, 1691, 542, 874,
	873, 883, 884, 876, 877, 878, 879, 880, 881, 882,
	875, 1826, 1321, 885, 875, 1012, 885, 885, 1312, 1592,
	1152, 1120, 858, 1443, 1408, 712, 727, 741, 1718, 93,
	1695, 1777, 77, 1136, 928, 930, 932, 934, 936, 938,
	939, 941, 929, 931, 856, 935, 937, 1592, 940, 1009,
	1591, 1188, 1482, 768, 1481, 2122, 1076, 1418, 1734, 1003,
	2328, 858, 709, 1827, 1004, 1016, 1186, 1187, 1185, 1236,
	1445, 857, 856, 2314, 92, 897, 898, 897, 898, 994,
	1157, 1158, 857, 856, 1236, 989, 1495, 755, 2204, 858,
	2253, 351, 1082, 1814, 39, 70, 43, 42, 45, 1592,
	858, 878, 879, 880, 881, 882, 875, 1720, 895, 885,
	2123, 91, 1724, 853, 1719, 1591, 1717, 1121, 1690, 726,
	1409, 1722, 1687, 742, 1013, 818, 46, 73, 72, 348,
	2301, 2283, 2300, 44, 1721, 866, 715, 716, 717, 718,
	719, 857, 856, 1591, 737, 857, 856, 1723, 1725, 1678,
	1676, 737, 737, 737, 1684, 857, 856, 1683, 1686, 858,
	77, 1162, 2318, 858, 857, 856, 737, 737, 857, 856,
	1184, 2255, 910, 858, 1679, 2205, 59, 60, 2322, 2124,
	757, 332, 858, 923, 1163, 2179, 858, 1164, 335, 2125,
	71, 381, 50, 51, 63, 1591, 64, 987, 344, 349,
	350, 1678, 1676, 1899, 857, 856, 1018, 2161, 1947, 1680,
	1677, 1736, 2204, 1103, 2228, 1946, 2227, 1171, 1173, 1174,
	2240, 76, 858, 1172, 1636, 737, 1679, 1148, 1462, 1463,
	1464, 2323, 1115, 1116, 341, 814, 1634, 342, 815, 1615,
	347, 960, 961, 962, 963, 964, 948, 949, 950, 965,
	966, 951, 952, 953, 959, 967, 954, 955, 956, 957,
	958, 970, 969, 968, 971, 972, 974, 973, 975, 1086,
	1090, 1637, 1139, 2239, 1101, 1483, 1126, 525, 526, 2213,
	1205, 1159, 1206, 1123, 1124, 69, 2185, 857, 856, 1106,
	1107, 1147, 874, 873, 883, 884, 876, 877, 878, 879,
	880, 881, 882, 875, 774, 858, 885, 1579, 863, 1580,
	2090, 2042, 2004, 1944, 333, 1819, 1632, 76, 1425, 1133,
	1131, 1132, 1104, 1776, 1134, 1855, 773, 1143, 1857, 2226,
	75, 1748, 911, 2225, 1182, 1142, 2018, 2245, 857, 856,
	1137, 1938, 2242, 2190, 809, 809, 346, 336, 337, 2088,
	354, 1938, 2187, 1146, 338, 340, 858, 334, 353, 352,
	2060, 1595, 1102, 458, 457, 460, 461, 462, 463, 1108,
	1109, 1110, 459, 464, 2056, 1225, 1228, 1938, 2092, 1292,
	1857, 1177, 1237, 1178, 1117, 1118, 1180, 2018, 2084, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1979, 1175, 1296, 2018, 2032, 2018,
	809, 985, 2018, 2017, 2055, 985, 1938, 1937, 1179, 1872,
	1302, 1304, 1868, 908, 1920, 809, 2192, 1208, 1209, 1865,
	1105, 1449, 809, 1569, 1864, 1862, 1847, 1846, 1215, 1879,
	1569, 1845, 1660, 1145, 1212, 1214, 1239, 1834, 1833, 1307,
	1222, 1659, 1249, 1309, 1251, 542, 1830, 1831, 1125, 1830,
	1829, 1477, 809, 2036, 874, 873, 883, 884, 876, 877,
	878, 879, 880, 881, 882, 875, 1419, 987, 885, 1279,
	809, 1213, 1422, 1327, 1247, 1248, 1406, 1405, 1213, 809,
	1279, 1254, 1255, 1256, 1257, 1207, 910, 1880, 1130, 2054,
	1305, 1303, 737, 1127, 737, 1098, 1301, 1097, 1096, 1095,
	1087, 1085, 908, 436, 1076, 876, 877, 878, 879, 880,
	881, 882, 875, 1084, 1338, 885, 1352, 1326, 1083, 1325,
	1081, 796, 1332, 558, 1314, 1310, 723, 1319, 1313, 1183,
	1015, 1014, 992, 376, 374, 2035, 1335, 1765, 81, 1101,
	1776, 1328, 1383, 1384, 1385, 1386, 1842, 1880, 119, 1168,
	1169, 119, 1820, 1569, 1179, 1154, 992, 119, 1306, 76,
	991, 81, 1387, 1278, 1915, 1843, 1832, 1789, 1668, 1367,
	1368, 1369, 1370, 1583, 1379, 1315, 1477, 1500, 1499, 119,
	1211, 553, 809, 1135, 1404, 991, 1155, 1088, 993, 1466,
	995, 119, 1213, 819, 1233, 119, 565, 997, 1410, 119,
	805, 1390, 1279, 1416, 910, 806, 1153, 77, 1223, 1224,
	1776, 119, 993, 565, 991, 1477, 2198, 2188, 1788, 119,
	874, 873, 883, 884, 876, 877, 878, 879, 880, 881,
	882, 875, 1258, 1259, 885, 2058, 1949, 1263, 1353, 1925,
	1266, 1182, 1382, 77, 1813, 1271, 987, 1780, 1781, 2292,
	77, 987, 1378, 1587, 1399, 987, 1421, 1420, 1373, 1372,
	1077, 793, 2290, 2274, 1841, 908, 1326, 1783, 1178, 1427,
	1765, 1454, 1452, 1453, 1638, 1448, 1284, 1287, 1288, 1289,
	1285, 1092, 1286, 1290, 1552, 1471, 1538, 1539, 1461, 1553,
	985, 985, 985, 985, 985, 1468, 1469, 1470, 1467, 1550,
	1786, 1785, 1324, 1179, 1551, 1549, 1548, 1296, 1474, 1561,
	1393, 1554, 1395, 1288, 1289, 424, 425, 985, 1284, 1287,
	1288, 1289, 1285, 2222, 1286, 1290, 1542, 2194, 1780, 1781,
	1701, 1451, 1166, 1473, 2220, 851, 852, 1459, 1458, 2009,
	1597, 1476, 1478, 1867, 1818, 1494, 1817, 1480, 1564, 1571,
	1589, 1572, 2133, 1486, 2136, 1570, 1489, 1490, 1491, 2184,
	2183, 2053, 542, 1497, 849, 1498, 2212, 2051, 1501, 1502,
	1388, 1503, 1504, 2127, 2126, 1508, 1509, 1510, 1511, 1512,
	375, 1663, 1625, 1010, 791, 775, 1519, 1520, 1521, 772,
	1523, 1524, 1537, 1526, 1527, 1528, 1529, 1555, 1531, 1532,
	1533, 1556, 76, 1544, 1545, 771, 1547, 724, 1543, 1596,
	1563, 1546, 1584, 1215, 737, 1426, 737, 737, 1574, 1557,
	1558, 1590, 1593, 1505, 1507, 811, 2235, 1076, 1003, 2064,
	1513, 1514, 1515, 1516, 1586, 119, 2063, 812, 1332, 1582,
	565, 565, 1913, 1157, 1158, 1394, 1183, 1988, 818, 1658,
	1424, 1091, 565, 1698, 1641, 851, 852, 2234, 1415, 1624,
	1292, 1626, 1627, 1628, 1629, 1079, 801, 802, 2233, 2232,
	2039, 421, 2215, 2214, 1633, 883, 884, 876, 877, 878,
	879, 880, 881, 882, 875, 1635, 119, 885, 1616, 1617,
	1457, 2181, 2137, 1662, 2068, 1623, 2008, 422, 1456, 81,
	2067, 1991, 1569, 2294, 2293, 1630, 1475, 1669, 1640, 1672,
	1685, 1689, 1643, 1644, 1645, 2294, 1488, 1740, 1485, 1122,
	854, 2293, 2081, 1816, 1667, 1665, 1151, 1664, 553, 1496,
	1675, 378, 1681, 862, 1692, 1693, 1682, 1661, 1696, 380,
	987, 987, 987, 987, 987, 1733, 1674, 1770, 83, 76,
	2109, 49, 2111, 19, 2110, 18, 52, 987, 2112, 20,
	2113, 21, 78, 1707, 1708, 2108, 15, 987, 1, 1712,
	2182, 1791, 2132, 1706, 1727, 1726, 1795, 1796, 1797, 2107,
	14, 1710, 1775, 1542, 2134, 1714, 2050, 1178, 1968, 1766,
	2101, 10, 1769, 1728, 1729, 1953, 1730, 1731, 2120, 30,
	1711, 2119, 29, 2118, 28, 1898, 2116, 25, 1737, 1738,
	1794, 1952, 1800, 2115, 24, 1647, 1790, 2117, 26, 2106,
	13, 1798, 1179, 2103, 12, 2102, 11, 2100, 9, 119,
	119, 119, 1654, 1772, 1656, 1657, 1784, 1646, 792, 1140,
	1673, 1436, 2142, 1746, 1747, 565, 1339, 1329, 1752, 555,
	1792, 1755, 89, 1407, 1811, 1771, 1760, 1812, 1839, 1840,
	1809, 740, 1977, 339, 1336, 1602, 2135, 1805, 1804, 794,
	1601, 1793, 1598, 1613, 1350, 1387, 1600, 1599, 2130, 1603,
	1023, 1021, 1022, 1844, 1741, 1742, 1743, 1744, 1745, 1706,
	1020, 1332, 1025, 1332, 874, 873, 883, 884, 876, 877,
	878, 879, 880, 881, 882, 875, 1024, 343, 885, 1148,
	1821, 1822, 1005, 2171, 855, 1815, 99, 1825, 53, 1980,
	1688, 1430, 94, 90, 1828, 873, 883, 884, 876, 877,
	878, 879, 880, 881, 882, 875, 1859, 467, 885, 100,
	1849, 749, 345, 1900, 893, 1878, 1455, 1860, 1858, 1881,
	1575, 1854, 1823, 1853, 1709, 540, 541, 1871, 533, 1863,
	2199, 816, 2145, 1493, 922, 1234, 441, 1076, 1559, 2148,
	1170, 456, 1850, 1876, 455, 874, 873, 883, 884, 876,
	877, 878, 879, 880, 881, 882, 875, 454, 1735, 885,
	451, 1889, 452, 1906, 1414, 1161, 1534, 867, 1835, 1851,
	439, 431, 983, 976, 565, 1423, 1283, 1281, 1280, 1093,
	529, 1782, 1778, 1294, 982, 385, 119, 66, 1883, 119,
	756, 358, 1901, 2075, 1542, 119, 549, 565, 1921, 34,
	561, 986, 379, 1882, 565, 565, 565, 119, 119, 119,
	1931, 1885, 1914, 426, 119, 27, 17, 714, 762, 565,
	565, 76, 1894, 1895, 1933, 1934, 1935, 22, 16, 1936,
	1922, 1428, 1799, 1932, 710, 38, 41, 40, 1642, 1396,
	2170, 2260, 1940, 778, 2281, 2202, 116, 2114, 2121, 1965,
	1966, 1967, 2105, 2104, 1941, 361, 1584, 2247, 23, 2246,
	985, 1975, 4, 798, 67, 31, 1916, 1917, 1918, 1919,
	551, 2, 1976, 0, 0, 0, 0, 119, 565, 119,
	1964, 565, 1332, 0, 0, 0, 1970, 1942, 1930, 530,
	1971, 1993, 1994, 554, 1969, 0, 1770, 701, 1992, 2013,
	0, 1984, 0, 1809, 0, 0, 0, 1985, 1978, 711,
	1791, 0, 0, 0, 0, 0, 0, 720, 1387, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 119, 987,
	0, 0, 0, 1943, 862, 1945, 0, 0, 2038, 0,
	2040, 1769, 0, 0, 0, 0, 0, 2010, 0, 0,
	0, 0, 2015, 0, 2016, 2019, 0, 1873, 0, 0,
	0, 2031, 1706, 2030, 2025, 2037, 2020, 429, 0, 2065,
	0, 0, 0, 0, 0, 1998, 1999, 2000, 2001, 2002,
	565, 2041, 0, 2005, 2006, 0, 0, 0, 0, 0,
	0, 1996, 1770, 0, 76, 2057, 0, 2003, 0, 1903,
	0, 0, 2007, 0, 2069, 2012, 0, 2033, 2070, 2034,
	1301, 2059, 2021, 0, 0, 2062, 565, 565, 0, 0,
	0, 76, 0, 0, 0, 0, 2094, 0, 0, 2022,
	2023, 2024, 2082, 910, 2087, 985, 0, 1769, 2086, 0,
	1923, 0, 2089, 1924, 561, 561, 1926, 2080, 0, 0,
	0, 119, 0, 0, 910, 0, 561, 0, 0, 119,
	119, 0, 0, 0, 119, 119, 0, 0, 119, 119,
	119, 2152, 2140, 2138, 2139, 2147, 2151, 0, 0, 0,
	0, 2153, 2166, 0, 0, 0, 0, 0, 565, 565,
	0, 0, 0, 0, 2071, 2072, 2073, 2074, 0, 1542,
	2083, 2078, 2079, 2158, 0, 2159, 76, 0, 0, 0,
	987, 1244, 0, 1354, 1355, 0, 1360, 1361, 1362, 1363,
	1364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 1374, 1375, 1376, 2180, 0, 0,
	2178, 0, 2141, 2193, 0, 0, 0, 0, 0, 0,
	2186, 0, 0, 0, 119, 565, 0, 565, 0, 0,
	119, 0, 119, 119, 0, 0, 119, 0, 0, 0,
	0, 2154, 0, 2087, 0, 2209, 2217, 0, 0, 2160,
	0, 0, 0, 0, 804, 0, 76, 2224, 2216, 0,
	0, 0, 76, 2219, 119, 119, 119, 2238, 2221, 0,
	2151, 0, 2175, 2229, 2218, 0, 0, 2241, 0, 76,
	0, 0, 2231, 0, 76, 0, 0, 2251, 0, 2250,
	0, 2249, 2257, 2248, 0, 0, 0, 2223, 0, 0,
	0, 2269, 0, 76, 2275, 2254, 76, 76, 2189, 0,
	0, 76, 2238, 549, 0, 0, 2284, 0, 549, 1006,
	0, 2287, 0, 0, 2197, 0, 429, 0, 76, 2276,
	2291, 76, 2278, 2238, 2289, 0, 2302, 0, 0, 2304,
	0, 910, 0, 0, 0, 0, 76, 2312, 76, 0,
	0, 2238, 76, 2238, 0, 987, 0, 2299, 2236, 0,
	0, 0, 0, 1905, 0, 0, 76, 0, 0, 76,
	0, 2238, 0, 0, 0, 0, 76, 0, 2317, 0,
	76, 2238, 0, 0, 2268, 2238, 0, 0, 0, 0,
	2259, 0, 0, 0, 0, 2326, 0, 978, 0, 988,
	2146, 2150, 874, 873, 883, 884, 876, 877, 878, 879,
	880, 881, 882, 875, 0, 0, 885, 0, 0, 0,
	1904, 0, 0, 119, 119, 119, 119, 119, 0, 0,
	0, 0, 0, 0, 0, 119, 2305, 0, 0, 0,
	119, 0, 0, 0, 119, 0, 0, 0, 0, 0,
	119, 0, 0, 0, 0, 2167, 2168, 0, 0, 874,
	873, 883, 884, 876, 877, 878, 879, 880, 881, 882,
	875, 2319, 2320, 885, 565, 0, 0, 0, 1078, 0,
	0, 0, 1750, 1751, 0, 1753, 1754, 0, 1756, 1757,
	1758, 1759, 0, 1761, 1762, 1763, 0, 0, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 0, 561, 561,
	561, 0, 0, 1618, 1619, 1620, 1622, 0, 0, 0,
	0, 0, 0, 561, 561, 2150, 0, 0, 0, 0,
	0, 0, 0, 0, 565, 0, 0, 2230, 32, 33,
	68, 35, 36, 0, 0, 0, 0, 565, 119, 565,
	565, 0, 61, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 37, 56, 57, 0, 0, 0, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 530, 1150, 0, 1094, 0, 0,
	0, 0, 0, 565, 565, 0, 47, 0, 0, 119,
	77, 0, 0, 0, 0, 1111, 1112, 1113, 0, 565,
	0, 0, 1114, 0, 0, 0, 2303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 32, 0,
	68, 35, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 561, 0, 0, 0, 0, 74, 0,
	565, 0, 37, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 70, 43, 42, 45, 0, 58, 0,
	0, 0, 0, 0, 0, 1144, 0, 0, 0, 0,
	0, 0, 565, 565, 1210, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 46, 73, 72, 0, 0, 54,
	55, 44, 549, 0, 0, 565, 0, 0, 1908, 1909,
	0, 1472, 0, 2122, 1910, 0, 0, 1911, 2324, 0,
	1240, 1241, 1912, 0, 0, 565, 1167, 565, 0, 565,
	0, 565, 874, 873, 883, 884, 876, 877, 878, 879,
	880, 881, 882, 875, 59, 60, 885, 0, 0, 0,
	0, 0, 39, 70, 43, 42, 45, 48, 71, 0,
	50, 51, 63, 0, 64, 0, 0, 0, 2123, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 1824, 0,
	0, 0, 119, 0, 46, 73, 72, 0, 0, 561,
	0, 44, 561, 561, 0, 0, 0, 119, 874, 873,
	883, 884, 876, 877, 878, 879, 880, 881, 882, 875,
	119, 0, 885, 0, 0, 0, 0, 848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 119, 565, 59, 60, 0, 2124, 0, 0,
	565, 565, 0, 0, 0, 0, 0, 2125, 71, 1277,
	50, 51, 63, 69, 64, 0, 0, 0, 0, 561,
	0, 561, 117, 1308, 0, 355, 0, 0, 0, 0,
	0, 117, 0, 1886, 1887, 0, 1888, 1897, 0, 1890,
	0, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 75, 0,
	0, 0, 430, 0, 0, 532, 550, 1896, 0, 117,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 565, 117, 0, 0, 0, 0, 561, 565,
	565, 565, 0, 69, 0, 0, 0, 0, 565, 0,
	0, 0, 1392, 0, 0, 0, 0, 565, 1400, 0,
	1401, 1402, 0, 0, 1403, 1939, 874, 873, 883, 884,
	876, 877, 878, 879, 880, 881, 882, 875, 0, 0,
	885, 0, 0, 0, 0, 119, 0, 0, 75, 0,
	0, 0, 0, 0, 1413, 0, 874, 873, 883, 884,
	876, 877, 878, 879, 880, 881, 882, 875, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	869, 565, 872, 119, 0, 0, 0, 0, 565, 886,
	887, 888, 889, 890, 891, 892, 0, 870, 871, 868,
	874, 873, 883, 884, 876, 877, 878, 879, 880, 881,
	882, 875, 0, 0, 885, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 565, 0, 0, 0, 0, 565,
	0, 0, 0, 0, 119, 0, 119, 0, 0, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 565, 1216, 1221, 0, 0, 0, 1227,
	1230, 1231, 1232, 0, 0, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 565, 1245, 1246,
	0, 0, 0, 1250, 0, 1252, 1253, 0, 0, 0,
	0, 0, 0, 1260, 1261, 1262, 0, 1264, 1265, 117,
	1267, 1268, 1269, 1270, 0, 1272, 1273, 1274, 0, 0,
	0, 0, 565, 1045, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 561, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	117, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 1700, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 1150, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 565, 117, 117, 117, 0, 0, 0, 0,
	0, 0, 0, 550, 565, 0, 0, 0, 550, 561,
	0, 561, 0, 561, 0, 1808, 1059, 1062, 1063, 1064,
	1065, 1066, 1067, 0, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 0, 1047, 1048, 1049, 1050, 1026, 1030, 1060, 1027,
	1033, 1029, 1031, 1028, 0, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1517, 1518, 0, 0, 0, 1522, 0, 0, 1525, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 1874, 1875, 0, 0, 0, 0,
	0, 0, 32, 0, 68, 35, 36, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 61, 1061, 0, 0,
	0, 0, 74, 0, 0, 0, 37, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	117, 0, 0, 117, 0, 0, 0, 0, 1852, 1100,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 117, 117, 117, 549, 0, 0, 0, 117, 0,
	1869, 0, 0, 0, 0, 0, 1928, 2122, 0, 0,
	2280, 2283, 2279, 1928, 1928, 1928, 0, 0, 0, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 39, 70, 43, 42,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 2123, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 73,
	72, 1045, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 0, 0, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	2210, 0, 0, 1100, 0, 0, 0, 0, 59, 60,
	0, 2124, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 2125, 71, 1928, 50, 51, 63, 0, 64, 0,
	0, 0, 0, 1951, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 0, 0,
	1220, 1220, 0, 0, 1032, 1220, 1220, 1220, 1220, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 1220, 1220, 1220, 1220, 0, 0, 1220, 1220,
	1220, 1220, 1220, 0, 0, 0, 1046, 0, 0, 1220,
	1220, 1220, 0, 1220, 1220, 0, 1220, 1220, 1220, 1220,
	0, 1220, 1220, 1220, 0, 117, 2085, 69, 0, 0,
	0, 0, 0, 117, 388, 0, 0, 0, 117, 117,
	0, 0, 117, 1311, 1100, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	0, 0, 0, 0, 0, 0, 1808, 0, 0, 0,
	0, 0, 75, 0, 1059, 1062, 1063, 1064, 1065, 1066,
	1067, 0, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 549,
	1047, 1048, 1049, 1050, 1026, 1030, 1060, 1027, 1033, 1029,
	1031, 1028, 0, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 0, 0, 0, 0, 0, 32, 117, 68,
	35, 36, 561, 0, 117, 0, 117, 117, 0, 0,
	117, 61, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 37, 2191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 1412,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 2162, 0, 0, 1808, 0, 0, 0,
	0, 0, 0, 0, 0, 1061, 1928, 0, 1100, 0,
	0, 0, 2122, 0, 0, 0, 0, 2313, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 39, 70, 43, 42, 45, 0, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 0, 2123, 0, 0,
	0, 0, 0, 32, 0, 68, 35, 36, 0, 0,
	0, 1220, 0, 46, 73, 72, 0, 61, 0, 0,
	44, 0, 0, 74, 0, 0, 0, 37, 32, 0,
	68, 35, 36, 0, 0, 0, 1220, 1220, 0, 0,
	0, 1220, 61, 0, 1220, 0, 0, 0, 74, 1220,
	0, 0, 37, 0, 0, 0, 550, 117, 117, 117,
	117, 117, 0, 59, 60, 77, 2124, 0, 0, 388,
	0, 0, 0, 0, 117, 0, 2125, 71, 388, 50,
	51, 63, 0, 64, 117, 0, 0, 0, 2122, 0,
	77, 2285, 550, 2296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 70, 43,
	42, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2123, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 70, 43, 42, 45, 0, 0, 46,
	73, 72, 0, 0, 0, 0, 44, 0, 2123, 0,
	0, 0, 69, 0, 32, 0, 68, 35, 36, 0,
	0, 0, 117, 0, 46, 73, 72, 0, 61, 0,
	0, 44, 0, 0, 74, 0, 0, 0, 37, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	60, 0, 2124, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 2125, 71, 0, 50, 51, 63, 0, 64,
	0, 0, 0, 117, 59, 60, 77, 2124, 0, 0,
	0, 0, 0, 0, 1220, 0, 0, 2125, 71, 0,
	50, 51, 63, 0, 64, 1220, 0, 1100, 0, 2122,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 39, 70,
	43, 42, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 2123, 0, 0, 0, 69, 0,
	0, 0, 32, 0, 68, 35, 36, 0, 0, 0,
	46, 73, 72, 0, 0, 0, 61, 44, 0, 0,
	0, 0, 74, 69, 0, 0, 37, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 60, 0, 2124, 77, 0, 0, 0, 75, 0,
	0, 0, 0, 2125, 71, 0, 50, 51, 63, 0,
	64, 0, 0, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 39, 70, 43, 42,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2123, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 73,
	72, 0, 430, 0, 0, 44, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 60,
	0, 2124, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 2125, 71, 0, 50, 51, 63, 0, 64, 0,
	0, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 117, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 550,
	0, 0, 2169, 0, 0, 0, 0, 0, 0, 117,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 2172,
	2173, 2174, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 1333, 1334, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 1585, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 1333, 1334, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 1995, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 1713, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 1705, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 77,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 1312, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 1176, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 1344, 1348, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 1347, 187, 324, 681, 616, 615, 1342, 0,
	1343, 177, 195, 563, 121, 133, 1340, 1346, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 683, 663, 296, 621,
	686, 593, 610, 697, 611, 614, 652, 579, 633, 230,
	608, 580, 0, 597, 570, 604, 571, 594, 623, 164,
	592, 665, 636, 685, 194, 648, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 684, 629, 0, 692, 197,
	0, 645, 318, 285, 215, 0, 0, 625, 672, 631,
	661, 620, 654, 586, 644, 687, 609, 650, 688, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 647, 682, 606, 649, 651, 568, 646,
	0, 574, 581, 696, 678, 600, 601, 602, 0, 0,
	0, 0, 0, 0, 0, 624, 632, 658, 617, 0,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 642,
	0, 0, 0, 582, 575, 0, 0, 622, 0, 0,
	0, 585, 124, 599, 659, 0, 566, 174, 216, 135,
	662, 677, 619, 187, 324, 681, 616, 615, 250, 0,
	290, 177, 195, 563, 121, 133, 559, 176, 226, 259,
	269, 607, 567, 666, 595, 605, 156, 603, 262, 234,
	313, 0, 639, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 618, 653, 596, 153, 656, 643, 671, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 572, 0, 287, 316, 330, 203, 142,
	591, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 589, 590, 587, 0, 588, 634, 635, 689,
	690, 691, 660, 583, 0, 673, 674, 0, 664, 679,
	680, 655, 698, 612, 613, 573, 576, 577, 578, 584,
	626, 627, 638, 641, 669, 668, 667, 670, 675, 694,
	693, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 120, 131, 196, 699, 254, 170,
	317, 569, 162, 0, 0, 628, 630, 640, 657, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 676, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 164, 434, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 481, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 470, 471, 0,
	0, 0, 0, 0, 0, 1322, 0, 77, 0, 0,
	435, 458, 457, 460, 461, 462, 463, 0, 0, 145,
	459, 464, 465, 466, 1323, 0, 0, 432, 449, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 495, 0, 448,
	0, 0, 443, 444, 445, 450, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 472, 0,
	0, 187, 324, 0, 0, 493, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 478,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	482, 494, 488, 490, 489, 486, 487, 485, 484, 483,
	496, 473, 474, 475, 476, 479, 0, 491, 492, 0,
	0, 0, 0, 509, 510, 511, 512, 513, 514, 515,
	508, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	497, 498, 499, 500, 501, 502, 503, 504, 507, 505,
	506, 477, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 32, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 164, 434, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 481, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 435, 458,
	457, 460, 461, 462, 463, 0, 0, 145, 459, 464,
	465, 466, 0, 0, 0, 432, 449, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 495, 0, 448, 0, 0,
	443, 444, 445, 450, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 472, 0, 0, 187,
	324, 0, 0, 493, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 478, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 482, 494,
	488, 490, 489, 486, 487, 485, 484, 483, 496, 473,
	474, 475, 476, 479, 0, 491, 492, 0, 0, 0,
	0, 509, 510, 511, 512, 513, 514, 515, 508, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 497, 498,
	499, 500, 501, 502, 503, 504, 507, 505, 506, 477,
	120, 131, 196, 75, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 164, 434, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 481, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 435, 458, 457, 460, 461,
	462, 463, 0, 0, 145, 459, 464, 465, 466, 0,
	0, 0, 432, 449, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 447, 428, 0,
	0, 0, 495, 0, 448, 0, 0, 443, 444, 445,
	450, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 472, 0, 0, 187, 324, 0, 0,
	493, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 478, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 482, 494, 488, 490, 489,
	486, 487, 485, 484, 483, 496, 473, 474, 475, 476,
	479, 0, 491, 492, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 508, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 497, 498, 499, 500, 501,
	502, 503, 504, 507, 505, 506, 477, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 164,
	434, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 481, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 470,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 809, 435, 458, 457, 460, 461, 462, 463, 0,
	0, 145, 459, 464, 465, 466, 0, 0, 0, 432,
	449, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 495,
	0, 448, 0, 0, 443, 444, 445, 450, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	472, 0, 0, 187, 324, 0, 0, 493, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 478, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 482, 494, 488, 490, 489, 486, 487, 485,
	484, 483, 496, 473, 474, 475, 476, 479, 0, 491,
	492, 0, 0, 0, 0, 509, 510, 511, 512, 513,
	514, 515, 508, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 497, 498, 499, 500, 501, 502, 503, 504,
	507, 505, 506, 477, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 164, 434, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 481, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 435,
	458, 457, 460, 461, 462, 463, 0, 0, 145, 459,
	464, 465, 466, 0, 0, 0, 432, 449, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 447, 1218, 0, 0, 0, 495, 0, 448, 0,
	0, 443, 444, 445, 450, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 472, 0, 0,
	187, 324, 0, 0, 493, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 478, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 482,
	494, 488, 490, 489, 486, 487, 485, 484, 483, 496,
	473, 474, 475, 476, 479, 0, 491, 492, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 508,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 497,
	498, 499, 500, 501, 502, 503, 504, 507, 505, 506,
	477, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 164, 434, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 481, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 470, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 435, 458, 1229, 460,
	461, 462, 463, 0, 0, 145, 459, 464, 465, 466,
	0, 0, 0, 432, 449, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 447, 1218,
	0, 0, 0, 495, 0, 448, 0, 0, 443, 444,
	445, 450, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 472, 0, 0, 187, 324, 0,
	0, 493, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 478, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 482, 494, 488, 490,
	489, 486, 487, 485, 484, 483, 496, 473, 474, 475,
	476, 479, 0, 491, 492, 0, 0, 0, 0, 509,
	510, 511, 512, 513, 514, 515, 508, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 497, 498, 499, 500,
	501, 502, 503, 504, 507, 505, 506, 477, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	164, 434, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 481,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 435, 458, 1226, 460, 461, 462, 463,
	0, 0, 145, 459, 464, 465, 466, 0, 0, 0,
	432, 449, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 447, 1218, 0, 0, 0,
	495, 0, 448, 0, 0, 443, 444, 445, 450, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 472, 0, 0, 187, 324, 0, 0, 493, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 478, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 482, 494, 488, 490, 489, 486, 487,
	485, 484, 483, 496, 473, 474, 475, 476, 479, 0,
	491, 492, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 508, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 497, 498, 499, 500, 501, 502, 503,
	504, 507, 505, 506, 477, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 164, 434, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 481, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 470, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 1138,
	435, 458, 457, 460, 461, 462, 463, 0, 0, 145,
	459, 464, 465, 466, 0, 0, 0, 432, 449, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 495, 0, 448,
	0, 0, 443, 444, 445, 450, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 472, 0,
	0, 187, 324, 0, 0, 493, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 478,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	482, 494, 488, 490, 489, 486, 487, 485, 484, 483,
	496, 473, 474, 475, 476, 479, 0, 491, 492, 0,
	0, 0, 0, 509, 510, 511, 512, 513, 514, 515,
	508, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	497, 498, 499, 500, 501, 502, 503, 504, 507, 505,
	506, 477, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 164, 434, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 481, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 435, 458, 457,
	460, 461, 462, 463, 0, 0, 145, 459, 464, 465,
	466, 0, 0, 0, 432, 449, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 495, 0, 448, 0, 0, 443,
	444, 445, 450, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 472, 0, 0, 187, 324,
	0, 0, 493, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 478, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 482, 494, 488,
	490, 489, 486, 487, 485, 484, 483, 496, 473, 474,
	475, 476, 479, 0, 491, 492, 0, 0, 0, 0,
	509, 510, 511, 512, 513, 514, 515, 508, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 497, 498, 499,
	500, 501, 502, 503, 504, 507, 505, 506, 477, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 164, 434, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	481, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 470, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 435, 458, 457, 460, 461, 462,
	463, 0, 0, 145, 459, 464, 465, 466, 0, 0,
	0, 432, 449, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 495, 0, 448, 0, 0, 443, 444, 445, 450,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 472, 0, 0, 187, 324, 0, 0, 493,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 478, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 482, 494, 488, 490, 489, 486,
	487, 485, 484, 483, 496, 473, 474, 475, 476, 479,
	0, 491, 492, 0, 0, 0, 0, 820, 821, 822,
	823, 824, 828, 829, 833, 834, 842, 841, 840, 843,
	844, 846, 845, 847, 825, 826, 827, 830, 831, 832,
	835, 836, 839, 837, 838, 477, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 481, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 435, 458, 457, 460, 461, 462, 463, 0, 0,
	145, 459, 464, 465, 466, 0, 0, 0, 0, 449,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 495, 0,
	448, 0, 0, 443, 444, 445, 450, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 472,
	0, 0, 187, 324, 0, 0, 493, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	478, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 2306, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 482, 494, 488, 490, 489, 486, 487, 485, 484,
	483, 496, 473, 474, 475, 476, 479, 0, 491, 492,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 508, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 497, 498, 499, 500, 501, 502, 503, 504, 507,
	505, 506, 477, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 481, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 809, 435, 458,
	457, 460, 461, 462, 463, 0, 0, 145, 459, 464,
	465, 466, 0, 0, 0, 0, 449, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 495, 0, 448, 0, 0,
	443, 444, 445, 450, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 472, 0, 0, 187,
	324, 0, 0, 493, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 478, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 482, 494,
	488, 490, 489, 486, 487, 485, 484, 483, 496, 473,
	474, 475, 476, 479, 0, 491, 492, 0, 0, 0,
	0, 509, 510, 511, 512, 513, 514, 515, 508, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 497, 498,
	499, 500, 501, 502, 503, 504, 507, 505, 506, 477,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 481, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 435, 458, 457, 460, 461,
	462, 463, 0, 0, 145, 459, 464, 465, 466, 0,
	0, 0, 0, 449, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 495, 0, 448, 0, 0, 443, 444, 445,
	450, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 472, 0, 0, 187, 324, 0, 0,
	493, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 478, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 482, 494, 488, 490, 489,
	486, 487, 485, 484, 483, 496, 473, 474, 475, 476,
	479, 0, 491, 492, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 508, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 497, 498, 499, 500, 501,
	502, 503, 504, 507, 505, 506, 477, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 1300, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 0, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1302, 1304, 0, 0, 0,
	0, 0, 118, 0, 390, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	0, 0, 0, 187, 324, 0, 1303, 0, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 0, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 393, 394, 395,
	399, 400, 404, 405, 413, 412, 411, 414, 415, 417,
	416, 418, 396, 397, 398, 401, 402, 403, 406, 407,
	410, 408, 409, 0, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 1300, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 0, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 1304, 0, 0, 0, 0, 0, 118,
	0, 390, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 0, 0, 0,
	187, 324, 0, 1303, 0, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 0, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	1298, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 393, 394, 395, 399, 400, 404,
	405, 413, 412, 411, 414, 415, 417, 416, 418, 396,
	397, 398, 401, 402, 403, 406, 407, 410, 408, 409,
	0, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 860, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 0, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 861, 0, 864, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 857, 856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 0, 0, 0, 187, 324, 0,
	0, 0, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 0, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 393, 394, 395, 399, 400, 404, 405, 413, 412,
	411, 414, 415, 417, 416, 418, 396, 397, 398, 401,
	402, 403, 406, 407, 410, 408, 409, 0, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 1562, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 390, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 393, 394,
	395, 399, 400, 404, 405, 413, 412, 411, 414, 415,
	417, 416, 418, 396, 397, 398, 401, 402, 403, 406,
	407, 410, 408, 409, 0, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 390, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 393, 394, 395, 399, 400,
	404, 405, 413, 412, 411, 414, 415, 417, 416, 418,
	396, 397, 398, 401, 402, 403, 406, 407, 410, 408,
	409, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 864,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 393, 394, 395, 399, 400, 404, 405, 413,
	412, 411, 414, 415, 417, 416, 418, 396, 397, 398,
	401, 402, 403, 406, 407, 410, 408, 409, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	0, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 873, 883, 884, 876, 877, 878, 879, 880,
	881, 882, 875, 0, 0, 885, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 0, 0, 0, 187, 324, 0, 0, 0,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 0, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 32, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 1295, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	0, 0, 0, 187, 324, 0, 0, 0, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 0, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 75, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 32, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 75, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 1008, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 1007,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	0, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 0, 0, 0, 187, 324, 0, 0, 0,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 0, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 0, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 0,
	0, 0, 187, 324, 0, 0, 0, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	0, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 977, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 0, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 0, 0, 0, 187,
	324, 0, 0, 0, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 0, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 527, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 0, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 0, 0, 187, 324, 0, 0,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 0, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	0, 115, 0, 187, 324, 0, 0, 0, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 0, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 0, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 0, 0, 0,
	187, 324, 0, 0, 0, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 0, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 0, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 0, 0, 0, 187, 324, 0,
	0, 0, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 0, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 547, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 543, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 548, 546, 537,
	538, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 544, 545,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 1002, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	0, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 0, 0, 0, 187, 324, 0, 0, 0,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 0, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	534, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 547,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	543, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 548, 546, 537, 538, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 544, 545, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325,
}
var yyPact = [...]int{

	2482, -1000, -293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1474, -1000, -1000, -1000, -1000, -1000, -1000, 586, 247,
	-1000, -1000, 280, 56, 22331, 277, 638, 23185, -1000, -1000,
	-1000, 112, 200, 23185, -1000, -1000, -81, -83, -1000, 196,
	242, 1053, 1334, 1052, 30, -1000, 1515, 1524, -1000, -1000,
	234, 38, -1000, -1000, -1000, 18059, 166, -1000, -1000, -1000,
	1444, 1471, 1251, -1000, 11654, 233, 233, 21904, 24893, -1000,
	1512, 23185, 10371, -1000, 251, 23185, -144, 223, 223, 148,
	254, -1000, 545, -1000, -1000, -1000, -1000, 23185, 226, 22758,
	226, 226, 226, 226, 226, 23185, -1000, 448, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23185, 1045, 1367, 594, 118, 7361, 7361, -1000, 596,
	-1000, 135, 129, 131, 123, 27, 655, -1000, 7361, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 193, 239, 205, 166,
	536, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1365, 1349,
	833, 1345, 198, 1344, 1183, -75, -1000, 1040, -1000, 1165,
	1435, 253, 23185, -1000, -1000, 1121, -1000, 1172, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 855,
	1396, 741, 14643, 1304, -1000, -1000, 614, 1499, -1000, 17205,
	445, -1000, 14216, 2882, 1129, -1000, -1000, 1129, -1000, -1000,
	319, -1000, -1000, 15924, 15924, 15924, 15924, 15924, 15924, 15924,
	15924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1129, -1000, 11227,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	14216, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 21477, 20623, 23185, 1135, 1111,
	-1000, -1000, 434, 1118, -102, 24466, -1000, -1000, -1000, -1000,
	23612, 20196, 532, -1000, -1000, -1000, -1000, 1343, -1000, -1000,
	431, -1000, 1474, -1000, -1000, 1051, 195, -1000, 3083, 291,
	-1000, -1000, -1000, 1182, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22758, 1432, 241, 1039, 584, 1037, 1032, 1020, 223, 1019,
	1108, 238, 23185, 1417, 1205, 23185, 1018, 1017, 1016, 1014,
	-1000, 9941, -1000, 7361, 594, -1000, 829, 14216, 223, 223,
	7361, 7361, 7361, 23185, 23185, 23185, -1000, -1000, -1000, -1000,
	23185, -1000, -1000, 594, 594, 7361, 7361, 590, 1498, 590,
	590, -1000, -1000, -1000, -1000, 14216, -1000, 15924, -1000, -1000,
	1012, 192, -1000, -1000, -1000, -1000, -1000, -1000, 1007, -1000,
	-1000, 198, 198, -1000, 826, 198, 1104, -1000, 516, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 198, -1000, 13789, -291, -1000, -1000, 1251, -1000, -1000,
	166, -1000, -1000, 23185, 7361, 18059, 1129, 22758, -1000, -1000,
	-1000, 1507, 493, 1127, -1000, -1000, 1107, -1000, 635, 1408,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
	1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 428, 690,
	1273, -1000, -1000, -1000, 23185, -1000, 14216, 14216, 715, -1000,
	18486, -1000, -1000, -1000, -1000, 8221, 498, 15924, 672, 541,
	15924, 15924, 15924, 15924, 15924, 15924, 15924, 15924, 15924, 15924,
	15924, 15924, 15924, 15924, 15924, 789, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1004, -1000, 166, 871, 871, 474,
	474, 474, 474, 474, 474, 474, 18913, 1424, 855, 999,
	639, 11227, 12508, 12508, 855, 14216, 14216, 13362, 12935, 12508,
	12508, 1424, 557, 639, 23612, -1000, -1000, 15497, -1000, -1000,
	-1000, -1000, -1000, 855, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22758, 22758, 12508, 12508, 12508, 12508, 855, 855,
	12508, 12508, 12508, 12508, 12508, 855, 855, 855, 855, 1424,
	1424, 12508, 12508, 12508, 1424, 12508, 12508, 1424, 12508, 12508,
	12508, 12508, 1424, 12508, 12508, 12508, 157, 23185, -1000, 1123,
	1210, -1000, -1000, -1000, 1427, 19341, 16778, -1000, 157, 1081,
	20623, 23185, -1000, -1000, 20623, 23185, 7791, 24039, 1096, -1000,
	-100, -112, -102, -1000, -1000, 470, -1000, -1000, -1000, 10799,
	-1000, 9081, 1444, 1251, 5641, 9511, -1000, 291, 1182, -1000,
	-56, -1000, -1000, -1000, 1160, -1000, 1160, 167, -5, 1160,
	1160, 1160, 1160, 1160, -13, -13, -13, -13, -2, -1000,
	-1000, -1000, -1000, -1000, 1181, 1180, -1000, 1160, 1160, 1160,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1174, 191,
	1164, 1164, 1164, 1164, 1164, 189, -1000, 14216, 1124, -1000,
	23185, 7361, 1411, 7361, 137, 1176, 23185, -1000, 23185, 23185,
	1106, -1000, 23185, 1105, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 639, 996, 995, -1000, -1000,
	-1000, -1000, -1000, -1000, 593, -1000, -1000, -1000, -1000, 594,
	23185, 23185, 23185, 1425, 594, 639, 471, -1000, -1000, 985,
	-1000, 1104, 1104, -1000, 1104, 198, 871, 1104, -1000, 992,
	1413, 825, 1424, 855, 281, -1000, -1000, -1000, 173, 942,
	424, -1000, 1269, 741, 741, 14643, -1000, -1000, -1000, -1000,
	9081, 1469, -1000, 1281, 1280, 1221, -1000, -1000, 498, 537,
	-1000, -1000, 726, -1000, -1000, -1000, -1000, 342, 1129, -1000,
	2640, -1000, -1000, -1000, -1000, 672, 15924, 15924, 15924, 471,
	2640, 2574, 1355, 1606, 474, 567, 567, 475, 475, 475,
	475, 475, 983, 983, -1000, -1000, -1000, 855, -1000, -1000,
	-1000, 12508, -1000, 14216, -1000, 855, 972, -1000, -1000, 639,
	331, 972, -1000, 565, 832, 529, 1497, 972, 527, 1495,
	972, 972, 972, 12508, 572, -1000, 14216, 855, -1000, 1102,
	1099, 1098, 972, 855, 1097, 972, 972, -156, -156, 855,
	972, 855, 972, 972, -156, -156, -156, -156, 12508, 12508,
	972, 972, 972, 12508, 972, 972, 12508, 972, 972, 972,
	972, 12508, 972, 972, 972, 162, 1129, -1000, 23612, 20623,
	20623, 20623, 20623, 20623, -1000, 1240, 1239, -1000, 1233, 1218,
	1245, 18059, -1000, 990, 855, 122, 19341, -1000, 1129, -1000,
	17632, 299, 250, 246, 244, 1480, 20623, 1001, -1000, 1001,
	-1000, 322, -1000, -1000, 23612, -102, -106, -1000, -1000, 1096,
	-1000, 816, -1000, -1000, 639, -1000, 313, 1396, 1424, 1094,
	5211, -1000, -1000, -1000, -1000, 195, -1000, -1000, -1000, 1175,
	285, -1000, 1295, 400, 489, 870, 1285, -1000, -1000, 248,
	-70, -1000, -1000, 745, -13, -13, 1160, 1160, 163, 1160,
	-1000, -13, -1000, -1000, -1000, 470, 1342, 470, 470, 470,
	470, -13, 823, 823, -1000, -1000, -1000, -1000, 742, -1000,
	1174, -1000, 730, -1000, -1000, -1000, -1000, -1000, 781, 1198,
	22758, 166, 1421, -1000, -1000, -1000, 1494, -1000, -1000, 235,
	-1000, 237, -1000, 7361, 23185, 7361, 7361, 1480, 960, 951,
	-1000, -1000, -1000, 590, 594, 1337, -1000, -1000, 15924, -1000,
	-1000, -1000, -1000, 157, 249, -1000, 1273, -1000, 1089, -1000,
	-1000, 634, 582, 554, 203, 203, -1000, 513, 203, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 155, 1420, 22758,
	22758, 1267, -1000, -1000, -1000, 23185, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6931, 12508, -1000, 471, 2640,
	1657, -1000, 15924, -1000, 855, 639, -1000, 12508, -1000, 6501,
	-1000, 443, 789, 443, 15924, 15924, -1000, 15924, 15924, -1000,
	-190, -1000, 1136, 542, -1000, 14216, 698, -1000, -1000, 15924,
	15924, -1000, -1000, -1000, -1000, -1000, 21050, -1000, -156, -156,
	-156, -156, -156, -1000, -1000, -1000, -1000, 972, 972, -156,
	-156, -156, 972, -156, -156, 972, -156, -156, -156, -156,
	972, -156, -156, -156, 1194, 23612, 1129, -1000, 19769, 22758,
	1131, -1000, 514, 1210, 1171, 1191, 1252, -1000, -1000, -1000,
	-1000, 1235, -1000, 1234, -1000, -1000, 1140, -1000, -1000, 1088,
	1129, 22758, 15924, 299, -1000, 1129, 1129, 1129, 1474, 14216,
	1001, -1000, -1000, 484, -1000, -1000, -113, -127, -1000, -1000,
	-1000, 8651, -1000, 5641, -1000, 5641, -1000, 22758, 188, -1000,
	870, -1000, -1000, 870, -1000, -1000, -1000, 1166, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 591, 15924, 1504, -1000, 1291,
	-1000, 1289, 822, -1000, -1000, 1072, 470, 470, -13, -1000,
	-1000, 1160, -1000, 470, -1000, 520, -1000, -1000, -1000, -1000,
	470, 970, -1000, 967, 1087, -1000, 958, 57, 23185, -1000,
	-1000, -1000, 1188, -1000, -1000, -1000, 1066, 1086, -1000, 3083,
	950, 946, 945, 23185, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 594, -1000, 15924, 2640, -13, 23185, 1221, 281, -1000,
	837, -1000, 870, 419, -1000, -1000, -1000, 1285, -1000, -1000,
	282, 944, -1000, 943, 938, 22758, 1288, 931, 23185, 22758,
	-1000, -1000, 889, 928, 14216, -1000, 22758, 22758, 1129, 304,
	-1000, -1000, -1000, 1008, 11654, -1000, -1000, 855, -1000, 15924,
	2640, -1000, -1000, -1000, 294, 855, 1160, 1160, -1000, 1160,
	1164, -1000, 1160, 17, 1160, 15, 855, 855, 2838, 2808,
	1576, 764, 1129, -152, -1000, 639, 14216, 2301, 2244, -1000,
	361, -1000, -1000, -1000, -1000, -1000, -156, -156, -1000, -1000,
	-1000, -1000, -156, -1000, -1000, -156, -1000, -1000, -1000, -1000,
	-156, -1000, -1000, -1000, -1000, 1404, 1061, 1085, -1000, -1000,
	12081, 855, 942, 935, -1000, 1474, 23612, 14216, -1000, -1000,
	14216, 1161, -1000, 14216, -1000, -1000, -1000, -1000, 22758, 120,
	-1000, 14216, 935, 936, -1000, 22758, 22758, 22758, 1444, 639,
	-1000, -1000, -1000, -1000, 5211, -1000, 927, -1000, 1160, -1000,
	1285, -1000, -1000, 22758, -1000, 2640, -92, -1000, -1000, -1000,
	-1000, -1000, -1000, 470, -1000, -1000, -1000, -1000, -1000, -13,
	820, -13, 721, -1000, 714, -1000, -1000, -238, 1158, -1000,
	166, 23185, 90, 235, -1000, 3083, 3083, 3083, -1000, -1000,
	2640, -88, -1000, -1000, -1000, 889, 171, 3083, -1000, 1124,
	400, 188, -1000, -1000, -1000, -1000, -1000, 913, 323, -1000,
	204, 171, 889, 639, 430, 1410, -1000, 22758, 1478, 20623,
	-1000, -1000, -1000, 2640, 6071, -1000, -1000, 169, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 15924, 15924, 15924, 15924,
	15924, 855, 819, 639, 15924, 15924, 855, 1470, -1000, -1000,
	-1000, -1000, -1000, 1284, -1000, 1129, -1000, -1000, 170, -1000,
	22758, 1444, -1000, 639, 639, 22758, 639, 923, -1000, 1129,
	16351, -1000, 18059, 920, 920, 920, -1000, 278, 22758, 1408,
	918, -1000, -1000, 470, -1000, 470, 1055, 973, -1000, 22758,
	-1000, 1441, -1000, 90, -1000, 818, 84, 95, -1000, 83,
	82, 81, 79, 76, -1000, -1000, -1000, -1000, 1319, 1312,
	1068, 924, -1000, -1000, 883, -1000, 1157, 870, -1000, -1000,
	869, -1000, -1000, 22758, -1000, 171, 1397, 1390, 1129, -1000,
	1476, 1468, 1001, 11654, -1000, -1000, -1000, -1000, 1102, 1102,
	1102, 1102, 45, -1000, -1000, 1102, 1102, -1000, 14216, 1503,
	-1000, 1129, -1000, 166, -1000, -1000, 898, -1000, 22758, -1000,
	-1000, 299, -1000, -1000, -1000, 278, -1000, 858, 513, 817,
	-1000, -1000, 181, -1000, -1000, -1000, -1000, 888, -1000, 124,
	4306, -1000, -1000, -1000, -1000, -1000, -1000, 1328, 1327, 100,
	229, 1299, 1302, 1466, 20623, -1000, -1000, 248, 22758, 1124,
	-1000, -1000, -1000, 15924, -1000, 154, -1000, 14643, 14643, 1478,
	-1000, -1000, -1000, -1000, -1000, 855, 117, -201, -1000, -1000,
	1113, 23612, 1085, 855, -1000, -1000, -1000, -1000, -1000, 713,
	-1000, 23185, 278, 119, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14216, 14216, 4781, 4306, -1000, -1000, -1000, -1000,
	1140, 691, 1312, 1465, 1310, 1308, -1000, 793, 1001, 862,
	1139, 2640, 854, -1000, 22758, -1000, 639, -1000, 937, -1000,
	639, -1000, 1476, -1000, -1000, 1264, -194, -220, 855, 834,
	-1000, -1000, 1138, -1000, 278, 113, -1000, 576, 662, 54,
	48, 3561, -1000, -1000, -1000, -1000, -294, -1000, -1000, 1318,
	-1000, 786, -1000, 1447, 1446, -1000, 1478, 278, 22758, -1000,
	154, 1277, 14643, -1000, -1000, 1260, -1000, -1000, 22758, -1000,
	842, 838, 700, -1000, 14216, 4306, 1440, 1439, 1428, 1387,
	8651, 4158, -1000, -1000, 780, 727, 1476, -1000, 852, -1000,
	145, -1000, -197, 847, 236, -1000, -1000, 579, 4306, -1000,
	658, -295, 201, 166, 228, 15924, -1000, -1000, -1000, -1000,
	-1000, -1000, 278, 142, -218, 1187, -1000, -1000, -1000, -1000,
	-1000, -1000, 4306, -1000, -297, 4306, 3426, -1000, -1000, -1000,
	4012, -1000, -1000, -1000, -1000, 46, -1000, -1000, 2640, -1000,
	1129, -221, 1186, 1173, 1484, -1000, -300, 3987, -301, 220,
	4306, 616, -1000, 14216, -1000, 228, -1000, 15070, -1000, -1000,
	1496, -1000, 1501, 305, 305, 3841, 562, 4306, -1000, -302,
	219, 4306, -1000, 649, -1000, 1102, 855, -1000, -1000, -1000,
	202, 729, -1000, -1000, -1000, 2572, -1000, -303, 4306, -1000,
	-1000, -1000, -1000, -1000, 211, 544, -305, -1000, 208, 4306,
	-1000,
}
var yyPgo = [...]int{

	0, 1891, 1890, 106, 1885, 151, 1884, 1883, 1882, 16,
	14, 12, 18, 1879, 1617, 1615, 1613, 1609, 1878, 1607,
	1877, 5, 1873, 1872, 1603, 1868, 1867, 1596, 1593, 1591,
	1588, 26, 1865, 20, 1864, 4, 111, 128, 1863, 3,
	1861, 1860, 9, 1859, 1858, 1580, 1857, 1856, 1855, 1854,
	72, 1851, 1569, 1555, 1848, 1847, 1550, 1548, 1838, 1836,
	1544, 1542, 1540, 1835, 150, 1833, 1822, 1819, 262, 75,
	117, 1813, 1812, 1811, 85, 52, 2131, 86, 34, 81,
	282, 1810, 25, 38, 1807, 1805, 118, 112, 1804, 127,
	1803, 64, 250, 79, 1802, 1801, 137, 1800, 1799, 1798,
	96, 1797, 1796, 1821, 1795, 1793, 119, 1792, 55, 36,
	31, 1791, 1790, 1788, 1787, 1786, 109, 98, 1785, 1784,
	108, 1782, 57, 1780, 1777, 138, 1764, 1761, 1760, 102,
	58, 1759, 40, 1758, 45, 51, 1756, 37, 1755, 100,
	1754, 1753, 21, 10, 1752, 42, 1751, 49, 1750, 105,
	165, 911, 7, 30, 41, 50, 101, 84, 48, 29,
	91, 78, 65, 43, 1748, 114, 1746, 73, 120, 103,
	92, 116, 1745, 1740, 1736, 771, 1734, 1732, 113, 1731,
	62, 68, 605, 140, 87, 1729, 1713, 63, 1712, 1711,
	1710, 1709, 59, 89, 1708, 1706, 66, 218, 132, 1093,
	27, 1727, 97, 124, 1704, 32, 1703, 1702, 2767, 95,
	99, 82, 1697, 80, 23, 39, 1696, 1682, 1680, 1672,
	1671, 1670, 1106, 1669, 1668, 1667, 1666, 123, 83, 1664,
	1663, 94, 60, 1662, 1660, 1659, 1656, 1655, 90, 54,
	110, 1654, 104, 88, 67, 1653, 1652, 1651, 1643, 53,
	33, 1642, 1639, 1637, 74, 71, 1636, 44, 35, 28,
	46, 8, 61, 76, 1632, 22, 1631, 93, 2, 6,
	11, 1630, 1629, 1628, 1627, 1605, 56, 1601, 1585, 47,
	1578, 1576, 1574, 24, 1562, 1560, 1558, 1552, 0, 115,
	129, 1546, 1538, 130,
}
var yyR1 = [...]int{

	0, 286, 287, 287, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 63, 3, 3, 8, 4, 4, 4,
	5, 5, 84, 85, 85, 89, 89, 6, 6, 7,
	7, 9, 9, 67, 67, 10, 11, 11, 11, 11,
	290, 290, 98, 98, 96, 96, 97, 97, 160, 160,
	12, 12, 12, 165, 165, 170, 170, 170, 173, 173,
	173, 173, 152, 153, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 2, 274, 274, 275, 275, 276,
	276, 276, 276, 277, 277, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 25, 195, 195,
	43, 43, 44, 44, 44, 148, 148, 148, 13, 13,
	13, 13, 13, 20, 22, 22, 32, 32, 33, 23,
	23, 23, 23, 34, 34, 35, 26, 26, 26, 26,
	26, 26, 41, 41, 41, 40, 40, 39, 39, 39,
	39, 39, 39, 24, 24, 24, 24, 42, 42, 37,
	37, 36, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 27, 27, 27, 27, 27, 27,
	19, 273, 273, 273, 31, 31, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 48, 251, 252, 252, 252, 252, 252,
	252, 252, 252, 239, 240, 215, 215, 215, 215, 215,
	215, 215, 214, 214, 214, 214, 218, 218, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 217, 217, 217,
	217, 217, 217, 217, 217, 219, 219, 219, 219, 219,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 221, 221, 221, 221, 221,
	221, 221, 221, 238, 238, 222, 222, 231, 231, 232,
	232, 232, 229, 229, 230, 230, 233, 233, 225, 226,
	234, 227, 227, 227, 228, 228, 228, 237, 237, 237,
	237, 223, 241, 241, 261, 261, 260, 260, 259, 259,
	259, 250, 250, 256, 256, 256, 256, 256, 245, 245,
	245, 244, 244, 246, 246, 249, 249, 258, 258, 257,
	242, 242, 262, 262, 262, 262, 262, 243, 243, 243,
	263, 247, 247, 248, 248, 248, 269, 270, 268, 268,
	268, 268, 268, 113, 113, 113, 253, 253, 253, 254,
	254, 254, 255, 255, 255, 271, 271, 45, 45, 46,
	51, 51, 50, 50, 50, 50, 50, 50, 50, 50,
	50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
	50, 50, 50, 50, 50, 147, 147, 147, 47, 193,
	193, 267, 267, 267, 266, 264, 264, 265, 265, 15,
	49, 49, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 52, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 81, 179, 179, 177, 177, 180, 180, 178, 178,
	178, 181, 181, 181, 212, 212, 212, 54, 54, 59,
	59, 62, 60, 61, 28, 29, 29, 29, 29, 30,
	194, 194, 57, 57, 58, 58, 58, 58, 73, 73,
	291, 291, 56, 56, 55, 55, 55, 55, 18, 292,
	64, 65, 65, 66, 66, 66, 184, 184, 70, 70,
	70, 68, 68, 68, 69, 69, 75, 75, 79, 79,
	79, 79, 78, 78, 78, 78, 150, 150, 150, 151,
	151, 204, 204, 204, 203, 203, 203, 203, 83, 83,
	86, 86, 87, 87, 87, 87, 90, 133, 133, 107,
	107, 108, 108, 108, 108, 108, 119, 119, 159, 159,
	158, 158, 161, 161, 88, 88, 88, 88, 93, 93,
	94, 94, 95, 95, 192, 192, 186, 186, 210, 210,
	210, 99, 99, 99, 101, 100, 100, 100, 100, 102,
	102, 104, 105, 105, 103, 103, 106, 109, 109, 109,
	109, 110, 110, 80, 80, 80, 80, 80, 80, 80,
	176, 176, 112, 112, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 128, 128, 128, 128, 128, 128,
	114, 114, 114, 114, 114, 114, 114, 74, 74, 129,
	129, 129, 92, 91, 91, 77, 77, 76, 76, 130,
	130, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 123, 123, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 293, 293, 125,
	124, 124, 124, 124, 124, 124, 71, 71, 71, 71,
	71, 211, 211, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 140, 140, 72, 72,
	138, 138, 139, 141, 141, 137, 137, 137, 116, 116,
	116, 116, 116, 116, 116, 116, 118, 118, 118, 142,
	142, 131, 131, 82, 82, 143, 143, 144, 144, 145,
	145, 146, 146, 149, 149, 154, 154, 154, 155, 155,
	155, 155, 120, 120, 156, 156, 156, 115, 115, 115,
	115, 115, 115, 157, 157, 157, 157, 162, 162, 132,
	132, 135, 135, 134, 136, 163, 163, 167, 164, 164,
	168, 168, 168, 168, 171, 171, 172, 172, 172, 169,
	169, 169, 166, 166, 166, 207, 207, 207, 174, 174,
	185, 185, 182, 182, 183, 183, 175, 175, 224, 224,
	189, 189, 189, 189, 189, 189, 189, 189, 191, 191,
	190, 190, 190, 187, 187, 187, 188, 188, 205, 205,
	201, 201, 206, 206, 202, 202, 208, 208, 209, 209,
	272, 272, 235, 235, 282, 282, 236, 236, 283, 283,
	285, 285, 280, 280, 281, 281, 284, 284, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 288, 289, 196, 197, 197, 197,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 11, 4, 7, 5, 1, 13, 3,
	10, 12, 2, 1, 3, 3, 6, 1, 3, 1,
	3, 7, 8, 1, 1, 9, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 0, 0, 2, 3, 3, 11, 7, 9,
	5, 5, 15, 11, 4, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 0, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	3, 5, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 4, 3, 2, 4,
	3, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 4, 1, 1, 2, 3, 4,
	3, 3, 3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 1, 2, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 2, 1, 2,
	1, 2, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 2, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 1, 1, 5,
	1, 3, 2, 5, 4, 3, 3, 3, 5, 3,
	8, 10, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 0, 1, 2, 4, 0,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 4, 4, 4, 4, 4, 3,
	2, 3, 4, 4, 3, 6, 6, 4, 4, 4,
	4, 4, 4, 3, 3, 2, 6, 2, 4, 4,
	4, 5, 7, 6, 5, 4, 2, 4, 3, 2,
	3, 3, 1, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 4, 7, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 3, 2, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 9, 4, 7, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 1, 0, 2, 1, 1, 0,
	3, 1, 3, 2, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -286, -1, -3, -8, -9, -10, -11, -12, -14,
	-45, -15, -16, -17, -52, -53, -54, -59, -60, -61,
	-57, -56, -55, -18, -24, -27, -19, -63, -28, -29,
	-30, -4, 6, 7, -67, 9, 10, 30, -48, 130,
	-46, -47, 133, 132, 169, 134, 162, 64, 225, -62,
	228, 229, -291, -194, 167, 168, 31, 32, 136, 212,
	213, 20, 37, 230, 232, -5, -84, -6, 8, 321,
	131, 226, 164, 163, 26, 366, -288, 68, -287, 436,
	-145, 15, -64, -292, -64, -64, -64, -64, -64, -251,
	-186, 105, 68, 23, -188, 143, 86, 312, 139, -195,
	-185, -187, 189, 199, 44, 150, 149, 140, 140, 141,
	143, 312, 139, 177, 176, 140, -103, -208, 71, -199,
	363, 153, 378, 379, 131, 186, 225, 239, 233, 267,
	255, 364, 380, 154, 207, 138, 253, 256, 299, 152,
	200, 381, 288, 294, 210, 80, 228, 308, 382, 155,
	204, 206, 205, 194, 211, 36, 165, 251, 244, 215,
	189, 383, 371, 242, 28, 184, 384, 296, 272, 385,
	368, 295, 247, 243, 136, 386, 156, 150, 179, 387,
	273, 277, 388, 300, 389, 390, 391, 142, 237, 238,
	392, 190, 302, 271, 33, 151, 365, 48, 174, 303,
	38, 275, 37, 287, 393, 270, 265, 394, 395, 396,
	397, 269, 236, 264, 202, 53, 137, 279, 278, 280,
	203, 298, 260, 258, 398, 399, 157, 400, 401, 245,
	18, 402, 403, 306, 168, 404, 42, 405, 406, 407,
	172, 408, 409, 410, 297, 274, 276, 188, 411, 248,
	147, 412, 176, 413, 367, 414, 304, 241, 415, 158,
	232, 173, 167, 307, 416, 213, 417, 418, 419, 159,
	420, 421, 422, 229, 230, 290, 208, 423, 424, 425,
	426, 198, 183, 310, 301, 52, 212, 284, 427, 235,
	149, 214, 428, 226, 43, 180, 7, 201, 291, 209,
	199, 262, 175, 429, 430, 249, 250, 268, 234, 263,
	227, 177, 178, 169, 431, 309, 285, 369, 51, 257,
	254, 181, 261, 432, 143, 433, 182, 231, 305, 252,
	286, 140, 123, 256, 299, 130, 289, 290, 296, -245,
	297, 176, 179, -212, 140, -177, 288, 182, 71, 141,
	142, 33, 301, 300, 292, -208, 144, 231, -73, 134,
	170, -103, -196, -196, -196, 291, 291, -196, -42, 71,
	214, -42, 30, 71, 71, 36, 71, 230, 6, -66,
	5, -175, 143, 145, 227, -85, -89, -210, -208, -200,
	73, 334, 335, 336, 337, 338, 351, 352, 353, 339,
	340, 354, 355, 356, 341, 342, 357, 358, 360, 361,
	359, 345, 344, 343, 346, 347, 349, 348, 350, -3,
	-155, 17, 16, -70, 54, 55, -65, -78, 114, -80,
	-208, -111, 88, -117, 29, 71, -199, 24, -116, -112,
	-137, -136, -92, 123, 124, 125, 112, 113, 120, 89,
	126, -123, -121, -122, -124, -126, -127, 73, 72, 81,
	74, 75, 76, 77, 82, 83, 84, -201, -134, -288,
	58, 59, 139, 322, 323, 324, 325, 362, 160, 326,
	91, 47, 311, 320, 319, 318, 316, 317, 313, 315,
	314, 328, 329, 146, 312, 118, 321, 351, 352, 353,
	354, 355, 356, 357, 358, 360, 361, 359, 341, 334,
	335, 336, 337, 338, 339, 340, 342, 343, 344, 345,
	346, 347, 348, 349, 350, -175, -175, 11, -96, -97,
	-103, -106, -208, -164, 227, -171, -168, 300, 301, -169,
	-172, -166, -137, 287, 409, 410, 299, 256, 298, -201,
	-208, -2, -5, 6, -103, -252, -240, -243, -202, 155,
	-263, -201, -198, 152, 71, -199, 135, 161, 87, 370,
	23, 25, 282, 334, 90, 123, 335, 336, 337, 16,
	20, 91, 122, 322, 338, 130, 62, 313, 315, 311,
	312, 289, 29, 10, 26, 163, 193, 22, 116, 132,
	94, 95, 96, 166, 24, 164, 84, 160, 19, 65,
	11, 13, 332, 333, 14, 146, 145, 107, 191, 141,
	60, 8, 126, 27, 104, 56, 339, 340, 374, 45,
	375, 58, 105, 17, 316, 317, 31, 362, 341, 171,
	376, 342, 118, 196, 63, 50, 88, 82, 34, 85,
	66, 86, 15, 192, 61, 330, 195, 377, 106, 133,
	321, 59, 139, 6, 327, 30, 162, 345, 344, 343,
	346, 197, 57, 324, 325, 347, 434, 140, 93, 328,
	329, 144, 83, 5, 44, 32, 9, 64, 67, 318,
	319, 320, 47, 349, 348, 350, 92, 12, 331, 366,
	141, -103, 321, -183, 146, -183, 177, 176, 140, 97,
	-49, -103, -182, 146, -201, -182, -182, -182, -182, -182,
	-103, 127, -103, 71, 30, -181, 105, 12, 312, 139,
	71, 176, 179, 140, 177, 143, -197, -288, -202, -197,
	-247, 11, 107, 180, 180, 180, 181, 180, -180, -179,
	178, 294, 295, 291, 293, 12, -81, 105, -197, 71,
	230, 144, -58, -3, -11, -9, -10, -3, 97, -196,
	-196, 30, 30, 73, 51, 30, -37, -36, -38, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 30, -273, 68, -235, 287, 71, -64, -7, -5,
	-288, 21, 22, 140, -103, 69, 23, -288, -289, 70,
	-156, 19, 31, -120, 74, 77, -146, -149, -80, -200,
	334, 335, 336, 337, 338, 351, 352, 353, 339, 340,
	354, 355, 356, 341, 342, 357, 358, 360, 361, 359,
	345, 344, 343, 346, 347, 349, 348, 350, -208, 50,
	-68, 21, 22, 79, 11, -204, 87, 86, 104, -203,
	23, 71, -199, -200, 73, 127, -80, -114, 107, 88,
	105, 106, 90, 109, 108, 119, 112, 113, 114, 115,
	116, 117, 118, 110, 111, 122, 97, 98, 99, 100,
	101, 102, 103, -176, -288, -92, -288, 128, 129, -117,
	-117, -117, -117, -117, -117, -117, -117, -288, -3, -130,
	-80, -288, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -140, -80, -288, -293, -125, -288, -293, -125,
	-293, -125, -293, -288, -293, -125, -293, -125, -293, -293,
	-125, -293, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -105, 27, -103, -83,
	-86, -87, -88, -107, -91, -288, -103, -92, -103, -96,
	-290, 69, 11, 67, -290, 69, 127, 69, -165, -170,
	302, 304, 227, -169, -169, -207, -201, 73, 29, 97,
	30, 127, -145, -64, 70, 69, -243, 155, 152, -214,
	-218, -220, -219, -221, -216, -217, 253, 256, 260, 258,
	254, 259, 123, 257, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 30, 165, 249, 250, 251,
	252, 273, 274, 275, 276, 277, 278, 279, 280, 233,
	255, 364, 234, 235, 236, 237, 238, 239, 241, 242,
	243, 244, 245, 246, 247, 71, -263, 68, -201, 23,
	143, 71, 88, 71, 71, 71, -183, 71, 69, 144,
	-96, 24, 66, -98, -103, 71, 71, 71, 71, -209,
	-208, -198, -197, -181, 73, -80, -183, -183, -197, -197,
	-197, -103, -103, -103, -103, -181, -181, -197, -197, -178,
	11, 107, 11, -178, -178, -80, -117, 71, 71, 230,
	71, -37, -37, 73, -37, 69, 97, -37, 70, -130,
	-272, 435, -70, -3, -103, -197, -89, -91, -288, -157,
	-201, 9, 107, 69, 18, 69, -154, 25, 26, -154,
	127, -118, 51, 74, 77, -184, 49, -103, -80, -80,
	-128, 82, 88, 83, 84, -203, 114, -209, -202, -198,
	-117, -129, -134, -92, 78, 107, 105, 106, 90, -117,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -211, 71, 73, 71, -116, -116,
	-201, -68, -289, 69, -289, -3, -76, -79, 114, -80,
	-208, -76, -289, -80, -80, -137, 73, -76, -137, 73,
	-76, -76, -76, -68, -138, -139, 92, -137, -289, -117,
	-201, -201, -76, -77, -76, -76, -76, -289, -289, -79,
	-76, -79, -76, -76, -289, -289, -289, -289, -68, -68,
	-76, -76, -76, -68, -76, -76, -68, -76, -76, -76,
	-76, -68, -76, -76, -76, -160, 172, -103, 30, 69,
	-99, -101, -100, -102, 56, 60, 62, 57, 58, 59,
	63, -192, 23, -83, -90, 47, -288, -108, 172, -109,
	23, -210, 64, 145, 65, -160, 67, -83, -103, -83,
	-106, -208, 114, -168, -171, 69, 303, 305, 306, -165,
	-228, 122, 66, 85, -80, -202, -209, -155, -70, -253,
	-254, -255, -202, 73, 74, -240, -241, -242, -243, -256,
	155, -262, 147, 149, 44, -244, 156, 141, 45, -215,
	-229, 285, -222, 68, -222, -222, 261, 253, 256, 254,
	-222, -222, -222, -222, -222, -227, 256, -227, -227, -227,
	-227, 254, 68, 68, -222, -222, -222, -231, 68, -231,
	248, -232, 68, -232, -232, -232, -232, -263, -80, -205,
	67, -152, -103, -197, 24, -197, -43, 186, 161, 68,
	-103, -103, -103, -103, 69, 71, 71, -248, 11, 107,
	-181, -208, -208, -103, -119, 23, -181, -74, 166, 71,
	-36, -116, 70, -104, 27, 73, -68, -289, -51, -50,
	-189, 135, 132, 133, 137, 138, -266, 282, 131, 256,
	80, 29, 15, 322, 172, 369, 71, 173, -289, 69,
	127, 52, -120, -120, -149, -174, 19, 11, 47, 47,
	-69, 57, 82, 83, 84, 127, -288, -129, -117, -117,
	-117, -74, 87, -289, -77, -80, -289, 69, -289, 127,
	-289, 69, 67, 23, 11, 11, -289, 11, 11, -289,
	-289, -289, -76, -141, -139, 94, -80, -289, -289, 69,
	69, -289, -289, -289, -289, -150, 330, -150, -289, -289,
	-289, -289, -289, -150, -150, -150, -150, -76, -76, -289,
	-289, -289, -76, -289, -289, -76, -289, -289, -289, -289,
	-76, -289, -289, -289, -115, 30, 47, -3, -288, -288,
	-163, -167, -137, -86, -87, -87, -86, -87, 56, 56,
	56, 61, 56, 61, 56, -100, -210, -289, -289, -133,
	185, -288, 34, -210, -109, 141, 141, 141, -110, 12,
	-83, -110, -110, 127, -170, -173, 307, 304, 310, 71,
	73, 127, -156, 69, -255, 97, -243, 68, 71, 45,
	-244, 141, 45, -244, -249, 71, -249, 45, -233, -225,
	-226, -234, -237, -223, 82, 88, 29, 66, 282, 147,
	45, 44, 80, -230, 286, 74, -227, -227, -222, -222,
	-222, 261, -222, -227, -228, 30, -228, -228, -228, -228,
	-227, -238, 73, -238, 74, -231, 74, 70, 66, -201,
	-3, 23, -44, 8, 9, 10, -274, -275, -276, 71,
	107, 191, 192, 144, -197, -103, -197, -197, -110, 71,
	71, -178, -181, 34, -117, -160, 140, -184, 69, -196,
	-193, -267, -244, -271, -242, -243, 148, 156, 147, 172,
	155, -193, -267, 155, 152, -244, 156, 148, -190, -244,
	144, 23, -193, -193, -250, 97, -193, 172, 23, -201,
	-201, 53, -103, -75, -153, 114, -202, -77, -74, 87,
	-117, -289, -79, 114, -209, -213, 123, 253, 165, 251,
	244, 271, 258, 284, 249, 285, -211, -213, -117, -117,
	-117, -117, 363, -145, 96, -80, 93, -117, -117, -201,
	-288, -150, -150, -150, -150, -150, -289, -289, -151, -150,
	-151, -151, -289, -151, -151, -289, -151, -151, -151, -151,
	-289, -151, -151, -151, -162, 66, -163, -132, -135, -134,
	-288, -3, -157, -161, -201, -110, 69, 97, -94, -93,
	66, 67, -95, 66, -93, 56, 56, -159, 68, 69,
	-134, -288, -161, -117, -109, -288, -288, -288, -145, -80,
	-110, 304, 308, 309, -254, -255, -258, -257, -201, -262,
	156, -249, -249, 68, 82, -117, 9, 45, 45, 73,
	70, -228, -228, -227, -222, -228, 71, 123, -228, 70,
	69, 70, 69, 70, 69, -113, 384, 88, -103, -152,
	-152, 66, 70, 69, -214, 71, 71, 71, -103, -181,
	-117, -227, -103, -69, -50, 68, -239, 71, -196, -249,
	-187, 71, 71, -196, 71, 71, -201, 45, 71, -103,
	-201, -239, 71, -80, -201, -201, -91, 127, -110, 11,
	69, -78, -289, -117, 127, -289, -222, -222, -222, -232,
	-222, 238, -222, 238, -289, -289, 19, 19, 19, 19,
	-288, -72, 327, -80, 69, 69, -145, 172, -151, -151,
	-151, -151, -151, 28, -162, 69, -289, -289, -289, -289,
	69, -145, -167, -80, -80, 68, -80, -158, -201, 185,
	-289, -109, -192, -158, -158, -158, -155, 70, 69, -222,
	-158, -122, -228, -227, 73, -227, 74, 74, 384, 68,
	-3, -103, -277, -278, -279, 80, 365, 88, 193, 194,
	157, 195, 196, 197, -276, -214, -214, -214, -280, -180,
	-75, -239, -147, 160, 161, -214, -205, -246, -244, 71,
	-191, 144, 23, 144, -147, -239, 30, 132, 27, -201,
	-142, 13, -83, -153, -153, 114, -227, 71, -117, -117,
	-117, -117, -117, -289, 73, -117, -117, -289, 16, 45,
	-135, 47, -3, -288, -201, -155, -158, 70, 69, -134,
	-108, -210, -289, -289, -289, -260, -259, 67, 151, 80,
	-257, -154, 70, -228, -228, 70, 70, -258, -152, 19,
	-152, -279, 73, 197, 193, 197, 197, 197, 197, 198,
	-281, 38, -283, 39, 11, 70, 71, -215, 68, -249,
	71, -201, -147, 29, 29, -288, -143, 14, 16, -110,
	-78, -289, -289, -289, -289, -71, 107, 366, -289, -289,
	-130, 9, -132, -3, 70, -201, -109, -259, 71, -250,
	73, 158, 70, 184, -21, -3, -9, -10, -11, -12,
	-14, -45, -15, -16, -22, -23, -17, -52, -53, -62,
	-60, -61, -57, -56, -26, -24, -27, -19, -28, -29,
	-30, -25, 91, 146, 215, 225, 36, 36, 189, 190,
	-224, 145, -284, 43, -282, -236, 42, 16, -83, -258,
	-205, -117, -264, -265, 172, -144, -80, -200, -131, -82,
	-80, -200, -142, -153, -289, 364, 63, 367, -145, -163,
	-289, 74, -103, -261, -260, 185, -152, -80, -80, 71,
	-41, -206, 218, 219, 220, -202, -31, -21, -159, 74,
	-283, 16, -285, 40, 41, 73, -110, 70, 68, -289,
	69, -201, 69, -143, 53, 365, 368, -289, 68, -148,
	187, 188, -32, -33, 92, 93, 216, 217, 221, -214,
	69, 436, 38, 73, 16, 16, -142, -261, -258, -265,
	47, -82, 53, -158, -152, 71, 71, 96, 94, -33,
	-80, -31, 19, 19, 19, 29, -202, 96, -21, 73,
	73, -143, 70, 174, 366, 70, -13, -20, -12, -9,
	-10, -11, 225, 91, -31, 93, 436, -42, 74, -3,
	-40, -39, 74, -42, 223, 88, 224, 71, -117, -261,
	175, 367, -269, -270, 66, -152, -31, 436, -31, 96,
	94, -34, -35, 95, -21, 69, 222, -288, 368, -270,
	66, -269, 66, 10, 9, 436, 96, 436, 146, -31,
	96, 94, -35, -80, -39, -117, 171, -268, 159, 154,
	157, 30, -268, 96, 91, 436, 146, -31, 93, -289,
	-289, 153, 29, 82, 96, 436, -31, 146, 96, 436,
	146,
}
var yyDef = [...]int{

	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, -2, 529, 529, 529, 529, 529, 529, 606, -2,
	397, 398, 0, 0, 0, 0, -2, 498, 499, 500,
	502, 503, 518, -2, 1333, 1333, 0, 0, 1333, 0,
	184, 0, 0, 0, 0, 37, 0, 0, 53, 54,
	906, 0, 521, 510, 511, 0, 0, 1331, 1, 3,
	848, 0, 538, 531, 0, 906, 906, 0, 0, 84,
	0, 0, 0, 607, 0, 0, 0, 904, 904, 0,
	0, 927, 0, 901, 923, 924, 925, 0, 902, 0,
	902, 902, 902, 902, 902, 0, 450, 624, 936, 937,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 0, 0, 0, 491, 0, 1334, 1334, 465, 0,
	467, 0, 0, 0, 0, 0, 476, 479, 1334, 348,
	349, 350, 495, 496, 485, 497, 0, 0, 0, 0,
	0, 522, 523, 524, 525, 1333, 1333, 528, 163, 165,
	0, 185, 0, 188, 191, 942, 504, 0, 529, 0,
	533, 0, 0, 907, 501, 42, 43, 0, 608, 609,
	610, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 0,
	854, 0, 0, 541, 539, 540, 530, 0, 552, 561,
	0, 633, 0, 638, 640, -2, -2, 0, 681, 682,
	683, 684, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 709, 710, 711, 712, 713, 714, 818, 819, 820,
	821, 822, 823, 824, 825, 642, 643, 815, 874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	806, 0, 777, 777, 777, 777, 777, 777, 777, 777,
	777, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 66, 624, 70, 1282, 0, 878, -2, -2, 880,
	0, 0, 0, -2, -2, -2, -2, 1109, -2, 815,
	0, 85, 839, 529, 86, 0, 225, 226, 0, 1121,
	369, 934, 935, 1111, 930, 931, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 451, 1334, 491, 454, 0, 0, 904, 904,
	1334, 1334, 1334, 0, 0, 0, 463, 1335, 1336, 464,
	0, 371, 372, 491, 491, 1334, 1334, 488, 0, 488,
	488, 486, 487, 482, 483, 0, 478, 0, 480, 505,
	0, 0, 512, 514, 515, 516, 517, 513, 0, 526,
	527, 0, 0, 167, 0, 0, 187, 169, 0, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 0, 190, 0, 940, 943, 509, 538, 39, 49,
	0, 534, 535, 0, 1334, 0, 0, 0, 48, 1332,
	34, 0, 0, 849, 852, 853, 840, 841, 845, 845,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 0, 0,
	536, 542, 543, 532, 0, 553, 0, 0, 0, 562,
	0, 564, 565, 566, 567, 0, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 661, 662, 663,
	664, 665, 666, 639, 0, 653, 0, 0, 0, 701,
	702, 703, 704, 705, 706, 707, 0, 541, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 807, 0, 760, 769, 0, 761, 770,
	762, 771, 763, 0, 764, 772, 765, 773, 766, 767,
	774, 768, 0, 0, 0, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	541, 0, 0, 0, 541, 0, 0, 541, 0, 0,
	0, 0, 541, 0, 0, 0, 68, 0, 623, 0,
	568, 570, 571, 572, -2, 0, 627, 673, -2, 0,
	0, 0, 60, 61, 0, 0, 0, 0, 71, 73,
	0, 0, 1282, 881, 882, 324, 895, 896, 897, 0,
	893, 0, 848, 538, 386, 0, 227, 0, 0, 235,
	312, 243, 244, 245, 305, 247, 305, 305, 0, 305,
	305, 305, 305, 305, 321, 321, 321, 321, 321, 288,
	289, 290, 291, 292, 0, 0, 265, 305, 305, 305,
	269, 295, 296, 297, 298, 299, 300, 301, 302, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 307, 307,
	309, 309, 309, 309, 309, 0, 368, 0, 928, 82,
	0, 1334, 0, 1334, 0, 0, 0, 119, 0, 0,
	442, 903, 0, 444, 62, 445, 446, 447, 448, 625,
	938, 939, 452, 453, 492, 493, 0, 0, 457, 458,
	459, 460, 461, 462, 373, 468, 469, 470, 475, 491,
	0, 0, 0, 586, 491, 477, 667, 507, 506, 0,
	519, 164, 166, 168, 186, 0, 0, 189, 192, 0,
	0, 0, 541, 0, 0, 428, 44, 45, 0, 0,
	863, 855, 0, 0, 0, 0, 843, 846, 847, 844,
	0, 0, 826, 0, 0, 544, 537, 36, 634, 635,
	637, 654, 0, 656, 658, 563, 554, 0, 816, -2,
	644, 645, 669, 670, 671, 0, 0, 0, 0, 667,
	649, 0, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 700, 791, 792, 0, 698, 699,
	708, 675, 672, 0, 873, 0, 0, 677, 548, 549,
	0, 0, 747, 0, 0, 683, 818, 0, 683, 818,
	0, 0, 0, 0, 813, 810, 0, 0, 778, 0,
	0, 0, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 622, 0, 0,
	0, 0, 0, 0, 611, 0, 0, 614, 0, 0,
	0, 0, 605, 0, 0, 0, 0, 579, 1212, 581,
	0, 627, 0, 0, 0, 631, 0, 631, 65, 631,
	67, 0, 626, 879, 0, 0, 0, 76, 77, 72,
	883, 0, 889, 890, 891, 816, 0, 854, 541, 224,
	387, 389, 392, 393, 394, 228, 230, 231, 232, 0,
	1121, 361, 1222, 1262, -2, 355, 1148, -2, -2, 234,
	314, 313, 246, 0, 321, 321, 305, 305, 305, 305,
	274, 321, 277, 280, 281, 324, 0, 324, 324, 324,
	324, 321, 0, 0, 266, 267, 268, 257, 0, 258,
	307, 260, 0, 261, 262, 263, 264, 367, 0, 0,
	0, 0, 0, 90, 905, 91, 0, 120, 121, 95,
	223, 0, 440, 1334, 0, 1334, 1334, 631, 0, 0,
	471, 489, 490, 488, 491, 0, 474, 481, 0, 508,
	170, 171, 193, 68, 0, 941, 536, 50, 399, 400,
	1333, -2, 429, 920, 429, 429, 418, 341, 429, 910,
	911, 912, 913, 914, 915, 916, 917, 0, 0, 0,
	0, 0, 850, 851, 842, 0, 898, 899, 827, 828,
	83, 545, 655, 657, 659, 0, 675, 646, 667, 650,
	0, 647, 0, 641, 0, 680, -2, 0, 745, 0,
	746, 0, 0, 0, 0, 0, 784, 0, 0, 785,
	0, 756, 839, 0, 811, 0, 0, 759, 779, 0,
	0, 780, 781, 782, 783, 734, 0, 735, 0, 0,
	0, 0, 0, 741, 742, 743, 744, 0, 0, 559,
	559, 559, 0, 559, 559, 0, 559, 559, 559, 559,
	0, 559, 559, 559, 867, 0, 0, 858, 0, 0,
	631, 875, 0, 569, 600, 602, 0, 597, 612, 613,
	615, 0, 617, 0, 619, 620, 588, 575, 674, 576,
	0, 0, 0, 627, 585, 0, 0, 0, 839, 0,
	631, 58, 59, 0, 74, 75, 0, 0, 81, 325,
	326, 0, 94, 0, 390, 0, 229, 0, 0, 343,
	355, 351, 352, 355, 346, 356, 347, 0, 236, 237,
	238, 239, 240, 241, 316, 0, 0, 0, 320, 0,
	328, 330, 0, 242, 315, 0, 324, 324, 321, 272,
	273, 305, 278, 324, 282, 0, 283, 284, 285, 286,
	324, 0, 303, 0, 0, 259, 0, 383, 0, 929,
	82, 82, 0, 122, 123, 124, 0, 96, 97, 0,
	0, 0, 0, 0, 443, 63, 455, 456, 466, 374,
	375, 491, 473, 0, 668, 321, 0, 544, 0, 402,
	0, 1333, 355, 0, 419, 420, 430, 431, 432, 433,
	0, 0, 1333, 0, 0, 0, 431, 0, 0, 0,
	921, 922, 0, 0, 0, 342, 0, 0, 0, 865,
	864, 856, 35, 631, 0, 555, 817, 0, 648, 0,
	651, 715, 678, 550, 0, 0, 305, 305, 796, 305,
	309, 799, 305, 801, 305, 804, 0, 0, 0, 0,
	0, 0, 0, 808, 758, 814, 0, 0, 0, 556,
	839, 736, 737, 738, 739, 740, 559, 559, 719, 560,
	720, 721, 559, 723, 724, 559, 726, 727, 728, 729,
	559, 731, 732, 733, 51, 0, 867, 857, 869, 871,
	0, 0, 0, 0, 592, 839, 0, 0, 594, 601,
	0, 0, 595, 0, 596, 616, 618, 573, 0, 0,
	577, 0, 0, -2, 584, 0, 0, 0, 848, 632,
	57, 78, 79, 80, 388, 391, 0, 357, 305, 360,
	0, 344, 345, 0, 317, 318, 0, 327, 329, 331,
	306, 270, 271, 324, 279, 275, 322, 323, 287, 321,
	0, 321, 0, 310, 0, 370, 384, 0, 0, 88,
	0, 0, 103, 0, 99, 0, 0, 0, 441, 472,
	587, 952, 621, 83, 401, 0, 425, 0, 405, 928,
	353, 396, 406, 407, 412, 413, 414, 0, 0, 409,
	0, 425, 0, 422, 0, 0, 46, 0, 829, 0,
	83, 83, 716, 652, 0, 748, 793, 321, 797, 798,
	800, 802, 803, 805, 750, 749, 0, 0, 0, 0,
	0, 0, 0, 812, 0, 0, 0, 0, 717, 718,
	722, 725, 730, 0, 52, 0, 872, -2, 0, 69,
	0, 848, 876, 877, 598, 0, 603, 0, 590, 0,
	627, 582, 0, 0, 0, 0, 56, 333, 0, 845,
	0, 319, 276, 324, 304, 324, 0, 0, 385, 0,
	82, 0, 82, 104, 105, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 98, 100, 101, 102, 954, 948,
	0, 0, 404, 426, 0, 235, 0, 355, 354, 421,
	0, 918, 919, 0, 416, 425, 0, 0, 0, 866,
	835, 0, 631, 0, 546, 551, 794, 795, 0, 0,
	0, 0, 786, 757, 809, 0, 0, 557, 0, 0,
	870, 0, 861, 0, 593, 55, 0, 589, 0, 578,
	580, 627, 628, 629, 630, 332, 336, 0, 341, 0,
	358, 359, 0, 293, 294, 308, 311, 0, 89, 0,
	0, 106, 107, 108, 109, 111, 112, 0, 0, 0,
	908, 956, -2, 0, 0, 403, 427, 233, 0, 928,
	408, 415, 417, 0, 424, 0, 40, 0, 0, 829,
	83, 751, 753, 752, 754, 0, 0, 0, 775, 776,
	839, 0, 860, 0, 599, 591, 583, 337, 338, 0,
	340, 0, 334, 0, 82, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 0, 0, 0, 0, 113, 114, 115, 116,
	588, 0, 948, 0, 950, 0, 947, 0, 631, 0,
	0, 423, 0, 435, 0, 836, 837, 838, 830, 831,
	833, 834, 835, 547, 755, 0, 0, 0, 0, 868,
	-2, 339, 0, 87, 335, 125, 93, 0, 0, 930,
	0, 0, 152, 153, 154, 932, 0, 194, 33, 0,
	955, 0, 953, 0, 0, 949, 829, 334, 0, 434,
	0, 0, 0, 41, 787, 0, 790, 558, 0, 82,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 150,
	0, 0, 909, 957, 0, 0, 835, 410, 0, 436,
	0, 832, 788, 0, 0, 126, 127, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 933, 117, 195, 951,
	945, 38, 334, 0, 0, 362, 82, 128, 129, 130,
	131, 132, 0, 134, 0, 0, 0, 146, 147, 148,
	0, 155, 157, 158, 159, 0, 161, 162, 151, 411,
	0, 0, 363, 364, 0, 92, 0, 0, 0, 0,
	0, 0, 143, 0, 149, 0, 160, 0, 789, 365,
	0, 366, 0, 0, 0, 0, 0, 138, 139, 0,
	0, 0, 144, 0, 156, 0, 0, 376, 378, 379,
	0, 0, 377, 133, 135, 0, 141, 0, 0, 437,
	438, 380, 381, 382, 0, 0, 0, 140, 0, 145,
	142,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 436,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:416
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:452
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:464
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:495
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:533
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:563
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:575
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:629
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:675
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:725
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:745
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:750
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:755
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:759
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:763
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:767
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:775
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:787
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:794
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:802
		{
			yyVAL.procedureParams = nil
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:816
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:839
		{
			yyVAL.characteristics = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:843
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:853
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:859
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:863
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:867
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:875
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:901
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:906
		{
			yyVAL.str = ""
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.str = BeforeStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = AfterStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.str = InsertStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.str = UpdateStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:934
		{
			yyVAL.str = DeleteStr
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:939
		{
			yyVAL.triggerOrder = nil
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:953
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:963
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:969
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:973
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:983
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:989
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:995
		{
			conds := []IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 140:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1000
		{
			conds := []IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1005
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 142:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1011
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1019
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1029
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1035
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1039
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1043
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1047
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1055
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1116
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1124
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &Resignal{}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1237
		{
			yyVAL.exprs = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1245
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1293
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1310
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1337
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1388
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1406
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1415
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1446
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1501
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1714
		{
			yyVAL.sqlVal = nil
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1718
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1723
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1727
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1735
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1745
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1753
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1762
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1789
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.colKeyOpt = colKey
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1851
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1855
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1860
		{
			yyVAL.indexOptions = nil
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = yyDollar[1].str
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1995
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 363:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1999
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2003
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2007
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 366:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2011
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2031
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2093
		{
			yyVAL.boolean = true
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.boolean = true
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.boolean = false
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = yyDollar[1].str
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2190
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2197
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2216
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2225
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 411:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2229
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{{Name: string(yyDollar[3].bytes)}}}}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2247
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2251
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2258
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2280
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2289
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2293
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnOrder = nil
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2312
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2318
		{
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2329
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2345
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2349
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2365
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2373
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2381
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2385
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2393
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2401
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2409
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2427
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2431
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2442
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2447
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2459
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2472
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2476
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2504
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2508
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2512
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2516
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2520
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2524
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2529
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2539
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2543
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2551
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2557
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2581
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.str = "full "
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.showFilter = nil
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2639
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = SessionStr
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = GlobalStr
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2659
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = &Begin{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.statement = &Begin{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.statement = &Commit{}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.statement = &Rollback{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2707
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2711
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2715
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2735
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2749
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2753
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.statement = &OtherRead{}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2796
		{
			setAllowComments(yylex, true)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.bytes2 = nil
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = UnionStr
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2820
		{
			yyVAL.str = UnionAllStr
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2824
		{
			yyVAL.str = UnionDistinctStr
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2829
		{
			yyVAL.byt = 0
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.byt = 1
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = SQLCacheStr
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = ""
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = DistinctStr
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = StraightJoinHint
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2882
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2905
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2923
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2934
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2938
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2943
		{
			yyVAL.over = nil
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.over = yyDollar[1].over
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2966
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3002
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3034
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3045
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3060
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3064
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3072
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = nil
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3092
		{
			yyVAL.columns = nil
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3096
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3129
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3133
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3137
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3149
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3153
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3159
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3161
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3164
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3166
		{
			yyVAL.empty = struct{}{}
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3169
		{
			yyVAL.byt = 0
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.byt = 1
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = JoinStr
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = JoinStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = JoinStr
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.str = StraightJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = LeftJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = LeftJoinStr
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = RightJoinStr
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = RightJoinStr
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = NaturalJoinStr
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3244
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3269
		{
			yyVAL.indexHints = nil
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3273
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3277
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3281
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = nil
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3326
		{
			yyVAL.str = ""
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3358
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3362
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3370
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.str = IsNullStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3392
		{
			yyVAL.str = IsNotNullStr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.str = IsTrueStr
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = IsNotTrueStr
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = IsFalseStr
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = IsNotFalseStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.str = EqualStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.str = LessThanStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = GreaterThanStr
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = LessEqualStr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = GreaterEqualStr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.str = NotEqualStr
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = nil
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3477
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3483
		{
			yyVAL.selectExprs = nil
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3490
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3698
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3702
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3706
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3730
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3775
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3802
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3810
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 751:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3814
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 752:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 753:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3822
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 754:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3826
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 755:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3830
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3834
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 757:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3838
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3846
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3885
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3903
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3907
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3917
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3922
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 775:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3926
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 776:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3930
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3959
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3963
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = ""
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3981
		{
			yyVAL.str = BooleanModeStr
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.str = QueryExpansionStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4009
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.expr = nil
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = string("")
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4093
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.expr = nil
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4102
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4112
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4116
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.expr = &NullVal{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4160
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4169
		{
			yyVAL.exprs = nil
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4198
		{
			yyVAL.expr = nil
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.orderBy = nil
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4231
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4237
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = AscScr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = AscScr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = DescScr
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4259
		{
			yyVAL.limit = nil
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4263
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4267
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4271
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = ForUpdateStr
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = ShareModeStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4307
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4320
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4324
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4328
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4347
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4352
		{
			yyVAL.assignExprs = nil
		}
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4356
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4461
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.setScope = SetScope_Global
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.setScope = SetScope_Session
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.setScope = SetScope_Session
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4499
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yyVAL.bytes = []byte("charset")
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = &Default{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4530
		{
			yyVAL.byt = 0
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.byt = 1
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4535
		{
			yyVAL.byt = 0
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4537
		{
			yyVAL.byt = 1
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4540
		{
			yyVAL.byt = 0
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.byt = 1
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = ""
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = IgnoreStr
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4550
		{
			yyVAL.sqlVal = nil
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4552
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.empty = struct{}{}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.empty = struct{}{}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4579
		{
			yyVAL.empty = struct{}{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.empty = struct{}{}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.empty = struct{}{}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = UniqueStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.str = FulltextStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = SpatialStr
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.str = yyDollar[1].str
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4599
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4619
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = string("")
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4653
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4658
		{
			yyVAL.EnclosedBy = nil
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4662
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.sqlVal = nil
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4680
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4685
		{
			yyVAL.sqlVal = nil
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4689
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4694
		{
			yyVAL.Fields = nil
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4698
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4703
		{
			yyVAL.Lines = nil
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			yyVAL.sqlVal = nil
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4716
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			decNesting(yylex)
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			skipToEnd(yylex)
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			skipToEnd(yylex)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			skipToEnd(yylex)
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
