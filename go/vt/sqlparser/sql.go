// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	flushOptions             []*FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const BEGIN = 57616
const START = 57617
const TRANSACTION = 57618
const COMMIT = 57619
const ROLLBACK = 57620
const SAVEPOINT = 57621
const WORK = 57622
const RELEASE = 57623
const BIT = 57624
const TINYINT = 57625
const SMALLINT = 57626
const MEDIUMINT = 57627
const INT = 57628
const INTEGER = 57629
const BIGINT = 57630
const INTNUM = 57631
const SERIAL = 57632
const REAL = 57633
const DOUBLE = 57634
const FLOAT_TYPE = 57635
const DECIMAL = 57636
const NUMERIC = 57637
const DEC = 57638
const FIXED = 57639
const PRECISION = 57640
const TIME = 57641
const TIMESTAMP = 57642
const DATETIME = 57643
const YEAR = 57644
const CHAR = 57645
const VARCHAR = 57646
const BOOL = 57647
const CHARACTER = 57648
const VARBINARY = 57649
const NCHAR = 57650
const NVARCHAR = 57651
const NATIONAL = 57652
const VARYING = 57653
const TEXT = 57654
const TINYTEXT = 57655
const MEDIUMTEXT = 57656
const LONGTEXT = 57657
const LONG = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const ENUM = 57664
const GEOMETRY = 57665
const POINT = 57666
const LINESTRING = 57667
const POLYGON = 57668
const GEOMETRYCOLLECTION = 57669
const MULTIPOINT = 57670
const MULTILINESTRING = 57671
const MULTIPOLYGON = 57672
const LOCAL = 57673
const LOW_PRIORITY = 57674
const NULLX = 57675
const AUTO_INCREMENT = 57676
const APPROXNUM = 57677
const SIGNED = 57678
const UNSIGNED = 57679
const ZEROFILL = 57680
const COLLATION = 57681
const DATABASES = 57682
const SCHEMAS = 57683
const TABLES = 57684
const FULL = 57685
const PROCESSLIST = 57686
const COLUMNS = 57687
const FIELDS = 57688
const ENGINES = 57689
const PLUGINS = 57690
const NAMES = 57691
const CHARSET = 57692
const GLOBAL = 57693
const SESSION = 57694
const ISOLATION = 57695
const LEVEL = 57696
const READ = 57697
const WRITE = 57698
const ONLY = 57699
const REPEATABLE = 57700
const COMMITTED = 57701
const UNCOMMITTED = 57702
const SERIALIZABLE = 57703
const CURRENT_TIMESTAMP = 57704
const DATABASE = 57705
const CURRENT_DATE = 57706
const CURRENT_USER = 57707
const CURRENT_TIME = 57708
const LOCALTIME = 57709
const LOCALTIMESTAMP = 57710
const UTC_DATE = 57711
const UTC_TIME = 57712
const UTC_TIMESTAMP = 57713
const REPLACE = 57714
const CONVERT = 57715
const CAST = 57716
const SUBSTR = 57717
const SUBSTRING = 57718
const TRIM = 57719
const LEADING = 57720
const TRAILING = 57721
const BOTH = 57722
const GROUP_CONCAT = 57723
const SEPARATOR = 57724
const TIMESTAMPADD = 57725
const TIMESTAMPDIFF = 57726
const OVER = 57727
const WINDOW = 57728
const GROUPING = 57729
const CURRENT = 57730
const AVG = 57731
const BIT_AND = 57732
const BIT_OR = 57733
const BIT_XOR = 57734
const COUNT = 57735
const JSON_ARRAYAGG = 57736
const JSON_OBJECTAGG = 57737
const MAX = 57738
const MIN = 57739
const STDDEV_POP = 57740
const STDDEV = 57741
const STD = 57742
const STDDEV_SAMP = 57743
const SUM = 57744
const VAR_POP = 57745
const VARIANCE = 57746
const VAR_SAMP = 57747
const CUME_DIST = 57748
const DENSE_RANK = 57749
const FIRST_VALUE = 57750
const LAG = 57751
const LAST_VALUE = 57752
const LEAD = 57753
const NTH_VALUE = 57754
const NTILE = 57755
const ROW_NUMBER = 57756
const PERCENT_RANK = 57757
const RANK = 57758
const MATCH = 57759
const AGAINST = 57760
const BOOLEAN = 57761
const LANGUAGE = 57762
const WITH = 57763
const QUERY = 57764
const EXPANSION = 57765
const UNUSED = 57766
const ARRAY = 57767
const DESCRIPTION = 57768
const EMPTY = 57769
const JSON_TABLE = 57770
const LATERAL = 57771
const MEMBER = 57772
const RECURSIVE = 57773
const ACTIVE = 57774
const BUCKETS = 57775
const CLONE = 57776
const COMPONENT = 57777
const DEFINITION = 57778
const ENFORCED = 57779
const EXCLUDE = 57780
const GEOMCOLLECTION = 57781
const GET_MASTER_PUBLIC_KEY = 57782
const HISTOGRAM = 57783
const HISTORY = 57784
const INACTIVE = 57785
const INVISIBLE = 57786
const LOCKED = 57787
const MASTER_COMPRESSION_ALGORITHMS = 57788
const MASTER_PUBLIC_KEY_PATH = 57789
const MASTER_TLS_CIPHERSUITES = 57790
const MASTER_ZSTD_COMPRESSION_LEVEL = 57791
const NESTED = 57792
const NETWORK_NAMESPACE = 57793
const NOWAIT = 57794
const NULLS = 57795
const OJ = 57796
const OLD = 57797
const ORDINALITY = 57798
const ORGANIZATION = 57799
const OTHERS = 57800
const PATH = 57801
const PERSIST = 57802
const PERSIST_ONLY = 57803
const PRIVILEGE_CHECKS_USER = 57804
const PROCESS = 57805
const REFERENCE = 57806
const REQUIRE_ROW_FORMAT = 57807
const RESOURCE = 57808
const RESPECT = 57809
const RESTART = 57810
const RETAIN = 57811
const SECONDARY = 57812
const SECONDARY_ENGINE = 57813
const SECONDARY_LOAD = 57814
const SECONDARY_UNLOAD = 57815
const SKIP = 57816
const SRID = 57817
const THREAD_PRIORITY = 57818
const TIES = 57819
const VCPU = 57820
const VISIBLE = 57821
const SYSTEM = 57822
const INFILE = 57823

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1038,
	-1, 43,
	147, 1102,
	148, 1120,
	-2, 231,
	-1, 49,
	186, 673,
	187, 673,
	-2, 663,
	-1, 514,
	135, 1130,
	-2, 1124,
	-1, 515,
	135, 1131,
	-2, 1125,
	-1, 619,
	98, 1399,
	135, 1399,
	-2, 1086,
	-1, 620,
	98, 1516,
	135, 1516,
	-2, 1087,
	-1, 625,
	98, 1423,
	135, 1423,
	-2, 1088,
	-1, 626,
	98, 1470,
	135, 1470,
	-2, 1089,
	-1, 627,
	98, 1471,
	135, 1471,
	-2, 1090,
	-1, 628,
	98, 1349,
	135, 1349,
	-2, 1094,
	-1, 630,
	98, 1447,
	135, 1447,
	-2, 1096,
	-1, 1135,
	1, 770,
	5, 770,
	12, 770,
	13, 770,
	14, 770,
	15, 770,
	17, 770,
	19, 770,
	30, 770,
	31, 770,
	56, 770,
	57, 770,
	58, 770,
	59, 770,
	60, 770,
	62, 770,
	63, 770,
	66, 770,
	67, 770,
	69, 770,
	70, 770,
	404, 770,
	500, 770,
	-2, 800,
	-1, 1139,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1384,
	135, 1133,
	-2, 1129,
	-1, 1549,
	44, 522,
	-2, 1361,
	-1, 1553,
	68, 522,
	-2, 1312,
	-1, 1556,
	68, 518,
	72, 518,
	-2, 1232,
	-1, 1557,
	68, 519,
	72, 519,
	-2, 1242,
	-1, 1672,
	44, 565,
	154, 567,
	156, 565,
	157, 565,
	-2, 600,
	-1, 1742,
	5, 51,
	-2, 866,
	-1, 2041,
	69, 1287,
	70, 1287,
	135, 1287,
	-2, 704,
	-1, 2064,
	1, 821,
	5, 821,
	12, 821,
	13, 821,
	14, 821,
	15, 821,
	17, 821,
	19, 821,
	30, 821,
	31, 821,
	56, 821,
	57, 821,
	58, 821,
	59, 821,
	60, 821,
	62, 821,
	63, 821,
	66, 821,
	67, 821,
	69, 821,
	70, 821,
	404, 821,
	500, 821,
	-2, 800,
	-1, 2165,
	154, 568,
	-2, 566,
	-1, 2226,
	5, 51,
	-2, 1058,
	-1, 2426,
	41, 1140,
	-2, 1138,
	-1, 2562,
	5, 51,
	-2, 1061,
}

const yyPrivate = 57344

const yyLast = 33430

var yyAct = [...]int{
	577, 80, 2578, 2707, 2757, 2731, 2721, 2611, 2565, 2722,
	1983, 2544, 829, 2709, 2604, 2579, 2626, 417, 2549, 2446,
	2479, 7, 2478, 6, 1601, 2542, 2477, 5, 2480, 8,
	2238, 517, 2609, 2077, 2476, 3, 2333, 1170, 2426, 2058,
	2373, 1086, 1781, 1957, 1810, 1599, 1966, 2034, 644, 506,
	1831, 2291, 2314, 1541, 1508, 1502, 2428, 83, 1558, 2126,
	2285, 2269, 1362, 2566, 1506, 1611, 515, 1529, 2035, 2078,
	1965, 400, 403, 2253, 2150, 2159, 1891, 576, 533, 442,
	442, 80, 1550, 463, 1782, 448, 93, 1671, 1260, 1574,
	1540, 106, 499, 2031, 520, 861, 1695, 2043, 2050, 1539,
	1355, 1975, 1409, 2003, 1262, 1481, 1370, 1637, 1546, 1305,
	1278, 642, 1485, 1935, 127, 498, 1874, 127, 639, 1240,
	1132, 1586, 988, 127, 621, 1150, 1492, 1590, 1473, 1135,
	1386, 911, 1653, 445, 445, 1131, 845, 995, 1418, 890,
	991, 638, 502, 1149, 617, 618, 127, 1008, 613, 640,
	462, 962, 420, 512, 1310, 419, 2254, 127, 816, 85,
	610, 127, 647, 1141, 1104, 127, 2779, 2775, 2765, 889,
	2747, 2745, 2726, 2702, 1105, 2634, 82, 1303, 2405, 127,
	445, 2263, 647, 69, 2738, 460, 624, 522, 2270, 36,
	127, 1259, 36, 36, 2403, 2620, 2272, 87, 88, 89,
	90, 91, 828, 2720, 921, 2560, 2690, 1624, 2111, 2406,
	2458, 2595, 435, 1776, 429, 440, 423, 36, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	1777, 2418, 1034, 1420, 2358, 1902, 36, 430, 72, 39,
	40, 1624, 2123, 412, 2619, 2559, 2024, 2522, 2545, 1717,
	2218, 81, 815, 1819, 81, 81, 1818, 1652, 1504, 1820,
	818, 1525, 821, 822, 999, 2073, 2074, 1309, 118, 114,
	115, 2275, 116, 1526, 1527, 1351, 1352, 634, 592, 81,
	598, 600, 599, 596, 597, 595, 594, 593, 2072, 981,
	1307, 1308, 2615, 2615, 1151, 864, 1152, 1326, 81, 601,
	602, 947, 849, 850, 120, 119, 852, 939, 2610, 2273,
	2274, 2276, 2277, 2278, 865, 866, 411, 410, 1857, 1560,
	452, 508, 1306, 1651, 908, 1575, 2612, 2612, 2205, 2203,
	1562, 72, 39, 40, 109, 1566, 1568, 409, 1567, 851,
	1580, 963, 1575, 394, 422, 421, 424, 459, 1347, 1562,
	1346, 2616, 2616, 41, 428, 1345, 121, 1344, 122, 414,
	1343, 2342, 943, 944, 2286, 1897, 1849, 1925, 1587, 2431,
	2715, 432, 2289, 2149, 1930, 436, 2636, 99, 453, 1664,
	2635, 1854, 1853, 2133, 2585, 871, 2287, 2288, 2526, 439,
	2292, 2293, 2294, 2295, 2303, 2310, 972, 80, 80, 1665,
	1337, 2404, 2642, 1850, 1679, 1673, 1674, 2583, 1672, 1675,
	1676, 2127, 2128, 2129, 2130, 2131, 1290, 879, 1855, 881,
	1842, 1899, 2735, 880, 1612, 2301, 1843, 874, 2631, 2398,
	2516, 878, 882, 127, 112, 2397, 101, 2629, 2630, 2396,
	98, 2395, 2394, 2392, 1680, 2124, 111, 110, 2393, 923,
	2656, 2127, 2128, 2129, 2130, 2131, 977, 2512, 2513, 954,
	2400, 2567, 955, 2474, 985, 2623, 2624, 2240, 1802, 404,
	969, 862, 860, 863, 865, 866, 2718, 127, 872, 873,
	425, 426, 427, 433, 1316, 437, 438, 441, 107, 923,
	395, 1852, 968, 964, 965, 966, 967, 970, 108, 971,
	973, 2524, 1606, 117, 1901, 2713, 1916, 1917, 2708, 946,
	857, 405, 2704, 856, 1043, 2685, 2422, 1045, 2472, 2136,
	2771, 113, 2711, 1169, 103, 1169, 104, 1943, 127, 1605,
	1941, 858, 859, 820, 819, 2518, 1976, 848, 2315, 2316,
	401, 2459, 2164, 2780, 2777, 2271, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 2110, 1011, 1084, 2151, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1864, 1103, 1106, 1106, 1106, 1112, 1106, 1106, 1112,
	1106, 1112, 1121, 1122, 1123, 1124, 1125, 1126, 413, 1136,
	1565, 1658, 1085, 1575, 974, 2698, 1589, 1678, 2004, 2558,
	73, 2401, 79, 2613, 2613, 79, 79, 924, 931, 932,
	934, 935, 936, 937, 938, 2584, 940, 941, 942, 976,
	945, 1291, 948, 949, 950, 951, 952, 983, 923, 1309,
	79, 922, 875, 956, 2419, 2517, 402, 933, 1903, 2006,
	402, 1900, 402, 1892, 1130, 2710, 2712, 1311, 397, 79,
	2523, 100, 1307, 1308, 127, 127, 127, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 2421, 2761, 431, 2135, 1851,
	647, 402, 1163, 1169, 2766, 2748, 1168, 1142, 817, 1893,
	2528, 2081, 1313, 398, 1044, 1312, 1169, 831, 458, 2326,
	1943, 1954, 624, 73, 1924, 109, 2325, 624, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	930, 1836, 1921, 1836, 2374, 996, 1905, 919, 1904, 1659,
	1248, 1246, 1154, 876, 1836, 1015, 1836, 1155, 2376, 1511,
	1513, 1233, 1809, 1229, 1808, 1807, 813, 1167, 1107, 1109,
	1111, 1113, 1115, 1117, 1118, 1120, 1836, 1919, 1108, 1110,
	1140, 1114, 1116, 980, 1119, 1145, 1023, 1022, 1032, 1033,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 928, 1621,
	1034, 1894, 1895, 1839, 1620, 1164, 1138, 823, 366, 2008,
	2190, 2329, 1046, 1047, 2012, 2182, 2007, 1923, 2005, 1922,
	1752, 1087, 1823, 2010, 929, 1815, 925, 2759, 1749, 918,
	2760, 2521, 2758, 1358, 1102, 2375, 2009, 111, 110, 1712,
	1700, 1685, 1365, 1638, 1835, 442, 1835, 1512, 1162, 1953,
	1242, 2011, 2013, 1950, 2324, 1147, 1014, 1835, 841, 1835,
	926, 927, 442, 1949, 1941, 2100, 1941, 1261, 1946, 1530,
	1169, 1945, 1948, 1942, 1943, 1024, 1034, 2145, 1034, 1835,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	647, 1521, 1034, 830, 1288, 2543, 2657, 2658, 445, 445,
	1264, 1027, 1028, 1029, 1030, 1031, 1024, 127, 2340, 1034,
	127, 2654, 2655, 2555, 2554, 445, 445, 2408, 127, 1958,
	1241, 2330, 1960, 1486, 2101, 1007, 1279, 127, 127, 127,
	127, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1024, 442, 2048, 1034, 1046, 1047, 445, 96, 2047,
	1298, 2409, 1160, 1046, 1047, 883, 1393, 1628, 1301, 824,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 2026, 1286,
	1034, 1391, 1392, 1390, 854, 1474, 1335, 1005, 847, 2764,
	1006, 1005, 867, 1282, 1474, 1283, 1765, 2768, 80, 2699,
	2221, 1265, 1243, 95, 1007, 445, 445, 445, 1007, 1235,
	647, 1250, 2688, 1274, 1275, 1276, 1277, 2302, 1476, 2772,
	833, 834, 835, 836, 837, 838, 839, 1268, 1269, 1319,
	2296, 2088, 1349, 1280, 518, 2751, 2732, 2750, 1002, 2588,
	445, 94, 1747, 1285, 1746, 445, 445, 1023, 1022, 1032,
	1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 1356,
	81, 1034, 1006, 1005, 1629, 2678, 80, 127, 1341, 127,
	2580, 1389, 647, 2773, 1293, 1294, 992, 2563, 1296, 993,
	1007, 855, 846, 1384, 457, 96, 869, 2416, 1383, 2581,
	127, 1314, 1318, 1315, 1299, 2519, 1011, 2415, 1413, 1414,
	1085, 1267, 1006, 1005, 1006, 1005, 1006, 1005, 2627, 1088,
	2414, 2701, 2413, 2628, 465, 1387, 1006, 1005, 1006, 1005,
	1007, 1284, 1007, 2028, 1007, 2407, 1511, 1513, 1880, 1336,
	1317, 2262, 1339, 1342, 1007, 2582, 1007, 1348, 2261, 1382,
	1879, 2520, 647, 1452, 1877, 1006, 1005, 1320, 1748, 1858,
	1323, 1324, 1325, 1353, 1327, 1328, 914, 1505, 1329, 1410,
	1087, 1411, 1136, 1007, 1330, 1821, 1136, 1822, 1331, 1332,
	1340, 1333, 1334, 607, 608, 1363, 1364, 1380, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	1385, 1085, 1034, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 647, 647,
	1459, 1462, 1006, 1005, 1512, 127, 1264, 1516, 1475, 913,
	887, 1518, 1427, 127, 127, 1388, 1431, 2677, 127, 127,
	1007, 1384, 127, 127, 127, 2639, 1534, 1006, 1005, 2637,
	640, 1510, 1501, 886, 2627, 2594, 2666, 2664, 2665, 1697,
	1698, 1699, 647, 647, 1367, 1007, 1376, 1378, 1379, 1373,
	1374, 2515, 1377, 624, 538, 537, 540, 541, 542, 543,
	2514, 1465, 1514, 539, 544, 2471, 1536, 1249, 1368, 2423,
	1477, 1369, 1618, 2391, 2352, 2299, 2298, 1535, 2297, 2259,
	2093, 1875, 1648, 1295, 1266, 2663, 1576, 1577, 1578, 1579,
	1229, 2525, 2469, 2440, 1839, 1547, 2434, 2322, 1112, 2193,
	2178, 2174, 2166, 1523, 1522, 1519, 2137, 1528, 2121, 2120,
	127, 2119, 1910, 1909, 1642, 1626, 1625, 1537, 1544, 1412,
	127, 1292, 127, 127, 445, 445, 445, 1289, 1258, 127,
	1257, 1416, 1087, 1554, 1138, 1424, 1256, 1457, 1458, 1138,
	1644, 1255, 1244, 1138, 1433, 1434, 1616, 1617, 1238, 1596,
	1597, 1237, 1236, 1588, 1234, 1444, 127, 127, 127, 1448,
	909, 1592, 1593, 1594, 1595, 1682, 843, 408, 406, 1561,
	2365, 2691, 2249, 2684, 987, 1471, 2601, 987, 2249, 2599,
	2433, 127, 953, 127, 2385, 987, 2384, 647, 2249, 2597,
	2116, 647, 2249, 2473, 1701, 1494, 1497, 1498, 1499, 1495,
	1650, 1496, 1500, 2094, 1533, 2051, 2052, 2365, 2465, 2365,
	2381, 2365, 987, 647, 2365, 2364, 647, 2249, 2248, 2230,
	987, 1684, 987, 2432, 1384, 1630, 2184, 1811, 1811, 1383,
	1636, 1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1024, 2108, 2107, 1034, 1649, 1643, 2104, 2105,
	2104, 2103, 1710, 987, 1489, 987, 1811, 1656, 1661, 1660,
	1450, 1645, 1640, 1450, 987, 1166, 1165, 1143, 84, 2032,
	1360, 1143, 2046, 919, 1598, 1610, 958, 2649, 1387, 1663,
	1535, 2185, 1666, 2046, 2185, 1489, 465, 1515, 957, 1142,
	1450, 917, 916, 1488, 1681, 917, 1778, 1780, 2606, 2224,
	1136, 1136, 1136, 1136, 1136, 1624, 2117, 986, 2106, 1689,
	1687, 1688, 1706, 2046, 2060, 1609, 1505, 1934, 1803, 1825,
	1524, 1359, 1710, 1144, 1710, 1146, 1136, 1144, 1770, 1142,
	1779, 1702, 1489, 1012, 919, 1769, 1494, 1497, 1498, 1499,
	1495, 1662, 1496, 1500, 1297, 1623, 1361, 1784, 982, 81,
	1452, 1338, 1138, 1304, 1247, 1703, 1704, 1705, 1245, 1148,
	2621, 2598, 2059, 635, 1740, 2439, 127, 127, 127, 127,
	127, 1813, 2437, 1814, 2264, 1806, 1562, 2236, 127, 1591,
	2087, 1812, 127, 2051, 2052, 416, 127, 1587, 1388, 1829,
	923, 1607, 127, 1783, 1582, 1798, 1581, 1230, 906, 1600,
	1639, 2742, 2740, 1805, 2723, 996, 2115, 2054, 2032, 1881,
	1252, 1764, 80, 959, 1838, 1840, 647, 920, 915, 1696,
	2057, 1786, 1787, 1668, 1789, 81, 2056, 1791, 624, 1794,
	1757, 1758, 1759, 1790, 1795, 1785, 1792, 1797, 1788, 1686,
	1826, 1793, 1796, 2660, 1498, 1499, 1883, 503, 504, 2618,
	1963, 1371, 1867, 447, 1869, 1870, 1871, 1872, 1154, 2648,
	1816, 2227, 442, 1859, 1860, 1694, 1228, 1915, 1693, 1824,
	1866, 1229, 2355, 1828, 2321, 1000, 1001, 647, 2252, 2173,
	1873, 2172, 1908, 1841, 2092, 2091, 445, 1138, 1138, 1138,
	1138, 1138, 1833, 80, 1741, 2083, 2530, 2533, 2593, 2592,
	127, 445, 2427, 1138, 998, 2638, 2425, 2511, 1241, 1876,
	2510, 407, 1913, 1138, 2410, 2411, 445, 989, 1766, 1834,
	1837, 1878, 1868, 1907, 1161, 904, 888, 1085, 1984, 990,
	885, 884, 844, 2673, 2444, 2443, 445, 2222, 647, 1898,
	1363, 1364, 2650, 2331, 445, 1647, 2304, 1603, 1961, 1962,
	1251, 2586, 2429, 2305, 1911, 1884, 1000, 1001, 1692, 1635,
	96, 647, 647, 1354, 1968, 1232, 1691, 127, 2672, 1918,
	1920, 1384, 978, 979, 2671, 2670, 1383, 647, 2388, 870,
	500, 1912, 2641, 2640, 2590, 1933, 2534, 2452, 2037, 80,
	2448, 1938, 501, 84, 647, 2447, 575, 1944, 2334, 1955,
	1956, 1939, 1914, 1959, 1811, 1886, 1887, 1888, 2744, 2743,
	86, 2154, 1931, 2062, 1929, 1928, 1753, 1969, 2066, 2067,
	2068, 1970, 1750, 2038, 1667, 1979, 1980, 1978, 1281, 2033,
	2025, 1003, 1986, 1987, 2743, 1784, 2045, 2744, 2462, 1936,
	1947, 1952, 1356, 2090, 1994, 1995, 1996, 1997, 1357, 1999,
	2000, 2001, 635, 454, 456, 647, 55, 647, 1, 1974,
	2014, 1926, 2015, 2490, 52, 2036, 1657, 2071, 1321, 1932,
	2065, 1972, 2492, 19, 2491, 18, 2493, 20, 2069, 2284,
	647, 1783, 2494, 21, 2489, 15, 2283, 1968, 631, 2040,
	2061, 2290, 643, 2488, 14, 2085, 2122, 2055, 2086, 2125,
	647, 1896, 647, 2300, 647, 1239, 647, 2482, 10, 2505,
	34, 2063, 832, 2016, 2017, 2399, 2018, 2019, 2113, 2114,
	2020, 827, 442, 2082, 1608, 2084, 910, 2132, 2076, 2503,
	33, 2502, 32, 2029, 2030, 2075, 2591, 2095, 2096, 2529,
	2118, 2501, 28, 2531, 2099, 2500, 27, 2499, 26, 2497,
	23, 2102, 1596, 2424, 1597, 2496, 22, 2306, 127, 2498,
	24, 2097, 2487, 13, 2484, 12, 2483, 11, 2064, 2481,
	9, 2268, 1716, 1718, 2267, 1890, 445, 2134, 1889, 905,
	1302, 127, 445, 1728, 1729, 1730, 1731, 1937, 1940, 1619,
	1677, 2541, 960, 961, 1548, 2220, 127, 2162, 445, 1538,
	647, 445, 637, 92, 2139, 445, 445, 465, 445, 2027,
	1627, 853, 374, 2089, 1545, 1847, 2532, 907, 2142, 1846,
	2183, 1856, 1559, 1845, 647, 1844, 2186, 2527, 127, 647,
	1848, 1174, 2157, 1172, 1012, 2216, 647, 647, 1173, 2163,
	2156, 2177, 1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1024, 1171, 2070, 1034, 1176, 2140, 1175,
	1482, 378, 1156, 2573, 1229, 2192, 1004, 102, 56, 2323,
	1425, 1426, 1951, 450, 451, 97, 105, 2141, 380, 1042,
	1690, 1436, 1437, 1438, 1439, 2189, 1817, 622, 623, 615,
	984, 2553, 2603, 2191, 1449, 1451, 2622, 994, 2546, 1763,
	1101, 1456, 1472, 2194, 2195, 1784, 521, 2244, 2245, 2246,
	2196, 1801, 2339, 2231, 2548, 1375, 536, 535, 534, 127,
	531, 532, 2614, 2144, 1634, 80, 2148, 1366, 2255, 2242,
	2152, 2153, 1775, 2155, 1016, 2188, 647, 2223, 2109, 519,
	510, 2232, 1134, 647, 647, 647, 2201, 1127, 1646, 1493,
	1491, 1783, 647, 1490, 1253, 611, 2053, 2049, 1503, 2265,
	1133, 2243, 465, 70, 647, 868, 396, 2280, 2281, 2282,
	2217, 2457, 2247, 38, 455, 2257, 1826, 505, 25, 2256,
	17, 877, 16, 1670, 825, 2213, 2214, 2215, 42, 44,
	1885, 1604, 127, 1228, 2572, 1136, 2706, 891, 2730, 2625,
	31, 2179, 30, 2258, 2279, 2260, 29, 2495, 2317, 2318,
	508, 2504, 2486, 2485, 2693, 2692, 4, 975, 2319, 71,
	35, 633, 2, 0, 0, 0, 0, 0, 0, 2308,
	0, 445, 0, 2309, 0, 2037, 0, 2312, 2037, 2360,
	2327, 0, 2336, 2337, 2313, 0, 2332, 2320, 2307, 0,
	2335, 2062, 0, 0, 1968, 0, 0, 0, 2082, 647,
	0, 127, 0, 0, 2328, 0, 1985, 647, 0, 1988,
	1989, 1990, 2219, 2359, 1993, 0, 0, 2363, 0, 0,
	0, 1087, 0, 0, 0, 2357, 0, 1596, 0, 0,
	0, 2233, 2234, 0, 0, 2235, 0, 1641, 2237, 2341,
	2387, 0, 2389, 2356, 0, 0, 1087, 647, 2386, 0,
	0, 0, 2036, 647, 2380, 2036, 2367, 0, 127, 0,
	127, 0, 2372, 2378, 2379, 0, 647, 0, 2366, 2377,
	0, 465, 0, 0, 2362, 1510, 2382, 2368, 2383, 0,
	2390, 647, 2445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2412, 0, 0, 2402, 2311, 0, 1669, 0,
	0, 0, 0, 0, 1683, 0, 2417, 0, 0, 2037,
	0, 80, 2343, 2344, 2345, 2346, 2430, 0, 2420, 0,
	2350, 2438, 1138, 0, 2353, 2354, 2435, 2436, 0, 0,
	2449, 2442, 0, 0, 0, 0, 2450, 0, 0, 0,
	80, 0, 0, 647, 0, 2464, 0, 2451, 0, 0,
	0, 0, 0, 0, 631, 2475, 2463, 0, 0, 631,
	1157, 1708, 0, 2468, 0, 0, 1711, 0, 0, 2470,
	0, 1713, 1714, 2467, 0, 0, 1719, 1720, 1721, 1722,
	1723, 1724, 647, 1136, 1727, 0, 2036, 0, 0, 1732,
	1733, 1734, 1735, 0, 1737, 1738, 1739, 0, 0, 0,
	0, 1742, 1743, 1744, 1745, 0, 0, 0, 0, 0,
	1751, 0, 0, 1754, 1755, 0, 0, 0, 1760, 1761,
	0, 2537, 0, 2539, 1767, 0, 1768, 0, 1137, 1771,
	1772, 0, 1773, 1774, 2538, 0, 2551, 0, 2536, 0,
	0, 0, 0, 0, 2556, 0, 445, 2552, 0, 127,
	2568, 1799, 1800, 0, 647, 2561, 647, 0, 0, 0,
	80, 1784, 0, 0, 0, 0, 465, 0, 2535, 0,
	0, 0, 0, 0, 465, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 1563, 1564, 127,
	1569, 1570, 1571, 1572, 1573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 1583, 1584,
	1585, 0, 2577, 0, 1832, 0, 0, 2587, 2589, 612,
	508, 2607, 0, 636, 0, 647, 0, 814, 0, 0,
	0, 2596, 0, 0, 0, 0, 0, 0, 2617, 0,
	0, 826, 0, 0, 0, 0, 0, 2540, 0, 0,
	1231, 0, 840, 0, 0, 0, 2644, 2468, 2646, 0,
	647, 2632, 647, 0, 0, 493, 0, 0, 2653, 2652,
	1138, 0, 0, 0, 0, 2651, 0, 2647, 0, 80,
	0, 2669, 2645, 2643, 0, 80, 2165, 0, 0, 0,
	0, 0, 2667, 0, 0, 497, 0, 2662, 2659, 0,
	2676, 1984, 2661, 0, 0, 442, 0, 0, 0, 0,
	2682, 2687, 0, 2683, 2686, 647, 0, 80, 0, 2700,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 2547, 2550, 2697, 2703, 2696, 1087, 2674, 647, 2695,
	0, 2694, 0, 2717, 0, 2716, 2719, 1756, 0, 80,
	647, 2725, 80, 80, 2727, 0, 2705, 80, 1973, 445,
	1322, 0, 0, 0, 1981, 0, 647, 2724, 2676, 2737,
	0, 0, 2733, 1169, 1991, 1992, 647, 80, 442, 2741,
	80, 2739, 2749, 2736, 0, 1998, 2752, 0, 2754, 2002,
	2569, 2570, 2676, 0, 0, 0, 80, 0, 80, 2762,
	487, 2211, 80, 0, 2767, 0, 987, 0, 0, 0,
	0, 2676, 0, 2676, 0, 0, 80, 0, 0, 80,
	0, 2776, 643, 0, 0, 0, 80, 2039, 0, 0,
	80, 2676, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 2676, 0, 0, 0, 2676, 0, 0, 0, 0,
	0, 643, 1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1024, 0, 0, 1034, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 0, 2714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2550, 0, 1415, 0, 2080, 842, 0, 0, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	0, 2668, 1034, 0, 0, 0, 0, 125, 0, 0,
	393, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 912,
	631, 2755, 0, 0, 0, 0, 0, 0, 0, 464,
	0, 0, 0, 0, 0, 0, 0, 509, 1478, 1479,
	614, 632, 0, 0, 125, 0, 0, 0, 125, 0,
	0, 0, 0, 2210, 0, 1861, 1862, 1863, 1865, 0,
	0, 0, 125, 0, 0, 631, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 643,
	2161, 0, 643, 643, 0, 0, 0, 1832, 0, 0,
	2168, 2170, 0, 0, 0, 0, 2753, 0, 2187, 0,
	2161, 467, 468, 469, 470, 471, 475, 476, 480, 481,
	490, 489, 488, 491, 492, 495, 494, 496, 472, 473,
	474, 477, 478, 479, 482, 483, 486, 484, 485, 0,
	0, 0, 2197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 2207, 0, 0, 0, 0, 2212,
	1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1024, 0, 0, 1034, 0, 2225, 2226, 0, 2228,
	0, 1018, 2229, 1021, 0, 0, 0, 0, 0, 0,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 465, 1019, 1020,
	1017, 2209, 2241, 0, 0, 0, 0, 0, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	0, 0, 1034, 0, 0, 0, 1129, 0, 1139, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 2208, 0,
	0, 1655, 0, 0, 0, 0, 0, 0, 1417, 1422,
	1423, 0, 0, 0, 0, 1428, 1429, 1430, 0, 1432,
	0, 0, 1435, 1655, 0, 0, 1655, 1440, 1441, 1442,
	1443, 0, 1445, 1446, 1447, 0, 0, 0, 0, 0,
	1453, 1454, 1455, 0, 0, 0, 1461, 1464, 0, 1469,
	1470, 0, 643, 0, 0, 0, 0, 0, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	0, 0, 1034, 2161, 1480, 0, 1483, 1484, 2023, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 2161, 0, 1023, 1022, 1032, 1033, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1024, 0, 2022, 1034,
	0, 0, 2347, 2348, 2349, 0, 2351, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2369, 2370, 2371, 36, 37, 72, 39,
	40, 0, 0, 0, 0, 0, 465, 0, 465, 0,
	59, 0, 0, 0, 2080, 0, 78, 0, 0, 0,
	41, 63, 64, 0, 0, 631, 0, 60, 0, 2080,
	0, 464, 0, 1023, 1022, 1032, 1033, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1024, 0, 0, 1034, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 0, 81, 612,
	631, 0, 1254, 1023, 1022, 1032, 1033, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1024, 493, 643, 1034, 0, 1270,
	1271, 1272, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2453, 2454, 2455, 2456, 1830, 0, 0, 0,
	0, 0, 2460, 2461, 0, 497, 0, 0, 0, 0,
	1971, 0, 0, 0, 2198, 2199, 0, 2200, 0, 0,
	2202, 0, 2204, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 1882, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	0, 2021, 1034, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 125, 125,
	65, 0, 0, 1169, 0, 0, 0, 632, 0, 2250,
	2251, 0, 632, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 2080, 0, 2080, 0, 2557, 0, 0, 1350,
	487, 57, 58, 2562, 0, 0, 0, 1709, 0, 0,
	0, 643, 643, 0, 0, 1715, 0, 0, 66, 0,
	67, 0, 1372, 0, 1725, 1726, 0, 643, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 643,
	0, 0, 0, 389, 1982, 68, 1023, 1022, 1032, 1033,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024, 0, 0,
	1034, 0, 1762, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 75, 0, 53, 54, 61, 0, 62,
	2600, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 631, 0, 643, 0, 2044, 0, 1023,
	1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1024, 0, 0, 1034, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 1487, 370, 0,
	643, 0, 643, 2080, 643, 0, 2079, 379, 387, 388,
	0, 1517, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 1023, 1022, 1032, 1033, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1024, 0, 0, 1034, 0, 0, 0, 0,
	125, 0, 376, 125, 0, 377, 0, 0, 385, 386,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 125, 125, 125, 0, 0, 0, 0, 0, 79,
	0, 467, 468, 469, 470, 471, 475, 476, 480, 481,
	490, 489, 488, 491, 492, 495, 494, 496, 472, 473,
	474, 477, 478, 479, 482, 483, 486, 484, 485, 382,
	2147, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 1614, 1615, 0, 0, 0, 0,
	383, 1622, 0, 0, 2171, 0, 0, 0, 0, 2176,
	0, 0, 0, 0, 0, 0, 2180, 2181, 0, 0,
	0, 0, 0, 0, 2769, 2770, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 0, 0,
	125, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 381, 371, 372,
	0, 392, 0, 631, 1263, 373, 375, 0, 369, 391,
	390, 0, 0, 0, 0, 0, 2239, 0, 0, 0,
	0, 0, 0, 2239, 2239, 2239, 0, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2239, 0, 0, 1421, 1421, 1421,
	0, 384, 0, 1421, 1421, 1421, 1421, 1421, 1421, 0,
	0, 1421, 0, 0, 0, 0, 1421, 1421, 1421, 1421,
	0, 1421, 1421, 1421, 0, 0, 0, 0, 0, 1421,
	1421, 1421, 0, 0, 0, 1421, 1421, 0, 1421, 1421,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1421, 1421, 1421, 1421, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 125, 464, 0, 0,
	0, 125, 125, 0, 0, 125, 1520, 1263, 632, 643,
	0, 0, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 2361, 0, 0,
	41, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2079, 0, 125, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 125, 0, 125, 125, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2506, 0, 0, 2729, 2732, 2728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	1632, 125, 1906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 464, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	0, 0, 2466, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2508, 0, 2633, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 2079, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 1421, 0, 0, 0,
	0, 0, 0, 0, 1421, 0, 0, 0, 0, 631,
	0, 0, 0, 1421, 1421, 68, 0, 0, 0, 0,
	0, 0, 0, 1196, 1421, 0, 0, 0, 1421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	0, 0, 2509, 75, 0, 53, 54, 61, 0, 62,
	0, 1421, 0, 0, 0, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 125,
	125, 125, 125, 125, 0, 0, 0, 0, 0, 1197,
	0, 464, 0, 0, 0, 125, 0, 0, 0, 464,
	2602, 0, 2605, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2112, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 2138, 0, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2143, 0,
	0, 0, 0, 0, 0, 1197, 0, 0, 2239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	2175, 0, 0, 0, 0, 0, 2605, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 2689, 1210, 1213, 1214,
	1215, 1216, 1217, 1218, 0, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 0, 1198, 1199, 1200, 1201, 1177, 1181,
	1211, 1178, 1184, 1180, 1182, 1179, 0, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 0, 0, 0, 0, 0, 0, 0, 0,
	1421, 0, 1263, 1210, 1213, 1214, 1215, 1216, 1217, 1218,
	0, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 0,
	1198, 1199, 1200, 1201, 1177, 1181, 1211, 1178, 1184, 1180,
	1182, 1179, 0, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 0, 36, 1212, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 2266, 0, 632, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 41, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2506,
	1212, 81, 0, 0, 2778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2506, 0, 0, 0, 0,
	2774, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 125, 0, 0, 0, 493, 0,
	2507, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 43, 74, 46, 45, 48, 49, 77, 76, 1227,
	0, 0, 0, 47, 0, 0, 2507, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2508, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 0, 0,
	0, 66, 68, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 464, 487, 0, 0, 632, 0, 68, 2509,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2509, 75, 0, 53, 54,
	61, 36, 62, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2506, 0, 0,
	0, 0, 2763, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 2507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 464, 0, 464, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 468, 469, 470, 471, 475,
	476, 480, 481, 490, 489, 488, 491, 492, 495, 494,
	496, 472, 473, 474, 477, 478, 479, 482, 483, 486,
	484, 485, 0, 0, 0, 0, 57, 58, 0, 2508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2509, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 794, 770, 328,
	717, 797, 681, 703, 810, 706, 709, 751, 664, 730,
	255, 701, 665, 0, 685, 654, 694, 655, 682, 719,
	175, 680, 772, 733, 796, 212, 746, 0, 165, 220,
	218, 0, 125, 0, 262, 327, 795, 725, 0, 804,
	215, 0, 742, 805, 315, 239, 0, 0, 721, 781,
	728, 768, 716, 753, 673, 741, 799, 702, 748, 800,
	0, 0, 632, 0, 2571, 73, 0, 0, 0, 0,
	0, 0, 125, 668, 0, 745, 793, 697, 747, 750,
	652, 744, 0, 659, 666, 809, 788, 688, 689, 690,
	0, 0, 0, 0, 0, 0, 0, 720, 729, 762,
	713, 347, 266, 282, 303, 708, 274, 700, 0, 0,
	0, 0, 0, 0, 79, 0, 686, 0, 739, 0,
	0, 0, 667, 660, 0, 0, 718, 0, 0, 0,
	672, 651, 687, 764, 0, 649, 240, 144, 769, 787,
	715, 203, 358, 791, 712, 711, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 761, 297, 699,
	650, 773, 683, 695, 166, 691, 289, 259, 346, 0,
	736, 288, 216, 336, 757, 792, 345, 704, 775, 355,
	360, 0, 726, 670, 312, 176, 0, 133, 0, 273,
	171, 208, 714, 752, 684, 163, 759, 740, 780, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 2574,
	2575, 2576, 0, 0, 0, 0, 351, 710, 300, 299,
	705, 198, 767, 743, 656, 281, 755, 204, 132, 325,
	363, 149, 210, 330, 648, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 696, 756,
	766, 279, 302, 332, 151, 319, 692, 693, 698, 763,
	291, 774, 785, 798, 223, 178, 181, 192, 199, 749,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 657, 0, 317, 349, 365, 153,
	679, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 677, 678, 675, 0, 676, 731, 732, 801,
	802, 803, 765, 669, 0, 782, 783, 0, 0, 0,
	0, 0, 771, 789, 790, 754, 811, 707, 674, 658,
	661, 662, 663, 671, 722, 723, 735, 738, 778, 777,
	776, 779, 784, 807, 806, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 131, 140,
	214, 812, 280, 184, 350, 653, 173, 0, 724, 727,
	737, 760, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 758, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	786, 794, 770, 328, 717, 797, 681, 703, 810, 706,
	709, 751, 664, 730, 255, 701, 665, 0, 685, 654,
	694, 655, 682, 719, 175, 680, 772, 733, 796, 212,
	746, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	795, 725, 0, 804, 215, 0, 742, 805, 315, 239,
	0, 0, 721, 781, 728, 768, 716, 753, 673, 741,
	799, 702, 748, 800, 0, 0, 0, 0, 646, 0,
	1542, 1543, 0, 0, 0, 0, 0, 668, 0, 745,
	793, 697, 747, 750, 652, 744, 0, 659, 666, 809,
	788, 688, 689, 690, 1827, 0, 0, 0, 0, 0,
	0, 720, 729, 762, 713, 347, 266, 282, 303, 708,
	274, 700, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 739, 0, 0, 0, 667, 660, 0, 0,
	718, 0, 0, 0, 672, 651, 687, 764, 0, 649,
	240, 144, 769, 787, 715, 203, 358, 791, 712, 711,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 761, 297, 699, 650, 773, 683, 695, 166, 691,
	289, 259, 346, 0, 736, 288, 216, 336, 757, 792,
	345, 704, 775, 355, 360, 0, 726, 670, 312, 176,
	0, 133, 0, 273, 171, 208, 714, 752, 684, 163,
	759, 740, 780, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 710, 300, 299, 705, 198, 767, 743, 656, 281,
	755, 204, 132, 325, 363, 149, 210, 330, 648, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 696, 756, 766, 279, 302, 332, 151, 319,
	692, 693, 698, 763, 291, 774, 785, 798, 223, 178,
	181, 192, 199, 749, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 657, 0,
	317, 349, 365, 153, 679, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 677, 678, 675, 0,
	676, 731, 732, 801, 802, 803, 765, 669, 0, 782,
	783, 0, 0, 0, 0, 0, 771, 789, 790, 754,
	811, 707, 674, 658, 661, 662, 663, 671, 722, 723,
	735, 738, 778, 777, 776, 779, 784, 807, 806, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 131, 140, 214, 812, 280, 184, 350, 653,
	173, 0, 724, 727, 737, 760, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 758, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 786, 794, 770, 328, 717, 797,
	681, 703, 810, 706, 709, 751, 664, 730, 255, 701,
	665, 0, 685, 654, 694, 655, 682, 719, 175, 680,
	772, 733, 796, 212, 746, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 795, 725, 0, 804, 215, 0,
	742, 805, 315, 239, 0, 0, 721, 781, 728, 768,
	716, 753, 673, 741, 799, 702, 748, 800, 0, 0,
	0, 0, 646, 0, 1542, 1543, 0, 0, 0, 0,
	0, 668, 0, 745, 793, 697, 747, 750, 652, 744,
	0, 659, 666, 809, 788, 688, 689, 690, 0, 0,
	0, 0, 0, 0, 0, 720, 729, 762, 713, 347,
	266, 282, 303, 708, 274, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 739, 0, 0, 0,
	667, 660, 0, 0, 718, 0, 0, 0, 672, 651,
	687, 764, 0, 649, 240, 144, 769, 787, 715, 203,
	358, 791, 712, 711, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 761, 297, 699, 650, 773,
	683, 695, 166, 691, 289, 259, 346, 0, 736, 288,
	216, 336, 757, 792, 345, 704, 775, 355, 360, 0,
	726, 670, 312, 176, 0, 133, 0, 273, 171, 208,
	714, 752, 684, 163, 759, 740, 780, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 710, 300, 299, 705, 198,
	767, 743, 656, 281, 755, 204, 132, 325, 363, 149,
	210, 330, 648, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 696, 756, 766, 279,
	302, 332, 151, 319, 692, 693, 698, 763, 291, 774,
	785, 798, 223, 178, 181, 192, 199, 749, 286, 320,
	352, 0, 134, 326, 344, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 657, 0, 317, 349, 365, 153, 679, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	677, 678, 675, 0, 676, 731, 732, 801, 802, 803,
	765, 669, 0, 782, 783, 0, 0, 0, 0, 0,
	771, 789, 790, 754, 811, 707, 674, 658, 661, 662,
	663, 671, 722, 723, 735, 738, 778, 777, 776, 779,
	784, 807, 806, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 131, 140, 214, 812,
	280, 184, 350, 653, 173, 0, 724, 727, 737, 760,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 758, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 786, 794,
	2041, 328, 717, 797, 681, 703, 810, 706, 709, 751,
	664, 730, 255, 701, 665, 0, 685, 654, 694, 655,
	682, 719, 175, 680, 772, 733, 796, 212, 746, 0,
	165, 220, 218, 0, 0, 0, 262, 327, 795, 725,
	0, 804, 215, 0, 742, 805, 315, 239, 0, 0,
	721, 781, 728, 768, 716, 753, 673, 741, 799, 702,
	748, 800, 81, 0, 987, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 745, 793, 697,
	747, 750, 652, 744, 0, 659, 666, 809, 788, 688,
	689, 690, 0, 0, 0, 0, 0, 0, 0, 720,
	729, 762, 713, 347, 266, 282, 303, 708, 274, 700,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	739, 0, 0, 0, 667, 660, 0, 0, 718, 0,
	0, 0, 672, 651, 687, 764, 0, 649, 240, 144,
	769, 787, 715, 203, 358, 791, 712, 711, 276, 0,
	322, 191, 213, 148, 128, 142, 159, 190, 251, 761,
	297, 699, 650, 773, 683, 695, 166, 691, 289, 259,
	346, 0, 736, 288, 216, 336, 757, 792, 345, 704,
	775, 355, 360, 0, 726, 670, 312, 176, 0, 133,
	0, 273, 171, 208, 714, 752, 684, 163, 759, 740,
	780, 311, 334, 150, 329, 238, 244, 160, 162, 161,
	143, 306, 333, 155, 164, 316, 293, 323, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 710,
	300, 299, 705, 198, 767, 743, 656, 281, 755, 204,
	132, 325, 363, 149, 210, 330, 648, 185, 250, 168,
	260, 261, 182, 130, 278, 232, 233, 231, 234, 189,
	696, 756, 766, 279, 302, 332, 151, 319, 692, 693,
	698, 763, 291, 774, 785, 798, 223, 178, 181, 192,
	199, 749, 286, 320, 352, 0, 134, 326, 344, 156,
	301, 304, 361, 287, 137, 342, 321, 236, 205, 206,
	135, 0, 136, 284, 174, 188, 169, 254, 0, 187,
	275, 339, 340, 167, 364, 145, 354, 139, 146, 353,
	247, 0, 246, 356, 335, 343, 237, 225, 0, 138,
	341, 235, 224, 211, 180, 194, 271, 219, 272, 195,
	242, 241, 243, 221, 226, 0, 657, 0, 317, 349,
	365, 153, 679, 305, 331, 0, 0, 154, 186, 179,
	270, 245, 147, 197, 314, 209, 217, 283, 362, 258,
	290, 157, 348, 313, 677, 678, 675, 0, 676, 731,
	732, 801, 802, 803, 765, 669, 0, 782, 783, 0,
	0, 0, 0, 0, 771, 789, 790, 754, 811, 707,
	674, 658, 661, 662, 663, 671, 722, 723, 735, 738,
	778, 777, 776, 779, 784, 807, 806, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	131, 140, 214, 2042, 280, 184, 350, 653, 173, 0,
	724, 727, 737, 760, 129, 141, 152, 158, 172, 177,
	183, 193, 196, 200, 201, 202, 207, 222, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 277, 758, 285, 292, 294, 295,
	296, 298, 307, 308, 309, 310, 318, 324, 337, 338,
	357, 359, 786, 794, 770, 328, 717, 797, 681, 703,
	810, 706, 709, 751, 664, 730, 255, 701, 665, 0,
	685, 654, 694, 655, 682, 719, 175, 680, 772, 733,
	796, 212, 746, 0, 165, 220, 218, 0, 0, 0,
	262, 327, 795, 725, 0, 804, 215, 0, 742, 805,
	315, 239, 0, 0, 721, 781, 728, 768, 716, 753,
	673, 741, 799, 702, 748, 800, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	0, 745, 793, 697, 747, 750, 652, 744, 0, 659,
	666, 809, 788, 688, 689, 690, 0, 0, 0, 0,
	0, 0, 0, 720, 729, 762, 713, 347, 266, 282,
	303, 708, 274, 700, 0, 0, 0, 0, 0, 0,
	2338, 0, 686, 0, 739, 0, 0, 0, 667, 660,
	0, 0, 718, 0, 0, 0, 672, 651, 687, 764,
	0, 649, 240, 144, 769, 787, 715, 203, 358, 791,
	712, 711, 276, 0, 322, 191, 213, 148, 128, 142,
	159, 190, 251, 761, 297, 699, 650, 773, 683, 695,
	166, 691, 289, 259, 346, 0, 736, 288, 216, 336,
	757, 792, 345, 704, 775, 355, 360, 0, 726, 670,
	312, 176, 0, 133, 0, 273, 171, 208, 714, 752,
	684, 163, 759, 740, 780, 311, 334, 150, 329, 238,
	244, 160, 162, 161, 143, 306, 333, 155, 164, 316,
	293, 323, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 710, 300, 299, 705, 198, 767, 743,
	656, 281, 755, 204, 132, 325, 363, 149, 210, 330,
	648, 185, 250, 168, 260, 261, 182, 130, 278, 232,
	233, 231, 234, 189, 696, 756, 766, 279, 302, 332,
	151, 319, 692, 693, 698, 763, 291, 774, 785, 798,
	223, 178, 181, 192, 199, 749, 286, 320, 352, 0,
	134, 326, 344, 156, 301, 304, 361, 287, 137, 342,
	321, 236, 205, 206, 135, 0, 136, 284, 174, 188,
	169, 254, 0, 187, 275, 339, 340, 167, 364, 145,
	354, 139, 146, 353, 247, 0, 246, 356, 335, 343,
	237, 225, 0, 138, 341, 235, 224, 211, 180, 194,
	271, 219, 272, 195, 242, 241, 243, 221, 226, 0,
	657, 0, 317, 349, 365, 153, 679, 305, 331, 0,
	0, 154, 186, 179, 270, 245, 147, 197, 314, 209,
	217, 283, 362, 258, 290, 157, 348, 313, 677, 678,
	675, 0, 676, 731, 732, 801, 802, 803, 765, 669,
	0, 782, 783, 0, 0, 0, 0, 0, 771, 789,
	790, 754, 811, 707, 674, 658, 661, 662, 663, 671,
	722, 723, 735, 738, 778, 777, 776, 779, 784, 807,
	806, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 131, 140, 214, 812, 280, 184,
	350, 653, 173, 0, 724, 727, 737, 760, 129, 141,
	152, 158, 172, 177, 183, 193, 196, 200, 201, 202,
	207, 222, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 277, 758,
	285, 292, 294, 295, 296, 298, 307, 308, 309, 310,
	318, 324, 337, 338, 357, 359, 786, 794, 770, 328,
	717, 797, 681, 703, 810, 706, 709, 751, 664, 730,
	255, 701, 665, 0, 685, 654, 694, 655, 682, 719,
	175, 680, 772, 733, 796, 212, 746, 0, 165, 220,
	218, 0, 0, 0, 262, 327, 795, 725, 0, 804,
	215, 0, 742, 805, 315, 239, 0, 0, 721, 781,
	728, 768, 716, 753, 673, 741, 799, 702, 748, 800,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 745, 793, 697, 747, 750,
	652, 744, 0, 659, 666, 809, 788, 688, 689, 690,
	0, 0, 0, 0, 0, 0, 0, 720, 729, 762,
	713, 347, 266, 282, 303, 708, 274, 700, 0, 0,
	0, 0, 0, 0, 1977, 0, 686, 0, 739, 0,
	0, 0, 667, 660, 0, 0, 718, 0, 0, 0,
	672, 651, 687, 764, 0, 649, 240, 144, 769, 787,
	715, 203, 358, 791, 712, 711, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 761, 297, 699,
	650, 773, 683, 695, 166, 691, 289, 259, 346, 0,
	736, 288, 216, 336, 757, 792, 345, 704, 775, 355,
	360, 0, 726, 670, 312, 176, 0, 133, 0, 273,
	171, 208, 714, 752, 684, 163, 759, 740, 780, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 710, 300, 299,
	705, 198, 767, 743, 656, 281, 755, 204, 132, 325,
	363, 149, 210, 330, 648, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 696, 756,
	766, 279, 302, 332, 151, 319, 692, 693, 698, 763,
	291, 774, 785, 798, 223, 178, 181, 192, 199, 749,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 657, 0, 317, 349, 365, 153,
	679, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 677, 678, 675, 0, 676, 731, 732, 801,
	802, 803, 765, 669, 0, 782, 783, 0, 0, 0,
	0, 0, 771, 789, 790, 754, 811, 707, 674, 658,
	661, 662, 663, 671, 722, 723, 735, 738, 778, 777,
	776, 779, 784, 807, 806, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 131, 140,
	214, 812, 280, 184, 350, 653, 173, 0, 724, 727,
	737, 760, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 758, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	786, 794, 770, 328, 717, 797, 681, 703, 810, 706,
	709, 751, 664, 730, 255, 701, 665, 0, 685, 654,
	694, 655, 682, 719, 175, 680, 772, 733, 796, 212,
	746, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	795, 725, 0, 804, 215, 0, 742, 805, 315, 239,
	0, 0, 721, 781, 728, 768, 716, 753, 673, 741,
	799, 702, 748, 800, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 745,
	793, 697, 747, 750, 652, 744, 0, 659, 666, 809,
	788, 688, 689, 690, 0, 0, 0, 0, 0, 0,
	0, 720, 729, 762, 713, 347, 266, 282, 303, 708,
	274, 700, 0, 0, 0, 0, 0, 0, 1967, 0,
	686, 0, 739, 0, 0, 0, 667, 660, 0, 0,
	718, 0, 0, 0, 672, 651, 687, 764, 0, 649,
	240, 144, 769, 787, 715, 203, 358, 791, 712, 711,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 761, 297, 699, 650, 773, 683, 695, 166, 691,
	289, 259, 346, 0, 736, 288, 216, 336, 757, 792,
	345, 704, 775, 355, 360, 0, 726, 670, 312, 176,
	0, 133, 0, 273, 171, 208, 714, 752, 684, 163,
	759, 740, 780, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 710, 300, 299, 705, 198, 767, 743, 656, 281,
	755, 204, 132, 325, 363, 149, 210, 330, 648, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 696, 756, 766, 279, 302, 332, 151, 319,
	692, 693, 698, 763, 291, 774, 785, 798, 223, 178,
	181, 192, 199, 749, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 657, 0,
	317, 349, 365, 153, 679, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 677, 678, 675, 0,
	676, 731, 732, 801, 802, 803, 765, 669, 0, 782,
	783, 0, 0, 0, 0, 0, 771, 789, 790, 754,
	811, 707, 674, 658, 661, 662, 663, 671, 722, 723,
	735, 738, 778, 777, 776, 779, 784, 807, 806, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 131, 140, 214, 812, 280, 184, 350, 653,
	173, 0, 724, 727, 737, 760, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 758, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 786, 794, 770, 328, 717, 797,
	681, 703, 810, 706, 709, 751, 664, 730, 255, 701,
	665, 0, 685, 654, 694, 655, 682, 719, 175, 680,
	772, 733, 796, 212, 746, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 795, 725, 0, 804, 215, 0,
	742, 805, 315, 239, 0, 0, 721, 781, 728, 768,
	716, 753, 673, 741, 799, 702, 748, 800, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 745, 793, 697, 747, 750, 652, 744,
	0, 659, 666, 809, 788, 688, 689, 690, 0, 0,
	0, 0, 0, 0, 0, 720, 729, 762, 713, 347,
	266, 282, 303, 708, 274, 700, 0, 0, 0, 0,
	0, 0, 1521, 0, 686, 0, 739, 0, 0, 0,
	667, 660, 0, 0, 718, 0, 0, 0, 672, 651,
	687, 764, 0, 649, 240, 144, 769, 787, 715, 203,
	358, 791, 712, 711, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 761, 297, 699, 650, 773,
	683, 695, 166, 691, 289, 259, 346, 0, 736, 288,
	216, 336, 757, 792, 345, 704, 775, 355, 360, 0,
	726, 670, 312, 176, 0, 133, 0, 273, 171, 208,
	714, 752, 684, 163, 759, 740, 780, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 710, 300, 299, 705, 198,
	767, 743, 656, 281, 755, 204, 132, 325, 363, 149,
	210, 330, 648, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 696, 756, 766, 279,
	302, 332, 151, 319, 692, 693, 698, 763, 291, 774,
	785, 798, 223, 178, 181, 192, 199, 749, 286, 320,
	352, 0, 134, 326, 344, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 657, 0, 317, 349, 365, 153, 679, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	677, 678, 675, 0, 676, 731, 732, 801, 802, 803,
	765, 669, 0, 782, 783, 0, 0, 0, 0, 0,
	771, 789, 790, 754, 811, 707, 674, 658, 661, 662,
	663, 671, 722, 723, 735, 738, 778, 777, 776, 779,
	784, 807, 806, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 131, 140, 214, 812,
	280, 184, 350, 653, 173, 0, 724, 727, 737, 760,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 758, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 786, 794,
	770, 328, 717, 797, 681, 703, 810, 706, 709, 751,
	664, 730, 255, 701, 665, 0, 685, 654, 694, 655,
	682, 719, 175, 680, 772, 733, 796, 212, 746, 0,
	165, 220, 218, 0, 0, 0, 262, 327, 795, 725,
	0, 804, 215, 0, 742, 805, 315, 239, 0, 0,
	721, 781, 728, 768, 716, 753, 673, 741, 799, 702,
	748, 800, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 745, 793, 697,
	747, 750, 652, 744, 0, 659, 666, 809, 788, 688,
	689, 690, 0, 0, 0, 0, 0, 0, 0, 720,
	729, 762, 713, 347, 266, 282, 303, 708, 274, 700,
	0, 0, 0, 0, 0, 0, 1381, 0, 686, 0,
	739, 0, 0, 0, 667, 660, 0, 0, 718, 0,
	0, 0, 672, 651, 687, 764, 0, 649, 240, 144,
	769, 787, 715, 203, 358, 791, 712, 711, 276, 0,
	322, 191, 213, 148, 128, 142, 159, 190, 251, 761,
	297, 699, 650, 773, 683, 695, 166, 691, 289, 259,
	346, 0, 736, 288, 216, 336, 757, 792, 345, 704,
	775, 355, 360, 0, 726, 670, 312, 176, 0, 133,
	0, 273, 171, 208, 714, 752, 684, 163, 759, 740,
	780, 311, 334, 150, 329, 238, 244, 160, 162, 161,
	143, 306, 333, 155, 164, 316, 293, 323, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 710,
	300, 299, 705, 198, 767, 743, 656, 281, 755, 204,
	132, 325, 363, 149, 210, 330, 648, 185, 250, 168,
	260, 261, 182, 130, 278, 232, 233, 231, 234, 189,
	696, 756, 766, 279, 302, 332, 151, 319, 692, 693,
	698, 763, 291, 774, 785, 798, 223, 178, 181, 192,
	199, 749, 286, 320, 352, 0, 134, 326, 344, 156,
	301, 304, 361, 287, 137, 342, 321, 236, 205, 206,
	135, 0, 136, 284, 174, 188, 169, 254, 0, 187,
	275, 339, 340, 167, 364, 145, 354, 139, 146, 353,
	247, 0, 246, 356, 335, 343, 237, 225, 0, 138,
	341, 235, 224, 211, 180, 194, 271, 219, 272, 195,
	242, 241, 243, 221, 226, 0, 657, 0, 317, 349,
	365, 153, 679, 305, 331, 0, 0, 154, 186, 179,
	270, 245, 147, 197, 314, 209, 217, 283, 362, 258,
	290, 157, 348, 313, 677, 678, 675, 0, 676, 731,
	732, 801, 802, 803, 765, 669, 0, 782, 783, 0,
	0, 0, 0, 0, 771, 789, 790, 754, 811, 707,
	674, 658, 661, 662, 663, 671, 722, 723, 735, 738,
	778, 777, 776, 779, 784, 807, 806, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	131, 140, 214, 812, 280, 184, 350, 653, 173, 0,
	724, 727, 737, 760, 129, 141, 152, 158, 172, 177,
	183, 193, 196, 200, 201, 202, 207, 222, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 277, 758, 285, 292, 294, 295,
	296, 298, 307, 308, 309, 310, 318, 324, 337, 338,
	357, 359, 786, 794, 770, 328, 717, 797, 681, 703,
	810, 706, 709, 751, 664, 730, 255, 701, 665, 0,
	685, 654, 694, 655, 682, 719, 175, 680, 772, 733,
	796, 212, 746, 0, 165, 220, 218, 0, 0, 0,
	262, 327, 795, 725, 0, 804, 215, 0, 742, 805,
	315, 239, 0, 0, 721, 781, 728, 768, 716, 753,
	673, 741, 799, 702, 748, 800, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	0, 745, 793, 697, 747, 750, 652, 744, 0, 659,
	666, 809, 788, 688, 689, 690, 0, 0, 0, 0,
	0, 0, 0, 720, 729, 762, 713, 347, 266, 282,
	303, 708, 274, 700, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 739, 0, 0, 0, 667, 660,
	0, 0, 718, 0, 0, 0, 672, 651, 687, 764,
	0, 649, 240, 144, 769, 787, 715, 203, 358, 791,
	712, 711, 276, 0, 322, 191, 213, 148, 128, 142,
	159, 190, 251, 761, 297, 699, 650, 773, 683, 695,
	166, 691, 289, 259, 346, 0, 736, 288, 216, 336,
	757, 792, 345, 704, 775, 355, 360, 0, 726, 670,
	312, 176, 0, 133, 0, 273, 171, 208, 714, 752,
	684, 163, 759, 740, 780, 311, 334, 150, 329, 238,
	244, 160, 162, 161, 143, 306, 333, 155, 164, 316,
	293, 323, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 710, 300, 299, 705, 198, 767, 743,
	656, 281, 755, 204, 132, 325, 363, 149, 210, 330,
	648, 185, 250, 168, 260, 261, 182, 130, 278, 232,
	233, 231, 234, 189, 696, 756, 766, 279, 302, 332,
	151, 319, 692, 693, 698, 763, 291, 774, 785, 798,
	223, 178, 181, 192, 199, 749, 286, 320, 352, 0,
	134, 326, 344, 156, 301, 304, 361, 287, 137, 342,
	321, 236, 205, 206, 135, 0, 136, 284, 174, 188,
	169, 254, 0, 187, 275, 339, 340, 167, 364, 145,
	354, 139, 146, 353, 247, 0, 246, 356, 335, 343,
	237, 225, 0, 138, 341, 235, 224, 211, 180, 194,
	271, 219, 272, 195, 242, 241, 243, 221, 226, 0,
	657, 0, 317, 349, 365, 153, 679, 305, 331, 0,
	0, 154, 186, 179, 270, 245, 147, 197, 314, 209,
	217, 283, 362, 258, 290, 157, 348, 313, 677, 678,
	675, 0, 676, 731, 732, 801, 802, 803, 765, 669,
	0, 782, 783, 0, 0, 0, 0, 0, 771, 789,
	790, 754, 811, 707, 674, 658, 661, 662, 663, 671,
	722, 723, 735, 738, 778, 777, 776, 779, 784, 807,
	806, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 131, 140, 214, 812, 280, 184,
	350, 653, 173, 0, 724, 727, 737, 760, 129, 141,
	152, 158, 172, 177, 183, 193, 196, 200, 201, 202,
	207, 222, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 277, 758,
	285, 292, 294, 295, 296, 298, 307, 308, 309, 310,
	318, 324, 337, 338, 357, 359, 786, 794, 770, 328,
	717, 797, 681, 703, 810, 706, 709, 751, 664, 730,
	255, 701, 665, 0, 685, 654, 694, 655, 682, 719,
	175, 680, 772, 733, 796, 212, 746, 0, 165, 220,
	218, 0, 0, 0, 262, 327, 795, 725, 0, 804,
	215, 0, 742, 805, 315, 239, 0, 0, 721, 781,
	728, 768, 716, 753, 673, 741, 799, 702, 748, 800,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 745, 793, 697, 747, 750,
	652, 744, 0, 659, 666, 809, 788, 688, 689, 690,
	0, 0, 0, 0, 0, 0, 0, 720, 729, 762,
	713, 347, 266, 282, 303, 708, 274, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 0, 739, 0,
	0, 0, 667, 660, 0, 0, 718, 0, 0, 0,
	672, 651, 687, 764, 0, 649, 240, 144, 769, 787,
	715, 203, 358, 791, 712, 711, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 761, 297, 699,
	650, 773, 683, 695, 166, 691, 289, 259, 346, 0,
	736, 288, 216, 336, 757, 792, 345, 704, 775, 355,
	360, 0, 726, 670, 312, 176, 0, 133, 0, 273,
	171, 208, 714, 752, 684, 163, 759, 740, 780, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 710, 300, 299,
	705, 198, 767, 743, 656, 281, 755, 204, 132, 325,
	363, 149, 210, 330, 648, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 696, 756,
	766, 279, 302, 332, 151, 319, 692, 693, 698, 763,
	291, 774, 785, 798, 223, 178, 181, 192, 199, 749,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 657, 0, 317, 349, 365, 153,
	679, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 677, 678, 675, 0, 676, 731, 732, 801,
	802, 803, 765, 669, 0, 782, 783, 0, 0, 0,
	0, 0, 771, 789, 790, 754, 811, 707, 674, 658,
	661, 662, 663, 671, 722, 723, 735, 738, 778, 777,
	776, 779, 784, 807, 806, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 734, 131, 140,
	214, 812, 280, 184, 350, 653, 173, 0, 724, 727,
	737, 760, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 758, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	786, 794, 770, 328, 717, 797, 681, 703, 810, 706,
	709, 751, 664, 730, 255, 701, 665, 0, 685, 654,
	694, 655, 682, 719, 175, 680, 772, 733, 796, 212,
	746, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	1553, 1557, 0, 804, 215, 0, 742, 805, 315, 239,
	0, 0, 721, 781, 728, 768, 716, 753, 673, 741,
	799, 702, 748, 800, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 745,
	793, 697, 747, 750, 652, 744, 0, 659, 666, 809,
	788, 688, 689, 690, 0, 0, 0, 0, 0, 0,
	0, 720, 729, 762, 713, 347, 266, 282, 303, 708,
	274, 700, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 0, 739, 0, 0, 0, 667, 660, 0, 0,
	718, 0, 0, 0, 672, 651, 687, 764, 0, 649,
	240, 144, 769, 787, 1556, 203, 358, 791, 712, 711,
	1551, 0, 1552, 191, 213, 645, 128, 142, 1549, 1555,
	251, 761, 297, 699, 650, 773, 683, 695, 166, 691,
	289, 259, 346, 0, 736, 288, 216, 336, 757, 792,
	345, 704, 775, 355, 360, 0, 726, 670, 312, 176,
	0, 133, 0, 273, 171, 208, 714, 752, 684, 163,
	759, 740, 780, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 710, 300, 299, 705, 198, 767, 743, 656, 281,
	755, 204, 132, 325, 363, 149, 210, 330, 648, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 696, 756, 766, 279, 302, 332, 151, 319,
	692, 693, 698, 763, 291, 774, 785, 798, 223, 178,
	181, 192, 199, 749, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 657, 0,
	317, 349, 365, 153, 679, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 677, 678, 675, 0,
	676, 731, 732, 801, 802, 803, 765, 669, 0, 782,
	783, 0, 0, 0, 0, 0, 771, 789, 790, 754,
	811, 707, 674, 658, 661, 662, 663, 671, 722, 723,
	735, 738, 778, 777, 776, 779, 784, 807, 806, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 131, 140, 214, 812, 280, 184, 350, 653,
	173, 0, 724, 727, 737, 760, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 758, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 786, 794, 770, 328, 717, 797,
	681, 703, 810, 706, 709, 751, 664, 730, 255, 701,
	665, 0, 685, 654, 694, 655, 682, 719, 175, 680,
	772, 733, 796, 212, 746, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 795, 725, 0, 804, 215, 0,
	742, 805, 315, 239, 0, 0, 721, 781, 728, 768,
	716, 753, 673, 741, 799, 702, 748, 800, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 745, 793, 697, 747, 750, 652, 744,
	0, 659, 666, 809, 788, 688, 689, 690, 0, 0,
	0, 0, 0, 0, 0, 720, 729, 762, 713, 347,
	266, 282, 303, 708, 274, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 739, 0, 0, 0,
	667, 660, 0, 0, 718, 0, 0, 0, 672, 651,
	687, 764, 0, 649, 240, 144, 769, 787, 715, 203,
	358, 791, 712, 711, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 761, 297, 699, 650, 773,
	683, 695, 166, 691, 289, 259, 346, 0, 736, 288,
	216, 336, 757, 792, 345, 704, 775, 355, 360, 0,
	726, 670, 312, 176, 0, 133, 0, 273, 171, 208,
	714, 752, 684, 163, 759, 740, 780, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 710, 300, 299, 705, 198,
	767, 743, 656, 281, 755, 204, 132, 325, 363, 149,
	210, 330, 648, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 696, 756, 766, 279,
	302, 332, 151, 319, 692, 693, 698, 763, 291, 774,
	785, 798, 223, 178, 181, 192, 199, 749, 286, 320,
	352, 0, 134, 326, 344, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 657, 0, 317, 349, 365, 153, 679, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	677, 678, 675, 0, 676, 731, 732, 801, 802, 803,
	765, 669, 0, 782, 783, 0, 0, 0, 0, 0,
	771, 789, 790, 754, 811, 707, 674, 658, 661, 662,
	663, 671, 722, 723, 735, 738, 778, 777, 776, 779,
	784, 807, 806, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 131, 140, 214, 812,
	280, 184, 350, 653, 173, 0, 724, 727, 737, 760,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 758, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 786, 794,
	770, 328, 717, 797, 681, 703, 810, 706, 709, 751,
	664, 730, 255, 701, 665, 0, 685, 654, 694, 655,
	682, 719, 175, 680, 772, 733, 796, 212, 746, 0,
	165, 220, 218, 0, 0, 0, 262, 327, 795, 725,
	0, 804, 215, 0, 742, 805, 315, 239, 0, 0,
	721, 781, 728, 768, 716, 753, 673, 741, 799, 702,
	748, 800, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 745, 793, 697,
	747, 750, 652, 744, 0, 659, 666, 809, 788, 688,
	689, 690, 0, 0, 0, 0, 0, 0, 0, 720,
	729, 762, 713, 347, 266, 282, 303, 708, 274, 700,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 0,
	739, 0, 0, 0, 667, 660, 0, 0, 718, 0,
	0, 0, 672, 651, 687, 764, 0, 649, 240, 144,
	769, 787, 715, 203, 358, 791, 712, 711, 276, 0,
	322, 191, 213, 645, 128, 142, 641, 190, 251, 761,
	297, 699, 650, 773, 683, 695, 166, 691, 289, 259,
	346, 0, 736, 288, 216, 336, 757, 792, 345, 704,
	775, 355, 360, 0, 726, 670, 312, 176, 0, 133,
	0, 273, 171, 208, 714, 752, 684, 163, 759, 740,
	780, 311, 334, 150, 329, 238, 244, 160, 162, 161,
	143, 306, 333, 155, 164, 316, 293, 323, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 710,
	300, 299, 705, 198, 767, 743, 656, 281, 755, 204,
	132, 325, 363, 149, 210, 330, 648, 185, 250, 168,
	260, 261, 182, 130, 278, 232, 233, 231, 234, 189,
	696, 756, 766, 279, 302, 332, 151, 319, 692, 693,
	698, 763, 291, 774, 785, 798, 223, 178, 181, 192,
	199, 749, 286, 320, 352, 0, 134, 326, 344, 156,
	301, 304, 361, 287, 137, 342, 321, 236, 205, 206,
	135, 0, 136, 284, 174, 188, 169, 254, 0, 187,
	275, 339, 340, 167, 364, 145, 354, 139, 146, 353,
	247, 0, 246, 356, 335, 343, 237, 225, 0, 138,
	341, 235, 224, 211, 180, 194, 271, 219, 272, 195,
	242, 241, 243, 221, 226, 0, 657, 0, 317, 349,
	365, 153, 679, 305, 331, 0, 0, 154, 186, 179,
	270, 245, 147, 197, 314, 209, 217, 283, 362, 258,
	290, 157, 348, 313, 677, 678, 675, 0, 676, 731,
	732, 801, 802, 803, 765, 669, 0, 782, 783, 0,
	0, 0, 0, 0, 771, 789, 790, 754, 811, 707,
	674, 658, 661, 662, 663, 671, 722, 723, 735, 738,
	778, 777, 776, 779, 784, 807, 806, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 734,
	131, 140, 214, 812, 280, 184, 350, 653, 173, 0,
	724, 727, 737, 760, 129, 141, 152, 158, 172, 177,
	183, 193, 196, 200, 201, 202, 207, 222, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 277, 758, 285, 292, 294, 295,
	296, 298, 307, 308, 309, 310, 318, 324, 337, 338,
	357, 359, 786, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 175, 513, 0, 0, 0, 212,
	0, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	0, 0, 0, 591, 215, 0, 0, 493, 315, 239,
	0, 0, 0, 0, 578, 579, 0, 0, 0, 0,
	0, 0, 1531, 0, 81, 0, 0, 0, 514, 538,
	537, 540, 541, 542, 543, 0, 0, 497, 539, 544,
	573, 574, 1532, 0, 0, 511, 529, 0, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 266, 282, 303, 0,
	274, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 605, 0, 528, 0, 0, 523, 524, 525,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 144, 581, 0, 0, 203, 358, 0, 0, 603,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 0, 297, 588, 0, 0, 0, 0, 166, 0,
	289, 259, 346, 580, 0, 288, 216, 336, 0, 0,
	345, 0, 487, 355, 360, 0, 0, 0, 312, 176,
	0, 133, 0, 273, 171, 208, 0, 0, 0, 163,
	0, 0, 0, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 0, 300, 299, 0, 198, 0, 0, 0, 281,
	0, 204, 132, 325, 363, 149, 210, 330, 0, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 0, 0, 0, 279, 302, 332, 151, 319,
	0, 0, 0, 0, 291, 0, 0, 0, 223, 178,
	181, 192, 199, 0, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 0, 0,
	317, 349, 365, 153, 0, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 592, 604, 598, 600,
	599, 596, 597, 595, 594, 593, 606, 582, 583, 584,
	585, 586, 0, 0, 0, 589, 0, 601, 602, 0,
	0, 0, 0, 545, 546, 547, 548, 549, 553, 554,
	558, 559, 567, 566, 565, 568, 569, 571, 570, 572,
	550, 551, 552, 555, 556, 557, 560, 561, 564, 562,
	563, 587, 131, 140, 214, 0, 280, 184, 350, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 0, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 36, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 516, 0, 0, 0, 175, 513, 0, 0,
	0, 212, 0, 0, 165, 220, 218, 0, 0, 0,
	262, 327, 0, 0, 0, 591, 215, 0, 0, 493,
	315, 239, 0, 0, 0, 0, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	514, 538, 537, 540, 541, 542, 543, 0, 0, 497,
	539, 544, 573, 574, 0, 0, 0, 511, 529, 0,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 266, 282,
	303, 0, 274, 0, 0, 0, 0, 0, 526, 527,
	0, 0, 0, 0, 605, 0, 528, 0, 0, 523,
	524, 525, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 144, 581, 0, 0, 203, 358, 0,
	0, 603, 276, 0, 322, 191, 213, 148, 128, 142,
	159, 190, 251, 0, 297, 588, 0, 0, 0, 0,
	166, 0, 289, 259, 346, 580, 0, 288, 216, 336,
	0, 0, 345, 0, 487, 355, 360, 0, 0, 0,
	312, 176, 0, 133, 0, 273, 171, 208, 0, 0,
	0, 163, 0, 0, 0, 311, 334, 150, 329, 238,
	244, 160, 162, 161, 143, 306, 333, 155, 164, 316,
	293, 323, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 0, 300, 299, 0, 198, 0, 0,
	0, 281, 0, 204, 132, 325, 363, 149, 210, 330,
	0, 185, 250, 168, 260, 261, 182, 130, 278, 232,
	233, 231, 234, 189, 0, 0, 0, 279, 302, 332,
	151, 319, 0, 0, 0, 0, 291, 0, 0, 0,
	223, 178, 181, 192, 199, 0, 286, 320, 352, 0,
	134, 326, 344, 156, 301, 304, 361, 287, 137, 342,
	321, 236, 205, 206, 135, 0, 136, 284, 174, 188,
	169, 254, 0, 187, 275, 339, 340, 167, 364, 145,
	354, 139, 146, 353, 247, 0, 246, 356, 335, 343,
	237, 225, 0, 138, 341, 235, 224, 211, 180, 194,
	271, 219, 272, 195, 242, 241, 243, 221, 226, 0,
	0, 0, 317, 349, 365, 153, 0, 305, 331, 0,
	0, 154, 186, 179, 270, 245, 147, 197, 314, 209,
	217, 283, 362, 258, 290, 157, 348, 313, 592, 604,
	598, 600, 599, 596, 597, 595, 594, 593, 606, 582,
	583, 584, 585, 586, 0, 0, 0, 589, 0, 601,
	602, 0, 0, 0, 0, 545, 546, 547, 548, 549,
	553, 554, 558, 559, 567, 566, 565, 568, 569, 571,
	570, 572, 550, 551, 552, 555, 556, 557, 560, 561,
	564, 562, 563, 587, 131, 140, 214, 79, 280, 184,
	350, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 183, 193, 196, 200, 201, 202,
	207, 222, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 277, 0,
	285, 292, 294, 295, 296, 298, 307, 308, 309, 310,
	318, 324, 337, 338, 357, 359, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 175, 513, 0,
	0, 0, 212, 0, 0, 165, 220, 218, 0, 0,
	0, 262, 327, 0, 0, 0, 591, 215, 0, 0,
	493, 315, 239, 0, 0, 0, 0, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 514, 538, 537, 540, 541, 542, 543, 0, 0,
	497, 539, 544, 573, 574, 0, 0, 0, 511, 529,
	0, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 266,
	282, 303, 0, 274, 0, 0, 0, 0, 0, 526,
	527, 507, 0, 0, 0, 605, 0, 528, 0, 0,
	523, 524, 525, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 144, 581, 0, 0, 203, 358,
	0, 0, 603, 276, 0, 322, 191, 213, 148, 128,
	142, 159, 190, 251, 0, 297, 588, 0, 0, 0,
	0, 166, 0, 289, 259, 346, 580, 0, 288, 216,
	336, 0, 0, 345, 0, 487, 355, 360, 0, 0,
	0, 312, 176, 0, 133, 0, 273, 171, 208, 0,
	0, 0, 163, 0, 0, 0, 311, 334, 150, 329,
	238, 244, 160, 162, 161, 143, 306, 333, 155, 164,
	316, 293, 323, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 0, 300, 299, 0, 198, 0,
	0, 0, 281, 0, 204, 132, 325, 363, 149, 210,
	330, 0, 185, 250, 168, 260, 261, 182, 130, 278,
	232, 233, 231, 234, 189, 0, 0, 0, 279, 302,
	332, 151, 319, 0, 0, 0, 0, 291, 0, 0,
	0, 223, 178, 181, 192, 199, 0, 286, 320, 352,
	0, 134, 326, 344, 156, 301, 304, 361, 287, 137,
	342, 321, 236, 205, 206, 135, 0, 136, 284, 174,
	188, 169, 254, 0, 187, 275, 339, 340, 167, 364,
	145, 354, 139, 146, 353, 247, 0, 246, 356, 335,
	343, 237, 225, 0, 138, 341, 235, 224, 211, 180,
	194, 271, 219, 272, 195, 242, 241, 243, 221, 226,
	0, 0, 0, 317, 349, 365, 153, 0, 305, 331,
	0, 0, 154, 186, 179, 270, 245, 147, 197, 314,
	209, 217, 283, 362, 258, 290, 157, 348, 313, 592,
	604, 598, 600, 599, 596, 597, 595, 594, 593, 606,
	582, 583, 584, 585, 586, 0, 0, 0, 589, 0,
	601, 602, 0, 0, 0, 0, 545, 546, 547, 548,
	549, 553, 554, 558, 559, 567, 566, 565, 568, 569,
	571, 570, 572, 550, 551, 552, 555, 556, 557, 560,
	561, 564, 562, 563, 587, 131, 140, 214, 0, 280,
	184, 350, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 183, 193, 196, 200, 201,
	202, 207, 222, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 277,
	0, 285, 292, 294, 295, 296, 298, 307, 308, 309,
	310, 318, 324, 337, 338, 357, 359, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 175, 513,
	0, 0, 0, 212, 0, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 0, 0, 0, 591, 215, 0,
	0, 493, 315, 239, 0, 0, 0, 0, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	987, 0, 514, 538, 537, 540, 541, 542, 543, 0,
	0, 497, 539, 544, 573, 574, 0, 0, 0, 511,
	529, 0, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	266, 282, 303, 0, 274, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 605, 0, 528, 0,
	0, 523, 524, 525, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 144, 581, 0, 0, 203,
	358, 0, 0, 603, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 0, 297, 588, 0, 0,
	0, 0, 166, 0, 289, 259, 346, 580, 0, 288,
	216, 336, 0, 0, 345, 0, 487, 355, 360, 0,
	0, 0, 312, 176, 0, 133, 0, 273, 171, 208,
	0, 0, 0, 163, 0, 0, 0, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 0, 300, 299, 0, 198,
	0, 0, 0, 281, 0, 204, 132, 325, 363, 149,
	210, 330, 0, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 0, 0, 0, 279,
	302, 332, 151, 319, 0, 0, 0, 0, 291, 0,
	0, 0, 223, 178, 181, 192, 199, 0, 286, 320,
	352, 0, 134, 326, 344, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 0, 0, 317, 349, 365, 153, 0, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	592, 604, 598, 600, 599, 596, 597, 595, 594, 593,
	606, 582, 583, 584, 585, 586, 0, 0, 0, 589,
	0, 601, 602, 0, 0, 0, 0, 545, 546, 547,
	548, 549, 553, 554, 558, 559, 567, 566, 565, 568,
	569, 571, 570, 572, 550, 551, 552, 555, 556, 557,
	560, 561, 564, 562, 563, 587, 131, 140, 214, 0,
	280, 184, 350, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 0, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 175,
	513, 0, 0, 0, 212, 0, 0, 165, 220, 218,
	0, 0, 0, 262, 327, 0, 0, 0, 591, 215,
	0, 0, 493, 315, 239, 0, 0, 0, 0, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 514, 538, 537, 540, 541, 542, 543,
	0, 0, 497, 539, 544, 573, 574, 0, 0, 0,
	511, 529, 0, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 266, 282, 303, 0, 274, 0, 0, 0, 0,
	0, 526, 527, 1419, 0, 0, 0, 605, 0, 528,
	0, 0, 523, 524, 525, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 144, 581, 0, 0,
	203, 358, 0, 0, 603, 276, 0, 322, 191, 213,
	148, 128, 142, 159, 190, 251, 0, 297, 588, 0,
	0, 0, 0, 166, 0, 289, 259, 346, 580, 0,
	288, 216, 336, 0, 0, 345, 0, 487, 355, 360,
	0, 0, 0, 312, 176, 0, 133, 0, 273, 171,
	208, 0, 0, 0, 163, 0, 0, 0, 311, 334,
	150, 329, 238, 244, 160, 162, 161, 143, 306, 333,
	155, 164, 316, 293, 323, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 0, 300, 299, 0,
	198, 0, 0, 0, 281, 0, 204, 132, 325, 363,
	149, 210, 330, 0, 185, 250, 168, 260, 261, 182,
	130, 278, 232, 233, 231, 234, 189, 0, 0, 0,
	279, 302, 332, 151, 319, 0, 0, 0, 0, 291,
	0, 0, 0, 223, 178, 181, 192, 199, 0, 286,
	320, 352, 0, 134, 326, 344, 156, 301, 304, 361,
	287, 137, 342, 321, 236, 205, 206, 135, 0, 136,
	284, 174, 188, 169, 254, 0, 187, 275, 339, 340,
	167, 364, 145, 354, 139, 146, 353, 247, 0, 246,
	356, 335, 343, 237, 225, 0, 138, 341, 235, 224,
	211, 180, 194, 271, 219, 272, 195, 242, 241, 243,
	221, 226, 0, 0, 0, 317, 349, 365, 153, 0,
	305, 331, 0, 0, 154, 186, 179, 270, 245, 147,
	197, 314, 209, 217, 283, 362, 258, 290, 157, 348,
	313, 592, 604, 598, 600, 599, 596, 597, 595, 594,
	593, 606, 582, 583, 584, 585, 586, 0, 0, 0,
	589, 0, 601, 602, 0, 0, 0, 0, 545, 546,
	547, 548, 549, 553, 554, 558, 559, 567, 566, 565,
	568, 569, 571, 570, 572, 550, 551, 552, 555, 556,
	557, 560, 561, 564, 562, 563, 587, 131, 140, 214,
	0, 280, 184, 350, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 183, 193, 196,
	200, 201, 202, 207, 222, 227, 228, 229, 230, 248,
	249, 252, 253, 256, 257, 263, 264, 265, 267, 268,
	269, 277, 0, 285, 292, 294, 295, 296, 298, 307,
	308, 309, 310, 318, 324, 337, 338, 357, 359, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	175, 513, 0, 0, 0, 212, 0, 0, 165, 220,
	218, 0, 0, 0, 262, 327, 0, 0, 0, 591,
	215, 0, 0, 493, 315, 239, 0, 0, 0, 0,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 514, 538, 1463, 540, 541, 542,
	543, 0, 0, 497, 539, 544, 573, 574, 0, 0,
	0, 511, 529, 0, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 266, 282, 303, 0, 274, 0, 0, 0,
	0, 0, 526, 527, 1419, 0, 0, 0, 605, 0,
	528, 0, 0, 523, 524, 525, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 144, 581, 0,
	0, 203, 358, 0, 0, 603, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 0, 297, 588,
	0, 0, 0, 0, 166, 0, 289, 259, 346, 580,
	0, 288, 216, 336, 0, 0, 345, 0, 487, 355,
	360, 0, 0, 0, 312, 176, 0, 133, 0, 273,
	171, 208, 0, 0, 0, 163, 0, 0, 0, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 0, 300, 299,
	0, 198, 0, 0, 0, 281, 0, 204, 132, 325,
	363, 149, 210, 330, 0, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 0, 0,
	0, 279, 302, 332, 151, 319, 0, 0, 0, 0,
	291, 0, 0, 0, 223, 178, 181, 192, 199, 0,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 0, 0, 317, 349, 365, 153,
	0, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 592, 604, 598, 600, 599, 596, 597, 595,
	594, 593, 606, 582, 583, 584, 585, 586, 0, 0,
	0, 589, 0, 601, 602, 0, 0, 0, 0, 545,
	546, 547, 548, 549, 553, 554, 558, 559, 567, 566,
	565, 568, 569, 571, 570, 572, 550, 551, 552, 555,
	556, 557, 560, 561, 564, 562, 563, 587, 131, 140,
	214, 0, 280, 184, 350, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 0, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 175, 513, 0, 0, 0, 212, 0, 0, 165,
	220, 218, 0, 0, 0, 262, 327, 0, 0, 0,
	591, 215, 0, 0, 493, 315, 239, 0, 0, 0,
	0, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 514, 538, 1460, 540, 541,
	542, 543, 0, 0, 497, 539, 544, 573, 574, 0,
	0, 0, 511, 529, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 266, 282, 303, 0, 274, 0, 0,
	0, 0, 0, 526, 527, 1419, 0, 0, 0, 605,
	0, 528, 0, 0, 523, 524, 525, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 144, 581,
	0, 0, 203, 358, 0, 0, 603, 276, 0, 322,
	191, 213, 148, 128, 142, 159, 190, 251, 0, 297,
	588, 0, 0, 0, 0, 166, 0, 289, 259, 346,
	580, 0, 288, 216, 336, 0, 0, 345, 0, 487,
	355, 360, 0, 0, 0, 312, 176, 0, 133, 0,
	273, 171, 208, 0, 0, 0, 163, 0, 0, 0,
	311, 334, 150, 329, 238, 244, 160, 162, 161, 143,
	306, 333, 155, 164, 316, 293, 323, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 0, 300,
	299, 0, 198, 0, 0, 0, 281, 0, 204, 132,
	325, 363, 149, 210, 330, 0, 185, 250, 168, 260,
	261, 182, 130, 278, 232, 233, 231, 234, 189, 0,
	0, 0, 279, 302, 332, 151, 319, 0, 0, 0,
	0, 291, 0, 0, 0, 223, 178, 181, 192, 199,
	0, 286, 320, 352, 0, 134, 326, 344, 156, 301,
	304, 361, 287, 137, 342, 321, 236, 205, 206, 135,
	0, 136, 284, 174, 188, 169, 254, 0, 187, 275,
	339, 340, 167, 364, 145, 354, 139, 146, 353, 247,
	0, 246, 356, 335, 343, 237, 225, 0, 138, 341,
	235, 224, 211, 180, 194, 271, 219, 272, 195, 242,
	241, 243, 221, 226, 0, 0, 0, 317, 349, 365,
	153, 0, 305, 331, 0, 0, 154, 186, 179, 270,
	245, 147, 197, 314, 209, 217, 283, 362, 258, 290,
	157, 348, 313, 592, 604, 598, 600, 599, 596, 597,
	595, 594, 593, 606, 582, 583, 584, 585, 586, 0,
	0, 0, 589, 0, 601, 602, 0, 0, 0, 0,
	545, 546, 547, 548, 549, 553, 554, 558, 559, 567,
	566, 565, 568, 569, 571, 570, 572, 550, 551, 552,
	555, 556, 557, 560, 561, 564, 562, 563, 587, 131,
	140, 214, 0, 280, 184, 350, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 183,
	193, 196, 200, 201, 202, 207, 222, 227, 228, 229,
	230, 248, 249, 252, 253, 256, 257, 263, 264, 265,
	267, 268, 269, 277, 0, 285, 292, 294, 295, 296,
	298, 307, 308, 309, 310, 318, 324, 337, 338, 357,
	359, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 175, 513, 0, 0, 0, 212, 0, 0,
	165, 220, 218, 0, 0, 0, 262, 327, 0, 0,
	0, 591, 215, 0, 0, 493, 315, 239, 0, 0,
	0, 0, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 1300, 0, 514, 538, 537, 540,
	541, 542, 543, 0, 0, 497, 539, 544, 573, 574,
	0, 0, 0, 511, 529, 0, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 266, 282, 303, 0, 274, 0,
	0, 0, 0, 0, 526, 527, 0, 0, 0, 0,
	605, 0, 528, 0, 0, 523, 524, 525, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 144,
	581, 0, 0, 203, 358, 0, 0, 603, 276, 0,
	322, 191, 213, 148, 128, 142, 159, 190, 251, 0,
	297, 588, 0, 0, 0, 0, 166, 0, 289, 259,
	346, 580, 0, 288, 216, 336, 0, 0, 345, 0,
	487, 355, 360, 0, 0, 0, 312, 176, 0, 133,
	0, 273, 171, 208, 0, 0, 0, 163, 0, 0,
	0, 311, 334, 150, 329, 238, 244, 160, 162, 161,
	143, 306, 333, 155, 164, 316, 293, 323, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 0,
	300, 299, 0, 198, 0, 0, 0, 281, 0, 204,
	132, 325, 363, 149, 210, 330, 0, 185, 250, 168,
	260, 261, 182, 130, 278, 232, 233, 231, 234, 189,
	0, 0, 0, 279, 302, 332, 151, 319, 0, 0,
	0, 0, 291, 0, 0, 0, 223, 178, 181, 192,
	199, 0, 286, 320, 352, 0, 134, 326, 344, 156,
	301, 304, 361, 287, 137, 342, 321, 236, 205, 206,
	135, 0, 136, 284, 174, 188, 169, 254, 0, 187,
	275, 339, 340, 167, 364, 145, 354, 139, 146, 353,
	247, 0, 246, 356, 335, 343, 237, 225, 0, 138,
	341, 235, 224, 211, 180, 194, 271, 219, 272, 195,
	242, 241, 243, 221, 226, 0, 0, 0, 317, 349,
	365, 153, 0, 305, 331, 0, 0, 154, 186, 179,
	270, 245, 147, 197, 314, 209, 217, 283, 362, 258,
	290, 157, 348, 313, 592, 604, 598, 600, 599, 596,
	597, 595, 594, 593, 606, 582, 583, 584, 585, 586,
	0, 0, 0, 589, 0, 601, 602, 0, 0, 0,
	0, 545, 546, 547, 548, 549, 553, 554, 558, 559,
	567, 566, 565, 568, 569, 571, 570, 572, 550, 551,
	552, 555, 556, 557, 560, 561, 564, 562, 563, 587,
	131, 140, 214, 0, 280, 184, 350, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	183, 193, 196, 200, 201, 202, 207, 222, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 277, 0, 285, 292, 294, 295,
	296, 298, 307, 308, 309, 310, 318, 324, 337, 338,
	357, 359, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 175, 513, 0, 0, 0, 212, 0,
	0, 165, 220, 218, 0, 0, 0, 262, 327, 0,
	0, 0, 591, 215, 0, 0, 493, 315, 239, 0,
	0, 0, 0, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 514, 538, 537,
	540, 541, 542, 543, 0, 0, 497, 539, 544, 573,
	574, 0, 0, 0, 511, 529, 0, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 266, 282, 303, 0, 274,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	0, 605, 0, 528, 0, 0, 523, 524, 525, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	144, 581, 0, 0, 203, 358, 0, 0, 603, 276,
	0, 322, 191, 213, 148, 128, 142, 159, 190, 251,
	0, 297, 588, 0, 0, 0, 0, 166, 0, 289,
	259, 346, 580, 0, 288, 216, 336, 0, 0, 345,
	0, 487, 355, 360, 0, 0, 0, 312, 176, 0,
	133, 0, 273, 171, 208, 0, 0, 0, 163, 0,
	0, 0, 311, 334, 150, 329, 238, 244, 160, 162,
	161, 143, 306, 333, 155, 164, 316, 293, 323, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	0, 300, 299, 0, 198, 0, 0, 0, 281, 0,
	204, 132, 325, 363, 149, 210, 330, 0, 185, 250,
	168, 260, 261, 182, 130, 278, 232, 233, 231, 234,
	189, 0, 0, 0, 279, 302, 332, 151, 319, 0,
	0, 0, 0, 291, 0, 0, 0, 223, 178, 181,
	192, 199, 0, 286, 320, 352, 0, 134, 326, 344,
	156, 301, 304, 361, 287, 137, 342, 321, 236, 205,
	206, 135, 0, 136, 284, 174, 188, 169, 254, 0,
	187, 275, 339, 340, 167, 364, 145, 354, 139, 146,
	353, 247, 0, 246, 356, 335, 343, 237, 225, 0,
	138, 341, 235, 224, 211, 180, 194, 271, 219, 272,
	195, 242, 241, 243, 221, 226, 0, 0, 0, 317,
	349, 365, 153, 0, 305, 331, 0, 0, 154, 186,
	179, 270, 245, 147, 197, 314, 209, 217, 283, 362,
	258, 290, 157, 348, 313, 592, 604, 598, 600, 599,
	596, 597, 595, 594, 593, 606, 582, 583, 584, 585,
	586, 0, 0, 0, 589, 0, 601, 602, 0, 0,
	0, 0, 545, 546, 547, 548, 549, 553, 554, 558,
	559, 567, 566, 565, 568, 569, 571, 570, 572, 550,
	551, 552, 555, 556, 557, 560, 561, 564, 562, 563,
	587, 131, 140, 214, 0, 280, 184, 350, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 183, 193, 196, 200, 201, 202, 207, 222, 227,
	228, 229, 230, 248, 249, 252, 253, 256, 257, 263,
	264, 265, 267, 268, 269, 277, 0, 285, 292, 294,
	295, 296, 298, 307, 308, 309, 310, 318, 324, 337,
	338, 357, 359, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 212,
	0, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	0, 0, 0, 591, 215, 0, 0, 493, 315, 239,
	0, 0, 0, 0, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 514, 538,
	537, 540, 541, 542, 543, 0, 0, 497, 539, 544,
	573, 574, 0, 0, 0, 0, 529, 0, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 266, 282, 303, 0,
	274, 0, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 605, 0, 528, 0, 0, 523, 524, 525,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 144, 581, 0, 0, 203, 358, 0, 0, 603,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 0, 297, 588, 0, 0, 0, 0, 166, 0,
	289, 259, 346, 580, 0, 288, 216, 336, 0, 0,
	345, 0, 487, 355, 360, 0, 0, 0, 312, 176,
	0, 133, 0, 273, 171, 208, 0, 0, 0, 163,
	0, 0, 0, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 0, 300, 299, 0, 198, 0, 0, 0, 281,
	0, 204, 132, 325, 363, 149, 210, 330, 0, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 0, 0, 0, 279, 302, 332, 151, 319,
	0, 0, 0, 0, 291, 0, 0, 0, 223, 178,
	181, 192, 199, 0, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 0, 0,
	317, 349, 365, 153, 0, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 592, 604, 598, 600,
	599, 596, 597, 595, 594, 593, 606, 582, 583, 584,
	585, 586, 1466, 1467, 1468, 589, 0, 601, 602, 0,
	0, 0, 0, 545, 546, 547, 548, 549, 553, 554,
	558, 559, 567, 566, 565, 568, 569, 571, 570, 572,
	550, 551, 552, 555, 556, 557, 560, 561, 564, 562,
	563, 587, 131, 140, 214, 0, 280, 184, 350, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 0, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	212, 0, 0, 165, 220, 218, 0, 0, 0, 262,
	327, 0, 0, 0, 591, 215, 0, 0, 493, 315,
	239, 0, 0, 0, 0, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 514,
	538, 537, 540, 541, 542, 543, 0, 0, 497, 539,
	544, 573, 574, 0, 0, 0, 0, 529, 0, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 266, 282, 303,
	0, 274, 0, 0, 0, 0, 0, 526, 527, 0,
	0, 0, 0, 605, 0, 528, 0, 0, 523, 524,
	525, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 144, 581, 0, 0, 203, 358, 0, 0,
	603, 276, 0, 322, 191, 213, 148, 128, 142, 159,
	190, 251, 0, 297, 588, 0, 0, 0, 0, 166,
	0, 289, 259, 346, 580, 2756, 288, 216, 336, 0,
	0, 345, 0, 487, 355, 360, 0, 0, 0, 312,
	176, 0, 133, 0, 273, 171, 208, 0, 0, 0,
	163, 0, 0, 0, 311, 334, 150, 329, 238, 244,
	160, 162, 161, 143, 306, 333, 155, 164, 316, 293,
	323, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 0, 300, 299, 0, 198, 0, 0, 0,
	281, 0, 204, 132, 325, 363, 149, 210, 330, 0,
	185, 250, 168, 260, 261, 182, 130, 278, 232, 233,
	231, 234, 189, 0, 0, 0, 279, 302, 332, 151,
	319, 0, 0, 0, 0, 291, 0, 0, 0, 223,
	178, 181, 192, 199, 0, 286, 320, 352, 0, 134,
	326, 344, 156, 301, 304, 361, 287, 137, 342, 321,
	236, 205, 206, 135, 0, 136, 284, 174, 188, 169,
	254, 0, 187, 275, 339, 340, 167, 364, 145, 354,
	139, 146, 353, 247, 0, 246, 356, 335, 343, 237,
	225, 0, 138, 341, 235, 224, 211, 180, 194, 271,
	219, 272, 195, 242, 241, 243, 221, 226, 0, 0,
	0, 317, 349, 365, 153, 0, 305, 331, 0, 0,
	154, 186, 179, 270, 245, 147, 197, 314, 209, 217,
	283, 362, 258, 290, 157, 348, 313, 592, 604, 598,
	600, 599, 596, 597, 595, 594, 593, 606, 582, 583,
	584, 585, 586, 0, 0, 0, 589, 0, 601, 602,
	0, 0, 0, 0, 545, 546, 547, 548, 549, 553,
	554, 558, 559, 567, 566, 565, 568, 569, 571, 570,
	572, 550, 551, 552, 555, 556, 557, 560, 561, 564,
	562, 563, 587, 131, 140, 214, 0, 280, 184, 350,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 183, 193, 196, 200, 201, 202, 207,
	222, 227, 228, 229, 230, 248, 249, 252, 253, 256,
	257, 263, 264, 265, 267, 268, 269, 277, 0, 285,
	292, 294, 295, 296, 298, 307, 308, 309, 310, 318,
	324, 337, 338, 357, 359, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 212, 0, 0, 165, 220, 218, 0, 0, 0,
	262, 327, 0, 0, 0, 591, 215, 0, 0, 493,
	315, 239, 0, 0, 0, 0, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 987, 0,
	514, 538, 537, 540, 541, 542, 543, 0, 0, 497,
	539, 544, 573, 574, 0, 0, 0, 0, 529, 0,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 266, 282,
	303, 0, 274, 0, 0, 0, 0, 0, 526, 527,
	0, 0, 0, 0, 605, 0, 528, 0, 0, 523,
	524, 525, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 144, 581, 0, 0, 203, 358, 0,
	0, 603, 276, 0, 322, 191, 213, 148, 128, 142,
	159, 190, 251, 0, 297, 588, 0, 0, 0, 0,
	166, 0, 289, 259, 346, 580, 0, 288, 216, 336,
	0, 0, 345, 0, 487, 355, 360, 0, 0, 0,
	312, 176, 0, 133, 0, 273, 171, 208, 0, 0,
	0, 163, 0, 0, 0, 311, 334, 150, 329, 238,
	244, 160, 162, 161, 143, 306, 333, 155, 164, 316,
	293, 323, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 0, 300, 299, 0, 198, 0, 0,
	0, 281, 0, 204, 132, 325, 363, 149, 210, 330,
	0, 185, 250, 168, 260, 261, 182, 130, 278, 232,
	233, 231, 234, 189, 0, 0, 0, 279, 302, 332,
	151, 319, 0, 0, 0, 0, 291, 0, 0, 0,
	223, 178, 181, 192, 199, 0, 286, 320, 352, 0,
	134, 326, 344, 156, 301, 304, 361, 287, 137, 342,
	321, 236, 205, 206, 135, 0, 136, 284, 174, 188,
	169, 254, 0, 187, 275, 339, 340, 167, 364, 145,
	354, 139, 146, 353, 247, 0, 246, 356, 335, 343,
	237, 225, 0, 138, 341, 235, 224, 211, 180, 194,
	271, 219, 272, 195, 242, 241, 243, 221, 226, 0,
	0, 0, 317, 349, 365, 153, 0, 305, 331, 0,
	0, 154, 186, 179, 270, 245, 147, 197, 314, 209,
	217, 283, 362, 258, 290, 157, 348, 313, 592, 604,
	598, 600, 599, 596, 597, 595, 594, 593, 606, 582,
	583, 584, 585, 586, 0, 0, 0, 589, 0, 601,
	602, 0, 0, 0, 0, 545, 546, 547, 548, 549,
	553, 554, 558, 559, 567, 566, 565, 568, 569, 571,
	570, 572, 550, 551, 552, 555, 556, 557, 560, 561,
	564, 562, 563, 587, 131, 140, 214, 0, 280, 184,
	350, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 183, 193, 196, 200, 201, 202,
	207, 222, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 277, 0,
	285, 292, 294, 295, 296, 298, 307, 308, 309, 310,
	318, 324, 337, 338, 357, 359, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 212, 0, 0, 165, 220, 218, 0, 0,
	0, 262, 327, 0, 0, 0, 591, 215, 0, 0,
	493, 315, 239, 0, 0, 0, 0, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 514, 538, 537, 540, 541, 542, 543, 0, 0,
	497, 539, 544, 573, 574, 0, 0, 0, 0, 529,
	0, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 266,
	282, 303, 0, 274, 0, 0, 0, 0, 0, 526,
	527, 0, 0, 0, 0, 605, 0, 528, 0, 0,
	523, 524, 525, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 144, 581, 0, 0, 203, 358,
	0, 0, 603, 276, 0, 322, 191, 213, 148, 128,
	142, 159, 190, 251, 0, 297, 588, 0, 0, 0,
	0, 166, 0, 289, 259, 346, 580, 0, 288, 216,
	336, 0, 0, 345, 0, 487, 355, 360, 0, 0,
	0, 312, 176, 0, 133, 0, 273, 171, 208, 0,
	0, 0, 163, 0, 0, 0, 311, 334, 150, 329,
	238, 244, 160, 162, 161, 143, 306, 333, 155, 164,
	316, 293, 323, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 0, 300, 299, 0, 198, 0,
	0, 0, 281, 0, 204, 132, 325, 363, 149, 210,
	330, 0, 185, 250, 168, 260, 261, 182, 130, 278,
	232, 233, 231, 234, 189, 0, 0, 0, 279, 302,
	332, 151, 319, 0, 0, 0, 0, 291, 0, 0,
	0, 223, 178, 181, 192, 199, 0, 286, 320, 352,
	0, 134, 326, 344, 156, 301, 304, 361, 287, 137,
	342, 321, 236, 205, 206, 135, 0, 136, 284, 174,
	188, 169, 254, 0, 187, 275, 339, 340, 167, 364,
	145, 354, 139, 146, 353, 247, 0, 246, 356, 335,
	343, 237, 225, 0, 138, 341, 235, 224, 211, 180,
	194, 271, 219, 272, 195, 242, 241, 243, 221, 226,
	0, 0, 0, 317, 349, 365, 153, 0, 305, 331,
	0, 0, 154, 186, 179, 270, 245, 147, 197, 314,
	209, 217, 283, 362, 258, 290, 157, 348, 313, 592,
	604, 598, 600, 599, 596, 597, 595, 594, 593, 606,
	582, 583, 584, 585, 586, 0, 0, 0, 589, 0,
	601, 602, 0, 0, 0, 0, 545, 546, 547, 548,
	549, 553, 554, 558, 559, 567, 566, 565, 568, 569,
	571, 570, 572, 550, 551, 552, 555, 556, 557, 560,
	561, 564, 562, 563, 587, 131, 140, 214, 0, 280,
	184, 350, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 183, 193, 196, 200, 201,
	202, 207, 222, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 277,
	0, 285, 292, 294, 295, 296, 298, 307, 308, 309,
	310, 318, 324, 337, 338, 357, 359, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 1509, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 212, 0, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 0, 0, 0, 0, 215, 0,
	0, 493, 315, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 1513, 0, 0, 0, 0,
	0, 0, 126, 0, 466, 0, 0, 0, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	266, 282, 303, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 144, 0, 0, 0, 203,
	358, 0, 1512, 0, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 0, 297, 0, 0, 0,
	0, 0, 166, 0, 289, 259, 346, 0, 0, 288,
	216, 336, 0, 0, 345, 0, 487, 355, 360, 0,
	0, 0, 312, 176, 0, 133, 0, 273, 171, 208,
	0, 0, 0, 163, 0, 0, 0, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 0, 300, 299, 0, 198,
	0, 0, 0, 281, 0, 204, 132, 325, 363, 149,
	210, 330, 0, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 0, 0, 0, 279,
	302, 332, 151, 319, 0, 0, 0, 0, 291, 0,
	0, 0, 223, 178, 181, 192, 199, 0, 286, 320,
	352, 0, 134, 326, 344, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 0, 0, 317, 349, 365, 153, 0, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 468, 469,
	470, 471, 475, 476, 480, 481, 490, 489, 488, 491,
	492, 495, 494, 496, 472, 473, 474, 477, 478, 479,
	482, 483, 486, 484, 485, 0, 131, 140, 214, 0,
	280, 184, 350, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 0, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 1509, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 212, 0, 0, 165, 220, 218,
	0, 0, 0, 262, 327, 0, 0, 0, 0, 215,
	0, 0, 493, 315, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 1513, 0, 0, 0,
	0, 0, 0, 126, 0, 466, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 1507, 282, 303, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 144, 0, 0, 0,
	203, 358, 0, 1512, 0, 276, 0, 322, 191, 213,
	148, 128, 142, 159, 190, 251, 0, 297, 0, 0,
	0, 0, 0, 166, 0, 289, 259, 346, 0, 0,
	288, 216, 336, 0, 0, 345, 0, 487, 355, 360,
	0, 0, 0, 312, 176, 0, 133, 0, 273, 171,
	208, 0, 0, 0, 163, 0, 0, 0, 311, 334,
	150, 329, 238, 244, 160, 162, 161, 143, 306, 333,
	155, 164, 316, 293, 323, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 0, 300, 299, 0,
	198, 0, 0, 0, 281, 0, 204, 132, 325, 363,
	149, 210, 330, 0, 185, 250, 168, 260, 261, 182,
	130, 278, 232, 233, 231, 234, 189, 0, 0, 0,
	279, 302, 332, 151, 319, 0, 0, 0, 0, 291,
	0, 0, 0, 223, 178, 181, 192, 199, 0, 286,
	320, 352, 0, 134, 326, 344, 156, 301, 304, 361,
	287, 137, 342, 321, 236, 205, 206, 135, 0, 136,
	284, 174, 188, 169, 254, 0, 187, 275, 339, 340,
	167, 364, 145, 354, 139, 146, 353, 247, 0, 246,
	356, 335, 343, 237, 225, 0, 138, 341, 235, 224,
	211, 180, 194, 271, 219, 272, 195, 242, 241, 243,
	221, 226, 0, 0, 0, 317, 349, 365, 153, 0,
	305, 331, 0, 0, 154, 186, 179, 270, 245, 147,
	197, 314, 209, 217, 283, 362, 258, 290, 157, 348,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 468,
	469, 470, 471, 475, 476, 480, 481, 490, 489, 488,
	491, 492, 495, 494, 496, 472, 473, 474, 477, 478,
	479, 482, 483, 486, 484, 485, 0, 131, 140, 214,
	0, 280, 184, 350, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 183, 193, 196,
	200, 201, 202, 207, 222, 227, 228, 229, 230, 248,
	249, 252, 253, 256, 257, 263, 264, 265, 267, 268,
	269, 277, 0, 285, 292, 294, 295, 296, 298, 307,
	308, 309, 310, 318, 324, 337, 338, 357, 359, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 1009, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 212, 0, 0, 165, 220,
	218, 0, 0, 0, 262, 327, 0, 0, 0, 0,
	215, 0, 0, 493, 315, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1010, 0, 1013, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 1006,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1007, 0, 0,
	0, 347, 266, 282, 303, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 144, 0, 0,
	0, 203, 358, 0, 0, 0, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 0, 297, 0,
	0, 0, 0, 0, 166, 0, 289, 259, 346, 0,
	0, 288, 216, 336, 0, 0, 345, 0, 487, 355,
	360, 0, 0, 0, 312, 176, 0, 133, 0, 273,
	171, 208, 0, 0, 0, 163, 0, 0, 0, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 0, 300, 299,
	0, 198, 0, 0, 0, 281, 0, 204, 132, 325,
	363, 149, 210, 330, 0, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 0, 0,
	0, 279, 302, 332, 151, 319, 0, 0, 0, 0,
	291, 0, 0, 0, 223, 178, 181, 192, 199, 0,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 0, 0, 317, 349, 365, 153,
	0, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	468, 469, 470, 471, 475, 476, 480, 481, 490, 489,
	488, 491, 492, 495, 494, 496, 472, 473, 474, 477,
	478, 479, 482, 483, 486, 484, 485, 0, 131, 140,
	214, 0, 280, 184, 350, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 0, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 212, 0, 0, 165,
	220, 218, 0, 0, 0, 262, 327, 0, 0, 0,
	0, 215, 0, 0, 493, 315, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 466, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 266, 282, 303, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 144, 0,
	0, 0, 203, 358, 0, 0, 0, 276, 0, 322,
	191, 213, 148, 128, 142, 159, 190, 251, 0, 297,
	0, 0, 0, 0, 0, 166, 0, 289, 259, 346,
	0, 0, 288, 216, 336, 0, 0, 345, 0, 487,
	355, 360, 0, 0, 0, 312, 176, 0, 133, 0,
	273, 171, 208, 0, 0, 0, 163, 0, 0, 0,
	311, 334, 150, 329, 238, 244, 160, 162, 161, 143,
	306, 333, 155, 164, 316, 293, 323, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 0, 300,
	299, 0, 198, 0, 0, 0, 281, 0, 204, 132,
	325, 363, 149, 210, 330, 0, 185, 250, 168, 260,
	261, 182, 130, 278, 232, 233, 231, 234, 189, 0,
	0, 0, 279, 302, 332, 151, 319, 0, 0, 0,
	0, 291, 0, 0, 0, 223, 178, 181, 192, 199,
	0, 286, 320, 352, 0, 134, 326, 344, 156, 301,
	304, 361, 287, 137, 342, 321, 236, 205, 206, 135,
	0, 136, 284, 174, 188, 169, 254, 0, 187, 275,
	339, 340, 167, 364, 145, 354, 139, 146, 353, 247,
	0, 246, 356, 335, 343, 237, 225, 0, 138, 341,
	235, 224, 211, 180, 194, 271, 219, 272, 195, 242,
	241, 243, 221, 226, 0, 0, 0, 317, 349, 365,
	153, 0, 305, 331, 0, 0, 154, 186, 179, 270,
	245, 147, 197, 314, 209, 217, 283, 362, 258, 290,
	157, 348, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 468, 469, 470, 471, 475, 476, 480, 481, 490,
	489, 488, 491, 492, 495, 494, 496, 472, 473, 474,
	477, 478, 479, 482, 483, 486, 484, 485, 0, 131,
	140, 214, 0, 280, 184, 350, 0, 173, 0, 0,
	0, 0, 461, 129, 141, 152, 158, 172, 177, 183,
	193, 196, 200, 201, 202, 207, 222, 227, 228, 229,
	230, 248, 249, 252, 253, 256, 257, 263, 264, 265,
	267, 268, 269, 277, 0, 285, 292, 294, 295, 296,
	298, 307, 308, 309, 310, 318, 324, 337, 338, 357,
	359, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 212, 1804, 0,
	165, 220, 218, 0, 0, 0, 262, 327, 0, 0,
	0, 0, 215, 0, 0, 493, 315, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 466, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 266, 282, 303, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 144,
	0, 0, 0, 203, 358, 0, 0, 0, 276, 0,
	322, 191, 213, 148, 128, 142, 159, 190, 251, 0,
	297, 0, 0, 0, 0, 0, 166, 0, 289, 259,
	346, 0, 0, 288, 216, 336, 0, 0, 345, 0,
	487, 355, 360, 0, 0, 0, 312, 176, 0, 133,
	0, 273, 171, 208, 0, 0, 0, 163, 0, 0,
	0, 311, 334, 150, 329, 238, 244, 160, 162, 161,
	143, 306, 333, 155, 164, 316, 293, 323, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 0,
	300, 299, 0, 198, 0, 0, 0, 281, 0, 204,
	132, 325, 363, 149, 210, 330, 0, 185, 250, 168,
	260, 261, 182, 130, 278, 232, 233, 231, 234, 189,
	0, 0, 0, 279, 302, 332, 151, 319, 0, 0,
	0, 0, 291, 0, 0, 0, 223, 178, 181, 192,
	199, 0, 286, 320, 352, 0, 134, 326, 344, 156,
	301, 304, 361, 287, 137, 342, 321, 236, 205, 206,
	135, 0, 136, 284, 174, 188, 169, 254, 0, 187,
	275, 339, 340, 167, 364, 145, 354, 139, 146, 353,
	247, 0, 246, 356, 335, 343, 237, 225, 0, 138,
	341, 235, 224, 211, 180, 194, 271, 219, 272, 195,
	242, 241, 243, 221, 226, 0, 0, 0, 317, 349,
	365, 153, 0, 305, 331, 0, 0, 154, 186, 179,
	270, 245, 147, 197, 314, 209, 217, 283, 362, 258,
	290, 157, 348, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 468, 469, 470, 471, 475, 476, 480, 481,
	490, 489, 488, 491, 492, 495, 494, 496, 472, 473,
	474, 477, 478, 479, 482, 483, 486, 484, 485, 0,
	131, 140, 214, 0, 280, 184, 350, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	183, 193, 196, 200, 201, 202, 207, 222, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 277, 0, 285, 292, 294, 295,
	296, 298, 307, 308, 309, 310, 318, 324, 337, 338,
	357, 359, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 212, 0,
	0, 165, 220, 218, 0, 0, 0, 262, 327, 0,
	0, 0, 0, 215, 0, 0, 493, 315, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 466,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 266, 282, 303, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	144, 0, 0, 0, 203, 358, 0, 0, 0, 276,
	0, 322, 191, 213, 148, 128, 142, 159, 190, 251,
	0, 297, 0, 0, 0, 0, 0, 166, 0, 289,
	259, 346, 0, 0, 288, 216, 336, 0, 0, 345,
	0, 487, 355, 360, 0, 0, 0, 312, 176, 0,
	133, 0, 273, 171, 208, 0, 0, 0, 163, 0,
	0, 0, 311, 334, 150, 329, 238, 244, 160, 162,
	161, 143, 306, 333, 155, 164, 316, 293, 323, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	0, 300, 299, 0, 198, 0, 0, 0, 281, 0,
	204, 132, 325, 363, 149, 210, 330, 0, 185, 250,
	168, 260, 261, 182, 130, 278, 232, 233, 231, 234,
	189, 0, 0, 0, 279, 302, 332, 151, 319, 0,
	0, 0, 0, 291, 0, 0, 0, 223, 178, 181,
	192, 199, 0, 286, 320, 352, 0, 134, 326, 344,
	156, 301, 304, 361, 287, 137, 342, 321, 236, 205,
	206, 135, 0, 136, 284, 174, 188, 169, 254, 0,
	187, 275, 339, 340, 167, 364, 145, 354, 139, 146,
	353, 247, 0, 246, 356, 335, 343, 237, 225, 0,
	138, 341, 235, 224, 211, 180, 194, 271, 219, 272,
	195, 242, 241, 243, 221, 226, 0, 0, 0, 317,
	349, 365, 153, 0, 305, 331, 0, 0, 154, 186,
	179, 270, 245, 147, 197, 314, 209, 217, 283, 362,
	258, 290, 157, 348, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 468, 469, 470, 471, 475, 476, 480,
	481, 490, 489, 488, 491, 492, 495, 494, 496, 472,
	473, 474, 477, 478, 479, 482, 483, 486, 484, 485,
	0, 131, 140, 214, 0, 280, 184, 350, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 183, 193, 196, 200, 201, 202, 207, 222, 227,
	228, 229, 230, 248, 249, 252, 253, 256, 257, 263,
	264, 265, 267, 268, 269, 277, 0, 285, 292, 294,
	295, 296, 298, 307, 308, 309, 310, 318, 324, 337,
	338, 357, 359, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 212,
	0, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	0, 0, 0, 0, 215, 0, 0, 493, 315, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1010, 0,
	1013, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 266, 282, 303, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 144, 0, 0, 0, 203, 358, 0, 0, 0,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 0, 297, 0, 0, 0, 0, 0, 166, 0,
	289, 259, 346, 0, 0, 288, 216, 336, 0, 0,
	345, 0, 487, 355, 360, 0, 0, 0, 312, 176,
	0, 133, 0, 273, 171, 208, 0, 0, 0, 163,
	0, 0, 0, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 0, 300, 299, 0, 198, 0, 0, 0, 281,
	0, 204, 132, 325, 363, 149, 210, 330, 0, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 0, 0, 0, 279, 302, 332, 151, 319,
	0, 0, 0, 0, 291, 0, 0, 0, 223, 178,
	181, 192, 199, 0, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 0, 0,
	317, 349, 365, 153, 0, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 468, 469, 470, 471, 475, 476,
	480, 481, 490, 489, 488, 491, 492, 495, 494, 496,
	472, 473, 474, 477, 478, 479, 482, 483, 486, 484,
	485, 0, 131, 140, 214, 0, 280, 184, 350, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 0, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	212, 0, 0, 165, 220, 218, 0, 0, 0, 262,
	327, 0, 0, 0, 0, 215, 0, 0, 493, 315,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 266, 282, 303,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 144, 0, 0, 0, 203, 358, 0, 0,
	0, 276, 0, 322, 191, 213, 148, 128, 142, 159,
	190, 251, 0, 297, 0, 0, 0, 0, 0, 166,
	0, 289, 259, 346, 0, 0, 288, 216, 336, 0,
	0, 345, 0, 487, 355, 360, 0, 0, 0, 312,
	176, 0, 133, 0, 273, 171, 208, 0, 0, 0,
	163, 0, 0, 0, 311, 334, 150, 329, 238, 244,
	160, 162, 161, 143, 306, 333, 155, 164, 316, 293,
	323, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 0, 300, 299, 0, 198, 0, 0, 0,
	281, 0, 204, 132, 325, 363, 149, 210, 330, 0,
	185, 250, 168, 260, 261, 182, 130, 278, 232, 233,
	231, 234, 189, 0, 0, 0, 279, 302, 332, 151,
	319, 0, 0, 0, 0, 291, 0, 0, 0, 223,
	178, 181, 192, 199, 0, 286, 320, 352, 0, 134,
	326, 344, 156, 301, 304, 361, 287, 137, 342, 321,
	236, 205, 206, 135, 0, 136, 284, 174, 188, 169,
	254, 0, 187, 275, 339, 340, 167, 364, 145, 354,
	139, 146, 353, 247, 0, 246, 356, 335, 343, 237,
	225, 0, 138, 341, 235, 224, 211, 180, 194, 271,
	219, 272, 195, 242, 241, 243, 221, 226, 0, 0,
	0, 317, 349, 365, 153, 0, 305, 331, 0, 0,
	154, 186, 179, 270, 245, 147, 197, 314, 209, 217,
	283, 362, 258, 290, 157, 348, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 468, 469, 470, 471, 475,
	476, 480, 481, 490, 489, 488, 491, 492, 495, 494,
	496, 472, 473, 474, 477, 478, 479, 482, 483, 486,
	484, 485, 0, 131, 140, 214, 0, 280, 184, 350,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 183, 193, 196, 200, 201, 202, 207,
	222, 227, 228, 229, 230, 248, 249, 252, 253, 256,
	257, 263, 264, 265, 267, 268, 269, 277, 0, 285,
	292, 294, 295, 296, 298, 307, 308, 309, 310, 318,
	324, 337, 338, 357, 359, 435, 328, 429, 440, 423,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	446, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	430, 0, 212, 0, 0, 165, 220, 218, 0, 0,
	0, 262, 327, 0, 0, 0, 493, 215, 0, 0,
	0, 315, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2158, 0, 0, 0, 2160, 0, 0,
	0, 444, 0, 443, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 266,
	282, 303, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 422, 421, 424,
	0, 0, 0, 240, 144, 0, 0, 428, 203, 358,
	0, 0, 0, 276, 0, 322, 191, 213, 148, 128,
	142, 159, 190, 251, 432, 297, 0, 0, 436, 0,
	0, 166, 0, 289, 259, 346, 0, 0, 288, 216,
	336, 487, 439, 345, 0, 0, 355, 360, 0, 0,
	0, 312, 176, 0, 133, 0, 273, 171, 208, 0,
	0, 0, 163, 0, 0, 0, 311, 334, 150, 329,
	238, 244, 160, 162, 161, 143, 306, 333, 155, 164,
	316, 293, 323, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 0, 300, 299, 0, 198, 0,
	0, 0, 281, 0, 204, 132, 325, 363, 149, 210,
	330, 0, 185, 250, 168, 260, 261, 182, 130, 278,
	232, 233, 231, 234, 189, 0, 0, 0, 449, 302,
	332, 151, 319, 425, 426, 427, 433, 434, 437, 438,
	441, 223, 178, 181, 192, 199, 0, 286, 320, 352,
	0, 134, 326, 344, 156, 301, 304, 361, 287, 137,
	342, 321, 236, 205, 206, 135, 0, 136, 284, 174,
	188, 169, 254, 0, 187, 275, 339, 340, 167, 364,
	145, 354, 139, 146, 353, 247, 0, 246, 356, 335,
	343, 237, 225, 0, 138, 341, 235, 224, 211, 180,
	194, 271, 219, 272, 195, 242, 241, 243, 221, 226,
	0, 0, 0, 317, 349, 365, 153, 0, 305, 331,
	0, 0, 154, 186, 179, 270, 245, 147, 197, 314,
	209, 217, 283, 362, 258, 290, 157, 348, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 468, 469, 470, 471, 475, 476, 480,
	481, 490, 489, 488, 491, 492, 495, 494, 496, 472,
	473, 474, 477, 478, 479, 482, 483, 486, 484, 485,
	0, 0, 0, 0, 0, 131, 140, 214, 0, 280,
	184, 350, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 183, 193, 196, 200, 201,
	202, 207, 222, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 277,
	431, 285, 292, 294, 295, 296, 298, 307, 308, 309,
	310, 318, 324, 337, 338, 357, 359, 435, 328, 429,
	440, 423, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 430, 0, 212, 0, 493, 165, 220, 218,
	0, 0, 0, 262, 327, 0, 0, 0, 0, 215,
	0, 0, 0, 315, 239, 0, 0, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 444, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 266, 282, 303, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 422,
	421, 424, 0, 0, 0, 240, 144, 0, 0, 428,
	203, 358, 0, 0, 0, 276, 0, 322, 191, 213,
	148, 128, 142, 159, 190, 251, 432, 297, 0, 0,
	436, 487, 0, 166, 0, 289, 259, 346, 0, 0,
	288, 216, 336, 0, 439, 345, 0, 0, 355, 360,
	0, 0, 0, 312, 176, 0, 133, 0, 273, 171,
	208, 0, 0, 0, 163, 0, 0, 0, 311, 334,
	150, 329, 238, 244, 160, 162, 161, 143, 306, 333,
	155, 164, 316, 293, 323, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 0, 300, 299, 0,
	198, 0, 0, 0, 281, 0, 204, 132, 325, 363,
	149, 210, 330, 0, 185, 250, 168, 260, 261, 182,
	130, 278, 232, 233, 231, 234, 189, 0, 0, 0,
	418, 302, 332, 151, 319, 425, 426, 427, 433, 434,
	437, 438, 441, 223, 178, 181, 192, 199, 0, 286,
	320, 352, 0, 134, 326, 344, 156, 301, 304, 361,
	287, 137, 342, 321, 236, 205, 206, 135, 0, 136,
	284, 174, 188, 169, 254, 0, 187, 275, 339, 340,
	167, 364, 145, 354, 139, 146, 353, 247, 0, 246,
	356, 335, 343, 237, 225, 0, 138, 341, 235, 224,
	211, 180, 194, 271, 219, 272, 195, 242, 241, 243,
	221, 226, 0, 0, 0, 317, 349, 365, 153, 0,
	305, 331, 0, 0, 154, 186, 179, 270, 245, 147,
	197, 314, 209, 217, 283, 362, 258, 290, 157, 348,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 468, 469, 470, 471, 475, 476, 480,
	481, 490, 489, 488, 491, 492, 495, 494, 496, 472,
	473, 474, 477, 478, 479, 482, 483, 486, 484, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 214,
	0, 280, 184, 350, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 183, 193, 196,
	200, 201, 202, 207, 222, 227, 228, 229, 230, 248,
	249, 252, 253, 256, 257, 263, 264, 265, 267, 268,
	269, 277, 431, 285, 292, 294, 295, 296, 298, 307,
	308, 309, 310, 318, 324, 337, 338, 357, 359, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 493, 0, 0, 212, 0, 0, 165, 220,
	218, 0, 0, 0, 262, 327, 0, 0, 0, 0,
	215, 0, 0, 2169, 315, 239, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 266, 282, 303, 0, 274, 0, 1023, 1022,
	1032, 1033, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1024,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 144, 0, 0,
	0, 203, 358, 0, 0, 0, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 487, 297, 0,
	0, 0, 0, 0, 166, 0, 289, 259, 346, 0,
	0, 288, 216, 336, 0, 0, 345, 0, 0, 355,
	360, 0, 0, 0, 312, 176, 0, 133, 0, 273,
	171, 208, 0, 0, 0, 163, 0, 0, 0, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 0, 300, 299,
	0, 198, 0, 0, 0, 281, 0, 204, 132, 325,
	363, 149, 210, 330, 0, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 0, 0,
	0, 279, 302, 332, 151, 319, 0, 0, 0, 0,
	291, 0, 0, 0, 223, 178, 181, 192, 199, 0,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 0, 0, 317, 349, 365, 153,
	0, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 0, 0, 0, 0, 0, 0, 467, 468,
	469, 470, 471, 475, 476, 480, 481, 490, 489, 488,
	491, 492, 495, 494, 496, 472, 473, 474, 477, 478,
	479, 482, 483, 486, 484, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	214, 0, 280, 184, 350, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 0, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 2681, 0, 0, 0, 0, 0,
	0, 175, 2679, 493, 0, 0, 212, 0, 0, 165,
	220, 218, 0, 0, 0, 262, 327, 0, 0, 0,
	0, 215, 0, 0, 2167, 315, 239, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 0, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 266, 282, 303, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 144, 0,
	0, 0, 203, 358, 0, 0, 0, 276, 0, 322,
	191, 213, 148, 128, 142, 159, 190, 251, 487, 297,
	0, 0, 0, 0, 0, 166, 0, 289, 259, 346,
	0, 0, 288, 216, 336, 0, 0, 345, 0, 0,
	355, 360, 0, 0, 0, 312, 176, 0, 133, 0,
	273, 171, 208, 0, 0, 0, 163, 0, 0, 0,
	311, 334, 150, 329, 238, 244, 160, 162, 161, 143,
	306, 333, 155, 164, 316, 293, 323, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 0, 300,
	299, 0, 198, 0, 2680, 0, 281, 0, 204, 132,
	325, 363, 149, 210, 330, 0, 185, 250, 168, 260,
	261, 182, 130, 278, 232, 233, 231, 234, 189, 0,
	0, 0, 279, 302, 332, 151, 319, 0, 0, 0,
	0, 291, 0, 0, 0, 223, 178, 181, 192, 199,
	0, 286, 320, 352, 0, 134, 326, 344, 156, 301,
	304, 361, 287, 137, 342, 321, 236, 205, 206, 135,
	0, 136, 284, 174, 188, 169, 254, 0, 187, 275,
	339, 340, 167, 364, 145, 354, 139, 146, 353, 247,
	0, 246, 356, 335, 343, 237, 225, 0, 138, 341,
	235, 224, 211, 180, 194, 271, 219, 272, 195, 242,
	241, 243, 221, 226, 0, 0, 0, 317, 349, 365,
	153, 0, 305, 331, 0, 0, 154, 186, 179, 270,
	245, 147, 197, 314, 209, 217, 283, 362, 258, 290,
	157, 348, 313, 0, 0, 0, 0, 0, 0, 467,
	468, 469, 470, 471, 475, 476, 480, 481, 490, 489,
	488, 491, 492, 495, 494, 496, 472, 473, 474, 477,
	478, 479, 482, 483, 486, 484, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 214, 0, 280, 184, 350, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 183,
	193, 196, 200, 201, 202, 207, 222, 227, 228, 229,
	230, 248, 249, 252, 253, 256, 257, 263, 264, 265,
	267, 268, 269, 277, 0, 285, 292, 294, 295, 296,
	298, 307, 308, 309, 310, 318, 324, 337, 338, 357,
	359, 36, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 212, 0,
	0, 165, 220, 218, 0, 0, 0, 262, 327, 0,
	0, 0, 1504, 215, 0, 0, 0, 315, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 266, 282, 303, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	144, 0, 0, 0, 203, 358, 0, 0, 0, 276,
	0, 322, 191, 213, 148, 128, 142, 159, 190, 251,
	0, 297, 0, 0, 0, 0, 0, 166, 0, 289,
	259, 346, 0, 0, 288, 216, 336, 0, 0, 345,
	0, 0, 355, 360, 0, 0, 0, 312, 176, 0,
	133, 0, 273, 171, 208, 0, 0, 0, 163, 0,
	0, 0, 311, 334, 150, 329, 238, 244, 160, 162,
	161, 143, 306, 333, 155, 164, 316, 293, 323, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	0, 300, 299, 0, 198, 0, 0, 0, 281, 0,
	204, 132, 325, 363, 149, 210, 330, 0, 185, 250,
	168, 260, 261, 182, 130, 278, 232, 233, 231, 234,
	189, 0, 0, 0, 279, 302, 332, 151, 319, 0,
	0, 0, 0, 291, 0, 0, 0, 223, 178, 181,
	192, 199, 0, 286, 320, 352, 0, 134, 326, 344,
	156, 301, 304, 361, 287, 137, 342, 321, 236, 205,
	206, 135, 0, 136, 284, 174, 188, 169, 254, 0,
	187, 275, 339, 340, 167, 364, 145, 354, 139, 146,
	353, 247, 0, 246, 356, 335, 343, 237, 225, 0,
	138, 341, 235, 224, 211, 180, 194, 271, 219, 272,
	195, 242, 241, 243, 221, 226, 0, 0, 0, 317,
	349, 365, 153, 0, 305, 331, 0, 0, 154, 186,
	179, 270, 245, 147, 197, 314, 209, 217, 283, 362,
	258, 290, 157, 348, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 214, 79, 280, 184, 350, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 183, 193, 196, 200, 201, 202, 207, 222, 227,
	228, 229, 230, 248, 249, 252, 253, 256, 257, 263,
	264, 265, 267, 268, 269, 277, 0, 285, 292, 294,
	295, 296, 298, 307, 308, 309, 310, 318, 324, 337,
	338, 357, 359, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 212,
	0, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	0, 0, 0, 0, 215, 0, 0, 0, 315, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 266, 282, 303, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 144, 0, 0, 0, 203, 358, 0, 0, 0,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 0, 297, 0, 0, 0, 0, 0, 166, 0,
	289, 259, 346, 0, 0, 288, 216, 336, 0, 0,
	345, 0, 0, 355, 360, 0, 0, 0, 312, 176,
	0, 133, 0, 273, 171, 208, 0, 0, 0, 163,
	0, 0, 0, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 0, 300, 299, 0, 198, 0, 0, 0, 281,
	0, 204, 132, 325, 363, 149, 210, 330, 0, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 0, 0, 0, 279, 302, 332, 151, 319,
	0, 0, 0, 0, 291, 0, 0, 0, 223, 178,
	181, 192, 199, 0, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 0, 0,
	317, 349, 365, 153, 0, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 214, 0, 280, 184, 350, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 0, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 1159, 0, 0, 0,
	212, 0, 0, 165, 220, 218, 0, 0, 0, 262,
	327, 0, 0, 0, 0, 215, 0, 0, 0, 315,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 266, 282, 303,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 144, 0, 0, 0, 203, 358, 0, 0,
	0, 276, 0, 322, 191, 213, 148, 128, 142, 159,
	190, 251, 0, 297, 0, 0, 0, 0, 0, 166,
	0, 289, 259, 346, 0, 0, 288, 216, 336, 0,
	0, 345, 0, 0, 355, 360, 0, 0, 0, 312,
	176, 0, 133, 0, 273, 171, 208, 0, 0, 0,
	163, 0, 0, 0, 311, 334, 150, 329, 238, 244,
	160, 162, 161, 143, 306, 333, 155, 164, 316, 293,
	323, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 0, 300, 299, 0, 198, 0, 0, 0,
	281, 0, 204, 132, 325, 363, 149, 210, 330, 0,
	185, 250, 168, 260, 261, 182, 130, 278, 232, 233,
	231, 234, 189, 0, 0, 0, 279, 302, 332, 151,
	319, 0, 0, 0, 0, 291, 0, 0, 0, 223,
	178, 181, 192, 199, 0, 286, 320, 352, 0, 134,
	326, 344, 156, 301, 304, 361, 287, 137, 342, 321,
	236, 205, 206, 135, 0, 136, 284, 174, 188, 169,
	254, 0, 187, 275, 339, 340, 167, 364, 145, 354,
	139, 146, 353, 247, 0, 246, 356, 335, 343, 237,
	225, 0, 138, 341, 235, 224, 211, 180, 194, 271,
	219, 272, 195, 242, 241, 243, 221, 226, 0, 0,
	0, 317, 349, 365, 153, 0, 305, 331, 0, 0,
	154, 186, 179, 270, 245, 147, 197, 314, 209, 217,
	283, 362, 258, 290, 157, 348, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 214, 0, 280, 184, 350,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 183, 193, 196, 200, 201, 202, 207,
	222, 227, 228, 229, 230, 248, 249, 252, 253, 256,
	257, 263, 264, 265, 267, 268, 269, 277, 0, 285,
	292, 294, 295, 296, 298, 307, 308, 309, 310, 318,
	324, 337, 338, 357, 359, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 212, 0, 0, 165, 220, 218, 0, 0, 0,
	262, 327, 0, 0, 0, 0, 215, 0, 0, 0,
	315, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 266, 282,
	303, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 144, 0, 0, 0, 203, 358, 0,
	0, 0, 276, 0, 322, 191, 213, 148, 128, 142,
	159, 190, 251, 0, 297, 0, 0, 0, 0, 0,
	166, 0, 289, 259, 346, 0, 0, 288, 216, 336,
	0, 0, 345, 0, 0, 355, 360, 0, 0, 0,
	312, 176, 0, 133, 0, 273, 171, 208, 0, 0,
	0, 163, 0, 0, 0, 311, 334, 150, 329, 238,
	244, 160, 162, 161, 143, 306, 333, 155, 164, 316,
	293, 323, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 0, 300, 299, 0, 198, 0, 0,
	0, 281, 0, 204, 132, 325, 363, 149, 210, 330,
	0, 185, 250, 168, 260, 261, 182, 130, 278, 232,
	233, 231, 234, 189, 0, 0, 0, 279, 302, 332,
	151, 319, 0, 0, 0, 0, 291, 0, 0, 0,
	223, 178, 181, 192, 199, 0, 286, 320, 352, 0,
	134, 326, 344, 156, 301, 304, 361, 287, 137, 342,
	321, 236, 205, 206, 135, 0, 136, 284, 174, 188,
	169, 254, 0, 187, 275, 339, 340, 167, 364, 145,
	354, 139, 146, 353, 247, 0, 246, 356, 335, 343,
	237, 225, 0, 138, 341, 235, 224, 211, 180, 194,
	271, 219, 272, 195, 242, 241, 243, 221, 226, 0,
	0, 0, 317, 349, 365, 153, 0, 305, 331, 0,
	0, 154, 186, 179, 270, 245, 147, 197, 314, 209,
	217, 283, 362, 258, 290, 157, 348, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 214, 0, 280, 184,
	350, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 183, 193, 196, 200, 201, 202,
	207, 222, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 277, 0,
	285, 292, 294, 295, 296, 298, 307, 308, 309, 310,
	318, 324, 337, 338, 357, 359, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 212, 0, 0, 165, 220, 218, 0, 0,
	0, 262, 327, 0, 0, 0, 0, 215, 0, 0,
	0, 315, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 266,
	282, 303, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 144, 0, 0, 0, 203, 358,
	0, 0, 0, 276, 0, 322, 191, 213, 148, 128,
	142, 159, 190, 251, 0, 297, 0, 0, 0, 0,
	0, 166, 0, 289, 259, 346, 0, 0, 288, 216,
	336, 0, 0, 345, 0, 0, 355, 360, 0, 0,
	0, 312, 176, 0, 133, 0, 273, 171, 208, 0,
	0, 0, 163, 0, 0, 0, 311, 334, 150, 329,
	238, 244, 160, 162, 161, 143, 306, 333, 155, 164,
	316, 293, 323, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 0, 300, 299, 0, 198, 0,
	0, 0, 281, 0, 204, 132, 325, 363, 149, 210,
	330, 0, 185, 250, 168, 260, 261, 182, 130, 278,
	232, 233, 231, 234, 189, 0, 0, 0, 279, 302,
	332, 151, 319, 0, 0, 0, 0, 291, 0, 0,
	0, 223, 178, 181, 192, 199, 0, 286, 320, 352,
	0, 134, 326, 344, 156, 301, 304, 361, 287, 137,
	342, 321, 236, 205, 206, 135, 0, 136, 284, 174,
	188, 169, 254, 0, 187, 275, 339, 340, 167, 364,
	145, 354, 139, 146, 353, 247, 0, 246, 356, 335,
	343, 237, 225, 0, 138, 341, 235, 224, 211, 180,
	194, 271, 219, 272, 195, 242, 241, 243, 221, 226,
	0, 0, 0, 317, 349, 365, 153, 0, 305, 331,
	0, 0, 154, 186, 179, 270, 245, 147, 197, 314,
	209, 217, 283, 362, 258, 290, 157, 348, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 214, 0, 280,
	184, 350, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 183, 193, 196, 200, 201,
	202, 207, 222, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 268, 269, 277,
	0, 285, 292, 294, 295, 296, 298, 307, 308, 309,
	310, 318, 324, 337, 338, 357, 359, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 212, 0, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 0, 0, 0, 0, 215, 0,
	0, 0, 315, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	266, 282, 303, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 2146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 144, 0, 0, 0, 203,
	358, 0, 0, 0, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 0, 297, 0, 0, 0,
	0, 0, 166, 0, 289, 259, 346, 0, 0, 288,
	216, 336, 0, 0, 345, 0, 0, 355, 360, 0,
	0, 0, 312, 176, 0, 133, 0, 273, 171, 208,
	0, 0, 0, 163, 0, 0, 0, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 0, 300, 299, 0, 198,
	0, 0, 0, 281, 0, 204, 132, 325, 363, 149,
	210, 330, 0, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 0, 0, 0, 279,
	302, 332, 151, 319, 0, 0, 0, 0, 291, 0,
	0, 0, 223, 178, 181, 192, 199, 0, 286, 320,
	352, 0, 134, 326, 344, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 0, 0, 317, 349, 365, 153, 0, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 214, 0,
	280, 184, 350, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 0, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 212, 0, 0, 165, 220, 218,
	0, 0, 0, 262, 327, 0, 0, 0, 0, 215,
	0, 0, 0, 315, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 266, 282, 303, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 144, 0, 0, 0,
	203, 358, 0, 0, 0, 276, 0, 322, 191, 213,
	148, 128, 142, 159, 190, 251, 0, 297, 0, 0,
	0, 0, 0, 166, 0, 289, 259, 346, 0, 0,
	288, 216, 336, 0, 0, 345, 0, 0, 355, 360,
	0, 0, 0, 312, 176, 0, 133, 0, 273, 171,
	208, 0, 0, 0, 163, 0, 0, 0, 311, 334,
	150, 329, 238, 244, 160, 162, 161, 143, 306, 333,
	155, 164, 316, 293, 323, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 0, 300, 299, 0,
	198, 0, 0, 0, 281, 0, 204, 132, 325, 363,
	149, 210, 330, 0, 185, 250, 168, 260, 261, 182,
	130, 278, 232, 233, 231, 234, 189, 0, 0, 0,
	279, 302, 332, 151, 319, 0, 0, 0, 0, 291,
	0, 0, 0, 223, 178, 181, 192, 199, 0, 286,
	320, 352, 0, 134, 326, 344, 156, 301, 304, 361,
	287, 137, 342, 321, 236, 205, 206, 135, 0, 136,
	284, 174, 188, 169, 254, 0, 187, 275, 339, 340,
	167, 364, 145, 354, 139, 146, 353, 247, 0, 246,
	356, 335, 343, 237, 225, 0, 138, 341, 235, 224,
	211, 180, 194, 271, 219, 272, 195, 242, 241, 243,
	221, 226, 0, 0, 0, 317, 349, 365, 153, 0,
	305, 331, 0, 0, 154, 186, 179, 270, 245, 147,
	197, 314, 209, 217, 283, 362, 258, 290, 157, 348,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 214,
	0, 280, 184, 350, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 183, 193, 196,
	200, 201, 202, 207, 222, 227, 228, 229, 230, 248,
	249, 252, 253, 256, 257, 263, 264, 265, 267, 268,
	269, 277, 0, 285, 292, 294, 295, 296, 298, 307,
	308, 309, 310, 318, 324, 337, 338, 357, 359, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 212, 0, 0, 165, 220,
	218, 0, 0, 0, 262, 327, 0, 0, 0, 0,
	215, 0, 0, 0, 315, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 266, 282, 303, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 144, 0, 0,
	0, 203, 358, 0, 0, 0, 276, 0, 322, 191,
	213, 148, 128, 142, 159, 190, 251, 0, 297, 0,
	0, 0, 0, 0, 166, 0, 289, 259, 346, 0,
	0, 288, 216, 336, 0, 0, 345, 0, 0, 355,
	360, 0, 0, 0, 312, 176, 0, 133, 0, 273,
	171, 208, 0, 0, 0, 163, 0, 0, 0, 311,
	334, 150, 329, 238, 244, 160, 162, 161, 143, 306,
	333, 155, 164, 316, 293, 323, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 0, 300, 299,
	0, 198, 0, 0, 0, 281, 0, 204, 132, 325,
	363, 149, 210, 330, 0, 185, 250, 168, 260, 261,
	182, 130, 278, 232, 233, 231, 234, 189, 0, 0,
	0, 279, 302, 332, 151, 319, 0, 0, 0, 0,
	291, 0, 0, 0, 223, 178, 181, 192, 199, 0,
	286, 320, 352, 0, 134, 326, 344, 156, 301, 304,
	361, 287, 137, 342, 321, 236, 205, 206, 135, 0,
	136, 284, 174, 188, 169, 254, 0, 187, 275, 339,
	340, 167, 364, 145, 354, 139, 146, 353, 247, 0,
	246, 356, 335, 343, 237, 225, 0, 138, 341, 235,
	224, 211, 180, 194, 271, 219, 272, 195, 242, 241,
	243, 221, 226, 0, 0, 0, 317, 349, 365, 153,
	0, 305, 331, 0, 0, 154, 186, 179, 270, 245,
	147, 197, 314, 209, 217, 283, 362, 258, 290, 157,
	348, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	214, 0, 280, 184, 350, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 183, 193,
	196, 200, 201, 202, 207, 222, 227, 228, 229, 230,
	248, 249, 252, 253, 256, 257, 263, 264, 265, 267,
	268, 269, 277, 0, 285, 292, 294, 295, 296, 298,
	307, 308, 309, 310, 318, 324, 337, 338, 357, 359,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	1128, 175, 0, 0, 0, 0, 212, 0, 0, 165,
	220, 218, 0, 0, 0, 262, 327, 0, 0, 0,
	0, 215, 0, 0, 0, 315, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 266, 282, 303, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 144, 0,
	0, 0, 203, 358, 0, 0, 0, 276, 0, 322,
	191, 213, 148, 128, 142, 159, 190, 251, 0, 297,
	0, 0, 0, 0, 0, 166, 0, 289, 259, 346,
	0, 0, 288, 216, 336, 0, 0, 345, 0, 0,
	355, 360, 0, 0, 0, 312, 176, 0, 133, 0,
	273, 171, 208, 0, 0, 0, 163, 0, 0, 0,
	311, 334, 150, 329, 238, 244, 160, 162, 161, 143,
	306, 333, 155, 164, 316, 293, 323, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 351, 0, 300,
	299, 0, 198, 0, 0, 0, 281, 0, 204, 132,
	325, 363, 149, 210, 330, 0, 185, 250, 168, 260,
	261, 182, 130, 278, 232, 233, 231, 234, 189, 0,
	0, 0, 279, 302, 332, 151, 319, 0, 0, 0,
	0, 291, 0, 0, 0, 223, 178, 181, 192, 199,
	0, 286, 320, 352, 0, 134, 326, 344, 156, 301,
	304, 361, 287, 137, 342, 321, 236, 205, 206, 135,
	0, 136, 284, 174, 188, 169, 254, 0, 187, 275,
	339, 340, 167, 364, 145, 354, 139, 146, 353, 247,
	0, 246, 356, 335, 343, 237, 225, 0, 138, 341,
	235, 224, 211, 180, 194, 271, 219, 272, 195, 242,
	241, 243, 221, 226, 0, 0, 0, 317, 349, 365,
	153, 0, 305, 331, 0, 0, 154, 186, 179, 270,
	245, 147, 197, 314, 209, 217, 283, 362, 258, 290,
	157, 348, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 214, 0, 280, 184, 350, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 183,
	193, 196, 200, 201, 202, 207, 222, 227, 228, 229,
	230, 248, 249, 252, 253, 256, 257, 263, 264, 265,
	267, 268, 269, 277, 0, 285, 292, 294, 295, 296,
	298, 307, 308, 309, 310, 318, 324, 337, 338, 357,
	359, 328, 0, 0, 0, 609, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 212, 0, 0,
	165, 220, 218, 0, 0, 0, 262, 327, 0, 0,
	0, 0, 215, 0, 0, 0, 315, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 266, 282, 303, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 144,
	0, 0, 0, 203, 358, 0, 0, 0, 276, 0,
	322, 191, 213, 148, 128, 142, 159, 190, 251, 0,
	297, 0, 0, 0, 0, 0, 166, 0, 289, 259,
	346, 0, 0, 288, 216, 336, 0, 0, 345, 0,
	0, 355, 360, 0, 0, 0, 312, 176, 0, 133,
	0, 273, 171, 208, 0, 0, 0, 163, 0, 0,
	0, 311, 334, 150, 329, 238, 244, 160, 162, 161,
	143, 306, 333, 155, 164, 316, 293, 323, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 0,
	300, 299, 0, 198, 0, 0, 0, 281, 0, 204,
	132, 325, 363, 149, 210, 330, 0, 185, 250, 168,
	260, 261, 182, 130, 278, 232, 233, 231, 234, 189,
	0, 0, 0, 279, 302, 332, 151, 319, 0, 0,
	0, 0, 291, 0, 0, 0, 223, 178, 181, 192,
	199, 0, 286, 320, 352, 0, 134, 326, 344, 156,
	301, 304, 361, 287, 137, 342, 321, 236, 205, 206,
	135, 0, 136, 284, 174, 188, 169, 254, 0, 187,
	275, 339, 340, 167, 364, 145, 354, 139, 146, 353,
	247, 0, 246, 356, 335, 343, 237, 225, 0, 138,
	341, 235, 224, 211, 180, 194, 271, 219, 272, 195,
	242, 241, 243, 221, 226, 0, 0, 0, 317, 349,
	365, 153, 0, 305, 331, 0, 0, 154, 186, 179,
	270, 245, 147, 197, 314, 209, 217, 283, 362, 258,
	290, 157, 348, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 214, 0, 280, 184, 350, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	183, 193, 196, 200, 201, 202, 207, 222, 227, 228,
	229, 230, 248, 249, 252, 253, 256, 257, 263, 264,
	265, 267, 268, 269, 277, 0, 285, 292, 294, 295,
	296, 298, 307, 308, 309, 310, 318, 324, 337, 338,
	357, 359, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 212, 0,
	0, 165, 220, 218, 0, 0, 0, 262, 327, 0,
	0, 0, 0, 215, 0, 0, 0, 315, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 266, 282, 303, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	144, 0, 123, 0, 203, 358, 0, 0, 0, 276,
	0, 322, 191, 213, 148, 128, 142, 159, 190, 251,
	0, 297, 0, 0, 0, 0, 0, 166, 0, 289,
	259, 346, 0, 0, 288, 216, 336, 0, 0, 345,
	0, 0, 355, 360, 0, 0, 0, 312, 176, 0,
	133, 0, 273, 171, 208, 0, 0, 0, 163, 0,
	0, 0, 311, 334, 150, 329, 238, 244, 160, 162,
	161, 143, 306, 333, 155, 164, 316, 293, 323, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 351,
	0, 300, 299, 0, 198, 0, 0, 0, 281, 0,
	204, 132, 325, 363, 149, 210, 330, 0, 185, 250,
	168, 260, 261, 182, 130, 278, 232, 233, 231, 234,
	189, 0, 0, 0, 279, 302, 332, 151, 319, 0,
	0, 0, 0, 291, 0, 0, 0, 223, 178, 181,
	192, 199, 0, 286, 320, 352, 0, 134, 326, 344,
	156, 301, 304, 361, 287, 137, 342, 321, 236, 205,
	206, 135, 0, 136, 284, 174, 188, 169, 254, 0,
	187, 275, 339, 340, 167, 364, 145, 354, 139, 146,
	353, 247, 0, 246, 356, 335, 343, 237, 225, 0,
	138, 341, 235, 224, 211, 180, 194, 271, 219, 272,
	195, 242, 241, 243, 221, 226, 0, 0, 0, 317,
	349, 365, 153, 0, 305, 331, 0, 0, 154, 186,
	179, 270, 245, 147, 197, 314, 209, 217, 283, 362,
	258, 290, 157, 348, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 214, 0, 280, 184, 350, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 183, 193, 196, 200, 201, 202, 207, 222, 227,
	228, 229, 230, 248, 249, 252, 253, 256, 257, 263,
	264, 265, 267, 268, 269, 277, 0, 285, 292, 294,
	295, 296, 298, 307, 308, 309, 310, 318, 324, 337,
	338, 357, 359, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 212,
	0, 0, 165, 220, 218, 0, 0, 0, 262, 327,
	0, 0, 0, 0, 215, 0, 0, 0, 315, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 266, 282, 303, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 144, 0, 0, 0, 203, 358, 0, 0, 0,
	276, 0, 322, 191, 213, 148, 128, 142, 159, 190,
	251, 0, 297, 0, 0, 0, 0, 0, 166, 0,
	289, 259, 346, 0, 0, 288, 216, 336, 0, 0,
	345, 0, 0, 355, 360, 0, 0, 0, 312, 176,
	0, 133, 0, 273, 171, 208, 0, 0, 0, 163,
	0, 0, 0, 311, 334, 150, 329, 238, 244, 160,
	162, 161, 143, 306, 333, 155, 164, 316, 293, 323,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 0, 300, 299, 0, 198, 0, 0, 0, 281,
	0, 204, 132, 325, 363, 149, 210, 330, 0, 185,
	250, 168, 260, 261, 182, 130, 278, 232, 233, 231,
	234, 189, 0, 0, 0, 279, 302, 332, 151, 319,
	0, 0, 0, 0, 291, 0, 0, 0, 223, 178,
	181, 192, 199, 0, 286, 320, 352, 0, 134, 326,
	344, 156, 301, 304, 361, 287, 137, 342, 321, 236,
	205, 206, 135, 0, 136, 284, 174, 188, 169, 254,
	0, 187, 275, 339, 340, 167, 364, 145, 354, 139,
	146, 353, 247, 0, 246, 356, 335, 343, 237, 225,
	0, 138, 341, 235, 224, 211, 180, 194, 271, 219,
	272, 195, 242, 241, 243, 221, 226, 0, 0, 0,
	317, 349, 365, 153, 0, 305, 331, 0, 0, 154,
	186, 179, 270, 245, 147, 197, 314, 209, 217, 283,
	362, 258, 290, 157, 348, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 214, 0, 280, 184, 350, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 183, 193, 196, 200, 201, 202, 207, 222,
	227, 228, 229, 230, 248, 249, 252, 253, 256, 257,
	263, 264, 265, 267, 268, 269, 277, 0, 285, 292,
	294, 295, 296, 298, 307, 308, 309, 310, 318, 324,
	337, 338, 357, 359, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	212, 0, 0, 165, 220, 218, 0, 0, 0, 262,
	327, 0, 0, 0, 0, 215, 0, 0, 0, 315,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 266, 282, 303,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 144, 0, 0, 0, 203, 358, 0, 0,
	0, 276, 0, 322, 191, 213, 148, 128, 142, 159,
	190, 251, 0, 297, 0, 0, 0, 0, 0, 166,
	0, 289, 259, 346, 0, 0, 288, 216, 336, 0,
	0, 345, 0, 0, 355, 360, 0, 0, 0, 312,
	176, 0, 133, 0, 273, 171, 208, 0, 0, 0,
	163, 0, 0, 0, 311, 334, 150, 329, 238, 244,
	160, 162, 161, 143, 306, 333, 155, 164, 316, 293,
	323, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 351, 0, 300, 299, 0, 198, 0, 0, 0,
	281, 0, 204, 132, 325, 363, 149, 210, 330, 0,
	185, 250, 168, 260, 261, 182, 130, 278, 232, 233,
	231, 234, 189, 0, 0, 0, 279, 302, 332, 151,
	319, 0, 0, 0, 0, 291, 0, 0, 0, 223,
	178, 181, 192, 199, 0, 286, 320, 352, 0, 134,
	326, 344, 156, 301, 304, 361, 287, 137, 342, 321,
	236, 205, 206, 135, 0, 136, 284, 174, 188, 169,
	254, 0, 187, 275, 339, 340, 167, 364, 145, 354,
	139, 146, 353, 247, 0, 246, 356, 335, 343, 237,
	225, 0, 138, 341, 235, 224, 211, 180, 194, 271,
	219, 272, 195, 242, 241, 243, 221, 226, 0, 0,
	0, 317, 349, 365, 153, 0, 305, 331, 0, 0,
	154, 186, 179, 270, 245, 147, 197, 314, 209, 217,
	283, 362, 258, 290, 157, 348, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 214, 0, 280, 184, 350,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 183, 193, 196, 200, 201, 202, 207,
	222, 227, 228, 229, 230, 248, 249, 252, 253, 256,
	257, 263, 264, 265, 267, 268, 269, 277, 0, 285,
	292, 294, 295, 296, 298, 307, 308, 309, 310, 318,
	324, 337, 338, 357, 359, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 212, 0, 0, 165, 220, 218, 0, 0, 0,
	262, 327, 0, 0, 0, 0, 215, 0, 0, 0,
	315, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 266, 282,
	303, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 144, 0, 0, 0, 203, 358, 0,
	0, 0, 276, 0, 322, 191, 213, 148, 128, 142,
	159, 190, 251, 0, 297, 0, 0, 0, 0, 0,
	166, 0, 289, 259, 346, 0, 0, 288, 216, 336,
	0, 0, 345, 0, 0, 355, 360, 0, 0, 0,
	312, 176, 0, 133, 0, 273, 171, 208, 0, 0,
	0, 163, 0, 0, 0, 311, 334, 150, 329, 238,
	244, 160, 162, 161, 143, 306, 333, 155, 164, 316,
	293, 323, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 351, 0, 300, 299, 0, 198, 0, 0,
	0, 281, 0, 204, 132, 325, 363, 149, 210, 330,
	0, 185, 250, 168, 260, 261, 182, 130, 278, 232,
	233, 231, 234, 189, 0, 0, 0, 279, 302, 332,
	151, 319, 0, 0, 0, 0, 291, 0, 0, 0,
	223, 178, 181, 192, 199, 0, 286, 320, 352, 0,
	134, 326, 344, 156, 301, 304, 361, 287, 137, 342,
	321, 236, 205, 206, 135, 0, 136, 284, 174, 188,
	169, 254, 0, 187, 275, 339, 340, 167, 364, 145,
	354, 139, 146, 353, 247, 0, 246, 356, 335, 343,
	237, 225, 0, 138, 341, 235, 224, 211, 180, 194,
	271, 219, 272, 195, 242, 241, 243, 221, 226, 0,
	0, 0, 317, 349, 365, 153, 0, 305, 331, 0,
	0, 154, 186, 179, 270, 245, 147, 197, 314, 209,
	217, 283, 362, 258, 290, 157, 348, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 214, 0, 280, 184,
	350, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 183, 193, 196, 200, 201, 202,
	207, 222, 227, 228, 229, 230, 248, 249, 252, 253,
	256, 257, 263, 264, 265, 267, 268, 269, 277, 0,
	285, 292, 294, 295, 296, 298, 307, 308, 309, 310,
	318, 324, 337, 338, 357, 359, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 212, 0, 0, 165, 220, 218, 0, 0,
	0, 262, 327, 0, 0, 0, 0, 215, 0, 0,
	0, 315, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 266,
	282, 303, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 144, 0, 0, 0, 203, 358,
	0, 0, 0, 276, 0, 322, 191, 213, 148, 128,
	142, 159, 190, 251, 0, 297, 0, 0, 0, 0,
	0, 166, 0, 289, 259, 346, 0, 0, 288, 216,
	336, 0, 0, 345, 0, 0, 355, 360, 0, 0,
	0, 312, 176, 0, 133, 0, 273, 171, 208, 0,
	0, 0, 163, 0, 0, 0, 311, 334, 150, 329,
	238, 244, 160, 162, 161, 143, 306, 333, 155, 164,
	316, 293, 323, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 0, 300, 299, 0, 198, 0,
	0, 0, 281, 0, 204, 132, 325, 363, 149, 210,
	330, 0, 185, 250, 168, 260, 261, 182, 130, 278,
	232, 233, 231, 234, 189, 0, 0, 0, 279, 302,
	332, 151, 319, 0, 0, 0, 0, 291, 0, 0,
	0, 223, 178, 181, 192, 199, 0, 286, 320, 352,
	0, 134, 326, 344, 156, 301, 304, 361, 287, 137,
	342, 321, 236, 205, 206, 135, 0, 136, 284, 174,
	188, 169, 254, 0, 187, 275, 339, 340, 167, 364,
	145, 354, 139, 629, 353, 247, 0, 246, 356, 335,
	343, 237, 225, 0, 138, 341, 235, 224, 211, 180,
	194, 271, 219, 272, 195, 242, 241, 243, 625, 226,
	0, 0, 0, 317, 349, 365, 153, 0, 305, 331,
	0, 0, 154, 186, 179, 270, 630, 628, 619, 620,
	209, 217, 283, 362, 258, 290, 157, 348, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 214, 0, 280,
	184, 350, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 183, 193, 196, 200, 201,
	202, 207, 222, 227, 228, 229, 230, 248, 249, 252,
	253, 256, 257, 263, 264, 265, 267, 626, 627, 277,
	0, 285, 292, 294, 295, 296, 298, 307, 308, 309,
	310, 318, 324, 337, 338, 357, 359, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 212, 0, 0, 165, 220, 218, 0,
	0, 0, 262, 327, 0, 0, 0, 0, 215, 0,
	0, 0, 315, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	266, 282, 303, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 144, 0, 0, 0, 203,
	358, 0, 0, 0, 276, 0, 322, 191, 213, 148,
	128, 142, 159, 190, 251, 0, 297, 0, 0, 0,
	0, 0, 166, 0, 289, 259, 346, 0, 0, 288,
	216, 336, 0, 0, 345, 0, 0, 355, 360, 0,
	0, 0, 312, 176, 0, 133, 0, 273, 171, 208,
	0, 0, 0, 163, 0, 0, 0, 311, 334, 150,
	329, 238, 244, 160, 162, 161, 143, 306, 333, 155,
	164, 316, 293, 323, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 351, 0, 300, 299, 0, 198,
	0, 0, 0, 281, 0, 204, 132, 325, 363, 149,
	210, 330, 0, 185, 250, 168, 260, 261, 182, 130,
	278, 232, 233, 231, 234, 189, 0, 0, 0, 279,
	302, 332, 151, 319, 0, 0, 0, 0, 291, 0,
	0, 0, 223, 178, 181, 192, 199, 0, 286, 320,
	352, 0, 134, 326, 1153, 156, 301, 304, 361, 287,
	137, 342, 321, 236, 205, 206, 135, 0, 136, 284,
	174, 188, 169, 254, 0, 187, 275, 339, 340, 167,
	364, 145, 354, 139, 146, 353, 247, 0, 246, 356,
	335, 343, 237, 225, 0, 138, 341, 235, 224, 211,
	180, 194, 271, 219, 272, 195, 242, 241, 243, 221,
	226, 0, 0, 0, 317, 349, 365, 153, 0, 305,
	331, 0, 0, 154, 186, 179, 270, 245, 147, 197,
	314, 209, 217, 283, 362, 258, 290, 157, 348, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 214, 0,
	280, 184, 350, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 183, 193, 196, 200,
	201, 202, 207, 222, 227, 228, 229, 230, 248, 249,
	252, 253, 256, 257, 263, 264, 265, 267, 268, 269,
	277, 0, 285, 292, 294, 295, 296, 298, 307, 308,
	309, 310, 318, 324, 337, 338, 357, 359, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 212, 0, 0, 165, 220, 218,
	0, 0, 0, 262, 327, 0, 0, 0, 0, 215,
	0, 0, 0, 315, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 266, 282, 303, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 144, 0, 0, 0,
	203, 358, 0, 0, 0, 276, 0, 322, 191, 213,
	148, 128, 142, 159, 190, 251, 0, 297, 0, 0,
	0, 0, 0, 166, 0, 289, 259, 346, 0, 0,
	288, 216, 336, 0, 0, 345, 0, 0, 355, 360,
	0, 0, 0, 312, 176, 0, 133, 0, 273, 171,
	208, 0, 0, 0, 163, 0, 0, 0, 311, 334,
	150, 329, 238, 244, 160, 162, 161, 143, 306, 333,
	155, 164, 316, 293, 323, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 351, 0, 300, 299, 0,
	198, 0, 0, 0, 281, 0, 204, 132, 325, 363,
	149, 210, 330, 0, 185, 250, 168, 260, 261, 182,
	130, 278, 232, 233, 231, 234, 189, 0, 0, 0,
	279, 302, 332, 151, 319, 0, 0, 0, 0, 291,
	0, 0, 0, 223, 178, 181, 192, 199, 0, 286,
	320, 352, 0, 134, 326, 616, 156, 301, 304, 361,
	287, 137, 342, 321, 236, 205, 206, 135, 0, 136,
	284, 174, 188, 169, 254, 0, 187, 275, 339, 340,
	167, 364, 145, 354, 139, 629, 353, 247, 0, 246,
	356, 335, 343, 237, 225, 0, 138, 341, 235, 224,
	211, 180, 194, 271, 219, 272, 195, 242, 241, 243,
	625, 226, 0, 0, 0, 317, 349, 365, 153, 0,
	305, 331, 0, 0, 154, 186, 179, 270, 630, 628,
	619, 620, 209, 217, 283, 362, 258, 290, 157, 348,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 131, 140, 214,
	78, 280, 184, 350, 41, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 183, 193, 196,
	200, 201, 202, 207, 222, 227, 228, 229, 230, 248,
	249, 252, 253, 256, 257, 263, 264, 265, 267, 626,
	627, 277, 81, 285, 292, 294, 295, 296, 298, 307,
	308, 309, 310, 318, 324, 337, 338, 357, 359, 0,
	0, 0, 0, 0, 0, 0, 2506, 0, 0, 0,
	36, 2746, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 41, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2507, 0, 0,
	0, 0, 81, 2734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 2506, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2508, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 2507, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 68,
	47, 0, 0, 0, 2506, 0, 0, 0, 0, 2675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2509, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2508, 0,
	43, 74, 46, 45, 48, 0, 36, 0, 72, 39,
	40, 0, 66, 0, 67, 2507, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	41, 49, 77, 76, 0, 0, 0, 0, 47, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2509, 75, 81, 53,
	54, 61, 0, 62, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2508, 0, 0, 0,
	0, 0, 2506, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2507, 2509, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 73, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2509, 75, 0, 53, 54, 61, 0, 62,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	3240, -1000, -324, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1768, -1000, -1000, -1000, -1000,
	-1000, -1000, 915, 290, -1000, 287, 122, 29315, 651, 3470,
	30297, -1000, -1000, -1000, 192, 526, 30297, 468, 439, 1286,
	1665, 1285, 40, -43, -44, 168, 22931, 22439, 29, -1000,
	1837, 1839, -1000, -1000, 556, 53, -1000, -1000, -1000, 19983,
	186, -1000, -1000, 1753, 1766, 1583, -1000, 13109, 556, 556,
	28824, 32261, -1000, 1836, 30297, 11634, -1000, 608, 30297, -138,
	545, 545, 351, 545, 545, 650, -1000, 851, -1000, -1000,
	-1000, -1000, 30297, 25878, 554, 29806, 554, 554, 554, 554,
	554, 554, 554, 30297, -1000, 713, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30297, 1284, 1692, 956,
	156, -1000, -1000, -1000, 953, -1000, 327, 324, 345, 286,
	111, 960, 1750, -1000, 1471, 1753, 1753, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 355, 592, 230, 186, 847, -1000,
	1691, 1690, 1149, 1686, 509, 1685, 1520, -25, -1000, 1278,
	30297, -1000, -1000, 1124, 1061, 1542, 1416, 668, 1541, -1000,
	-1000, 381, 580, 1512, 421, 1512, 1512, 1512, 1512, 1512,
	-53, 1512, 1512, 1512, 90, 1512, 151, 1512, 1512, 1512,
	1512, 1512, 1301, -1000, -1000, -1000, 393, 1412, 1455, 1537,
	210, -1000, -1000, -1000, -1000, 1547, 1741, 626, -1000, -84,
	1469, 20965, -1000, 1471, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1294, 1688,
	981, 16055, 1644, -1000, -1000, 938, 1810, -1000, 19492, 711,
	-1000, 16055, 2952, 1471, -1000, -1000, 1471, -1000, -1000, -1000,
	666, -1000, -1000, 18019, 18019, 18019, 18019, 18019, 18019, 18019,
	18019, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1471, 1471, 1471, 1471, 1471,
	1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
	1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
	1471, 1471, 1471, -1000, -1000, 1471, -1000, 12618, 1471, 1471,
	1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
	16055, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
	1471, 1471, 1471, 1471, 1471, 1471, 1471, 28333, 26369, 30297,
	1450, 1446, -1000, -1000, 710, 1480, -77, 31770, -1000, -1000,
	-1000, -1000, 30788, 25387, 844, -1000, -1000, -1000, -1000, 1684,
	-1000, -1000, 703, -1000, 1768, -1000, -1000, 1386, 534, -1000,
	4233, 4677, -1000, -1000, -1000, 1519, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29806, 1732, 601, 1272, 900, 1270, 1269,
	1266, 25878, 25878, 545, 1260, 1479, 590, 1475, 589, 1186,
	30297, 1716, 1534, 30297, 1259, 1254, 1248, 1246, 25878, 25878,
	-1000, 11140, -1000, -1000, 956, -1000, 1200, 16055, 545, 545,
	30297, 30297, 30297, 30297, -1000, -1000, 956, 956, 956, 956,
	905, 1807, 905, -1000, 905, -1000, -1000, 16055, -1000, 18019,
	24896, 762, -1000, -1000, -1000, 1245, 344, -1000, -1000, -1000,
	-1000, -1000, -1000, 1239, 509, 509, -1000, 1199, 509, 1465,
	-1000, 842, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 509, -1000, 15564, -322, -1000, -1000,
	1474, -1000, 299, -1000, -1000, 520, 520, 206, 25878, 25878,
	25878, -1000, 1512, 29806, -1000, 1512, 1512, 1512, -63, 1512,
	1512, -1000, -1000, 1512, -1000, -1000, -1000, -1000, -1000, 1512,
	-1000, -1000, -1000, 1512, 1512, -1000, 1512, 1512, -1000, -1000,
	-1000, -1000, -1000, 25878, 520, 162, 1472, 520, 25878, 25878,
	-1000, 210, -1000, 78, 75, 73, 68, -1000, -1000, -1000,
	-1000, 66, -1000, -1000, 1583, -1000, -1000, 186, -1000, -1000,
	30297, -99, 20965, 1469, 1730, 9658, -1000, -1000, -1000, 1829,
	715, 1442, -1000, -1000, 1467, -1000, 1130, 697, 1183, 1592,
	-1000, -1000, -1000, 30297, -1000, 16055, 16055, 1153, -1000, 21456,
	-1000, -1000, -1000, -1000, 9164, 810, 18019, 972, 855, 18019,
	18019, 18019, 18019, 18019, 18019, 18019, 18019, 18019, 18019, 18019,
	18019, 18019, 18019, 18019, 1067, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1237, -1000, 186, 1171, 1171, 736, 736,
	736, 736, 736, 736, 736, 23422, 1725, 14091, 14091, 14091,
	1725, 1294, 1294, 14091, 14091, 14091, 14091, 14091, 14091, 1725,
	1725, 14091, 1294, 1294, 1294, 1294, 14091, 14091, 14091, 14091,
	1725, 14091, 14091, 14091, 1725, 1294, 1384, 1011, 12618, 14091,
	14091, 14091, 1294, 16055, 16055, 15073, 14582, 16546, 14091, 14091,
	1725, 872, 1011, 30788, -1000, -1000, 17528, -1000, -1000, -1000,
	-1000, -1000, 1294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 29806, 29806, 14091, 14091, 14091, 14091, 803, 30297, -1000,
	1453, 1470, -1000, -1000, -1000, 1727, 24405, 19001, -1000, 803,
	1410, 26369, 30297, -1000, -1000, 26369, 30297, 8670, 31279, 1441,
	-1000, -111, -101, -77, -1000, -1000, 729, -1000, -1000, -1000,
	12126, -1000, 10152, 1753, 1583, 6200, 10646, -1000, 4677, 1519,
	-1000, -36, -1000, -1000, -1000, 1498, -1000, 1498, 281, 14,
	1498, 1498, 1498, 1498, 1498, 1, 1, 1, 1, 18,
	-1000, -1000, -1000, -1000, -1000, 1518, 1516, -1000, 1498, 1498,
	1498, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1509, 300, 1501, 1501, 1501, 1501, 1501, 366, 366, -1000,
	16055, 1522, -1000, 30297, -1000, 1713, -1000, 334, 1513, 1436,
	-1000, 189, 1394, 30297, -1000, 30297, 30297, 25878, 25878, 25878,
	628, -1000, 30297, 1466, -1000, -1000, -1000, -1000, -1000, 1426,
	-1000, 1394, -1000, -1000, -1000, -1000, -1000, 1011, 1234, 1233,
	-1000, -1000, -1000, 936, -1000, -1000, -1000, -1000, 956, 30297,
	30297, 30297, 1726, 956, 1011, 660, 1523, 1471, 1294, -1000,
	-1000, 1232, -1000, 1465, 1465, -1000, 1465, 509, 1171, 1465,
	-1000, 1381, 1708, 1198, 30297, -1000, 20965, -26, -1000, -117,
	27842, -1000, -1000, -1000, 27842, -1000, 90, 172, -1000, 588,
	-1000, 1379, -1000, -1000, -1000, -1000, 1512, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27842, 123, 161, 27842,
	1426, 1803, -1000, -1000, -1000, -1000, -1000, -1000, 1725, 1294,
	265, -1000, -1000, -1000, 1471, 1342, 696, -1000, 1577, 981,
	981, 16055, -1000, -1000, -1000, 10152, 1737, -1000, 1611, 1608,
	1552, -1000, -1000, 810, 879, -1000, -1000, 1146, -1000, -1000,
	-1000, -1000, 695, 1471, -1000, 3515, -1000, -1000, -1000, -1000,
	972, 18019, 18019, 18019, 660, 3515, 3453, 752, 804, 736,
	769, 769, 738, 738, 738, 738, 738, 830, 830, -1000,
	-1000, -1000, 1294, -1000, -1000, -1000, 14091, 1373, -1000, -1000,
	1011, 694, 1373, 1373, 14091, -154, -154, 1294, 1373, 1373,
	1373, 1294, 1373, 14091, 14091, 1373, -154, -154, -154, -154,
	1373, 1373, 1373, 1373, 14091, 1373, 1373, 1373, 14091, -1000,
	16055, -1000, 1294, 1373, 1373, 1373, -1000, 955, 1105, 807,
	1801, 1373, 799, 1795, 1373, 2686, 18019, 18019, 18019, 1373,
	1373, 14091, 881, -1000, 16055, 1294, -1000, 1305, 1456, 1449,
	1373, 1294, 1445, 1373, 1373, 183, 1471, -1000, 10152, 26369,
	26369, 26369, 26369, 26369, -1000, 1567, 1561, -1000, 1570, 1563,
	1576, 20965, 1375, 1294, 274, 24405, -1000, 1471, -1000, 20474,
	685, 607, 606, 604, 1782, 26369, 1406, -1000, 1406, -1000,
	680, -1000, -1000, 30788, -77, -120, -1000, -1000, 1441, -1000,
	1073, -1000, -1000, 1011, -1000, 677, 1688, 1725, 1440, 5706,
	-1000, -1000, -1000, -1000, 534, -1000, -1000, -1000, 1511, 3274,
	-1000, 1637, 686, 721, 1212, 1628, -1000, -1000, 337, -38,
	-1000, -1000, 1054, 1, 1, 1498, 1498, 262, 1498, -1000,
	1, -1000, -1000, -1000, 729, 1682, 729, 729, 729, 729,
	1, 1197, 1197, -1000, -1000, -1000, -1000, 1049, -1000, 1509,
	-1000, 1045, -1000, -1000, -1000, -1000, -1000, -1000, 1038, 1533,
	29806, 186, 1722, -1000, 1787, -1000, -1000, 591, 97, 25878,
	185, 416, 219, -1000, 587, -1000, 585, -1000, -1000, -1000,
	-1000, -1000, -1000, 30297, 25878, -1000, -1000, 1782, 1231, 1230,
	-1000, -1000, -1000, 905, 956, 1668, -1000, -1000, 18019, 25878,
	-1000, 318, -1000, -1000, -1000, -1000, 803, 620, -1000, -1000,
	-83, -1000, -1000, 581, 674, 672, 563, -1000, 108, 25878,
	-1000, 29806, -1000, 1794, 1793, 118, 1791, 25878, 1592, -1000,
	1438, -1000, 701, 699, 688, 375, 375, -1000, 811, 375,
	802, -1000, 211, -1000, 9658, 9658, 1587, -1000, -1000, -1000,
	30297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8176, 14091, -1000, 660, 3515, 3272, -1000, 18019, -1000, 1373,
	14091, -154, 7682, -154, -154, 1373, -1000, 27351, -1000, -154,
	-154, -154, -154, -154, -154, 1373, 1373, -154, -1000, -1000,
	-1000, -1000, -154, -154, -154, -154, 1373, -154, -154, -154,
	1294, 1011, -1000, -1000, -1000, -1000, 487, 1067, 487, 18019,
	18019, -1000, 18019, 18019, -1000, -1000, 18019, 3390, 3197, 3167,
	-190, -1000, 1443, 861, -1000, 16055, 1009, -1000, -1000, 18019,
	18019, -1000, -1000, -1000, -1000, 1532, 10152, 1471, 6694, -1000,
	29806, 1434, -1000, 841, 835, 1470, 1507, 1531, 1329, -1000,
	-1000, -1000, -1000, 1560, -1000, 1554, -1000, -1000, 1484, -1000,
	-1000, 1435, 1471, 29806, 18019, 685, -1000, 1471, 1471, 1471,
	1768, 16055, 1406, -1000, -1000, 759, -1000, -1000, -85, -112,
	-1000, -1000, -1000, 9658, -1000, 6200, -1000, 6200, -1000, 21947,
	547, 1641, 364, -1000, 1212, -1000, -1000, 1212, -1000, -1000,
	-1000, 1502, -1000, 928, -1000, -1000, -1000, -1000, -1000, 18019,
	1824, -1000, 1630, -1000, 1629, 1196, -1000, -1000, 1323, 729,
	729, 1, -1000, -1000, 1498, -1000, 729, -1000, 783, -1000,
	-1000, -1000, -1000, 729, 1371, -1000, 1369, 1429, -1000, 1364,
	119, 30297, -1000, -1000, -1000, 1530, -1000, -1000, -1000, 1310,
	1427, -1000, 4233, 1229, 1227, 1226, -197, 204, -1000, 25878,
	137, 189, 445, 1224, 30297, 25878, -1000, -1000, -1000, -1000,
	-1000, 956, -1000, 18019, 3515, 1394, -1000, -1000, 1, 30297,
	-1000, 25878, 745, 26860, 25878, 117, 138, -1000, 25878, 25878,
	1790, 25878, 1426, 1552, 265, 22435, 1212, 671, -1000, -1000,
	388, -1000, 2564, 1628, 1220, 23892, 23401, 29806, 1626, 1624,
	1219, 30297, 29806, -1000, -1000, 22915, 1218, 16055, -1000, 29806,
	29806, 670, -1000, -1000, -1000, 1405, 13109, -1000, -1000, 1294,
	-1000, 18019, 3515, -154, -1000, -1000, -1000, -1000, 665, -1000,
	-1000, -154, -1000, -1000, 1217, -1000, -1000, -1000, -1000, -1000,
	-1000, -154, -154, -1000, -1000, -1000, -1000, -1000, -154, -1000,
	-1000, -1000, -1000, 1294, 1498, 1498, -1000, 1498, 1501, -1000,
	1498, 24, 1498, 23, 1294, 1294, 3079, 3042, 2904, 2732,
	1305, 18019, 18019, 18019, 1471, -150, -1000, 1011, 16055, 1916,
	911, -1000, 1699, 1393, 1420, -1000, -1000, 13600, 1294, 1604,
	1342, -1000, 19983, 1340, -1000, 1768, 10152, 16055, 16055, -1000,
	-1000, 16055, 1499, -1000, 16055, -1000, -1000, -1000, -1000, 29806,
	273, -1000, 16055, 1340, 1042, -1000, 29806, 29806, 29806, 1753,
	1011, -1000, -1000, -1000, -1000, 5706, -1000, 1338, -1000, 1498,
	1498, 1623, -1000, 686, -1000, -1000, -1000, 29806, -1000, 3515,
	-102, -1000, -1000, -1000, -1000, -1000, -1000, 729, -1000, -1000,
	-1000, -1000, -1000, 1, 1195, 1, 1043, -1000, 1036, -1000,
	-1000, -274, 1496, -1000, 186, 30297, 107, 591, -1000, 4233,
	4233, 4233, 120, 129, -1000, 922, -1000, -1000, -1000, 1194,
	1192, 1191, 1394, 190, 909, 150, -1000, 1720, -1000, -1000,
	-1000, 3515, -49, -1000, 138, -1000, -1000, -1000, 138, -1000,
	-1000, 157, 1426, 1426, 25878, 1426, -1000, -1000, 22915, 371,
	4233, 4233, 1522, 686, 1619, 364, -1000, -1000, -1000, -1000,
	-1000, -1000, 1215, -1000, 693, -1000, 558, 371, 22915, 1011,
	771, 1706, 9658, 1775, 26369, -1000, -1000, -1000, 3515, -1000,
	7188, -1000, 788, -1000, -1000, -1000, -1000, -1000, -1000, 289,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18019, 18019,
	18019, 18019, -1000, 1305, 1305, 1305, 18019, 1294, 1190, 1011,
	18019, 18019, 1617, -1000, 1471, -1000, -1000, 1471, 187, -1000,
	29806, 1753, -1000, 1011, 1011, 1011, 29806, 1011, 1335, -1000,
	1471, 18510, -1000, 20965, 1332, 1332, 1332, -1000, 667, 21947,
	1705, 1705, -1000, 1212, -1000, 1330, -1000, -1000, 729, -1000,
	729, 1306, 1304, -1000, 21947, -1000, 1749, -1000, 107, -1000,
	1189, 237, 246, -1000, 236, 235, 233, 229, 222, -1000,
	-1000, -1000, -1000, 379, 120, -1000, -59, 1030, 832, 1673,
	129, -1000, 1017, 1015, 1002, 992, 164, -1000, -1000, -1000,
	-1000, 215, 189, -1000, 442, 1185, 1658, 1653, 1719, 1719,
	113, 1426, 1402, 1300, -1000, -1000, 1214, -1000, -1000, 1494,
	1212, 1487, -1000, 1211, -1000, -1000, 29806, -1000, 371, 1696,
	1695, 1471, -1000, 1771, 1764, 1406, 13109, -1000, -1000, 1768,
	1761, -1000, -1000, 1305, 1305, 1305, 1305, -1000, -1000, -1000,
	102, -1000, -1000, 1305, 1305, 1819, -1000, 1420, 1471, -1000,
	186, -1000, -1000, 1328, -1000, 29806, -1000, -1000, 685, -1000,
	-1000, -1000, 667, -1000, 1210, 811, 1181, -1000, -1000, -1000,
	-1000, 353, -1000, -1000, -1000, -1000, 1313, -1000, 270, 32990,
	-1000, -1000, -1000, -1000, -1000, -1000, 1664, 1661, 259, -1000,
	1176, 1167, -1000, 401, 1046, 687, -159, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 427, 1209,
	-1000, 144, -1000, -1000, 548, 1643, 1645, 1760, -1000, 25878,
	-1000, -1000, 26369, -1000, -1000, 337, 337, 21947, 1522, 21947,
	-1000, -1000, -1000, 18019, -1000, 775, -156, 16055, 16055, 1775,
	-1000, 792, 16055, -1000, -1000, -1000, -1000, 1294, 182, -235,
	-1000, -1000, 10152, 1420, 1294, -1000, -1000, -1000, -1000, -1000,
	982, -1000, 30297, 667, 267, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16055, 16055, 5212, 32990,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 975, -1000,
	-1000, 1040, 378, 140, -1000, 1718, -1000, 1484, 944, 1653,
	1758, 1649, 1647, -1000, 1151, -228, 1406, 1309, 1483, 1299,
	3515, 1297, -1000, 29806, -1000, 29806, -1000, 1011, 1419, -1000,
	1011, 1771, -1000, 1294, 217, 217, 1411, -1000, 1586, -194,
	-246, 1404, -1000, -1000, 1482, -1000, 667, 269, -1000, 995,
	999, 212, 198, 4147, -1000, -1000, -1000, -1000, -325, -1000,
	125, -1000, 121, -1000, -1000, -1000, 1145, -1000, 1657, -1000,
	1141, -1000, 1757, 1756, -1000, 166, 1775, 667, 21947, 667,
	-1000, 775, 1602, 1398, -1000, 1709, 16055, -156, -1000, -1000,
	218, -1000, 787, 256, 772, -1000, 1171, -1000, -1000, 1580,
	-1000, 29806, -1000, 1203, 1155, 1131, -1000, 16055, 32990, 1746,
	1745, 1739, 1694, 9658, 32852, -1000, -1000, -1000, -1000, -1000,
	1133, 971, 23913, 1771, -1000, 1293, -1000, -1000, 335, 29806,
	1471, -1000, -1000, 904, -1000, -1000, -1000, -1000, -1000, 29806,
	-233, 1291, 323, -1000, -1000, 887, 32990, -1000, 997, -327,
	437, 186, 433, 18019, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 112, 1394, -156, 667, 295, -1000, -1000, 218, -1000,
	-237, 1528, -1000, -1000, -1000, -1000, -1000, -1000, 32990, -1000,
	-328, 32990, 3990, -1000, -1000, -1000, 32764, -1000, -1000, -1000,
	-1000, 191, -1000, -1000, 3515, 25878, -1000, -1000, 1471, -1000,
	-257, 1526, 1525, 1789, -1000, -329, 32674, -330, 542, 32990,
	920, -1000, 16055, -1000, 433, -1000, 1394, 17037, -1000, -1000,
	1818, -1000, 1814, 656, 656, 4895, 877, 32990, -1000, -332,
	541, 32990, -1000, 883, -1000, 1305, 1294, -1000, -1000, -1000,
	360, 970, -1000, -1000, -1000, 4603, -1000, -333, 32990, -1000,
	-1000, -1000, -1000, -1000, 391, 4577, -334, -1000, 390, 32990,
	-1000,
}

var yyPgo = [...]int{
	0, 2212, 2211, 34, 2210, 183, 2209, 2207, 2206, 26,
	22, 20, 28, 2205, 1959, 1956, 1954, 1952, 1949, 2204,
	15, 2203, 2202, 1945, 2201, 2197, 1939, 1937, 1935, 1931,
	2196, 2192, 2190, 1921, 1919, 1899, 2, 2189, 16, 2188,
	5, 139, 169, 2187, 3, 2186, 2184, 13, 2181, 2180,
	1897, 2179, 2178, 2174, 87, 2173, 1883, 1874, 2172, 1872,
	1866, 2171, 2170, 1864, 1862, 1853, 2168, 159, 2167, 2164,
	2163, 264, 96, 142, 2161, 2160, 2156, 107, 70, 2050,
	105, 49, 138, 233, 2155, 18, 55, 185, 2153, 135,
	120, 2150, 150, 2148, 129, 187, 98, 2147, 2146, 160,
	2145, 2144, 2143, 126, 2140, 2139, 2478, 2138, 2137, 148,
	2132, 64, 54, 44, 2130, 2129, 2128, 2124, 2122, 31,
	153, 2117, 2114, 140, 2112, 2111, 78, 2110, 2108, 174,
	2107, 2106, 2105, 130, 41, 2104, 2102, 47, 2101, 77,
	68, 2096, 94, 2092, 128, 2090, 2089, 36, 19, 2088,
	57, 2087, 52, 2086, 137, 536, 101, 2082, 11, 14,
	10, 2081, 32, 7, 24, 46, 62, 92, 122, 100,
	2080, 30, 39, 112, 97, 93, 42, 2079, 143, 2078,
	84, 145, 124, 125, 144, 2077, 2076, 2070, 1064, 2069,
	110, 95, 2068, 136, 883, 158, 106, 2066, 91, 2065,
	2064, 2063, 2062, 2059, 86, 113, 2058, 2057, 48, 66,
	1014, 1786, 53, 147, 2056, 45, 2055, 2053, 2052, 2819,
	104, 83, 102, 2051, 103, 37, 58, 2049, 2047, 2044,
	2028, 2023, 2021, 1359, 2020, 2017, 2015, 2013, 89, 67,
	2012, 2011, 121, 127, 2009, 2007, 2006, 2005, 116, 75,
	141, 2004, 108, 118, 156, 2002, 73, 2001, 2000, 50,
	43, 1993, 1992, 1989, 99, 90, 1984, 69, 33, 40,
	63, 8, 151, 1983, 1982, 82, 111, 1981, 25, 1980,
	4, 6, 9, 1979, 1978, 1977, 1970, 1969, 1968, 1965,
	76, 1964, 1961, 61, 1947, 1943, 1933, 38, 1929, 1926,
	1916, 131, 109, 88, 152, 191, 17, 1914, 1911, 12,
	1905, 119, 1895, 65, 1893, 59, 1891, 1889, 51, 1886,
	1881, 60, 1876, 1869, 155, 1575, 204, 1858, 154, 132,
	56, 74, 1856, 1848, 0, 998, 163, 164, 1846, 1800,
}

var yyR1 = [...]int{
	0, 333, 333, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 92,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 336, 336, 101, 101, 99, 99, 100,
	100, 173, 173, 12, 12, 12, 178, 178, 183, 183,
	183, 186, 186, 186, 186, 164, 165, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 307,
	307, 316, 316, 316, 317, 317, 315, 315, 315, 315,
	315, 319, 319, 320, 320, 318, 318, 318, 318, 322,
	322, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 310, 310, 310,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 325, 325, 326, 326, 327, 327, 328, 328, 328,
	328, 329, 329, 329, 329, 329, 330, 330, 330, 330,
	330, 330, 330, 331, 331, 332, 332, 2, 288, 288,
	289, 289, 290, 290, 290, 290, 291, 291, 292, 292,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	24, 207, 207, 309, 309, 309, 303, 303, 303, 305,
	305, 304, 304, 304, 306, 306, 311, 311, 311, 311,
	311, 313, 313, 313, 313, 313, 313, 314, 314, 314,
	312, 312, 48, 48, 49, 49, 49, 153, 153, 153,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 287, 287, 287, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 261,
	262, 262, 262, 262, 262, 262, 262, 262, 249, 249,
	250, 226, 226, 226, 226, 226, 226, 226, 226, 225,
	225, 225, 225, 229, 229, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 228, 228, 228, 228, 228,
	228, 228, 228, 230, 230, 230, 230, 230, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 232, 232, 232, 232,
	232, 248, 248, 233, 233, 242, 242, 243, 243, 243,
	240, 240, 241, 241, 236, 237, 244, 238, 238, 238,
	239, 239, 239, 247, 247, 247, 247, 234, 35, 274,
	273, 273, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 200, 200, 201, 201, 251, 251, 271,
	271, 270, 270, 269, 269, 269, 260, 260, 266, 266,
	266, 266, 266, 266, 266, 255, 255, 255, 254, 254,
	256, 256, 259, 259, 268, 268, 267, 267, 252, 252,
	252, 275, 275, 275, 275, 275, 253, 253, 253, 253,
	276, 257, 257, 258, 258, 258, 281, 282, 280, 280,
	280, 280, 280, 116, 116, 116, 263, 263, 263, 264,
	264, 264, 265, 265, 265, 285, 285, 284, 284, 50,
	51, 55, 55, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 152, 152, 152,
	205, 205, 279, 277, 277, 278, 278, 15, 15, 53,
	53, 308, 308, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 283, 283, 283, 17, 17, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 84, 192, 192, 191, 191, 190, 190, 190,
	193, 193, 193, 223, 223, 223, 58, 58, 62, 62,
	65, 65, 65, 63, 64, 27, 28, 28, 28, 28,
	29, 206, 206, 60, 60, 61, 61, 61, 61, 76,
	76, 338, 338, 59, 339, 67, 68, 68, 69, 69,
	69, 196, 196, 73, 73, 73, 71, 71, 71, 72,
	72, 78, 78, 82, 82, 82, 82, 81, 81, 81,
	81, 155, 155, 160, 216, 216, 136, 136, 156, 156,
	161, 161, 161, 162, 162, 163, 163, 163, 163, 163,
	158, 158, 157, 157, 159, 124, 124, 214, 214, 214,
	213, 213, 213, 213, 86, 86, 89, 89, 90, 90,
	90, 90, 93, 138, 138, 110, 110, 111, 111, 111,
	111, 111, 122, 122, 172, 172, 171, 171, 174, 174,
	91, 91, 91, 91, 96, 96, 97, 97, 98, 98,
	204, 204, 221, 221, 221, 102, 102, 102, 104, 103,
	103, 103, 103, 105, 105, 107, 108, 108, 106, 106,
	109, 112, 112, 112, 112, 113, 113, 83, 83, 83,
	83, 83, 83, 83, 189, 189, 115, 115, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 132, 132,
	132, 132, 132, 132, 117, 117, 117, 117, 117, 117,
	117, 77, 77, 133, 133, 133, 95, 94, 94, 80,
	80, 79, 79, 134, 134, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	127, 127, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 337, 337,
	129, 128, 128, 128, 128, 128, 128, 74, 74, 74,
	74, 74, 222, 222, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 145, 145, 75,
	75, 143, 143, 144, 146, 146, 142, 142, 142, 119,
	119, 119, 119, 119, 119, 119, 119, 121, 121, 121,
	147, 147, 135, 135, 85, 148, 148, 149, 150, 150,
	151, 151, 154, 166, 166, 166, 167, 167, 167, 167,
	123, 123, 168, 168, 168, 118, 118, 118, 118, 118,
	118, 118, 170, 170, 169, 169, 169, 169, 175, 175,
	137, 137, 140, 140, 139, 141, 176, 176, 180, 180,
	177, 177, 181, 181, 181, 181, 184, 184, 185, 185,
	185, 182, 182, 182, 179, 179, 179, 218, 218, 218,
	187, 187, 197, 197, 194, 194, 195, 195, 188, 188,
	235, 235, 203, 203, 202, 202, 202, 198, 198, 198,
	199, 199, 215, 215, 211, 211, 217, 217, 212, 212,
	219, 219, 220, 220, 286, 286, 245, 245, 296, 296,
	246, 246, 297, 297, 299, 299, 294, 294, 295, 295,
	298, 298, 30, 300, 300, 301, 301, 302, 302, 302,
	302, 31, 32, 32, 32, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 334,
	335,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -333, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 292, -65, 295, 296, -338, -206, 221, 222, 20,
	37, 297, 299, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 390, 139, 293, 171, 170, 26, 439,
	-334, 68, 500, -150, 15, -67, -339, -67, -67, -67,
	-67, -67, -261, -204, 106, 68, 23, -199, 150, 87,
	381, 146, -207, 234, 236, -197, -198, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 381, 146, 183,
	182, 234, 236, 147, -106, -219, 72, -209, 160, 450,
	259, 436, 246, 195, 292, 306, 308, 300, 335, 323,
	437, 451, 161, 216, 145, 321, 324, 368, 159, 249,
	209, 272, 452, 357, 363, 219, 295, 377, 453, 162,
	213, 215, 214, 203, 220, 36, 172, 319, 255, 312,
	224, 198, 454, 444, 310, 28, 193, 455, 283, 365,
	340, 284, 258, 456, 441, 253, 364, 315, 311, 265,
	163, 157, 285, 457, 341, 345, 458, 369, 239, 286,
	459, 460, 461, 149, 245, 304, 305, 462, 199, 371,
	250, 339, 33, 158, 438, 48, 180, 372, 38, 343,
	37, 349, 463, 282, 338, 333, 350, 464, 465, 466,
	467, 263, 261, 262, 264, 337, 303, 332, 211, 53,
	144, 347, 346, 348, 212, 367, 328, 326, 468, 469,
	254, 164, 470, 471, 313, 18, 472, 473, 375, 175,
	256, 257, 42, 474, 475, 476, 110, 477, 478, 479,
	366, 342, 344, 197, 114, 316, 154, 480, 260, 269,
	440, 243, 111, 373, 309, 482, 288, 299, 179, 174,
	376, 278, 483, 222, 484, 485, 486, 166, 487, 237,
	236, 296, 270, 112, 297, 359, 217, 488, 489, 490,
	491, 207, 192, 379, 370, 52, 221, 354, 492, 273,
	289, 302, 156, 223, 493, 247, 293, 43, 7, 210,
	251, 360, 271, 218, 208, 330, 181, 494, 495, 317,
	318, 336, 301, 331, 294, 184, 176, 109, 378, 355,
	442, 234, 290, 325, 322, 187, 329, 496, 150, 497,
	188, 298, 374, 248, 320, 356, 147, 131, 324, 368,
	138, 358, 359, 365, -255, 366, 182, 185, -223, 147,
	-192, 357, 239, 260, 411, 188, 189, 148, 149, 33,
	370, 369, 361, -219, 151, 298, -76, 142, 177, -106,
	-47, 72, 223, -47, 30, 72, 72, 36, 72, 297,
	360, 360, 75, 440, 191, 21, -325, -306, 269, -324,
	-304, 139, 138, 10, 140, 274, 275, 276, 148, 8,
	31, 481, 165, 277, 278, 6, 169, 279, 280, 183,
	9, 281, -309, 74, 72, -209, 21, -325, -306, 269,
	-201, -200, 291, 349, 6, -69, 5, -188, 152, 294,
	-87, 449, -92, -221, -219, -210, 74, 407, 408, 409,
	410, 411, 424, 425, 426, 412, 413, 427, 428, 429,
	414, 415, 430, 431, 433, 434, 432, 186, 418, 417,
	416, 419, 420, 51, 422, 421, 423, 81, -3, -167,
	17, 16, -73, 54, 55, -68, -81, 122, -83, -219,
	-114, 89, -120, 29, 72, -209, 24, -119, -210, -115,
	-142, -141, -95, 131, 132, 133, 120, 121, 128, 90,
	134, -127, -125, -126, -128, -130, -131, 74, 73, 82,
	75, 76, 77, 78, 83, 407, 408, 409, 410, 411,
	424, 425, 426, 412, 413, 427, 428, 429, 414, 415,
	430, 431, 433, 434, 432, 418, 417, 416, 419, 420,
	422, 421, 423, 84, 85, -211, -139, -334, 58, 59,
	177, 146, 391, 392, 393, 394, 395, 435, 167, 399,
	92, 47, 380, 389, 388, 387, 385, 386, 382, 384,
	383, 401, 402, 153, 381, 126, 390, -188, -188, 11,
	-99, -100, -106, -109, -219, -177, 294, -184, -181, 369,
	370, -182, -185, -179, -142, 349, 478, 479, 368, 324,
	367, -211, -219, -2, -5, 6, -106, -262, -250, -253,
	-212, 162, -276, -211, -208, 159, 72, -209, 252, 143,
	168, 139, 88, 443, 23, 25, 242, 352, 407, 91,
	131, 408, 409, 410, 16, 20, 92, 130, 81, 391,
	191, 411, 138, 62, 406, 382, 384, 380, 381, 358,
	29, 10, 26, 170, 202, 22, 124, 140, 95, 96,
	97, 173, 274, 275, 24, 171, 266, 85, 276, 167,
	115, 19, 65, 11, 185, 238, 13, 405, 113, 14,
	235, 153, 152, 108, 200, 148, 60, 8, 134, 27,
	105, 56, 412, 413, 446, 45, 190, 447, 58, 106,
	17, 385, 386, 31, 435, 414, 178, 448, 415, 126,
	205, 63, 50, 241, 89, 83, 34, 86, 66, 287,
	87, 15, 201, 61, 403, 244, 267, 182, 481, 204,
	449, 165, 107, 277, 141, 390, 268, 240, 59, 146,
	6, 400, 30, 169, 279, 186, 418, 417, 416, 419,
	206, 57, 393, 394, 420, 280, 498, 147, 94, 401,
	402, 151, 183, 84, 5, 44, 32, 9, 281, 64,
	67, 387, 388, 389, 47, 51, 422, 421, 423, 93,
	12, 404, 439, 148, -106, 390, -195, 153, -195, 183,
	182, -195, -195, 147, 98, -53, -106, -308, -303, -309,
	-194, 153, -211, -194, -194, -194, -194, -194, -194, -194,
	-106, 135, -106, 72, 30, -193, 106, 12, 381, 146,
	147, 183, 150, -257, 11, 108, 186, 186, 186, 187,
	186, -191, 360, 362, 184, 363, 364, 12, -84, 106,
	19, -334, -167, -167, 72, 297, 151, -61, -3, -11,
	-9, -10, -3, 98, 30, 30, 74, 51, 30, -42,
	-41, -43, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 30, -287, 68, -245, 349, 72,
	-300, -301, -106, 75, 75, 66, 66, 69, 151, 69,
	66, -326, 270, 68, -326, 236, 270, 271, 208, 234,
	150, -326, -326, 236, -326, -326, -326, -326, -326, 360,
	-326, -326, -326, 272, 273, -326, 358, 150, -326, -326,
	-326, -326, -326, 71, 66, 69, 260, 66, 11, 66,
	-274, -273, -272, 131, 283, 284, 285, 286, 282, 260,
	287, 289, 186, 290, -67, -7, -5, -334, 21, 22,
	147, 373, 69, -87, -170, -334, -335, 70, -168, 19,
	31, -123, 75, 78, -151, -154, -83, -219, 50, -71,
	21, 22, 80, 11, -214, 88, 87, 105, -213, 23,
	72, -209, -210, 74, 135, -83, -117, 108, 89, 106,
	107, 91, 117, 116, 127, 120, 121, 122, 123, 124,
	125, 126, 118, 119, 130, 98, 99, 100, 101, 102,
	103, 104, -189, -334, -95, -334, 136, 137, -120, -120,
	-120, -120, -120, -120, -120, -120, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -3, -134, -83, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -145, -83, -334, -337, -129, -334, -337, -129, -337,
	-129, -337, -334, -337, -129, -337, -129, -337, -337, -129,
	-337, -334, -334, -334, -334, -334, -334, -108, 27, -106,
	-86, -89, -90, -91, -110, -94, -334, -106, -95, -106,
	-99, -336, 69, 11, 67, -336, 69, 135, 69, -178,
	-183, 371, 373, 294, -182, -182, -218, -211, 74, 29,
	98, 30, 135, -150, -67, 70, 69, -253, 162, 159,
	-225, -229, -231, -230, -232, -227, -228, 321, 324, 328,
	326, 322, 327, 131, 325, 330, 331, 332, 333, 334,
	335, 336, 337, 338, 339, 340, 30, 172, 317, 318,
	319, 320, 341, 342, 343, 344, 345, 346, 347, 348,
	300, 323, 437, 301, 302, 303, 304, 305, 306, 308,
	309, 310, 311, 312, 313, 314, 315, 72, -210, -276,
	68, -211, 23, 150, 72, 89, 72, 72, 72, -312,
	-311, -303, -306, -195, 72, 69, 151, 69, 151, 71,
	-99, 24, 66, -101, -106, 72, 72, 72, 72, -305,
	-303, -306, -220, -219, -208, -193, 74, -83, -195, -195,
	-106, -106, -106, -106, -193, -193, -193, -193, -190, 11,
	108, 11, -190, -190, -83, -120, -303, 383, 122, 72,
	72, 297, 72, -42, -42, 74, -42, 69, 98, -42,
	70, -134, -286, 499, 69, -302, 23, 373, 374, 350,
	-328, 147, 185, 182, -328, -324, 278, -305, -304, -303,
	-326, -327, -211, -326, -326, -326, 360, -326, -326, -326,
	-326, -326, -326, -326, -326, -309, -328, 238, 69, -328,
	-305, -303, -272, 282, 282, 282, 282, 282, -73, -3,
	-106, 374, 375, -92, 23, -169, -212, 9, 108, 69,
	18, 69, -166, 25, 26, 135, -121, 51, 75, 78,
	-196, 49, -106, -83, -83, -132, 83, 89, 84, 85,
	-213, 122, -220, -212, -208, -120, -133, -139, -95, 79,
	108, 106, 107, 91, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -222,
	72, 74, 72, -119, -119, -211, -71, -79, -82, 122,
	-83, -219, -79, -79, -71, -335, -335, -82, -79, -79,
	-79, -82, -79, -71, -71, -79, -335, -335, -335, -335,
	-79, -79, -79, -79, -71, -79, -79, -79, -71, -335,
	69, -335, -3, -79, -79, -79, -335, -83, -83, -142,
	74, -79, -142, 74, -79, -120, 396, 397, 398, -79,
	-79, -71, -143, -144, 93, -142, -335, -120, -211, -211,
	-79, -80, -79, -79, -79, -173, 110, -106, 30, 69,
	-102, -104, -103, -105, 56, 60, 62, 57, 58, 59,
	63, -204, -86, -93, 47, -334, -111, 110, -112, 23,
	-221, 64, 152, 65, -173, 67, -86, -106, -86, -109,
	-219, 122, -181, -184, 69, 372, 374, 375, -178, -239,
	130, 66, 86, -83, -212, -220, -167, -73, -263, -264,
	-265, -212, 74, 75, -250, -251, -252, -253, -266, 162,
	-275, 154, 156, 44, -254, 163, 148, 45, -226, -240,
	355, -233, 68, -233, -233, 329, 321, 324, 322, -233,
	-233, -233, -233, -233, -238, 324, -238, -238, -238, -238,
	322, 68, 68, -233, -233, -233, -242, 68, -242, 316,
	-243, 68, -243, -243, -243, -243, -276, -276, -83, -215,
	67, -164, -106, 24, -48, 195, 168, 68, -307, 69,
	29, -313, 235, -106, -106, -106, -303, -303, -309, -283,
	166, 161, -106, 69, 69, 72, 72, -258, 11, 108,
	-193, -219, -219, -106, -122, 23, -193, -77, 173, 67,
	-337, -335, 72, -41, -119, 70, -107, 27, 74, -301,
	-221, 349, 374, -329, 122, -211, -329, -332, 439, 151,
	70, 69, -326, -329, 256, 238, -329, 11, -71, -335,
	-55, -54, 143, 140, 141, 144, 145, -279, 352, 139,
	179, -94, -334, -335, 69, 135, 52, -123, -123, -154,
	-187, 19, 11, 47, 47, -72, 57, 83, 84, 85,
	135, -334, -133, -120, -120, -120, -77, 88, -335, -79,
	69, -335, 135, -335, -335, -79, -155, 403, -155, -335,
	-335, -335, -335, -335, -335, -79, -79, -335, -155, -155,
	-155, -155, -335, -335, -335, -335, -79, -335, -335, -335,
	-80, -83, -335, -335, -335, -335, 69, 67, 23, 11,
	11, -335, 11, 11, -335, -335, 11, -120, -120, -120,
	-335, -335, -79, -146, -144, 95, -83, -335, -335, 69,
	69, -335, -335, -335, -335, -118, 30, 47, -334, -3,
	-334, -176, -180, -142, -208, -89, -90, -90, -89, -90,
	56, 56, 56, 61, 56, 61, 56, -103, -221, -335,
	-335, -138, 194, -334, 34, -221, -112, 148, 148, 148,
	-113, 12, -86, -113, -113, 135, -183, -186, 376, 373,
	379, 72, 74, 135, -168, 69, -265, 98, -253, 68,
	72, -259, -210, 45, -254, 148, 45, -254, -259, 72,
	-259, 45, 83, 89, -236, -237, -244, -247, -234, 29,
	66, 352, 154, 45, 44, 81, -241, 356, 75, -238,
	-238, -233, -233, -233, 329, -233, -238, -239, 30, -239,
	-239, -239, -239, -238, -248, 74, -248, 75, -242, 75,
	70, 66, -211, -3, 23, -49, 8, 9, 10, -288,
	-289, -290, 72, 108, 200, 201, -316, 268, -311, 236,
	245, 88, 16, 439, 151, 151, -106, -303, -113, 72,
	72, -190, -193, 34, -120, -306, 188, 189, -173, 147,
	-302, 151, 135, 135, 151, 259, -305, -211, 11, 11,
	256, 11, -305, -196, 69, -205, -254, -285, -252, -253,
	-284, 155, 162, 163, -205, 162, 159, -254, 163, 154,
	155, -202, -254, 151, 23, -205, -205, -260, 98, -205,
	110, -212, -212, 53, -106, -78, -165, 122, -212, -80,
	-77, 88, -120, -335, -82, -156, -155, 122, -220, -156,
	-156, -335, -211, -160, -334, -155, -156, -156, -155, -155,
	-155, -335, -335, -155, -156, -156, -156, -156, -335, -156,
	-156, -156, -335, -224, 131, 321, 172, 319, 312, 339,
	326, 354, 317, 355, -222, -224, -120, -120, -120, -120,
	-120, 11, 11, 11, 436, -150, 97, -83, 94, -120,
	-120, -175, 66, -176, -137, -140, -139, -334, -3, -335,
	-169, 6, 439, -174, -211, -113, 69, 98, 98, -97,
	-96, 66, 67, -98, 66, -96, 56, 56, -172, 68,
	69, -139, -334, -174, -120, -112, -334, -334, -334, -150,
	-83, -113, 373, 377, 378, -264, -265, -268, -267, -211,
	-210, 154, -275, 44, -275, -259, -259, 68, 83, -120,
	9, 45, 45, 74, 70, -239, -239, -238, -233, -239,
	72, 131, -239, 70, 69, 70, 69, 70, 69, -116,
	455, 89, -106, -164, -164, 66, 70, 69, -225, 72,
	72, 72, -319, 439, 241, -317, -315, 247, 248, 249,
	250, 251, -306, 246, -313, 243, 74, 72, -106, -303,
	-193, -120, -238, -106, -305, 122, 122, -211, -305, 256,
	-331, 439, -305, -305, 11, -305, -72, -54, 68, -249,
	72, -210, -259, -198, 154, 72, 72, 72, -210, 72,
	-210, -211, 45, 45, 72, -106, -211, -249, 72, -83,
	-211, -211, 135, -113, 11, 69, -81, -335, -120, -156,
	135, -156, -216, 72, -156, -156, -156, -335, -233, -233,
	-233, -243, -233, 305, -233, 305, -335, -335, 19, 19,
	19, 19, -335, -120, -120, -120, -334, -75, 400, -83,
	69, 69, 28, -175, 69, -335, -335, 47, -335, -335,
	69, -150, -180, -83, -83, -83, 68, -83, -171, -211,
	194, -335, -112, -204, -171, -171, -171, -167, 70, 69,
	-233, -233, 45, -256, -254, -171, -126, -239, -238, 74,
	-238, 75, 75, 455, 68, -3, -106, -291, -292, -293,
	81, 438, 89, 202, 203, 164, 204, 205, 206, -290,
	-225, -225, -225, -322, -323, -321, 244, 266, 267, 252,
	-320, -318, 261, 262, 263, 264, 88, 74, 74, 74,
	-314, 235, 88, 244, 16, 23, -294, -191, -331, -331,
	238, -305, -78, -249, -152, 167, 168, -225, -225, -215,
	-256, 45, 72, -203, 151, 23, 151, -152, -249, 30,
	140, 27, -212, -147, 13, -86, -165, -165, 122, -136,
	110, -238, 72, -120, -120, -120, -120, -335, -335, -335,
	-120, -335, 74, -120, -120, 45, -140, -137, 47, -3,
	-334, -211, -167, -171, 70, 69, -139, -111, -221, -335,
	-335, -335, -270, -269, 67, 158, 81, -267, -166, -166,
	-259, 70, -239, -239, 70, 70, -268, -164, 19, -164,
	-293, 74, 206, 202, 206, 206, 206, 206, 207, -310,
	81, 242, -321, 253, 460, 237, 268, 75, 75, 109,
	31, 32, -318, 75, 75, 75, 75, -315, 16, 439,
	-313, 243, 74, 74, -295, 38, -297, 39, -330, 23,
	-330, 256, 11, 70, 72, -226, -226, 68, -259, 68,
	72, -211, -152, 29, 29, -334, -148, 14, 16, -113,
	-81, -150, 16, -335, -335, -335, -335, -74, 108, 439,
	-335, -335, 9, -137, -3, 70, -211, -112, -269, 72,
	-260, 74, 165, 70, 193, -20, -3, -9, -10, -11,
	-12, -14, -50, -15, -16, -21, -22, -17, -56, -57,
	-65, -63, -64, -60, -59, -25, -23, -26, -18, -27,
	-28, -29, -33, -34, -24, -35, 92, 153, 224, 292,
	36, 36, 198, 199, 74, 74, 29, 254, 134, 29,
	75, 134, 406, 243, 74, 72, 244, -235, 152, -298,
	43, -296, -246, 42, 16, -303, -86, -268, -215, -268,
	-120, -277, -278, 110, -158, 404, -149, -83, -135, -85,
	-83, -147, -165, -161, 112, 111, -134, -335, 437, 63,
	440, -176, -335, 75, -106, -271, -270, 194, -164, -83,
	-83, 72, -46, -217, 227, 228, 229, -212, -36, -20,
	75, 29, 75, 29, 257, 244, 23, -172, 75, -297,
	16, -299, 40, 41, 74, 439, -113, 70, 68, 70,
	-335, 69, -211, -157, -159, -211, 69, -148, -335, -162,
	91, -163, 109, 406, -124, 75, 134, -162, 53, 438,
	441, 68, -153, 196, 197, -37, -38, 93, 94, 225,
	226, 230, -225, 69, 500, 255, 255, 74, 38, 74,
	16, 16, 236, -147, -271, -268, -271, -278, 47, 69,
	23, -85, -158, -163, 114, 115, 194, 114, 115, -119,
	53, -171, -164, 72, 72, 97, 95, -38, -83, -36,
	19, 19, 19, 29, -212, 97, -20, 74, 74, 29,
	241, 21, -306, -148, 70, 180, -159, -160, 88, -211,
	439, 70, -13, -19, -12, -9, -10, -11, 292, 92,
	-36, 94, 500, -47, 75, -3, -45, -44, 75, -47,
	232, 89, 233, 72, -120, 258, -158, -271, 181, -163,
	440, -281, -282, 66, -164, -36, 500, -36, 97, 95,
	-39, -40, 96, -20, 69, 231, -306, -334, 441, -282,
	66, -281, 66, 10, 9, 500, 97, 500, 153, -36,
	97, 95, -40, -83, -44, -120, 178, -280, 166, 161,
	164, 30, -280, 97, 92, 500, 153, -36, 94, -335,
	-335, 160, 29, 83, 97, 500, -36, 153, 97, 500,
	153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 704, 704, 704, 704,
	704, 704, 800, -2, 569, 0, 0, 0, 0, -2,
	677, 678, 679, 683, 684, 699, 701, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 40,
	0, 0, 56, 57, 1108, 0, 702, 691, 692, 0,
	0, 1599, 2, 1046, 0, 713, 706, 0, 1108, 1108,
	0, 0, 87, 0, 0, 0, 801, 0, 0, 0,
	1106, 1106, 0, 1106, 1106, 0, 1121, 0, 1103, 1117,
	1118, 1119, 0, 0, 1104, 0, 1104, 1104, 1104, 1104,
	1104, 1104, 1104, 0, 626, 818, 1130, 1131, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 0, 0, 0, 670,
	0, 636, 637, 638, 0, 640, 0, 0, 0, 0,
	0, 650, 653, 657, 0, 1046, 1046, 515, 516, 517,
	674, 675, 664, 676, 0, 0, 0, 0, 0, 703,
	305, 307, 0, 327, 0, 330, 333, 1136, 685, 0,
	0, 1161, 1162, 0, 0, 0, 0, 0, 1481, 181,
	244, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	0, 183, 183, 183, 1493, 183, 0, 183, 183, 183,
	183, 183, 243, 233, 234, 235, 0, 0, 0, 1481,
	0, 496, 493, 494, 704, 0, 708, 0, 1109, 680,
	45, 0, 47, 1062, 802, 803, 804, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 0, 1052,
	0, 0, 716, 714, 715, 705, 0, 727, 757, 0,
	827, 0, 832, 834, -2, -2, 0, 875, 876, 877,
	878, 879, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 904, 905, 906, 907, 908, 909, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593,
	1595, 1596, 1597, 836, 837, 1016, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1007, 0, 978, 978, 978, 978, 978, 978, 978, 978,
	978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 69, 818, 73, 1546, 0, 1080, -2,
	-2, 1082, 0, 0, 0, -2, -2, -2, -2, 1348,
	-2, 1016, 0, 88, 1038, 704, 89, 0, 370, 371,
	0, 1361, 539, 1128, 1129, 1350, 1124, 1125, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 607, 0, 608, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 0, 627, 628, 670, 630, 0, 0, 1106, 1106,
	0, 0, 0, 0, 541, 542, 670, 670, 670, 670,
	667, 0, 667, 647, 667, 665, 666, 0, 652, 0,
	0, 0, 660, 661, 686, 0, 0, 693, 695, 696,
	697, 698, 694, 0, 0, 0, 309, 0, 0, 329,
	311, 0, 314, 315, 316, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 0, 332, 0, 1134, 1137, 690,
	1152, 1153, 0, 1163, 1164, 187, 187, 0, 0, 0,
	0, 150, 183, 0, 152, 183, 183, 183, 0, 183,
	183, 159, 160, 183, 162, 163, 164, 165, 166, 183,
	168, 169, 170, 183, 183, 173, 183, 183, 176, 177,
	178, 179, 180, 242, 187, 0, 0, 187, 0, 0,
	478, 479, 480, 0, 0, 0, 0, 486, 487, 488,
	489, 0, 491, 492, 713, 42, 52, 0, 709, 710,
	0, 0, 0, 46, 0, 0, 51, 1600, 37, 0,
	0, 1047, 1050, 1051, 1039, 1040, 1043, 0, 0, 711,
	717, 718, 707, 0, 728, 0, 0, 0, 758, 0,
	760, 761, 762, 763, 0, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 855, 856, 857, 858,
	859, 860, 833, 0, 847, 0, 0, 0, 896, 897,
	898, 899, 900, 901, 902, 0, 716, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 716, 0, 0, 873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 1008, 0, 961, 970, 0, 962, 971, 963,
	972, 964, 0, 965, 973, 966, 974, 967, 968, 975,
	969, 0, 0, 0, 869, 0, 0, 71, 0, 817,
	0, 764, 766, 767, 768, -2, 0, 821, 867, -2,
	0, 0, 0, 63, 64, 0, 0, 0, 0, 74,
	76, 0, 0, 1546, 1083, 1084, 470, 1097, 1098, 1099,
	0, 1095, 0, 1046, 713, 556, 0, 372, 0, 0,
	381, 460, 390, 391, 392, 453, 394, 453, 453, 0,
	453, 453, 453, 453, 453, 467, 467, 467, 467, 467,
	436, 437, 438, 439, 440, 0, 0, 413, 453, 453,
	453, 417, 443, 444, 445, 446, 447, 448, 449, 450,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	455, 455, 457, 457, 457, 457, 457, 0, 0, 538,
	0, 1122, 85, 0, 93, 0, 94, 0, 0, 99,
	260, 246, 98, 0, 232, 0, 0, 0, 0, 237,
	622, 1105, 0, 615, 65, 616, 617, 618, 619, 620,
	239, 621, 819, 1132, 1133, 629, 671, 672, 0, 0,
	633, 634, 635, 543, 641, 642, 643, 649, 670, 0,
	0, 0, 782, 670, 651, 861, 654, 978, 0, 688,
	687, 0, 700, 306, 308, 310, 328, 0, 0, 331,
	334, 0, 0, 0, 0, 1155, 0, 1157, 1159, 0,
	0, 188, 189, 190, 0, 182, 0, 205, 245, 0,
	151, 0, 185, 153, 154, 155, 183, 157, 158, 161,
	167, 171, 172, 174, 175, 241, 0, 0, 0, 0,
	148, 0, 481, 482, 483, 484, 485, 490, 716, 0,
	0, 681, 682, 48, 0, 0, 1064, 1053, 0, 0,
	0, 0, 1042, 1044, 1045, 0, 0, 1027, 0, 0,
	719, 712, 39, 828, 829, 831, 848, 0, 850, 852,
	759, 729, 0, 1017, -2, 838, 839, 863, 864, 865,
	0, 0, 0, 0, 861, 843, 0, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 895,
	992, 993, 0, 893, 894, 903, 0, 0, 871, 723,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 869, 866,
	0, 1074, 0, 0, 0, 0, 943, 0, 0, 878,
	1019, 0, 878, 1019, 0, 0, 0, 0, 0, 0,
	0, 0, 1014, 1011, 0, 0, 979, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 805, 0, 0, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 1468, 777, 0,
	821, 0, 0, 0, 825, 0, 825, 68, 825, 70,
	0, 820, 1081, 0, 0, 0, 79, 80, 75, 1085,
	0, 1091, 1092, 1093, 1017, 0, 1052, 716, 369, 557,
	559, 562, 563, 564, 373, 375, 376, 377, 0, -2,
	530, 1478, 1524, -2, 522, 1392, -2, -2, 380, 462,
	461, 393, 0, 467, 467, 453, 453, 453, 453, 422,
	467, 425, 428, 429, 470, 0, 470, 470, 470, 470,
	467, 0, 0, 414, 415, 416, 405, 0, 406, 455,
	408, 0, 409, 410, 411, 412, 536, 537, 0, 0,
	0, 0, 0, 1107, 0, 262, 263, 208, 101, 0,
	0, 247, 0, 368, 0, 609, 0, 611, 236, 613,
	623, 624, 614, 0, 0, 631, 632, 825, 0, 0,
	644, 668, 669, 667, 670, 0, 648, 662, 0, 0,
	655, 0, 689, 312, 313, 335, 71, 0, 1135, 1154,
	0, 1158, 1160, 0, 191, 193, 0, 142, 0, 0,
	184, 0, 156, 0, 0, 0, 0, 0, 711, 53,
	570, 571, -2, 600, 1114, 600, 600, 588, 506, 600,
	0, 49, 0, 1063, 0, 0, 0, 1048, 1049, 1041,
	0, 1100, 1101, 1028, 1029, 86, 720, 849, 851, 853,
	0, 869, 840, 861, 844, 0, 841, 0, 835, 0,
	0, 738, 0, 738, 738, 0, 929, 0, 930, 0,
	738, 738, 0, 0, 0, 0, 0, 0, 936, 937,
	938, 939, 738, 738, 738, 738, 0, 738, 738, 738,
	0, 874, -2, 940, 941, 942, 0, 0, 0, 0,
	0, 985, 0, 0, 986, 951, 0, 0, 0, 0,
	0, 957, 1038, 0, 1012, 0, 0, 960, 980, 0,
	0, 981, 982, 983, 984, 1068, 0, 0, 0, 1057,
	0, 825, 1076, 0, 0, 765, 796, 798, 0, 793,
	806, 807, 809, 0, 811, 0, 813, 814, 784, 771,
	868, 772, 0, 0, 0, 821, 781, 0, 0, 0,
	1038, 0, 825, 61, 62, 0, 77, 78, 0, 0,
	84, 471, 472, 0, 207, 0, 560, 0, 374, 0,
	523, 0, 0, 508, 522, 518, 519, 522, 513, 523,
	514, 0, 382, 0, 384, 385, 386, 387, 388, 0,
	0, 466, 0, 474, 476, 0, 389, 463, 0, 470,
	470, 467, 420, 421, 453, 426, 470, 430, 0, 431,
	432, 433, 434, 470, 0, 451, 0, 0, 407, 0,
	553, 0, 1123, 85, 85, 0, 264, 265, 266, 0,
	209, 210, 0, 0, 0, 0, 111, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 66, 240, 639, 544,
	545, 670, 646, 0, 862, 656, 658, 659, 467, 0,
	1156, 0, 0, 0, 0, 0, 203, 186, 0, 0,
	0, 0, 149, 719, 0, 0, 522, 0, 589, 590,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1115, 1116, 0, 0, 0, 507, 0,
	0, 1066, 1065, 1054, 38, 825, 0, 730, 1018, 0,
	842, 0, 845, 738, 872, 914, 739, 725, 0, 915,
	916, 738, 731, 732, 734, 931, 918, 919, 932, 933,
	934, 738, 738, 935, 923, 922, 921, 924, 738, 927,
	926, 928, 910, 0, 453, 453, 997, 453, 457, 1000,
	453, 1002, 453, 1005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1009, 959, 1015, 0, 0,
	0, 54, 0, 1068, 1055, 1070, 1072, 0, 0, 0,
	0, -2, 1329, 0, 788, 1038, 0, 0, 0, 790,
	797, 0, 0, 791, 0, 792, 810, 812, 769, 0,
	0, 773, 0, 0, -2, 780, 0, 0, 0, 1046,
	826, 60, 81, 82, 83, 558, 561, 0, 524, 453,
	453, 0, 528, 520, 529, 510, 512, 0, 383, 464,
	0, 473, 475, 477, 454, 418, 419, 470, 427, 423,
	468, 469, 435, 467, 0, 467, 0, 458, 0, 540,
	554, 0, 0, 91, 0, 0, 216, 0, 212, 0,
	0, 0, 119, 0, 102, 103, 104, 106, 107, 0,
	0, 0, 100, 0, 249, 0, 252, 253, 610, 612,
	645, 783, 1146, 815, 203, 192, 194, 195, 203, 206,
	143, 0, 144, 146, 0, 145, 86, 572, 0, 597,
	0, 0, 1122, 520, 0, -2, 575, 580, 581, 582,
	583, 584, 0, 595, 0, 577, 0, 597, 0, 592,
	0, 0, 0, 1030, 0, 86, 86, 911, 846, 913,
	0, 917, 736, 735, 912, 920, 925, 944, 994, 467,
	998, 999, 1001, 1003, 1004, 1006, 946, 945, 0, 0,
	0, 0, 952, 0, 0, 0, 0, 0, 0, 1013,
	0, 0, 0, 55, 0, 1073, -2, 0, 0, 72,
	0, 1046, 1077, 1078, 1079, 794, 0, 799, 0, 786,
	0, 821, 778, 0, 0, 0, 0, 59, 498, 0,
	1043, 1043, 509, 522, 521, 0, 465, 424, 470, 452,
	470, 0, 0, 555, 0, 85, 0, 85, 217, 218,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 211,
	213, 214, 215, 137, 120, 121, 0, 0, 0, 0,
	112, 113, 0, 0, 0, 0, 0, 108, 109, 110,
	248, 0, 0, 251, 0, 0, 1148, 1142, 196, 196,
	0, 147, 0, 0, 574, 598, 0, 381, 381, 0,
	522, 0, 591, 0, 1112, 1113, 0, 586, 597, 0,
	0, 0, 1067, 1035, 0, 825, 0, 721, 726, 1038,
	0, 995, 996, 0, 0, 0, 0, 953, 954, 955,
	987, 958, 1010, 0, 0, 0, 1071, 1056, 0, 1060,
	0, 789, 58, 0, 785, 0, 774, 776, 821, 822,
	823, 824, 497, 501, 0, 506, 0, 525, 526, 527,
	511, 0, 441, 442, 456, 459, 0, 92, 0, 0,
	219, 220, 221, 222, 224, 225, 0, 0, 0, 97,
	0, 0, 122, 0, 0, 0, 0, 132, 133, 134,
	135, 136, 114, 115, 116, 117, 118, 105, 0, 0,
	250, 0, 255, 256, 1110, 1150, -2, 0, 140, 0,
	141, 204, 0, 573, 599, 378, 379, 0, 1122, 0,
	576, 585, 587, 0, 594, 0, 750, 0, 0, 1030,
	86, 740, 0, 947, 949, 948, 950, 0, 0, 0,
	976, 977, 0, 1059, 0, 795, 787, 779, 502, 503,
	0, 505, 0, 499, 0, 85, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 0, 0, 0, 0,
	226, 227, 228, 229, 138, 139, 123, 124, 0, 126,
	127, 0, 0, 0, 258, 0, 254, 784, 0, 1142,
	0, 1144, 0, 1141, 0, 197, 825, 0, 0, 0,
	593, 0, 603, 0, 43, 0, 1036, 1037, 1031, 1032,
	1034, 1035, 722, 0, 0, 0, 737, 956, 0, 0,
	0, 1069, -2, 504, 0, 90, 500, 267, 96, 0,
	0, 1124, 0, 0, 294, 295, 296, 1126, 0, 336,
	0, 128, 0, 130, 131, 257, 0, 36, 0, 1149,
	0, 1147, 0, 0, 1143, 0, 1030, 499, 0, 499,
	602, 0, 0, 751, 752, 0, 0, 750, 733, 741,
	0, 744, 0, 0, 0, 755, 0, 742, 988, 0,
	991, 0, 85, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 292, 0, 0, 125, 129, 259, 1111, 1151,
	0, 0, 0, 1035, 578, 0, 596, 604, 0, 0,
	0, 1033, 44, 0, 745, 746, 747, 748, 749, 0,
	989, 0, 0, 268, 269, 0, 0, 279, 0, 0,
	0, 0, 0, 0, 1127, 230, 337, 1145, 1139, 198,
	199, 200, 202, 750, 499, 0, 753, 754, 0, 756,
	0, 531, 85, 270, 271, 272, 273, 274, 0, 276,
	0, 0, 0, 288, 289, 290, 0, 297, 299, 300,
	301, 0, 303, 304, 293, 0, 41, 579, 0, 743,
	0, 532, 533, 0, 95, 0, 0, 0, 0, 0,
	0, 285, 0, 291, 0, 302, 201, 0, 990, 534,
	0, 535, 0, 0, 0, 0, 0, 280, 281, 0,
	0, 0, 286, 0, 298, 0, 0, 546, 548, 549,
	0, 0, 547, 275, 277, 0, 283, 0, 0, 605,
	606, 550, 551, 552, 0, 0, 0, 282, 0, 287,
	284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 500,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:484
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:532
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:538
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:551
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:582
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:591
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:595
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:637
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:649
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:681
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:685
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:689
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:713
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:728
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:732
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:742
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:749
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:758
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:790
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:804
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:810
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:829
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:849
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:857
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:865
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:893
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:902
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:906
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:961
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:971
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:984
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1020
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1024
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1076
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1081
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1085
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1095
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1104
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1108
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1116
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1257
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1302
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1344
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1348
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1353
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1372
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1386
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1409
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1413
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1433
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1437
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1445
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1449
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1471
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1500
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1508
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1572
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1580
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1594
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1598
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1602
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1606
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1612
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1620
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1659
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1683
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1693
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1709
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1715
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1720
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1725
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1731
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1749
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1755
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1759
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1763
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1775
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1800
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1836
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1840
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1844
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1854
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1934
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1938
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1946
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1957
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2016
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2032
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2059
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2064
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2072
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2447
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2457
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2461
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2470
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2488
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2496
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2505
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Options: yyDollar[3].flushOptions}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.flushOptions = yyDollar[1].flushOptions
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.flushOptions = []*FlushOption{yyDollar[1].flushOption}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yyVAL.flushOptions = append(yyVAL.flushOptions, yyDollar[2].flushOption)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2617
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = yyDollar[1].str
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2658
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2662
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2667
		{
			yyVAL.indexOptions = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2687
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2691
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2716
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2724
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = yyDollar[1].str
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2793
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2799
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2803
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 531:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2823
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 532:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2827
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 533:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2831
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 534:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2835
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 535:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2839
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2853
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2863
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2892
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2920
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.boolean = false
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = string("")
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3003
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3016
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3026
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3044
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3053
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 579:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3057
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3085
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3089
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3096
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3106
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3112
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3118
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3127
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3131
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3139
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3146
		{
			yyVAL.columnOrder = nil
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3154
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3159
		{
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3165
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3181
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3185
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3195
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3205
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3217
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3223
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3231
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3235
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3243
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3251
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3259
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3267
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3275
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3283
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3292
		{

		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3321
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3326
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3334
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3338
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3342
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3346
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3350
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3366
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3378
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3382
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3386
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3390
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 646:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3395
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3404
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3408
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3412
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3416
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3434
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3439
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3443
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3448
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3452
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3476
		{
			yyVAL.boolean = false
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.boolean = true
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3510
		{
			yyVAL.showFilter = nil
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3514
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = ""
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = SessionStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.str = GlobalStr
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3538
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.statement = &Begin{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3558
		{
			yyVAL.statement = &Begin{}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3562
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3566
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.statement = &Commit{}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.statement = &Rollback{}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3598
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3602
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3656
		{
			setAllowComments(yylex, true)
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3660
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			yyVAL.bytes2 = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = UnionStr
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = UnionAllStr
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = UnionDistinctStr
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3689
		{
			yyVAL.byt = 0
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.byt = 1
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = SQLCacheStr
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = DistinctStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = StraightJoinHint
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3742
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3765
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3799
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3804
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			yyVAL.exprs = nil
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3821
		{
			yyVAL.over = nil
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.over = yyDollar[1].over
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.frame = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3845
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3895
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.window = nil
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3913
		{
			yyVAL.window = yyDollar[2].window
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3922
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3954
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3996
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4028
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4039
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4054
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4058
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.expr = nil
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4086
		{
			yyVAL.columns = nil
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4131
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4135
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4153
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = JoinStr
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = JoinStr
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = JoinStr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = StraightJoinStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = LeftJoinStr
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = LeftJoinStr
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = RightJoinStr
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = RightJoinStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = NaturalJoinStr
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4233
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4247
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.indexHints = nil
		}
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4262
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4266
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4270
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.expr = nil
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4289
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4343
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4347
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4351
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4359
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4363
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4367
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = IsNullStr
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = IsNotNullStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = IsTrueStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = IsNotTrueStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = IsFalseStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = IsNotFalseStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = EqualStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = LessThanStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = GreaterThanStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.str = LessEqualStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.str = GreaterEqualStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.str = NotEqualStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4427
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = nil
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4472
		{
			yyVAL.selectExprs = nil
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4483
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4535
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4539
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4567
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4617
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4621
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4645
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4649
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4707
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4711
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4787
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4791
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4795
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4799
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4803
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4807
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4811
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4815
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4819
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4823
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4831
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4835
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4839
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4843
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 956:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4847
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4851
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4855
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4859
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4863
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4873
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4881
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4929
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4980
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4984
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4988
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4994
		{
			yyVAL.str = ""
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yyVAL.str = BooleanModeStr
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5002
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 990:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5006
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5010
		{
			yyVAL.str = QueryExpansionStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5026
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5030
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5046
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5076
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5081
		{
			yyVAL.expr = nil
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5090
		{
			yyVAL.str = string("")
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5104
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5110
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = nil
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5129
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5133
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &NullVal{}
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5177
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5181
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5186
		{
			yyVAL.exprs = nil
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5196
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = nil
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5226
		{
			yyVAL.orderBy = nil
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5230
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5246
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5251
		{
			yyVAL.str = AscScr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.str = AscScr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = DescScr
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5264
		{
			yyVAL.limit = nil
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5272
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5276
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5282
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = ForUpdateStr
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = ShareModeStr
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5312
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5316
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5324
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5329
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5333
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5337
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5343
		{
			yyVAL.columns = nil
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5347
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5357
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5361
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5365
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5370
		{
			yyVAL.assignExprs = nil
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5374
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5394
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5400
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5420
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5426
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5439
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5456
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5469
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5482
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5488
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5512
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5516
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5527
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5538
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.expr = &Default{}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5551
		{
			yyVAL.byt = 0
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.byt = 1
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5556
		{
			yyVAL.byt = 0
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5558
		{
			yyVAL.byt = 1
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5561
		{
			yyVAL.byt = 0
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yyVAL.byt = 1
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5566
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5568
		{
			yyVAL.str = IgnoreStr
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5571
		{
			yyVAL.sqlVal = nil
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			yyVAL.empty = struct{}{}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5579
		{
			yyVAL.empty = struct{}{}
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5582
		{
			yyVAL.empty = struct{}{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.empty = struct{}{}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = UniqueStr
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			yyVAL.str = FulltextStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = SpatialStr
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5597
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5602
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5608
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5622
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5629
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5639
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5651
		{
			yyVAL.str = string("")
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5653
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5656
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5661
		{
			yyVAL.EnclosedBy = nil
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5665
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5670
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5679
		{
			yyVAL.sqlVal = nil
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5683
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5688
		{
			yyVAL.sqlVal = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5692
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5697
		{
			yyVAL.Fields = nil
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5701
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5706
		{
			yyVAL.Lines = nil
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5710
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5715
		{
			yyVAL.sqlVal = nil
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5719
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5725
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5731
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5735
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5741
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5745
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.lockType = LockRead
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5759
		{
			yyVAL.lockType = LockWrite
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5769
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5775
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5779
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5783
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6247
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6256
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
