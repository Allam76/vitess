// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const BEGIN = 57589
const START = 57590
const TRANSACTION = 57591
const COMMIT = 57592
const ROLLBACK = 57593
const SAVEPOINT = 57594
const WORK = 57595
const RELEASE = 57596
const BIT = 57597
const TINYINT = 57598
const SMALLINT = 57599
const MEDIUMINT = 57600
const INT = 57601
const INTEGER = 57602
const BIGINT = 57603
const INTNUM = 57604
const REAL = 57605
const DOUBLE = 57606
const FLOAT_TYPE = 57607
const DECIMAL = 57608
const NUMERIC = 57609
const DEC = 57610
const FIXED = 57611
const PRECISION = 57612
const TIME = 57613
const TIMESTAMP = 57614
const DATETIME = 57615
const YEAR = 57616
const CHAR = 57617
const VARCHAR = 57618
const BOOL = 57619
const CHARACTER = 57620
const VARBINARY = 57621
const NCHAR = 57622
const NVARCHAR = 57623
const NATIONAL = 57624
const VARYING = 57625
const TEXT = 57626
const TINYTEXT = 57627
const MEDIUMTEXT = 57628
const LONGTEXT = 57629
const LONG = 57630
const BLOB = 57631
const TINYBLOB = 57632
const MEDIUMBLOB = 57633
const LONGBLOB = 57634
const JSON = 57635
const ENUM = 57636
const GEOMETRY = 57637
const POINT = 57638
const LINESTRING = 57639
const POLYGON = 57640
const GEOMETRYCOLLECTION = 57641
const MULTIPOINT = 57642
const MULTILINESTRING = 57643
const MULTIPOLYGON = 57644
const LOCAL = 57645
const LOW_PRIORITY = 57646
const NULLX = 57647
const AUTO_INCREMENT = 57648
const APPROXNUM = 57649
const SIGNED = 57650
const UNSIGNED = 57651
const ZEROFILL = 57652
const COLLATION = 57653
const DATABASES = 57654
const SCHEMAS = 57655
const TABLES = 57656
const FULL = 57657
const PROCESSLIST = 57658
const COLUMNS = 57659
const FIELDS = 57660
const ENGINES = 57661
const PLUGINS = 57662
const NAMES = 57663
const CHARSET = 57664
const GLOBAL = 57665
const SESSION = 57666
const ISOLATION = 57667
const LEVEL = 57668
const READ = 57669
const WRITE = 57670
const ONLY = 57671
const REPEATABLE = 57672
const COMMITTED = 57673
const UNCOMMITTED = 57674
const SERIALIZABLE = 57675
const CURRENT_TIMESTAMP = 57676
const DATABASE = 57677
const CURRENT_DATE = 57678
const CURRENT_USER = 57679
const CURRENT_TIME = 57680
const LOCALTIME = 57681
const LOCALTIMESTAMP = 57682
const UTC_DATE = 57683
const UTC_TIME = 57684
const UTC_TIMESTAMP = 57685
const REPLACE = 57686
const CONVERT = 57687
const CAST = 57688
const SUBSTR = 57689
const SUBSTRING = 57690
const TRIM = 57691
const LEADING = 57692
const TRAILING = 57693
const BOTH = 57694
const GROUP_CONCAT = 57695
const SEPARATOR = 57696
const TIMESTAMPADD = 57697
const TIMESTAMPDIFF = 57698
const OVER = 57699
const WINDOW = 57700
const GROUPING = 57701
const GROUPS = 57702
const CURRENT = 57703
const ROWS = 57704
const RANGE = 57705
const AVG = 57706
const BIT_AND = 57707
const BIT_OR = 57708
const BIT_XOR = 57709
const COUNT = 57710
const JSON_ARRAYAGG = 57711
const JSON_OBJECTAGG = 57712
const MAX = 57713
const MIN = 57714
const STDDEV_POP = 57715
const STDDEV = 57716
const STD = 57717
const STDDEV_SAMP = 57718
const SUM = 57719
const VAR_POP = 57720
const VARIANCE = 57721
const VAR_SAMP = 57722
const CUME_DIST = 57723
const DENSE_RANK = 57724
const FIRST_VALUE = 57725
const LAG = 57726
const LAST_VALUE = 57727
const LEAD = 57728
const NTH_VALUE = 57729
const NTILE = 57730
const ROW_NUMBER = 57731
const PERCENT_RANK = 57732
const RANK = 57733
const MATCH = 57734
const AGAINST = 57735
const BOOLEAN = 57736
const LANGUAGE = 57737
const WITH = 57738
const QUERY = 57739
const EXPANSION = 57740
const UNUSED = 57741
const ARRAY = 57742
const DESCRIPTION = 57743
const EMPTY = 57744
const JSON_TABLE = 57745
const LATERAL = 57746
const MEMBER = 57747
const RECURSIVE = 57748
const ACTIVE = 57749
const BUCKETS = 57750
const CLONE = 57751
const COMPONENT = 57752
const DEFINITION = 57753
const ENFORCED = 57754
const EXCLUDE = 57755
const FOLLOWING = 57756
const GEOMCOLLECTION = 57757
const GET_MASTER_PUBLIC_KEY = 57758
const HISTOGRAM = 57759
const HISTORY = 57760
const INACTIVE = 57761
const INVISIBLE = 57762
const LOCKED = 57763
const MASTER_COMPRESSION_ALGORITHMS = 57764
const MASTER_PUBLIC_KEY_PATH = 57765
const MASTER_TLS_CIPHERSUITES = 57766
const MASTER_ZSTD_COMPRESSION_LEVEL = 57767
const NESTED = 57768
const NETWORK_NAMESPACE = 57769
const NOWAIT = 57770
const NULLS = 57771
const OJ = 57772
const OLD = 57773
const ORDINALITY = 57774
const ORGANIZATION = 57775
const OTHERS = 57776
const PATH = 57777
const PERSIST = 57778
const PERSIST_ONLY = 57779
const PRECEDING = 57780
const PRIVILEGE_CHECKS_USER = 57781
const PROCESS = 57782
const REFERENCE = 57783
const REQUIRE_ROW_FORMAT = 57784
const RESOURCE = 57785
const RESPECT = 57786
const RESTART = 57787
const RETAIN = 57788
const SECONDARY = 57789
const SECONDARY_ENGINE = 57790
const SECONDARY_LOAD = 57791
const SECONDARY_UNLOAD = 57792
const SKIP = 57793
const SRID = 57794
const THREAD_PRIORITY = 57795
const TIES = 57796
const VCPU = 57797
const VISIBLE = 57798
const SYSTEM = 57799
const INFILE = 57800

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 36,
	5, 51,
	-2, 998,
	-1, 44,
	141, 1060,
	142, 1086,
	-2, 205,
	-1, 51,
	181, 638,
	182, 638,
	-2, 628,
	-1, 58,
	1, 1544,
	477, 1544,
	-2, 666,
	-1, 491,
	128, 1096,
	-2, 1090,
	-1, 492,
	128, 1097,
	-2, 1091,
	-1, 596,
	98, 1350,
	128, 1350,
	-2, 1044,
	-1, 597,
	98, 1463,
	128, 1463,
	-2, 1045,
	-1, 602,
	98, 1373,
	128, 1373,
	-2, 1046,
	-1, 603,
	98, 1419,
	128, 1419,
	-2, 1047,
	-1, 604,
	98, 1420,
	128, 1420,
	-2, 1048,
	-1, 605,
	98, 1304,
	128, 1304,
	-2, 1052,
	-1, 607,
	98, 1396,
	128, 1396,
	-2, 1054,
	-1, 1068,
	1, 730,
	5, 730,
	12, 730,
	13, 730,
	14, 730,
	15, 730,
	17, 730,
	19, 730,
	30, 730,
	31, 730,
	56, 730,
	57, 730,
	58, 730,
	59, 730,
	60, 730,
	62, 730,
	63, 730,
	66, 730,
	67, 730,
	69, 730,
	70, 730,
	477, 730,
	-2, 760,
	-1, 1072,
	67, 68,
	69, 68,
	-2, 72,
	-1, 1302,
	128, 1099,
	-2, 1095,
	-1, 1471,
	68, 476,
	-2, 1267,
	-1, 1474,
	68, 472,
	72, 472,
	-2, 1194,
	-1, 1475,
	68, 473,
	72, 473,
	-2, 1204,
	-1, 1592,
	44, 519,
	148, 521,
	150, 519,
	151, 519,
	-2, 559,
	-1, 1668,
	5, 52,
	-2, 826,
	-1, 1974,
	69, 1246,
	70, 1246,
	128, 1246,
	-2, 673,
	-1, 1997,
	1, 781,
	5, 781,
	12, 781,
	13, 781,
	14, 781,
	15, 781,
	17, 781,
	19, 781,
	30, 781,
	31, 781,
	56, 781,
	57, 781,
	58, 781,
	59, 781,
	60, 781,
	62, 781,
	63, 781,
	66, 781,
	67, 781,
	69, 781,
	70, 781,
	477, 781,
	-2, 760,
	-1, 2100,
	148, 522,
	-2, 520,
	-1, 2163,
	5, 52,
	-2, 1018,
	-1, 2362,
	41, 1106,
	-2, 1104,
	-1, 2491,
	5, 52,
	-2, 1021,
}

const yyPrivate = 57344

const yyLast = 30973

var yyAct = [...]int{

	554, 84, 2507, 2629, 2680, 2653, 2643, 795, 415, 2644,
	2631, 2414, 7, 2413, 6, 2572, 2412, 5, 494, 2508,
	2415, 8, 2545, 2175, 2494, 2362, 2382, 2310, 824, 2270,
	2481, 2570, 1991, 1890, 2476, 1900, 1707, 1517, 87, 1420,
	2411, 3, 1519, 1019, 2010, 1736, 1967, 1476, 483, 1426,
	2250, 1192, 2060, 2364, 1531, 2227, 1424, 2221, 2093, 497,
	2011, 621, 1764, 2495, 476, 2205, 2084, 1968, 510, 834,
	1280, 1468, 1899, 398, 401, 1103, 97, 1708, 1068, 423,
	423, 460, 1458, 1472, 1817, 84, 1964, 394, 110, 1983,
	553, 1447, 1621, 471, 1457, 1590, 1273, 1976, 1508, 811,
	1327, 1936, 1194, 1336, 1399, 1464, 616, 1557, 1866, 619,
	1241, 1504, 1800, 1865, 598, 1288, 1172, 1403, 499, 921,
	1083, 1391, 1065, 1304, 924, 475, 1410, 928, 617, 1492,
	1573, 885, 1191, 864, 1082, 615, 1214, 590, 479, 941,
	1064, 594, 470, 595, 863, 418, 1246, 395, 396, 397,
	417, 782, 587, 89, 1074, 601, 2702, 2698, 1037, 1910,
	2688, 2670, 2668, 2648, 2624, 2553, 86, 1239, 932, 794,
	1038, 73, 1338, 2610, 2607, 2341, 2045, 2199, 895, 2206,
	37, 37, 37, 2661, 37, 2539, 2642, 2208, 2489, 2612,
	2524, 2339, 91, 92, 93, 94, 95, 2609, 2606, 2354,
	1828, 2057, 2538, 1957, 1603, 1702, 2342, 2535, 2536, 1544,
	2576, 2576, 37, 2456, 76, 40, 41, 1643, 1602, 2155,
	781, 2295, 1703, 1422, 2006, 2007, 2571, 1084, 569, 1085,
	575, 577, 576, 573, 574, 572, 571, 570, 1444, 1445,
	1268, 1269, 85, 85, 85, 2488, 85, 410, 1544, 578,
	579, 76, 40, 41, 1245, 1572, 2211, 784, 2005, 787,
	788, 1607, 2577, 2577, 485, 1745, 915, 1443, 1744, 611,
	1601, 1746, 837, 42, 85, 838, 839, 1243, 1244, 2393,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 1242, 113, 967, 2209, 2210, 2212, 2213, 2214,
	409, 408, 1783, 1478, 1571, 122, 118, 119, 882, 120,
	1484, 1486, 822, 1485, 1498, 1775, 1493, 1493, 1480, 1937,
	2142, 1599, 1593, 1594, 2140, 1592, 407, 1595, 1596, 468,
	1780, 1779, 388, 2222, 1823, 1854, 103, 2637, 2458, 2555,
	816, 2225, 124, 123, 2228, 2229, 2230, 2231, 2367, 2067,
	2083, 1859, 1776, 1583, 2223, 2224, 2554, 2514, 412, 2460,
	1827, 1939, 1605, 1608, 2239, 823, 823, 1781, 2561, 1768,
	1480, 2246, 2279, 1825, 1584, 1769, 1259, 1532, 844, 2340,
	2237, 823, 116, 2657, 1505, 2550, 2548, 2549, 2512, 105,
	2334, 84, 84, 102, 125, 2333, 126, 2573, 2573, 115,
	114, 2332, 853, 2450, 855, 2331, 2330, 854, 815, 819,
	1226, 848, 821, 2328, 2329, 2061, 2062, 2063, 2064, 2065,
	2344, 2446, 2447, 2542, 2543, 835, 2608, 836, 838, 839,
	901, 852, 856, 902, 1778, 1526, 2496, 2177, 1247, 402,
	1728, 2409, 111, 845, 846, 817, 820, 2058, 818, 2358,
	1845, 1846, 112, 2061, 2062, 2063, 2064, 2065, 389, 833,
	2070, 2336, 830, 1525, 910, 831, 832, 2639, 829, 2604,
	117, 88, 918, 2407, 1249, 2626, 399, 1248, 107, 1941,
	108, 403, 786, 785, 1945, 1600, 1940, 2635, 1938, 2694,
	2630, 976, 2477, 1943, 978, 1893, 1404, 2251, 2252, 1102,
	1102, 2452, 2457, 2016, 2633, 1872, 1942, 1102, 2620, 2684,
	1101, 2207, 1826, 1598, 2574, 2574, 2099, 2044, 121, 2703,
	2700, 1944, 1946, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1790, 1604, 1017, 2085, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 77, 1036,
	1039, 1039, 1039, 1045, 1039, 1039, 1045, 1039, 1045, 1054,
	1055, 1056, 1057, 1058, 1059, 2394, 1069, 411, 83, 83,
	83, 1245, 83, 1578, 2487, 1018, 1493, 2355, 1829, 897,
	898, 899, 104, 1483, 1507, 77, 1606, 2345, 1227, 849,
	1777, 2513, 977, 2357, 1243, 1244, 907, 2337, 400, 903,
	83, 814, 400, 2451, 2069, 1063, 1075, 400, 421, 2130,
	419, 422, 2689, 400, 2682, 909, 2014, 2683, 1818, 2681,
	391, 1102, 2632, 2634, 113, 2016, 2671, 783, 797, 2462,
	1096, 929, 1762, 467, 601, 1429, 1431, 2263, 466, 601,
	467, 948, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 1819, 1762, 392, 2262, 825, 1887,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 2311, 847, 967, 893, 1853, 1850, 1831, 1830,
	1579, 1762, 1848, 1180, 1071, 1178, 2313, 850, 1165, 1087,
	1762, 1735, 1541, 913, 1088, 1734, 1733, 1540, 779, 1762,
	789, 359, 1100, 979, 980, 2127, 2119, 1020, 1161, 1040,
	1042, 1044, 1046, 1048, 1050, 1051, 1053, 1430, 1558, 1073,
	1035, 1041, 1043, 1078, 1047, 1049, 1765, 1052, 1852, 1761,
	115, 114, 1851, 2079, 2455, 1882, 1872, 1749, 1448, 1741,
	1879, 1820, 1821, 1878, 1881, 2266, 1097, 1638, 1626, 1678,
	100, 892, 1761, 1675, 1682, 1611, 1283, 2312, 1095, 1872,
	1874, 420, 967, 1102, 2034, 1080, 1875, 1873, 947, 807,
	957, 1439, 1224, 967, 1276, 940, 423, 1174, 1761, 2261,
	1215, 1886, 920, 1874, 1891, 1883, 813, 1761, 1548, 1392,
	823, 1429, 1431, 423, 1193, 840, 1761, 823, 823, 823,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 823, 920, 967, 1981, 2035, 1980, 796, 1173,
	1234, 956, 955, 965, 966, 958, 959, 960, 961, 962,
	963, 964, 957, 492, 1394, 967, 956, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 2267, 1196,
	967, 827, 956, 955, 965, 966, 958, 959, 960, 961,
	962, 963, 964, 957, 1093, 857, 967, 979, 980, 939,
	938, 979, 980, 1430, 790, 1222, 1673, 1216, 1672, 100,
	812, 423, 1959, 131, 1311, 1549, 131, 940, 1257, 842,
	1198, 84, 131, 1674, 938, 823, 939, 938, 1272, 1309,
	1310, 1308, 1281, 1282, 1237, 426, 426, 939, 938, 1210,
	1211, 940, 1213, 2546, 940, 1167, 2687, 131, 2674, 2654,
	2673, 1175, 2621, 2640, 99, 940, 1254, 1274, 131, 1182,
	465, 1265, 131, 624, 2238, 1392, 131, 1691, 1263, 799,
	800, 801, 802, 803, 804, 805, 1201, 1202, 828, 2232,
	131, 426, 1218, 624, 1219, 2022, 1301, 939, 938, 84,
	935, 131, 98, 2517, 939, 938, 1200, 958, 959, 960,
	961, 962, 963, 964, 957, 940, 1271, 967, 1331, 1332,
	2509, 85, 940, 1229, 1230, 2597, 2546, 1232, 2585, 1302,
	2584, 2695, 1307, 1220, 939, 938, 2492, 939, 938, 1018,
	2352, 2691, 1021, 1235, 2623, 1252, 960, 961, 962, 963,
	964, 957, 940, 2351, 967, 940, 1071, 1250, 1262, 1253,
	2350, 1305, 1251, 584, 585, 2349, 1264, 2510, 1258, 1806,
	1300, 1261, 2453, 1020, 939, 938, 939, 938, 2343, 1270,
	2198, 2547, 1370, 1961, 2197, 2696, 939, 938, 1285, 1306,
	1423, 1328, 940, 1329, 940, 1069, 1623, 1624, 1625, 1069,
	925, 1805, 1298, 926, 940, 1294, 1296, 1297, 1377, 1380,
	1803, 1295, 1286, 2511, 1784, 1287, 1393, 1747, 2454, 1748,
	1345, 888, 887, 861, 1349, 2596, 2558, 2556, 2523, 2449,
	1018, 1291, 1292, 2448, 1434, 2406, 2359, 2327, 1436, 2289,
	2235, 2234, 1197, 2233, 1452, 2195, 860, 1459, 617, 1203,
	1204, 1205, 2027, 1801, 1568, 1231, 1199, 414, 2583, 2582,
	2459, 601, 1196, 2404, 1212, 1419, 955, 965, 966, 958,
	959, 960, 961, 962, 963, 964, 957, 1302, 1334, 967,
	2376, 1454, 1342, 1765, 1428, 2370, 2259, 823, 2114, 823,
	2110, 1351, 1352, 1181, 515, 514, 517, 518, 519, 520,
	2101, 2071, 1362, 516, 521, 2055, 1366, 2054, 1071, 1538,
	1432, 2053, 1839, 1071, 1020, 1838, 1562, 1071, 1453, 1375,
	1376, 1546, 1389, 1545, 1330, 1228, 1465, 1225, 1190, 1189,
	459, 1161, 1188, 131, 1187, 1176, 1170, 1437, 624, 624,
	1169, 1446, 1168, 1441, 1045, 1440, 1166, 1267, 883, 809,
	406, 1536, 1537, 404, 624, 1462, 1455, 900, 2158, 2302,
	2613, 2186, 2603, 2530, 920, 2186, 2528, 1909, 920, 1494,
	1495, 1496, 1497, 1564, 1510, 1511, 1512, 1513, 2186, 2526,
	2186, 2408, 131, 2302, 2400, 1506, 1451, 2302, 2317, 1514,
	1515, 2302, 920, 84, 2302, 2301, 2369, 1479, 956, 955,
	965, 966, 958, 959, 960, 961, 962, 963, 964, 957,
	2186, 2185, 967, 2321, 1412, 1415, 1416, 1417, 1413, 2320,
	1414, 1418, 1627, 1076, 1984, 1985, 2157, 1076, 2167, 920,
	1610, 920, 1301, 1018, 1550, 2121, 1737, 2042, 2041, 1556,
	131, 2038, 2039, 2038, 2037, 1636, 920, 1407, 920, 88,
	919, 1581, 1580, 1368, 1565, 1516, 1570, 1368, 920, 944,
	1099, 1098, 2050, 1737, 2028, 1302, 956, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 2368, 1077,
	967, 1079, 1737, 1077, 88, 1075, 1965, 1563, 1433, 1979,
	1075, 1278, 1569, 2122, 1530, 904, 1406, 905, 891, 893,
	1979, 1576, 1560, 1368, 890, 2532, 1453, 891, 2161, 1582,
	1544, 2051, 1585, 2040, 1993, 1863, 1751, 1442, 2148, 1305,
	1407, 1636, 1613, 1614, 1704, 1706, 1696, 1615, 1069, 1069,
	1069, 1069, 1069, 1695, 1529, 1407, 2122, 1233, 1636, 1979,
	1632, 1543, 1277, 1279, 1423, 1260, 1729, 1306, 1240, 1179,
	1177, 1081, 1628, 1587, 1069, 893, 916, 85, 131, 131,
	131, 2540, 917, 612, 1705, 2527, 1992, 1622, 2375, 2373,
	2200, 1480, 929, 2173, 624, 1412, 1415, 1416, 1417, 1413,
	1509, 1414, 1418, 2021, 1370, 1505, 1709, 1518, 1710, 1984,
	1985, 1666, 1755, 1738, 1527, 1500, 1499, 1162, 1732, 1521,
	1739, 1523, 1740, 896, 880, 1559, 1459, 85, 956, 955,
	965, 966, 958, 959, 960, 961, 962, 963, 964, 957,
	2665, 601, 967, 1642, 1644, 85, 2663, 2645, 2049, 1987,
	1965, 1807, 1690, 1724, 1654, 1655, 1656, 1657, 1184, 906,
	84, 1731, 894, 889, 1990, 1989, 1071, 1071, 1071, 1071,
	1071, 1712, 1713, 1720, 1715, 1766, 1717, 1716, 1721, 1718,
	1752, 1667, 1071, 823, 1719, 1723, 823, 823, 1711, 480,
	481, 1714, 1071, 2579, 1760, 1763, 1087, 2537, 1897, 1722,
	1809, 1416, 1417, 1742, 1612, 1692, 1289, 423, 1844, 1754,
	2567, 2164, 1620, 1619, 1750, 2292, 2258, 1161, 933, 934,
	489, 1173, 1767, 2189, 1793, 2109, 1795, 1796, 1797, 1798,
	2108, 2026, 2025, 1837, 1759, 2464, 1834, 965, 966, 958,
	959, 960, 961, 962, 963, 964, 957, 931, 2467, 967,
	2522, 1785, 1786, 1802, 2521, 2363, 2557, 2361, 1792, 1804,
	2445, 2444, 405, 1842, 2346, 2347, 922, 1794, 1799, 1094,
	878, 862, 859, 624, 858, 810, 2268, 2592, 923, 1895,
	1896, 426, 426, 2380, 1917, 2379, 1824, 2159, 1281, 1282,
	131, 1567, 1522, 131, 1841, 1902, 1183, 2240, 426, 426,
	2515, 131, 2365, 624, 2241, 1894, 1810, 1301, 933, 934,
	624, 624, 624, 131, 131, 131, 1867, 1880, 1885, 1864,
	131, 1849, 1555, 100, 1847, 624, 1164, 911, 912, 2591,
	1840, 2590, 2589, 1618, 2324, 843, 477, 426, 1869, 1870,
	1302, 1617, 1877, 1862, 1970, 84, 2560, 1876, 2559, 1888,
	1889, 2519, 1855, 1892, 2468, 2384, 2277, 478, 88, 1861,
	2383, 2271, 1737, 1812, 1813, 1814, 2666, 1958, 2088, 1995,
	2667, 2666, 1903, 1274, 1999, 2000, 2001, 1904, 1860, 1966,
	1908, 1912, 1858, 1857, 1679, 1971, 426, 426, 426, 1676,
	624, 1586, 1217, 1978, 426, 936, 2667, 2397, 2024, 426,
	426, 1275, 1709, 612, 1710, 462, 464, 131, 624, 90,
	131, 57, 624, 1, 1947, 2002, 1948, 1577, 1902, 1255,
	1459, 1998, 1459, 2220, 2004, 2425, 54, 2427, 19, 2219,
	131, 2426, 18, 2226, 1969, 2056, 944, 2428, 20, 2429,
	21, 1973, 2424, 15, 1988, 1918, 2423, 14, 1921, 1922,
	1923, 2417, 10, 1926, 2438, 35, 2437, 34, 2059, 1994,
	2436, 30, 1822, 2019, 2435, 29, 2020, 1996, 2015, 2236,
	2018, 2434, 28, 423, 2066, 1171, 2009, 2432, 25, 2431,
	24, 2017, 624, 2433, 26, 2335, 2008, 2422, 13, 1343,
	1344, 793, 2047, 2048, 1528, 1832, 2419, 12, 1835, 1836,
	1354, 1355, 1356, 1357, 1960, 884, 1514, 2520, 1515, 2418,
	11, 2416, 9, 1367, 1369, 2463, 2465, 2029, 2030, 2360,
	1374, 2242, 2068, 2073, 2033, 2204, 2203, 1816, 1815, 879,
	1238, 2036, 1868, 1871, 2052, 1272, 1539, 1597, 2475, 1466,
	1456, 614, 96, 1547, 2147, 826, 2256, 367, 624, 624,
	2003, 1463, 1773, 2466, 881, 131, 1772, 2031, 1782, 1477,
	1771, 1770, 2461, 131, 131, 1774, 1107, 1105, 131, 131,
	2097, 1106, 131, 131, 131, 1104, 1109, 1108, 371, 1089,
	2074, 2502, 937, 495, 106, 2120, 58, 2113, 2260, 2123,
	1884, 1591, 624, 624, 2096, 2090, 2129, 2098, 2153, 2091,
	101, 109, 373, 975, 1616, 2102, 1743, 599, 600, 592,
	2534, 2541, 927, 2118, 2478, 1689, 1034, 2076, 1390, 498,
	1727, 2480, 1293, 2078, 513, 1161, 2082, 512, 511, 508,
	2086, 2087, 509, 2089, 956, 955, 965, 966, 958, 959,
	960, 961, 962, 963, 964, 957, 2575, 1554, 967, 1284,
	1701, 949, 2043, 1071, 496, 427, 427, 2168, 487, 131,
	624, 1067, 624, 2181, 2182, 2183, 1060, 473, 1566, 131,
	1411, 131, 131, 426, 426, 426, 1409, 1459, 131, 1709,
	2138, 1710, 1408, 1185, 588, 2191, 1986, 2179, 1982, 84,
	1421, 1066, 469, 2160, 74, 841, 390, 2169, 2154, 2392,
	39, 427, 463, 2115, 482, 27, 17, 2184, 851, 131,
	131, 131, 22, 485, 2180, 16, 1589, 791, 43, 1561,
	2190, 981, 982, 983, 984, 985, 986, 987, 988, 2201,
	46, 1752, 45, 2192, 131, 1811, 131, 1524, 2501, 2628,
	624, 865, 2652, 2544, 624, 33, 32, 31, 2430, 2439,
	2421, 2420, 624, 2615, 23, 624, 2614, 4, 908, 75,
	1588, 36, 1069, 2193, 610, 2, 0, 0, 1609, 2216,
	2217, 2218, 0, 0, 2156, 2255, 2215, 0, 0, 0,
	0, 0, 0, 1020, 0, 2244, 2243, 0, 2269, 2245,
	0, 2249, 0, 2170, 2171, 0, 1902, 2172, 2273, 2274,
	2174, 2272, 1970, 2248, 2264, 1970, 2297, 2194, 1020, 2196,
	2253, 2254, 2015, 2265, 0, 0, 0, 0, 1995, 0,
	0, 0, 2257, 0, 0, 1634, 0, 0, 0, 0,
	1637, 0, 0, 0, 0, 1639, 1640, 2300, 0, 0,
	1645, 1646, 1647, 1648, 1649, 1650, 2296, 0, 1653, 0,
	1514, 2294, 0, 1658, 1659, 1660, 1661, 0, 1663, 1664,
	1665, 2247, 0, 0, 0, 1668, 1669, 1670, 1671, 2293,
	0, 0, 0, 2299, 1677, 2304, 0, 1680, 1681, 0,
	1071, 0, 1686, 1687, 2323, 2322, 2325, 2314, 1693, 2309,
	1694, 0, 1969, 1697, 1698, 1969, 1699, 1700, 2315, 2316,
	0, 131, 131, 131, 131, 131, 2278, 2146, 2303, 2381,
	2326, 0, 1428, 131, 2305, 1725, 1726, 131, 2338, 0,
	0, 131, 2348, 0, 0, 2353, 2318, 131, 2319, 0,
	0, 0, 0, 2356, 0, 0, 1970, 0, 84, 2366,
	0, 2371, 2372, 0, 0, 0, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 2378, 0, 2385, 2374,
	0, 2387, 2386, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2403, 2399, 0,
	0, 0, 2398, 0, 0, 2410, 2405, 0, 0, 0,
	0, 0, 0, 0, 0, 2402, 0, 956, 955, 965,
	966, 958, 959, 960, 961, 962, 963, 964, 957, 1069,
	0, 967, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 0, 1969, 0, 1481, 1482,
	0, 1487, 1488, 1489, 1490, 1491, 624, 131, 426, 624,
	624, 0, 0, 0, 0, 0, 0, 0, 2470, 1501,
	1502, 1503, 2472, 426, 0, 2483, 0, 2469, 2471, 0,
	2473, 0, 2484, 1221, 0, 0, 2485, 0, 0, 945,
	0, 0, 0, 426, 2490, 624, 0, 1400, 0, 0,
	426, 0, 0, 0, 84, 0, 485, 0, 0, 0,
	1020, 0, 0, 2497, 0, 0, 0, 1709, 0, 1710,
	0, 0, 0, 0, 624, 624, 0, 0, 0, 0,
	131, 2506, 0, 0, 0, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 1071, 0, 2518,
	1907, 0, 0, 0, 2516, 0, 1915, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 1924, 1925, 0, 0,
	2533, 0, 0, 0, 0, 0, 2525, 1931, 0, 0,
	0, 1935, 0, 2403, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 84, 0,
	2588, 2563, 0, 2565, 84, 2562, 2479, 2482, 624, 1972,
	624, 0, 1160, 2568, 2580, 2566, 552, 2586, 2578, 423,
	2601, 0, 2564, 2595, 0, 0, 0, 0, 2551, 0,
	0, 2593, 0, 624, 2581, 0, 84, 2605, 2622, 2602,
	0, 84, 0, 2619, 0, 2618, 2611, 0, 2617, 0,
	2625, 0, 2616, 624, 0, 624, 0, 624, 0, 624,
	0, 1383, 0, 2498, 2499, 0, 0, 0, 0, 0,
	1395, 84, 0, 2647, 84, 84, 2649, 0, 2638, 84,
	0, 2627, 0, 0, 0, 0, 0, 0, 0, 0,
	2659, 0, 0, 0, 2595, 423, 2658, 0, 2655, 84,
	0, 2664, 84, 2662, 2672, 0, 2660, 2646, 2675, 0,
	2677, 131, 608, 0, 0, 0, 620, 0, 2595, 84,
	0, 84, 2685, 0, 0, 84, 2145, 2690, 0, 426,
	0, 0, 0, 0, 131, 426, 798, 0, 2595, 84,
	2595, 0, 84, 0, 2699, 1070, 0, 0, 0, 84,
	0, 0, 131, 84, 426, 2482, 624, 426, 2595, 0,
	0, 426, 426, 0, 426, 0, 0, 0, 2595, 2587,
	0, 0, 2595, 0, 0, 0, 0, 0, 0, 0,
	0, 427, 427, 0, 624, 0, 0, 0, 131, 624,
	0, 0, 0, 0, 454, 128, 624, 624, 427, 427,
	0, 0, 0, 0, 393, 0, 0, 0, 2124, 0,
	0, 1787, 1788, 1789, 1791, 2094, 956, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 0, 0,
	967, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	589, 2134, 0, 0, 613, 0, 0, 0, 780, 0,
	0, 0, 2143, 2144, 0, 0, 0, 0, 2149, 0,
	0, 0, 792, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 806, 0, 2162, 2163, 2676, 2165, 131,
	0, 2166, 0, 0, 0, 0, 427, 427, 427, 0,
	0, 0, 0, 0, 427, 0, 624, 0, 0, 427,
	427, 2178, 1955, 624, 624, 624, 0, 0, 0, 0,
	473, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 945, 1913, 1914, 1954,
	1629, 1630, 1631, 0, 1919, 1920, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 1927, 1928, 1929, 1930,
	0, 1932, 1933, 1934, 956, 955, 965, 966, 958, 959,
	960, 961, 962, 963, 964, 957, 0, 0, 967, 0,
	0, 620, 620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 0, 0, 0, 620, 0, 0,
	956, 955, 965, 966, 958, 959, 960, 961, 962, 963,
	964, 957, 0, 0, 967, 1683, 1684, 1685, 0, 0,
	0, 0, 0, 624, 0, 131, 0, 0, 0, 0,
	0, 624, 0, 0, 2276, 0, 0, 956, 955, 965,
	966, 958, 959, 960, 961, 962, 963, 964, 957, 0,
	0, 967, 0, 0, 0, 2284, 2285, 2286, 0, 2288,
	0, 0, 0, 0, 473, 0, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 131, 0, 131, 1905, 2306, 2307, 2308, 0,
	624, 0, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 624, 808, 956, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 2032, 0,
	967, 0, 0, 0, 0, 428, 429, 430, 431, 432,
	436, 437, 441, 442, 451, 450, 449, 452, 453, 456,
	455, 457, 433, 434, 435, 438, 439, 440, 443, 444,
	447, 445, 446, 0, 886, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 427, 427, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2388, 2389, 2390, 2391, 1843,
	0, 0, 0, 0, 0, 2395, 2396, 0, 0, 0,
	0, 0, 0, 0, 0, 2126, 624, 0, 0, 0,
	0, 608, 914, 2128, 0, 0, 608, 1090, 0, 0,
	0, 0, 2131, 2132, 0, 0, 0, 0, 951, 2133,
	954, 0, 0, 0, 0, 0, 473, 968, 969, 970,
	971, 972, 973, 974, 0, 952, 953, 950, 956, 955,
	965, 966, 958, 959, 960, 961, 962, 963, 964, 957,
	1633, 0, 967, 0, 1906, 2135, 2136, 0, 2137, 426,
	0, 2139, 131, 2141, 0, 0, 0, 624, 0, 624,
	0, 956, 955, 965, 966, 958, 959, 960, 961, 962,
	963, 964, 957, 0, 0, 967, 0, 2486, 0, 0,
	0, 0, 0, 0, 2491, 0, 1949, 1950, 0, 1951,
	1952, 131, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 1963, 0, 0,
	1062, 0, 1072, 0, 0, 0, 0, 0, 0, 0,
	2187, 2188, 0, 0, 0, 0, 624, 1129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1997, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2529, 624, 0, 0, 0, 0, 2552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 473, 0, 0, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 624, 0, 620, 620, 620, 0, 0, 0, 2569,
	0, 1116, 0, 0, 624, 0, 0, 0, 620, 0,
	0, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 1758, 0, 0, 0, 426, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 1335, 1340,
	1341, 0, 0, 1130, 0, 1346, 1347, 1348, 0, 1350,
	0, 0, 1353, 0, 0, 0, 0, 1358, 1359, 1360,
	1361, 0, 1363, 1364, 1365, 0, 0, 0, 0, 0,
	1371, 1372, 1373, 1256, 0, 624, 1379, 1382, 0, 1387,
	1388, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 620, 2125, 0, 427, 0,
	0, 426, 589, 0, 1398, 1186, 1401, 1402, 0, 0,
	0, 0, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 1206, 1207, 1208, 0, 0,
	0, 0, 1209, 427, 0, 0, 0, 0, 0, 0,
	427, 0, 0, 2692, 2693, 2150, 2151, 2152, 0, 0,
	1143, 1146, 1147, 1148, 1149, 1150, 1151, 0, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1333, 1131, 1132, 1133, 1134,
	1110, 1114, 1144, 1111, 1117, 1113, 1115, 1112, 0, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 0, 0,
	0, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 0, 0, 0, 0, 0, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1396, 1397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1290, 0, 0, 0, 1757, 0, 0, 0,
	0, 0, 0, 454, 129, 0, 0, 387, 608, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 620, 0, 1756, 620, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 1145,
	0, 0, 0, 0, 0, 0, 486, 0, 0, 591,
	609, 0, 0, 129, 0, 0, 0, 129, 0, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 2280, 2281, 2282, 2283,
	0, 0, 0, 620, 2287, 620, 0, 0, 2290, 2291,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 1435, 1635, 448, 0, 427, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 1651,
	1652, 0, 0, 0, 427, 0, 0, 427, 0, 0,
	1662, 427, 427, 0, 427, 0, 0, 0, 0, 2095,
	0, 0, 0, 1575, 0, 0, 0, 1575, 0, 1758,
	0, 0, 2104, 2106, 0, 1575, 0, 1688, 1575, 0,
	0, 0, 2095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 0, 1534, 1535, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	37, 38, 76, 40, 41, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 0,
	82, 0, 0, 1553, 42, 68, 69, 0, 0, 473,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 85, 0, 129, 0, 0, 0, 0, 0,
	2474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 608, 428, 429, 430, 431, 432, 436,
	437, 441, 442, 451, 450, 449, 452, 453, 456, 455,
	457, 433, 434, 435, 438, 439, 440, 443, 444, 447,
	445, 446, 0, 129, 0, 0, 0, 0, 608, 0,
	0, 0, 0, 0, 0, 44, 78, 48, 47, 50,
	0, 61, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 0, 0, 2095, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 81, 80,
	0, 0, 59, 60, 49, 0, 0, 0, 2095, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 0, 1808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 620, 620, 0, 0, 0, 71, 0, 72,
	0, 0, 473, 0, 473, 0, 0, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 0, 2013, 0, 0, 0, 1856, 53,
	79, 0, 55, 56, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2636, 1116, 0, 0, 620, 620, 129,
	129, 129, 0, 0, 0, 0, 0, 0, 0, 609,
	0, 0, 0, 620, 609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	1916, 0, 0, 0, 0, 0, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	2678, 0, 0, 0, 1102, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 620, 448, 1977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 83, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 0, 1898, 0, 0, 0, 620, 2013, 620, 2013,
	620, 0, 2012, 1143, 1146, 1147, 1148, 1149, 1150, 1151,
	0, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 0, 1131,
	1132, 1133, 1134, 1110, 1114, 1144, 1111, 1117, 1113, 1115,
	1112, 0, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 129, 129, 0, 0, 2081,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 2112, 0, 0, 0, 0, 0, 0, 2116,
	2117, 0, 1145, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 0, 428, 429, 430, 431, 432, 436, 437,
	441, 442, 451, 450, 449, 452, 453, 456, 455, 457,
	433, 434, 435, 438, 439, 440, 443, 444, 447, 445,
	446, 0, 0, 2046, 0, 427, 0, 454, 129, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2092, 0, 2072, 0, 2094, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 2077, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2176,
	0, 0, 0, 0, 0, 0, 2176, 2176, 2176, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 0, 0,
	2111, 427, 0, 0, 0, 1339, 1339, 1339, 2176, 0,
	0, 1339, 1339, 1339, 1339, 1339, 1339, 0, 0, 1339,
	0, 0, 0, 0, 1339, 1339, 1339, 1339, 0, 1339,
	1339, 1339, 0, 0, 0, 0, 0, 1339, 1339, 1339,
	0, 0, 0, 1339, 1339, 0, 1339, 1339, 0, 0,
	0, 609, 0, 0, 0, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1339, 1339, 1339, 1339, 0, 129, 37, 0, 76,
	40, 41, 0, 0, 129, 472, 0, 0, 0, 129,
	129, 64, 0, 129, 1438, 1195, 609, 82, 0, 0,
	0, 42, 0, 0, 0, 0, 620, 0, 0, 0,
	1195, 0, 0, 0, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2298, 0, 0, 0, 0, 0,
	2176, 0, 0, 2440, 0, 2202, 2651, 2654, 2650, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	129, 0, 129, 129, 0, 0, 0, 0, 0, 129,
	0, 0, 44, 78, 48, 47, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 1552, 129, 0, 51, 81, 80, 0, 0, 0,
	0, 49, 0, 0, 0, 0, 0, 0, 0, 0,
	2377, 0, 0, 0, 0, 129, 0, 472, 428, 429,
	430, 431, 432, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 433, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 62, 63, 2401,
	2442, 0, 0, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 71, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 37, 0, 76, 40, 41, 0,
	0, 0, 0, 0, 0, 0, 2443, 79, 64, 55,
	56, 66, 0, 67, 82, 0, 0, 0, 42, 1339,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	2012, 0, 2012, 0, 0, 0, 1339, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1339, 0, 0,
	0, 1339, 0, 0, 608, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	2440, 0, 0, 0, 0, 2701, 0, 0, 0, 0,
	0, 609, 129, 129, 129, 129, 129, 0, 0, 620,
	0, 0, 0, 77, 472, 0, 0, 0, 129, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 129, 44,
	78, 48, 47, 50, 0, 0, 609, 0, 0, 0,
	0, 0, 0, 454, 2531, 2441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 37, 0, 76, 40,
	41, 51, 81, 80, 1159, 83, 0, 0, 49, 0,
	64, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 2493, 0, 0, 0, 2176, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 2442, 85, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 72, 0, 0, 0, 0, 129, 0,
	0, 0, 2440, 0, 0, 1102, 0, 2697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2443, 79, 0, 55, 56, 66, 0,
	67, 0, 0, 448, 0, 0, 0, 0, 2641, 0,
	0, 44, 78, 48, 47, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2441, 0, 0,
	0, 0, 0, 37, 0, 76, 40, 41, 0, 0,
	0, 129, 0, 51, 81, 80, 0, 64, 0, 0,
	49, 0, 1339, 82, 0, 0, 0, 42, 0, 0,
	0, 1339, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 85, 62, 63, 0, 2442,
	0, 0, 0, 0, 0, 0, 0, 0, 37, 0,
	76, 40, 41, 71, 0, 72, 0, 0, 0, 2440,
	0, 0, 64, 0, 2686, 0, 0, 609, 82, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 454, 2443, 79, 0, 55, 56,
	66, 0, 67, 0, 0, 0, 0, 0, 44, 78,
	48, 47, 50, 0, 0, 2105, 0, 0, 0, 0,
	85, 0, 0, 0, 2441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 81, 80, 0, 2440, 0, 0, 49, 0, 2669,
	0, 0, 0, 0, 428, 429, 430, 431, 432, 436,
	437, 441, 442, 451, 450, 449, 452, 453, 456, 455,
	457, 433, 434, 435, 438, 439, 440, 443, 444, 447,
	445, 446, 129, 44, 78, 48, 47, 50, 0, 0,
	0, 0, 77, 62, 63, 0, 2442, 383, 0, 2441,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 51, 81, 80, 0, 0,
	0, 0, 49, 129, 448, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 2443, 79, 83, 55, 56, 66, 2103, 67,
	0, 0, 37, 0, 76, 40, 41, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 64, 0, 62, 63,
	0, 2442, 82, 0, 0, 486, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 72, 360, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 381, 382, 0, 0,
	0, 0, 0, 0, 85, 2656, 0, 2443, 79, 0,
	55, 56, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2440, 77,
	0, 369, 0, 0, 370, 0, 0, 378, 379, 0,
	472, 0, 0, 0, 609, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 78, 48,
	47, 50, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 2441, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	81, 80, 0, 0, 77, 0, 49, 0, 0, 376,
	0, 0, 0, 0, 129, 428, 429, 430, 431, 432,
	436, 437, 441, 442, 451, 450, 449, 452, 453, 456,
	455, 457, 433, 434, 435, 438, 439, 440, 443, 444,
	447, 445, 446, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 62, 63, 0, 2442, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 364, 365, 129, 386, 0, 0,
	0, 366, 368, 0, 362, 385, 384, 0, 0, 0,
	0, 2443, 79, 0, 55, 56, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 472, 0, 472, 0, 0, 428, 429,
	430, 431, 432, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 433, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 0, 760, 740, 322, 690,
	763, 657, 676, 775, 679, 682, 723, 640, 703, 253,
	674, 641, 0, 661, 630, 668, 631, 658, 692, 178,
	656, 742, 706, 762, 211, 719, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 761, 698, 0, 769, 214,
	0, 715, 770, 311, 237, 0, 0, 694, 749, 701,
	738, 689, 725, 649, 714, 764, 675, 721, 765, 0,
	0, 0, 0, 2500, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 129, 718, 759, 671, 720, 722, 628,
	717, 0, 635, 642, 774, 755, 664, 665, 666, 0,
	0, 0, 0, 0, 0, 0, 693, 702, 733, 686,
	0, 0, 609, 0, 0, 0, 0, 0, 662, 0,
	712, 0, 129, 0, 643, 636, 0, 0, 691, 0,
	0, 0, 648, 136, 663, 734, 0, 626, 190, 238,
	148, 739, 754, 688, 202, 351, 758, 685, 684, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	732, 294, 672, 627, 743, 659, 669, 169, 667, 287,
	257, 340, 0, 709, 264, 286, 215, 329, 729, 338,
	339, 677, 778, 348, 353, 0, 699, 646, 308, 179,
	0, 138, 0, 271, 174, 207, 687, 724, 660, 166,
	730, 713, 748, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 2503, 2504, 2505, 0, 0, 0, 0,
	345, 683, 297, 296, 678, 198, 737, 716, 632, 280,
	727, 203, 137, 319, 356, 153, 209, 324, 625, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 670, 728, 341, 736, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 633, 0, 313, 343, 358,
	156, 655, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 653, 654, 651, 0, 652, 704, 705,
	766, 767, 768, 735, 645, 0, 750, 751, 0, 0,
	0, 0, 0, 741, 756, 757, 726, 776, 680, 681,
	650, 299, 281, 634, 637, 638, 639, 647, 695, 696,
	708, 711, 746, 745, 744, 747, 752, 772, 771, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 135, 144, 213, 777, 279, 185, 344, 629,
	176, 0, 697, 700, 710, 731, 133, 145, 155, 161,
	175, 180, 184, 673, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 753, 760, 740, 322,
	690, 763, 657, 676, 775, 679, 682, 723, 640, 703,
	253, 674, 641, 0, 661, 630, 668, 631, 658, 692,
	178, 656, 742, 706, 762, 211, 719, 0, 168, 219,
	217, 0, 0, 0, 260, 321, 761, 698, 0, 769,
	214, 0, 715, 770, 311, 237, 0, 0, 694, 749,
	701, 738, 689, 725, 649, 714, 764, 675, 721, 765,
	0, 0, 0, 0, 623, 0, 1460, 1461, 0, 0,
	0, 0, 0, 644, 0, 718, 759, 671, 720, 722,
	628, 717, 0, 635, 642, 774, 755, 664, 665, 666,
	1753, 0, 0, 0, 0, 0, 0, 693, 702, 733,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 712, 0, 0, 0, 643, 636, 0, 0, 691,
	0, 0, 0, 648, 136, 663, 734, 0, 626, 190,
	238, 148, 739, 754, 688, 202, 351, 758, 685, 684,
	274, 0, 316, 192, 212, 152, 132, 146, 162, 191,
	249, 732, 294, 672, 627, 743, 659, 669, 169, 667,
	287, 257, 340, 0, 709, 264, 286, 215, 329, 729,
	338, 339, 677, 778, 348, 353, 0, 699, 646, 308,
	179, 0, 138, 0, 271, 174, 207, 687, 724, 660,
	166, 730, 713, 748, 307, 327, 154, 323, 236, 242,
	163, 165, 164, 147, 302, 326, 158, 167, 312, 290,
	317, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 683, 297, 296, 678, 198, 737, 716, 632,
	280, 727, 203, 137, 319, 356, 153, 209, 324, 625,
	186, 248, 171, 258, 259, 183, 134, 276, 230, 231,
	229, 232, 670, 728, 341, 736, 278, 139, 320, 337,
	159, 298, 300, 354, 285, 141, 335, 315, 234, 204,
	205, 140, 0, 283, 177, 189, 172, 252, 0, 188,
	273, 332, 333, 170, 357, 149, 347, 143, 150, 346,
	245, 0, 244, 349, 328, 336, 235, 223, 0, 142,
	334, 233, 222, 210, 182, 194, 269, 218, 270, 195,
	240, 239, 241, 220, 224, 0, 633, 0, 313, 343,
	358, 156, 655, 301, 325, 0, 0, 157, 187, 181,
	268, 243, 151, 197, 310, 208, 216, 282, 355, 256,
	288, 160, 342, 309, 653, 654, 651, 0, 652, 704,
	705, 766, 767, 768, 735, 645, 0, 750, 751, 0,
	0, 0, 0, 0, 741, 756, 757, 726, 776, 680,
	681, 650, 299, 281, 634, 637, 638, 639, 647, 695,
	696, 708, 711, 746, 745, 744, 747, 752, 772, 771,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 135, 144, 213, 777, 279, 185, 344,
	629, 176, 0, 697, 700, 710, 731, 133, 145, 155,
	161, 175, 180, 184, 673, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 250, 251,
	254, 255, 261, 262, 263, 265, 266, 267, 272, 275,
	277, 284, 289, 291, 292, 293, 295, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 753, 760, 740,
	322, 690, 763, 657, 676, 775, 679, 682, 723, 640,
	703, 253, 674, 641, 0, 661, 630, 668, 631, 658,
	692, 178, 656, 742, 706, 762, 211, 719, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 761, 698, 0,
	769, 214, 0, 715, 770, 311, 237, 0, 0, 694,
	749, 701, 738, 689, 725, 649, 714, 764, 675, 721,
	765, 0, 0, 0, 0, 623, 0, 1460, 1461, 0,
	0, 0, 0, 0, 644, 0, 718, 759, 671, 720,
	722, 628, 717, 0, 635, 642, 774, 755, 664, 665,
	666, 0, 0, 0, 0, 0, 0, 0, 693, 702,
	733, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 712, 0, 0, 0, 643, 636, 0, 0,
	691, 0, 0, 0, 648, 136, 663, 734, 0, 626,
	190, 238, 148, 739, 754, 688, 202, 351, 758, 685,
	684, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 732, 294, 672, 627, 743, 659, 669, 169,
	667, 287, 257, 340, 0, 709, 264, 286, 215, 329,
	729, 338, 339, 677, 778, 348, 353, 0, 699, 646,
	308, 179, 0, 138, 0, 271, 174, 207, 687, 724,
	660, 166, 730, 713, 748, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 683, 297, 296, 678, 198, 737, 716,
	632, 280, 727, 203, 137, 319, 356, 153, 209, 324,
	625, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 670, 728, 341, 736, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 633, 0, 313,
	343, 358, 156, 655, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 653, 654, 651, 0, 652,
	704, 705, 766, 767, 768, 735, 645, 0, 750, 751,
	0, 0, 0, 0, 0, 741, 756, 757, 726, 776,
	680, 681, 650, 299, 281, 634, 637, 638, 639, 647,
	695, 696, 708, 711, 746, 745, 744, 747, 752, 772,
	771, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 135, 144, 213, 777, 279, 185,
	344, 629, 176, 0, 697, 700, 710, 731, 133, 145,
	155, 161, 175, 180, 184, 673, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 753, 760,
	1974, 322, 690, 763, 657, 676, 775, 679, 682, 723,
	640, 703, 253, 674, 641, 0, 661, 630, 668, 631,
	658, 692, 178, 656, 742, 706, 762, 211, 719, 0,
	168, 219, 217, 0, 0, 0, 260, 321, 761, 698,
	0, 769, 214, 0, 715, 770, 311, 237, 0, 0,
	694, 749, 701, 738, 689, 725, 649, 714, 764, 675,
	721, 765, 85, 0, 920, 0, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 644, 0, 718, 759, 671,
	720, 722, 628, 717, 0, 635, 642, 774, 755, 664,
	665, 666, 0, 0, 0, 0, 0, 0, 0, 693,
	702, 733, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 712, 0, 0, 0, 643, 636, 0,
	0, 691, 0, 0, 0, 648, 136, 663, 734, 0,
	626, 190, 238, 148, 739, 754, 688, 202, 351, 758,
	685, 684, 274, 0, 316, 192, 212, 152, 132, 146,
	162, 191, 249, 732, 294, 672, 627, 743, 659, 669,
	169, 667, 287, 257, 340, 0, 709, 264, 286, 215,
	329, 729, 338, 339, 677, 778, 348, 353, 0, 699,
	646, 308, 179, 0, 138, 0, 271, 174, 207, 687,
	724, 660, 166, 730, 713, 748, 307, 327, 154, 323,
	236, 242, 163, 165, 164, 147, 302, 326, 158, 167,
	312, 290, 317, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 683, 297, 296, 678, 198, 737,
	716, 632, 280, 727, 203, 137, 319, 356, 153, 209,
	324, 625, 186, 248, 171, 258, 259, 183, 134, 276,
	230, 231, 229, 232, 670, 728, 341, 736, 278, 139,
	320, 337, 159, 298, 300, 354, 285, 141, 335, 315,
	234, 204, 205, 140, 0, 283, 177, 189, 172, 252,
	0, 188, 273, 332, 333, 170, 357, 149, 347, 143,
	150, 346, 245, 0, 244, 349, 328, 336, 235, 223,
	0, 142, 334, 233, 222, 210, 182, 194, 269, 218,
	270, 195, 240, 239, 241, 220, 224, 0, 633, 0,
	313, 343, 358, 156, 655, 301, 325, 0, 0, 157,
	187, 181, 268, 243, 151, 197, 310, 208, 216, 282,
	355, 256, 288, 160, 342, 309, 653, 654, 651, 0,
	652, 704, 705, 766, 767, 768, 735, 645, 0, 750,
	751, 0, 0, 0, 0, 0, 741, 756, 757, 726,
	776, 680, 681, 650, 299, 281, 634, 637, 638, 639,
	647, 695, 696, 708, 711, 746, 745, 744, 747, 752,
	772, 771, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 135, 144, 213, 1975, 279,
	185, 344, 629, 176, 0, 697, 700, 710, 731, 133,
	145, 155, 161, 175, 180, 184, 673, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	250, 251, 254, 255, 261, 262, 263, 265, 266, 267,
	272, 275, 277, 284, 289, 291, 292, 293, 295, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 753,
	760, 740, 322, 690, 763, 657, 676, 775, 679, 682,
	723, 640, 703, 253, 674, 641, 0, 661, 630, 668,
	631, 658, 692, 178, 656, 742, 706, 762, 211, 719,
	0, 168, 219, 217, 0, 0, 0, 260, 321, 761,
	698, 0, 769, 214, 0, 715, 770, 311, 237, 0,
	0, 694, 749, 701, 738, 689, 725, 649, 714, 764,
	675, 721, 765, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 0, 718, 759,
	671, 720, 722, 628, 717, 0, 635, 642, 774, 755,
	664, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	693, 702, 733, 686, 0, 0, 0, 0, 0, 0,
	2275, 0, 662, 0, 712, 0, 0, 0, 643, 636,
	0, 0, 691, 0, 0, 0, 648, 136, 663, 734,
	0, 626, 190, 238, 148, 739, 754, 688, 202, 351,
	758, 685, 684, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 732, 294, 672, 627, 743, 659,
	669, 169, 667, 287, 257, 340, 0, 709, 264, 286,
	215, 329, 729, 338, 339, 677, 778, 348, 353, 0,
	699, 646, 308, 179, 0, 138, 0, 271, 174, 207,
	687, 724, 660, 166, 730, 713, 748, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 683, 297, 296, 678, 198,
	737, 716, 632, 280, 727, 203, 137, 319, 356, 153,
	209, 324, 625, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 670, 728, 341, 736, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 633,
	0, 313, 343, 358, 156, 655, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 653, 654, 651,
	0, 652, 704, 705, 766, 767, 768, 735, 645, 0,
	750, 751, 0, 0, 0, 0, 0, 741, 756, 757,
	726, 776, 680, 681, 650, 299, 281, 634, 637, 638,
	639, 647, 695, 696, 708, 711, 746, 745, 744, 747,
	752, 772, 771, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 135, 144, 213, 777,
	279, 185, 344, 629, 176, 0, 697, 700, 710, 731,
	133, 145, 155, 161, 175, 180, 184, 673, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	753, 760, 740, 322, 690, 763, 657, 676, 775, 679,
	682, 723, 640, 703, 253, 674, 641, 0, 661, 630,
	668, 631, 658, 692, 178, 656, 742, 706, 762, 211,
	719, 0, 168, 219, 217, 0, 0, 0, 260, 321,
	761, 698, 0, 769, 214, 0, 715, 770, 311, 237,
	0, 0, 694, 749, 701, 738, 689, 725, 649, 714,
	764, 675, 721, 765, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 644, 0, 718,
	759, 671, 720, 722, 628, 717, 0, 635, 642, 774,
	755, 664, 665, 666, 0, 0, 0, 0, 0, 0,
	0, 693, 702, 733, 686, 0, 0, 0, 0, 0,
	0, 1911, 0, 662, 0, 712, 0, 0, 0, 643,
	636, 0, 0, 691, 0, 0, 0, 648, 136, 663,
	734, 0, 626, 190, 238, 148, 739, 754, 688, 202,
	351, 758, 685, 684, 274, 0, 316, 192, 212, 152,
	132, 146, 162, 191, 249, 732, 294, 672, 627, 743,
	659, 669, 169, 667, 287, 257, 340, 0, 709, 264,
	286, 215, 329, 729, 338, 339, 677, 778, 348, 353,
	0, 699, 646, 308, 179, 0, 138, 0, 271, 174,
	207, 687, 724, 660, 166, 730, 713, 748, 307, 327,
	154, 323, 236, 242, 163, 165, 164, 147, 302, 326,
	158, 167, 312, 290, 317, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 683, 297, 296, 678,
	198, 737, 716, 632, 280, 727, 203, 137, 319, 356,
	153, 209, 324, 625, 186, 248, 171, 258, 259, 183,
	134, 276, 230, 231, 229, 232, 670, 728, 341, 736,
	278, 139, 320, 337, 159, 298, 300, 354, 285, 141,
	335, 315, 234, 204, 205, 140, 0, 283, 177, 189,
	172, 252, 0, 188, 273, 332, 333, 170, 357, 149,
	347, 143, 150, 346, 245, 0, 244, 349, 328, 336,
	235, 223, 0, 142, 334, 233, 222, 210, 182, 194,
	269, 218, 270, 195, 240, 239, 241, 220, 224, 0,
	633, 0, 313, 343, 358, 156, 655, 301, 325, 0,
	0, 157, 187, 181, 268, 243, 151, 197, 310, 208,
	216, 282, 355, 256, 288, 160, 342, 309, 653, 654,
	651, 0, 652, 704, 705, 766, 767, 768, 735, 645,
	0, 750, 751, 0, 0, 0, 0, 0, 741, 756,
	757, 726, 776, 680, 681, 650, 299, 281, 634, 637,
	638, 639, 647, 695, 696, 708, 711, 746, 745, 744,
	747, 752, 772, 771, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 707, 135, 144, 213,
	777, 279, 185, 344, 629, 176, 0, 697, 700, 710,
	731, 133, 145, 155, 161, 175, 180, 184, 673, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 250, 251, 254, 255, 261, 262, 263, 265,
	266, 267, 272, 275, 277, 284, 289, 291, 292, 293,
	295, 303, 304, 305, 306, 314, 318, 330, 331, 350,
	352, 753, 760, 740, 322, 690, 763, 657, 676, 775,
	679, 682, 723, 640, 703, 253, 674, 641, 0, 661,
	630, 668, 631, 658, 692, 178, 656, 742, 706, 762,
	211, 719, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 761, 698, 0, 769, 214, 0, 715, 770, 311,
	237, 0, 0, 694, 749, 701, 738, 689, 725, 649,
	714, 764, 675, 721, 765, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 0,
	718, 759, 671, 720, 722, 628, 717, 0, 635, 642,
	774, 755, 664, 665, 666, 0, 0, 0, 0, 0,
	0, 0, 693, 702, 733, 686, 0, 0, 0, 0,
	0, 0, 1901, 0, 662, 0, 712, 0, 0, 0,
	643, 636, 0, 0, 691, 0, 0, 0, 648, 136,
	663, 734, 0, 626, 190, 238, 148, 739, 754, 688,
	202, 351, 758, 685, 684, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 732, 294, 672, 627,
	743, 659, 669, 169, 667, 287, 257, 340, 0, 709,
	264, 286, 215, 329, 729, 338, 339, 677, 778, 348,
	353, 0, 699, 646, 308, 179, 0, 138, 0, 271,
	174, 207, 687, 724, 660, 166, 730, 713, 748, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 683, 297, 296,
	678, 198, 737, 716, 632, 280, 727, 203, 137, 319,
	356, 153, 209, 324, 625, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 670, 728, 341,
	736, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 633, 0, 313, 343, 358, 156, 655, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 653,
	654, 651, 0, 652, 704, 705, 766, 767, 768, 735,
	645, 0, 750, 751, 0, 0, 0, 0, 0, 741,
	756, 757, 726, 776, 680, 681, 650, 299, 281, 634,
	637, 638, 639, 647, 695, 696, 708, 711, 746, 745,
	744, 747, 752, 772, 771, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 135, 144,
	213, 777, 279, 185, 344, 629, 176, 0, 697, 700,
	710, 731, 133, 145, 155, 161, 175, 180, 184, 673,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 753, 760, 740, 322, 690, 763, 657, 676,
	775, 679, 682, 723, 640, 703, 253, 674, 641, 0,
	661, 630, 668, 631, 658, 692, 178, 656, 742, 706,
	762, 211, 719, 0, 168, 219, 217, 0, 0, 0,
	260, 321, 761, 698, 0, 769, 214, 0, 715, 770,
	311, 237, 0, 0, 694, 749, 701, 738, 689, 725,
	649, 714, 764, 675, 721, 765, 85, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 644,
	0, 718, 759, 671, 720, 722, 628, 717, 0, 635,
	642, 774, 755, 664, 665, 666, 0, 0, 0, 0,
	0, 0, 0, 693, 702, 733, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 712, 0, 0,
	0, 643, 636, 0, 0, 691, 0, 0, 0, 648,
	136, 663, 734, 0, 626, 190, 238, 148, 739, 754,
	688, 202, 351, 758, 685, 684, 274, 0, 316, 192,
	212, 152, 132, 146, 162, 191, 249, 732, 294, 672,
	627, 743, 659, 669, 169, 667, 287, 257, 340, 0,
	709, 264, 286, 215, 329, 729, 338, 339, 677, 778,
	348, 353, 0, 699, 646, 308, 179, 0, 138, 0,
	271, 174, 207, 687, 724, 660, 166, 730, 713, 748,
	307, 327, 154, 323, 236, 242, 163, 165, 164, 147,
	302, 326, 158, 167, 312, 290, 317, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 683, 297,
	296, 678, 198, 737, 716, 632, 280, 727, 203, 137,
	319, 356, 153, 209, 324, 625, 186, 248, 171, 258,
	259, 183, 134, 276, 230, 231, 229, 232, 670, 728,
	341, 736, 278, 139, 320, 337, 159, 298, 300, 354,
	285, 141, 335, 315, 234, 204, 205, 140, 0, 283,
	177, 189, 172, 252, 0, 188, 273, 332, 333, 170,
	357, 149, 347, 143, 150, 346, 245, 0, 244, 349,
	328, 336, 235, 223, 0, 142, 334, 233, 222, 210,
	182, 194, 269, 218, 270, 195, 240, 239, 241, 220,
	224, 0, 633, 0, 313, 343, 358, 156, 655, 301,
	325, 0, 0, 157, 187, 181, 268, 243, 151, 197,
	310, 208, 216, 282, 355, 256, 288, 160, 342, 309,
	653, 654, 651, 0, 652, 704, 705, 766, 767, 768,
	735, 645, 0, 750, 751, 0, 0, 0, 0, 0,
	741, 756, 757, 726, 776, 680, 681, 650, 299, 281,
	634, 637, 638, 639, 647, 695, 696, 708, 711, 746,
	745, 744, 747, 752, 772, 771, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 135,
	144, 213, 777, 279, 185, 344, 629, 176, 0, 697,
	700, 710, 731, 133, 145, 155, 161, 175, 180, 184,
	673, 193, 196, 199, 200, 201, 206, 221, 225, 226,
	227, 228, 246, 247, 250, 251, 254, 255, 261, 262,
	263, 265, 266, 267, 272, 275, 277, 284, 289, 291,
	292, 293, 295, 303, 304, 305, 306, 314, 318, 330,
	331, 350, 352, 753, 760, 740, 322, 690, 763, 657,
	676, 775, 679, 682, 723, 640, 703, 253, 674, 641,
	0, 661, 630, 668, 631, 658, 692, 178, 656, 742,
	706, 762, 211, 719, 0, 168, 219, 217, 0, 0,
	0, 260, 321, 761, 698, 0, 769, 214, 0, 715,
	770, 311, 237, 0, 0, 694, 749, 701, 738, 689,
	725, 649, 714, 764, 675, 721, 765, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 0, 718, 759, 671, 720, 722, 628, 717, 0,
	635, 642, 774, 755, 664, 665, 666, 0, 0, 0,
	0, 0, 0, 0, 693, 702, 733, 686, 0, 0,
	0, 0, 0, 0, 1439, 0, 662, 0, 712, 0,
	0, 0, 643, 636, 0, 0, 691, 0, 0, 0,
	648, 136, 663, 734, 0, 626, 190, 238, 148, 739,
	754, 688, 202, 351, 758, 685, 684, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 732, 294,
	672, 627, 743, 659, 669, 169, 667, 287, 257, 340,
	0, 709, 264, 286, 215, 329, 729, 338, 339, 677,
	778, 348, 353, 0, 699, 646, 308, 179, 0, 138,
	0, 271, 174, 207, 687, 724, 660, 166, 730, 713,
	748, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 683,
	297, 296, 678, 198, 737, 716, 632, 280, 727, 203,
	137, 319, 356, 153, 209, 324, 625, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 670,
	728, 341, 736, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 633, 0, 313, 343, 358, 156, 655,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 653, 654, 651, 0, 652, 704, 705, 766, 767,
	768, 735, 645, 0, 750, 751, 0, 0, 0, 0,
	0, 741, 756, 757, 726, 776, 680, 681, 650, 299,
	281, 634, 637, 638, 639, 647, 695, 696, 708, 711,
	746, 745, 744, 747, 752, 772, 771, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	135, 144, 213, 777, 279, 185, 344, 629, 176, 0,
	697, 700, 710, 731, 133, 145, 155, 161, 175, 180,
	184, 673, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 753, 760, 740, 322, 690, 763,
	657, 676, 775, 679, 682, 723, 640, 703, 253, 674,
	641, 0, 661, 630, 668, 631, 658, 692, 178, 656,
	742, 706, 762, 211, 719, 0, 168, 219, 217, 0,
	0, 0, 260, 321, 761, 698, 0, 769, 214, 0,
	715, 770, 311, 237, 0, 0, 694, 749, 701, 738,
	689, 725, 649, 714, 764, 675, 721, 765, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 0, 718, 759, 671, 720, 722, 628, 717,
	0, 635, 642, 774, 755, 664, 665, 666, 0, 0,
	0, 0, 0, 0, 0, 693, 702, 733, 686, 0,
	0, 0, 0, 0, 0, 1299, 0, 662, 0, 712,
	0, 0, 0, 643, 636, 0, 0, 691, 0, 0,
	0, 648, 136, 663, 734, 0, 626, 190, 238, 148,
	739, 754, 688, 202, 351, 758, 685, 684, 274, 0,
	316, 192, 212, 152, 132, 146, 162, 191, 249, 732,
	294, 672, 627, 743, 659, 669, 169, 667, 287, 257,
	340, 0, 709, 264, 286, 215, 329, 729, 338, 339,
	677, 778, 348, 353, 0, 699, 646, 308, 179, 0,
	138, 0, 271, 174, 207, 687, 724, 660, 166, 730,
	713, 748, 307, 327, 154, 323, 236, 242, 163, 165,
	164, 147, 302, 326, 158, 167, 312, 290, 317, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	683, 297, 296, 678, 198, 737, 716, 632, 280, 727,
	203, 137, 319, 356, 153, 209, 324, 625, 186, 248,
	171, 258, 259, 183, 134, 276, 230, 231, 229, 232,
	670, 728, 341, 736, 278, 139, 320, 337, 159, 298,
	300, 354, 285, 141, 335, 315, 234, 204, 205, 140,
	0, 283, 177, 189, 172, 252, 0, 188, 273, 332,
	333, 170, 357, 149, 347, 143, 150, 346, 245, 0,
	244, 349, 328, 336, 235, 223, 0, 142, 334, 233,
	222, 210, 182, 194, 269, 218, 270, 195, 240, 239,
	241, 220, 224, 0, 633, 0, 313, 343, 358, 156,
	655, 301, 325, 0, 0, 157, 187, 181, 268, 243,
	151, 197, 310, 208, 216, 282, 355, 256, 288, 160,
	342, 309, 653, 654, 651, 0, 652, 704, 705, 766,
	767, 768, 735, 645, 0, 750, 751, 0, 0, 0,
	0, 0, 741, 756, 757, 726, 776, 680, 681, 650,
	299, 281, 634, 637, 638, 639, 647, 695, 696, 708,
	711, 746, 745, 744, 747, 752, 772, 771, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 135, 144, 213, 777, 279, 185, 344, 629, 176,
	0, 697, 700, 710, 731, 133, 145, 155, 161, 175,
	180, 184, 673, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 250, 251, 254, 255,
	261, 262, 263, 265, 266, 267, 272, 275, 277, 284,
	289, 291, 292, 293, 295, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 753, 760, 740, 322, 690,
	763, 657, 676, 775, 679, 682, 723, 640, 703, 253,
	674, 641, 0, 661, 630, 668, 631, 658, 692, 178,
	656, 742, 706, 762, 211, 719, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 761, 698, 0, 769, 214,
	0, 715, 770, 311, 237, 0, 0, 694, 749, 701,
	738, 689, 725, 649, 714, 764, 675, 721, 765, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 0, 718, 759, 671, 720, 722, 628,
	717, 0, 635, 642, 774, 755, 664, 665, 666, 0,
	0, 0, 0, 0, 0, 0, 693, 702, 733, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	712, 0, 0, 0, 643, 636, 0, 0, 691, 0,
	0, 0, 648, 136, 663, 734, 0, 626, 190, 238,
	148, 739, 754, 688, 202, 351, 758, 685, 684, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	732, 294, 672, 627, 743, 659, 669, 169, 667, 287,
	257, 340, 0, 709, 264, 286, 215, 329, 729, 338,
	339, 677, 778, 348, 353, 0, 699, 646, 308, 179,
	0, 138, 0, 271, 174, 207, 687, 724, 660, 166,
	730, 713, 748, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 683, 297, 296, 678, 198, 737, 716, 632, 280,
	727, 203, 137, 319, 356, 153, 209, 324, 625, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 670, 728, 341, 736, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 633, 0, 313, 343, 358,
	156, 655, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 653, 654, 651, 0, 652, 704, 705,
	766, 767, 768, 735, 645, 0, 750, 751, 0, 0,
	0, 0, 0, 741, 756, 757, 726, 776, 680, 681,
	650, 299, 281, 634, 637, 638, 639, 647, 695, 696,
	708, 711, 746, 745, 744, 747, 752, 772, 771, 773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 135, 144, 213, 777, 279, 185, 344, 629,
	176, 0, 697, 700, 710, 731, 133, 145, 155, 161,
	175, 180, 184, 673, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 753, 760, 740, 322,
	690, 763, 657, 676, 775, 679, 682, 723, 640, 703,
	253, 674, 641, 0, 661, 630, 668, 631, 658, 692,
	178, 656, 742, 706, 762, 211, 719, 0, 168, 219,
	217, 0, 0, 0, 260, 321, 761, 698, 0, 769,
	214, 0, 715, 770, 311, 237, 0, 0, 694, 749,
	701, 738, 689, 725, 649, 714, 764, 675, 721, 765,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 644, 0, 718, 759, 671, 720, 722,
	628, 717, 0, 635, 642, 774, 755, 664, 665, 666,
	0, 0, 0, 0, 0, 0, 0, 693, 702, 733,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 712, 0, 0, 0, 643, 636, 0, 0, 691,
	0, 0, 0, 648, 136, 663, 734, 0, 626, 190,
	238, 148, 739, 754, 688, 202, 351, 758, 685, 684,
	274, 0, 316, 192, 212, 152, 132, 146, 162, 191,
	249, 732, 294, 672, 627, 743, 659, 669, 169, 667,
	287, 257, 340, 0, 709, 264, 286, 215, 329, 729,
	338, 339, 677, 778, 348, 353, 0, 699, 646, 308,
	179, 0, 138, 0, 271, 174, 207, 687, 724, 660,
	166, 730, 713, 748, 307, 327, 154, 323, 236, 242,
	163, 165, 164, 147, 302, 326, 158, 167, 312, 290,
	317, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 683, 297, 296, 678, 198, 737, 716, 632,
	280, 727, 203, 137, 319, 356, 153, 209, 324, 625,
	186, 248, 171, 258, 259, 183, 134, 276, 230, 231,
	229, 232, 670, 728, 341, 736, 278, 139, 320, 337,
	159, 298, 300, 354, 285, 141, 335, 315, 234, 204,
	205, 140, 0, 283, 177, 189, 172, 252, 0, 188,
	273, 332, 333, 170, 357, 149, 347, 143, 150, 346,
	245, 0, 244, 349, 328, 336, 235, 223, 0, 142,
	334, 233, 222, 210, 182, 194, 269, 218, 270, 195,
	240, 239, 241, 220, 224, 0, 633, 0, 313, 343,
	358, 156, 655, 301, 325, 0, 0, 157, 187, 181,
	268, 243, 151, 197, 310, 208, 216, 282, 355, 256,
	288, 160, 342, 309, 653, 654, 651, 0, 652, 704,
	705, 766, 767, 768, 735, 645, 0, 750, 751, 0,
	0, 0, 0, 0, 741, 756, 757, 726, 776, 680,
	681, 650, 299, 281, 634, 637, 638, 639, 647, 695,
	696, 708, 711, 746, 745, 744, 747, 752, 772, 771,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 135, 144, 213, 777, 279, 185, 344,
	629, 176, 0, 697, 700, 710, 731, 133, 145, 155,
	161, 175, 180, 184, 673, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 250, 251,
	254, 255, 261, 262, 263, 265, 266, 267, 272, 275,
	277, 284, 289, 291, 292, 293, 295, 303, 304, 305,
	306, 314, 318, 330, 331, 350, 352, 753, 760, 740,
	322, 690, 763, 657, 676, 775, 679, 682, 723, 640,
	703, 253, 674, 641, 0, 661, 630, 668, 631, 658,
	692, 178, 656, 742, 706, 762, 211, 719, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 1471, 1475, 0,
	769, 214, 0, 715, 770, 311, 237, 0, 0, 694,
	749, 701, 738, 689, 725, 649, 714, 764, 675, 721,
	765, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 0, 718, 759, 671, 720,
	722, 628, 717, 0, 635, 642, 774, 755, 664, 665,
	666, 0, 0, 0, 0, 0, 0, 0, 693, 702,
	733, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 712, 0, 0, 0, 643, 636, 0, 0,
	691, 0, 0, 0, 648, 136, 663, 734, 0, 626,
	190, 238, 148, 739, 754, 1474, 202, 351, 758, 685,
	684, 1469, 0, 1470, 192, 212, 622, 132, 146, 1467,
	1473, 249, 732, 294, 672, 627, 743, 659, 669, 169,
	667, 287, 257, 340, 0, 709, 264, 286, 215, 329,
	729, 338, 339, 677, 778, 348, 353, 0, 699, 646,
	308, 179, 0, 138, 0, 271, 174, 207, 687, 724,
	660, 166, 730, 713, 748, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 683, 297, 296, 678, 198, 737, 716,
	632, 280, 727, 203, 137, 319, 356, 153, 209, 324,
	625, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 670, 728, 341, 736, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 633, 0, 313,
	343, 358, 156, 655, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 653, 654, 651, 0, 652,
	704, 705, 766, 767, 768, 735, 645, 0, 750, 751,
	0, 0, 0, 0, 0, 741, 756, 757, 726, 776,
	680, 681, 650, 299, 281, 634, 637, 638, 639, 647,
	695, 696, 708, 711, 746, 745, 744, 747, 752, 772,
	771, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 707, 135, 144, 213, 777, 279, 185,
	344, 629, 176, 0, 697, 700, 710, 731, 133, 145,
	155, 161, 175, 180, 184, 673, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 753, 760,
	740, 322, 690, 763, 657, 676, 775, 679, 682, 723,
	640, 703, 253, 674, 641, 0, 661, 630, 668, 631,
	658, 692, 178, 656, 742, 706, 762, 211, 719, 0,
	168, 219, 217, 0, 0, 0, 260, 321, 761, 698,
	0, 769, 214, 0, 715, 770, 311, 237, 0, 0,
	694, 749, 701, 738, 689, 725, 649, 714, 764, 675,
	721, 765, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 644, 0, 718, 759, 671,
	720, 722, 628, 717, 0, 635, 642, 774, 755, 664,
	665, 666, 0, 0, 0, 0, 0, 0, 0, 693,
	702, 733, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 712, 0, 0, 0, 643, 636, 0,
	0, 691, 0, 0, 0, 648, 136, 663, 734, 0,
	626, 190, 238, 148, 739, 754, 688, 202, 351, 758,
	685, 684, 274, 0, 316, 192, 212, 152, 132, 146,
	162, 191, 249, 732, 294, 672, 627, 743, 659, 669,
	169, 667, 287, 257, 340, 0, 709, 264, 286, 215,
	329, 729, 338, 339, 677, 778, 348, 353, 0, 699,
	646, 308, 179, 0, 138, 0, 271, 174, 207, 687,
	724, 660, 166, 730, 713, 748, 307, 327, 154, 323,
	236, 242, 163, 165, 164, 147, 302, 326, 158, 167,
	312, 290, 317, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 683, 297, 296, 678, 198, 737,
	716, 632, 280, 727, 203, 137, 319, 356, 153, 209,
	324, 625, 186, 248, 171, 258, 259, 183, 134, 276,
	230, 231, 229, 232, 670, 728, 341, 736, 278, 139,
	320, 337, 159, 298, 300, 354, 285, 141, 335, 315,
	234, 204, 205, 140, 0, 283, 177, 189, 172, 252,
	0, 188, 273, 332, 333, 170, 357, 149, 347, 143,
	150, 346, 245, 0, 244, 349, 328, 336, 235, 223,
	0, 142, 334, 233, 222, 210, 182, 194, 269, 218,
	270, 195, 240, 239, 241, 220, 224, 0, 633, 0,
	313, 343, 358, 156, 655, 301, 325, 0, 0, 157,
	187, 181, 268, 243, 151, 197, 310, 208, 216, 282,
	355, 256, 288, 160, 342, 309, 653, 654, 651, 0,
	652, 704, 705, 766, 767, 768, 735, 645, 0, 750,
	751, 0, 0, 0, 0, 0, 741, 756, 757, 726,
	776, 680, 681, 650, 299, 281, 634, 637, 638, 639,
	647, 695, 696, 708, 711, 746, 745, 744, 747, 752,
	772, 771, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 707, 135, 144, 213, 777, 279,
	185, 344, 629, 176, 0, 697, 700, 710, 731, 133,
	145, 155, 161, 175, 180, 184, 673, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	250, 251, 254, 255, 261, 262, 263, 265, 266, 267,
	272, 275, 277, 284, 289, 291, 292, 293, 295, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 753,
	760, 740, 322, 690, 763, 657, 676, 775, 679, 682,
	723, 640, 703, 253, 674, 641, 0, 661, 630, 668,
	631, 658, 692, 178, 656, 742, 706, 762, 211, 719,
	0, 168, 219, 217, 0, 0, 0, 260, 321, 761,
	698, 0, 769, 214, 0, 715, 770, 311, 237, 0,
	0, 694, 749, 701, 738, 689, 725, 649, 714, 764,
	675, 721, 765, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 0, 718, 759,
	671, 720, 722, 628, 717, 0, 635, 642, 774, 755,
	664, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	693, 702, 733, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 0, 712, 0, 0, 0, 643, 636,
	0, 0, 691, 0, 0, 0, 648, 136, 663, 734,
	0, 626, 190, 238, 148, 739, 754, 688, 202, 351,
	758, 685, 684, 274, 0, 316, 192, 212, 622, 132,
	146, 618, 191, 249, 732, 294, 672, 627, 743, 659,
	669, 169, 667, 287, 257, 340, 0, 709, 264, 286,
	215, 329, 729, 338, 339, 677, 778, 348, 353, 0,
	699, 646, 308, 179, 0, 138, 0, 271, 174, 207,
	687, 724, 660, 166, 730, 713, 748, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 683, 297, 296, 678, 198,
	737, 716, 632, 280, 727, 203, 137, 319, 356, 153,
	209, 324, 625, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 670, 728, 341, 736, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 633,
	0, 313, 343, 358, 156, 655, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 653, 654, 651,
	0, 652, 704, 705, 766, 767, 768, 735, 645, 0,
	750, 751, 0, 0, 0, 0, 0, 741, 756, 757,
	726, 776, 680, 681, 650, 299, 281, 634, 637, 638,
	639, 647, 695, 696, 708, 711, 746, 745, 744, 747,
	752, 772, 771, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 135, 144, 213, 777,
	279, 185, 344, 629, 176, 0, 697, 700, 710, 731,
	133, 145, 155, 161, 175, 180, 184, 673, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	753, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 178, 490, 0, 0, 0, 211, 0, 0,
	168, 219, 217, 0, 0, 0, 260, 321, 0, 0,
	0, 568, 214, 0, 0, 454, 311, 237, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 0, 0,
	1449, 0, 85, 0, 0, 0, 491, 515, 514, 517,
	518, 519, 520, 0, 0, 0, 516, 521, 550, 551,
	1450, 0, 0, 488, 506, 0, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 504, 0,
	0, 0, 0, 582, 0, 505, 0, 0, 500, 501,
	502, 507, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 190, 238, 148, 558, 0, 0, 202, 351, 0,
	0, 580, 274, 0, 316, 192, 212, 152, 132, 146,
	162, 191, 249, 0, 294, 565, 0, 0, 0, 0,
	169, 0, 287, 257, 340, 557, 0, 264, 286, 215,
	329, 0, 338, 339, 0, 448, 348, 353, 0, 0,
	0, 308, 179, 0, 138, 0, 271, 174, 207, 0,
	0, 0, 166, 0, 0, 0, 307, 327, 154, 323,
	236, 242, 163, 165, 164, 147, 302, 326, 158, 167,
	312, 290, 317, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 297, 296, 0, 198, 0,
	0, 0, 280, 0, 203, 137, 319, 356, 153, 209,
	324, 0, 186, 248, 171, 258, 259, 183, 134, 276,
	230, 231, 229, 232, 0, 0, 341, 0, 278, 139,
	320, 337, 159, 298, 300, 354, 285, 141, 335, 315,
	234, 204, 205, 140, 0, 283, 177, 189, 172, 252,
	0, 188, 273, 332, 333, 170, 357, 149, 347, 143,
	150, 346, 245, 0, 244, 349, 328, 336, 235, 223,
	0, 142, 334, 233, 222, 210, 182, 194, 269, 218,
	270, 195, 240, 239, 241, 220, 224, 0, 0, 0,
	313, 343, 358, 156, 0, 301, 325, 0, 0, 157,
	187, 181, 268, 243, 151, 197, 310, 208, 216, 282,
	355, 256, 288, 160, 342, 309, 569, 581, 575, 577,
	576, 573, 574, 572, 571, 570, 583, 559, 560, 561,
	562, 563, 0, 0, 0, 566, 0, 578, 579, 0,
	0, 0, 0, 0, 299, 281, 522, 523, 524, 525,
	526, 530, 531, 535, 536, 544, 543, 542, 545, 546,
	548, 547, 549, 527, 528, 529, 532, 533, 534, 537,
	538, 541, 539, 540, 564, 135, 144, 213, 0, 279,
	185, 344, 0, 176, 0, 0, 0, 0, 0, 133,
	145, 155, 161, 175, 180, 184, 0, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	250, 251, 254, 255, 261, 262, 263, 265, 266, 267,
	272, 275, 277, 284, 289, 291, 292, 293, 295, 303,
	304, 305, 306, 314, 318, 330, 331, 350, 352, 37,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 178, 490, 0, 0, 0, 211, 0, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	568, 214, 0, 0, 454, 311, 237, 0, 0, 0,
	0, 555, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 491, 515, 514, 517, 518,
	519, 520, 0, 0, 0, 516, 521, 550, 551, 0,
	0, 0, 488, 506, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 0, 0,
	0, 0, 582, 0, 505, 0, 0, 500, 501, 502,
	507, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 558, 0, 0, 202, 351, 0, 0,
	580, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 565, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 557, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 448, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 569, 581, 575, 577, 576,
	573, 574, 572, 571, 570, 583, 559, 560, 561, 562,
	563, 0, 0, 0, 566, 0, 578, 579, 0, 0,
	0, 0, 0, 299, 281, 522, 523, 524, 525, 526,
	530, 531, 535, 536, 544, 543, 542, 545, 546, 548,
	547, 549, 527, 528, 529, 532, 533, 534, 537, 538,
	541, 539, 540, 564, 135, 144, 213, 83, 279, 185,
	344, 0, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 178,
	490, 0, 0, 0, 211, 0, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 568, 214,
	0, 0, 454, 311, 237, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 491, 515, 514, 517, 518, 519, 520,
	0, 0, 0, 516, 521, 550, 551, 0, 0, 0,
	488, 506, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 484, 0, 0, 0,
	582, 0, 505, 0, 0, 500, 501, 502, 507, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 558, 0, 0, 202, 351, 0, 0, 580, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 565, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 557, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 448, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 0, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 569, 581, 575, 577, 576, 573, 574,
	572, 571, 570, 583, 559, 560, 561, 562, 563, 0,
	0, 0, 566, 0, 578, 579, 0, 0, 0, 0,
	0, 299, 281, 522, 523, 524, 525, 526, 530, 531,
	535, 536, 544, 543, 542, 545, 546, 548, 547, 549,
	527, 528, 529, 532, 533, 534, 537, 538, 541, 539,
	540, 564, 135, 144, 213, 0, 279, 185, 344, 0,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 178, 490, 0,
	0, 0, 211, 0, 0, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 568, 214, 0, 0,
	454, 311, 237, 0, 0, 0, 0, 555, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 920,
	0, 491, 515, 514, 517, 518, 519, 520, 0, 0,
	0, 516, 521, 550, 551, 0, 0, 0, 488, 506,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 582, 0,
	505, 0, 0, 500, 501, 502, 507, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 558,
	0, 0, 202, 351, 0, 0, 580, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	565, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	557, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	448, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 569, 581, 575, 577, 576, 573, 574, 572, 571,
	570, 583, 559, 560, 561, 562, 563, 0, 0, 0,
	566, 0, 578, 579, 0, 0, 0, 0, 0, 299,
	281, 522, 523, 524, 525, 526, 530, 531, 535, 536,
	544, 543, 542, 545, 546, 548, 547, 549, 527, 528,
	529, 532, 533, 534, 537, 538, 541, 539, 540, 564,
	135, 144, 213, 0, 279, 185, 344, 0, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 178, 490, 0, 0, 0,
	211, 0, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 568, 214, 0, 0, 454, 311,
	237, 0, 0, 0, 0, 555, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 491,
	515, 514, 517, 518, 519, 520, 0, 0, 0, 516,
	521, 550, 551, 0, 0, 0, 488, 506, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 1337, 0, 0, 0, 582, 0, 505, 0,
	0, 500, 501, 502, 507, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 558, 0, 0,
	202, 351, 0, 0, 580, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 565, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 557, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 448, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 569,
	581, 575, 577, 576, 573, 574, 572, 571, 570, 583,
	559, 560, 561, 562, 563, 0, 0, 0, 566, 0,
	578, 579, 0, 0, 0, 0, 0, 299, 281, 522,
	523, 524, 525, 526, 530, 531, 535, 536, 544, 543,
	542, 545, 546, 548, 547, 549, 527, 528, 529, 532,
	533, 534, 537, 538, 541, 539, 540, 564, 135, 144,
	213, 0, 279, 185, 344, 0, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 178, 490, 0, 0, 0, 211, 0,
	0, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 568, 214, 0, 0, 454, 311, 237, 0,
	0, 0, 0, 555, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 491, 515, 1381,
	517, 518, 519, 520, 0, 0, 0, 516, 521, 550,
	551, 0, 0, 0, 488, 506, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	1337, 0, 0, 0, 582, 0, 505, 0, 0, 500,
	501, 502, 507, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 558, 0, 0, 202, 351,
	0, 0, 580, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 565, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 557, 0, 264, 286,
	215, 329, 0, 338, 339, 0, 448, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 569, 581, 575,
	577, 576, 573, 574, 572, 571, 570, 583, 559, 560,
	561, 562, 563, 0, 0, 0, 566, 0, 578, 579,
	0, 0, 0, 0, 0, 299, 281, 522, 523, 524,
	525, 526, 530, 531, 535, 536, 544, 543, 542, 545,
	546, 548, 547, 549, 527, 528, 529, 532, 533, 534,
	537, 538, 541, 539, 540, 564, 135, 144, 213, 0,
	279, 185, 344, 0, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 178, 490, 0, 0, 0, 211, 0, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	568, 214, 0, 0, 454, 311, 237, 0, 0, 0,
	0, 555, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 491, 515, 1378, 517, 518,
	519, 520, 0, 0, 0, 516, 521, 550, 551, 0,
	0, 0, 488, 506, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 1337, 0,
	0, 0, 582, 0, 505, 0, 0, 500, 501, 502,
	507, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 558, 0, 0, 202, 351, 0, 0,
	580, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 565, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 557, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 448, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 569, 581, 575, 577, 576,
	573, 574, 572, 571, 570, 583, 559, 560, 561, 562,
	563, 0, 0, 0, 566, 0, 578, 579, 0, 0,
	0, 0, 0, 299, 281, 522, 523, 524, 525, 526,
	530, 531, 535, 536, 544, 543, 542, 545, 546, 548,
	547, 549, 527, 528, 529, 532, 533, 534, 537, 538,
	541, 539, 540, 564, 135, 144, 213, 0, 279, 185,
	344, 0, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 178,
	490, 0, 0, 0, 211, 0, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 568, 214,
	0, 0, 454, 311, 237, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 1236, 0, 491, 515, 514, 517, 518, 519, 520,
	0, 0, 0, 516, 521, 550, 551, 0, 0, 0,
	488, 506, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 0, 0, 0, 0,
	582, 0, 505, 0, 0, 500, 501, 502, 507, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 558, 0, 0, 202, 351, 0, 0, 580, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 565, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 557, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 448, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 0, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 569, 581, 575, 577, 576, 573, 574,
	572, 571, 570, 583, 559, 560, 561, 562, 563, 0,
	0, 0, 566, 0, 578, 579, 0, 0, 0, 0,
	0, 299, 281, 522, 523, 524, 525, 526, 530, 531,
	535, 536, 544, 543, 542, 545, 546, 548, 547, 549,
	527, 528, 529, 532, 533, 534, 537, 538, 541, 539,
	540, 564, 135, 144, 213, 0, 279, 185, 344, 0,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 178, 490, 0,
	0, 0, 211, 0, 0, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 568, 214, 0, 0,
	454, 311, 237, 0, 0, 0, 0, 555, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 491, 515, 514, 517, 518, 519, 520, 0, 0,
	0, 516, 521, 550, 551, 0, 0, 0, 488, 506,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 582, 0,
	505, 0, 0, 500, 501, 502, 507, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 558,
	0, 0, 202, 351, 0, 0, 580, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	565, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	557, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	448, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 569, 581, 575, 577, 576, 573, 574, 572, 571,
	570, 583, 559, 560, 561, 562, 563, 0, 0, 0,
	566, 0, 578, 579, 0, 0, 0, 0, 0, 299,
	281, 522, 523, 524, 525, 526, 530, 531, 535, 536,
	544, 543, 542, 545, 546, 548, 547, 549, 527, 528,
	529, 532, 533, 534, 537, 538, 541, 539, 540, 564,
	135, 144, 213, 0, 279, 185, 344, 0, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	211, 0, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 568, 214, 0, 0, 454, 311,
	237, 0, 0, 0, 0, 555, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 491,
	515, 514, 517, 518, 519, 520, 0, 0, 0, 516,
	521, 550, 551, 0, 0, 0, 0, 506, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 504, 0, 0, 0, 0, 582, 0, 505, 0,
	0, 500, 501, 502, 507, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 558, 0, 0,
	202, 351, 0, 0, 580, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 565, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 557, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 448, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 569,
	581, 575, 577, 576, 573, 574, 572, 571, 570, 583,
	559, 560, 561, 562, 563, 1384, 1385, 1386, 566, 0,
	578, 579, 0, 0, 0, 0, 0, 299, 281, 522,
	523, 524, 525, 526, 530, 531, 535, 536, 544, 543,
	542, 545, 546, 548, 547, 549, 527, 528, 529, 532,
	533, 534, 537, 538, 541, 539, 540, 564, 135, 144,
	213, 0, 279, 185, 344, 0, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 211, 0,
	0, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 568, 214, 0, 0, 454, 311, 237, 0,
	0, 0, 0, 555, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 491, 515, 514,
	517, 518, 519, 520, 0, 0, 0, 516, 521, 550,
	551, 0, 0, 0, 0, 506, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	0, 0, 0, 0, 582, 0, 505, 0, 0, 500,
	501, 502, 507, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 558, 0, 0, 202, 351,
	0, 0, 580, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 565, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 557, 2679, 264, 286,
	215, 329, 0, 338, 339, 0, 448, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 569, 581, 575,
	577, 576, 573, 574, 572, 571, 570, 583, 559, 560,
	561, 562, 563, 0, 0, 0, 566, 0, 578, 579,
	0, 0, 0, 0, 0, 299, 281, 522, 523, 524,
	525, 526, 530, 531, 535, 536, 544, 543, 542, 545,
	546, 548, 547, 549, 527, 528, 529, 532, 533, 534,
	537, 538, 541, 539, 540, 564, 135, 144, 213, 0,
	279, 185, 344, 0, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 211, 0, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	568, 214, 0, 0, 454, 311, 237, 0, 0, 0,
	0, 555, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 920, 0, 491, 515, 514, 517, 518,
	519, 520, 0, 0, 0, 516, 521, 550, 551, 0,
	0, 0, 0, 506, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 504, 0, 0,
	0, 0, 582, 0, 505, 0, 0, 500, 501, 502,
	507, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 558, 0, 0, 202, 351, 0, 0,
	580, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 565, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 557, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 448, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 569, 581, 575, 577, 576,
	573, 574, 572, 571, 570, 583, 559, 560, 561, 562,
	563, 0, 0, 0, 566, 0, 578, 579, 0, 0,
	0, 0, 0, 299, 281, 522, 523, 524, 525, 526,
	530, 531, 535, 536, 544, 543, 542, 545, 546, 548,
	547, 549, 527, 528, 529, 532, 533, 534, 537, 538,
	541, 539, 540, 564, 135, 144, 213, 0, 279, 185,
	344, 0, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 211, 0, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 568, 214,
	0, 0, 454, 311, 237, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 491, 515, 514, 517, 518, 519, 520,
	0, 0, 0, 516, 521, 550, 551, 0, 0, 0,
	0, 506, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 504, 0, 0, 0, 0,
	582, 0, 505, 0, 0, 500, 501, 502, 507, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 558, 0, 0, 202, 351, 0, 0, 580, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 565, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 557, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 448, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 0, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 569, 581, 575, 577, 576, 573, 574,
	572, 571, 570, 583, 559, 560, 561, 562, 563, 0,
	0, 0, 566, 0, 578, 579, 0, 0, 0, 0,
	0, 299, 281, 522, 523, 524, 525, 526, 530, 531,
	535, 536, 544, 543, 542, 545, 546, 548, 547, 549,
	527, 528, 529, 532, 533, 534, 537, 538, 541, 539,
	540, 564, 135, 144, 213, 0, 279, 185, 344, 0,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 421, 322, 419, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 211, 0, 0, 168, 219, 217, 0,
	0, 0, 260, 321, 0, 0, 0, 0, 214, 0,
	0, 454, 311, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 190, 238, 148,
	0, 0, 0, 202, 351, 0, 0, 0, 274, 0,
	316, 192, 212, 152, 132, 146, 162, 191, 249, 420,
	294, 0, 0, 0, 0, 0, 169, 0, 287, 257,
	340, 0, 0, 264, 286, 215, 329, 0, 338, 339,
	0, 448, 348, 353, 0, 0, 0, 308, 179, 0,
	138, 0, 271, 174, 207, 0, 0, 0, 166, 0,
	0, 0, 307, 327, 154, 323, 236, 242, 163, 165,
	164, 147, 302, 326, 158, 167, 312, 290, 317, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 297, 296, 0, 198, 0, 0, 0, 280, 0,
	203, 137, 319, 356, 153, 209, 324, 0, 186, 248,
	171, 258, 259, 183, 134, 276, 230, 231, 229, 232,
	0, 0, 341, 0, 461, 139, 320, 337, 159, 298,
	300, 354, 285, 141, 335, 315, 234, 204, 205, 140,
	0, 283, 177, 189, 172, 252, 0, 188, 273, 332,
	333, 170, 357, 149, 347, 143, 150, 346, 245, 0,
	244, 349, 328, 336, 235, 223, 0, 142, 334, 233,
	222, 210, 182, 194, 269, 218, 270, 195, 240, 239,
	241, 220, 224, 0, 0, 0, 313, 343, 358, 156,
	0, 301, 325, 0, 0, 157, 187, 181, 268, 243,
	151, 197, 310, 208, 216, 282, 355, 256, 288, 160,
	342, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 281, 428, 429, 430, 431, 432, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 433,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 135, 144, 213, 0, 279, 185, 344, 0, 176,
	0, 0, 0, 0, 0, 133, 145, 155, 161, 175,
	180, 184, 0, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 250, 251, 254, 255,
	261, 262, 263, 265, 266, 267, 272, 275, 277, 284,
	289, 291, 292, 293, 295, 303, 304, 305, 306, 314,
	318, 330, 331, 350, 352, 421, 322, 419, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 211, 0, 0, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	454, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 420, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	448, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 416, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	281, 428, 429, 430, 431, 432, 436, 437, 441, 442,
	451, 450, 449, 452, 453, 456, 455, 457, 433, 434,
	435, 438, 439, 440, 443, 444, 447, 445, 446, 0,
	135, 144, 213, 0, 279, 185, 344, 0, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	1427, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	211, 0, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 0, 214, 0, 0, 454, 311,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 1431, 0, 0, 0, 0, 0, 0, 130,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 0, 0, 0,
	202, 351, 0, 1430, 0, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 0, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 0, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 448, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 281, 428,
	429, 430, 431, 432, 436, 437, 441, 442, 451, 450,
	449, 452, 453, 456, 455, 457, 433, 434, 435, 438,
	439, 440, 443, 444, 447, 445, 446, 0, 135, 144,
	213, 0, 279, 185, 344, 0, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 1427, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 211, 0,
	0, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 0, 214, 0, 0, 454, 311, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1429,
	1431, 0, 0, 0, 0, 0, 0, 130, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 0, 0, 0, 202, 351,
	0, 1430, 0, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 0, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 0, 0, 1425, 286,
	215, 329, 0, 338, 339, 0, 448, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 281, 428, 429, 430,
	431, 432, 436, 437, 441, 442, 451, 450, 449, 452,
	453, 456, 455, 457, 433, 434, 435, 438, 439, 440,
	443, 444, 447, 445, 446, 0, 135, 144, 213, 0,
	279, 185, 344, 0, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 211, 0, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	0, 214, 0, 0, 454, 311, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	939, 938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 0, 0, 0, 202, 351, 0, 0,
	0, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 0, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 0, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 448, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 281, 428, 429, 430, 431, 432,
	436, 437, 441, 442, 451, 450, 449, 452, 453, 456,
	455, 457, 433, 434, 435, 438, 439, 440, 443, 444,
	447, 445, 446, 0, 135, 144, 213, 0, 279, 185,
	344, 0, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 2600, 0, 0, 0, 0, 0, 0, 178,
	2598, 0, 0, 0, 211, 0, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 0, 214,
	0, 0, 454, 311, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 425, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 0, 0, 0, 202, 351, 0, 0, 0, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 0, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 0, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 448, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 2599, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 281, 428, 429, 430, 431, 432, 436, 437,
	441, 442, 451, 450, 449, 452, 453, 456, 455, 457,
	433, 434, 435, 438, 439, 440, 443, 444, 447, 445,
	446, 0, 135, 144, 213, 0, 279, 185, 344, 0,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 211, 1730, 0, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	454, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	448, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	281, 428, 429, 430, 431, 432, 436, 437, 441, 442,
	451, 450, 449, 452, 453, 456, 455, 457, 433, 434,
	435, 438, 439, 440, 443, 444, 447, 445, 446, 0,
	135, 144, 213, 0, 279, 185, 344, 0, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	211, 0, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 0, 214, 0, 0, 454, 311,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 0, 0, 0,
	202, 351, 0, 0, 0, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 0, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 0, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 448, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 281, 428,
	429, 430, 431, 432, 436, 437, 441, 442, 451, 450,
	449, 452, 453, 456, 455, 457, 433, 434, 435, 438,
	439, 440, 443, 444, 447, 445, 446, 0, 135, 144,
	213, 0, 279, 185, 344, 0, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 211, 0,
	0, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 0, 214, 0, 0, 454, 311, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 0, 0, 0, 202, 351,
	0, 0, 0, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 0, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 0, 0, 264, 286,
	215, 329, 0, 338, 339, 0, 448, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 281, 428, 429, 430,
	431, 432, 436, 437, 441, 442, 451, 450, 449, 452,
	453, 456, 455, 457, 433, 434, 435, 438, 439, 440,
	443, 444, 447, 445, 446, 0, 135, 144, 213, 0,
	279, 185, 344, 0, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 211, 0, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	0, 214, 0, 0, 454, 311, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 0, 0, 0, 202, 351, 0, 0,
	0, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 0, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 0, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 448, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 281, 428, 429, 430, 431, 432,
	436, 437, 441, 442, 451, 450, 449, 452, 453, 456,
	455, 457, 433, 434, 435, 438, 439, 440, 443, 444,
	447, 445, 446, 0, 135, 144, 213, 0, 279, 185,
	344, 0, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 211, 0, 0, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 0, 214,
	0, 0, 454, 311, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 0, 0, 0, 202, 351, 0, 0, 0, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 0, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 0, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 448, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 0, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 281, 428, 429, 430, 431, 432, 436, 437,
	441, 442, 451, 450, 449, 452, 453, 456, 455, 457,
	433, 434, 435, 438, 439, 440, 443, 444, 447, 445,
	446, 0, 135, 144, 213, 0, 279, 185, 344, 0,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 211, 0, 0, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	454, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	448, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	281, 428, 429, 430, 431, 432, 436, 437, 441, 442,
	451, 450, 449, 452, 453, 456, 455, 457, 433, 434,
	435, 438, 439, 440, 443, 444, 447, 445, 446, 0,
	135, 144, 213, 0, 279, 185, 344, 0, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	211, 0, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 0, 214, 0, 0, 0, 311,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 956, 955, 965, 966,
	958, 959, 960, 961, 962, 963, 964, 957, 0, 0,
	967, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 0, 0, 0,
	202, 351, 0, 0, 0, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 0, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 0, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 0, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 37,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 211, 299, 281, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	1422, 214, 0, 0, 0, 311, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 144,
	213, 85, 279, 185, 344, 130, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 0, 0, 0, 202, 351, 0, 0,
	0, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 0, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 0, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 0, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 0, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 1092, 0,
	0, 0, 211, 299, 281, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	0, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 144, 213, 83, 279, 185,
	344, 623, 176, 1091, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	0, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 211, 299,
	281, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 0, 214, 0, 0, 0, 311, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 144, 213, 85, 279, 185, 344, 130, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 0, 0, 0, 202, 351,
	0, 0, 0, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 0, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 0, 0, 264, 286,
	215, 329, 0, 338, 339, 0, 0, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 144, 213, 0,
	279, 185, 344, 0, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 211, 0, 0, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	0, 214, 0, 0, 0, 311, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 0, 0, 0, 202, 351, 0, 0,
	0, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 0, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 0, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 0, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 0, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 211, 299, 281, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	0, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 144, 213, 85, 279, 185,
	344, 623, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	0, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 144, 213, 0, 279, 185, 344, 0, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	211, 0, 0, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 0, 214, 0, 0, 0, 311,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 0, 0, 0,
	202, 351, 0, 0, 0, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 0, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 0, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 0, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 0,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	1061, 178, 0, 0, 0, 0, 211, 299, 281, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	0, 214, 0, 0, 0, 311, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 144,
	213, 0, 279, 185, 344, 130, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 0, 0, 0, 202, 351, 0, 0,
	0, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 0, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 0, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 0, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 0, 322, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 211, 299, 281, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	0, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 144, 213, 0, 279, 185,
	344, 130, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	0, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 150, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 243, 151,
	197, 310, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 211, 299,
	281, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 0, 214, 0, 0, 0, 311, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 144, 213, 0, 279, 185, 344, 130, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 266, 267, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 0, 127, 0, 202, 351,
	0, 0, 0, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 0, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 0, 0, 264, 286,
	215, 329, 0, 338, 339, 0, 0, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 337, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 0, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 211, 299, 281, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 0, 214,
	0, 0, 0, 311, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 144, 213, 0,
	279, 185, 344, 623, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 0, 0, 0, 202, 351, 0, 0, 0, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 0, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 0, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 0, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 0, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 337, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 150, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	243, 151, 197, 310, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 0, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	211, 299, 281, 168, 219, 217, 0, 0, 0, 260,
	321, 0, 0, 0, 0, 214, 0, 0, 0, 311,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 144, 213, 0, 279, 185, 344, 130,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 266, 267, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 0, 0, 0, 136,
	0, 0, 0, 0, 190, 238, 148, 0, 0, 0,
	202, 351, 0, 0, 0, 274, 0, 316, 192, 212,
	152, 132, 146, 162, 191, 249, 0, 294, 0, 0,
	0, 0, 0, 169, 0, 287, 257, 340, 0, 0,
	264, 286, 215, 329, 0, 338, 339, 0, 0, 348,
	353, 0, 0, 0, 308, 179, 0, 138, 0, 271,
	174, 207, 0, 0, 0, 166, 0, 0, 0, 307,
	327, 154, 323, 236, 242, 163, 165, 164, 147, 302,
	326, 158, 167, 312, 290, 317, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 297, 296,
	0, 198, 0, 0, 0, 280, 0, 203, 137, 319,
	356, 153, 209, 324, 0, 186, 248, 171, 258, 259,
	183, 134, 276, 230, 231, 229, 232, 0, 0, 341,
	0, 278, 139, 320, 337, 159, 298, 300, 354, 285,
	141, 335, 315, 234, 204, 205, 140, 0, 283, 177,
	189, 172, 252, 0, 188, 273, 332, 333, 170, 357,
	149, 347, 143, 150, 346, 245, 0, 244, 349, 328,
	336, 235, 223, 0, 142, 334, 233, 222, 210, 182,
	194, 269, 218, 270, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 313, 343, 358, 156, 0, 301, 325,
	0, 0, 157, 187, 181, 268, 243, 151, 197, 310,
	208, 216, 282, 355, 256, 288, 160, 342, 309, 0,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 211, 299, 281, 168,
	219, 217, 0, 0, 0, 260, 321, 0, 0, 0,
	0, 214, 0, 0, 0, 311, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 144,
	213, 0, 279, 185, 344, 491, 176, 0, 0, 0,
	0, 0, 133, 145, 155, 161, 175, 180, 184, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 250, 251, 254, 255, 261, 262, 263,
	265, 266, 267, 272, 275, 277, 284, 289, 291, 292,
	293, 295, 303, 304, 305, 306, 314, 318, 330, 331,
	350, 352, 0, 0, 0, 136, 0, 0, 0, 0,
	190, 238, 148, 0, 0, 0, 202, 351, 0, 0,
	0, 274, 0, 316, 192, 212, 152, 132, 146, 162,
	191, 249, 0, 294, 0, 0, 0, 0, 0, 169,
	0, 287, 257, 340, 0, 0, 264, 286, 215, 329,
	0, 338, 339, 0, 0, 348, 353, 0, 0, 0,
	308, 179, 0, 138, 0, 271, 174, 207, 0, 0,
	0, 166, 0, 0, 0, 307, 327, 154, 323, 236,
	242, 163, 165, 164, 147, 302, 326, 158, 167, 312,
	290, 317, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 297, 296, 0, 198, 0, 0,
	0, 280, 0, 203, 137, 319, 356, 153, 209, 324,
	0, 186, 248, 171, 258, 259, 183, 134, 276, 230,
	231, 229, 232, 0, 0, 341, 0, 278, 139, 320,
	337, 159, 298, 300, 354, 285, 141, 335, 315, 234,
	204, 205, 140, 0, 283, 177, 189, 172, 252, 0,
	188, 273, 332, 333, 170, 357, 149, 347, 143, 150,
	346, 245, 0, 244, 349, 328, 336, 235, 223, 0,
	142, 334, 233, 222, 210, 182, 194, 269, 218, 270,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 313,
	343, 358, 156, 0, 301, 325, 0, 0, 157, 187,
	181, 268, 243, 151, 197, 310, 208, 216, 282, 355,
	256, 288, 160, 342, 309, 0, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 211, 299, 281, 168, 219, 217, 0, 0,
	0, 260, 321, 0, 0, 0, 0, 214, 0, 0,
	0, 311, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 144, 213, 0, 279, 185,
	344, 491, 176, 0, 0, 0, 0, 0, 133, 145,
	155, 161, 175, 180, 184, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 250,
	251, 254, 255, 261, 262, 263, 265, 266, 267, 272,
	275, 277, 284, 289, 291, 292, 293, 295, 303, 304,
	305, 306, 314, 318, 330, 331, 350, 352, 0, 0,
	0, 136, 0, 0, 0, 0, 190, 238, 148, 0,
	0, 0, 202, 351, 0, 0, 0, 274, 0, 316,
	192, 212, 152, 132, 146, 162, 191, 249, 0, 294,
	0, 0, 0, 0, 0, 169, 0, 287, 257, 340,
	0, 0, 264, 286, 215, 329, 0, 338, 339, 0,
	0, 348, 353, 0, 0, 0, 308, 179, 0, 138,
	0, 271, 174, 207, 0, 0, 0, 166, 0, 0,
	0, 307, 327, 154, 323, 236, 242, 163, 165, 164,
	147, 302, 326, 158, 167, 312, 290, 317, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	297, 296, 0, 198, 0, 0, 0, 280, 0, 203,
	137, 319, 356, 153, 209, 324, 0, 186, 248, 171,
	258, 259, 183, 134, 276, 230, 231, 229, 232, 0,
	0, 341, 0, 278, 139, 320, 337, 159, 298, 300,
	354, 285, 141, 335, 315, 234, 204, 205, 140, 0,
	283, 177, 189, 172, 252, 0, 188, 273, 332, 333,
	170, 357, 149, 347, 143, 606, 346, 245, 0, 244,
	349, 328, 336, 235, 223, 0, 142, 334, 233, 222,
	210, 182, 194, 269, 218, 270, 195, 240, 239, 241,
	602, 224, 0, 0, 0, 313, 343, 358, 156, 0,
	301, 325, 0, 0, 157, 187, 181, 268, 607, 605,
	596, 597, 208, 216, 282, 355, 256, 288, 160, 342,
	309, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 211, 299,
	281, 168, 219, 217, 0, 0, 0, 260, 321, 0,
	0, 0, 0, 214, 0, 0, 0, 311, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 144, 213, 0, 279, 185, 344, 491, 176, 0,
	0, 0, 0, 0, 133, 145, 155, 161, 175, 180,
	184, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 250, 251, 254, 255, 261,
	262, 263, 265, 603, 604, 272, 275, 277, 284, 289,
	291, 292, 293, 295, 303, 304, 305, 306, 314, 318,
	330, 331, 350, 352, 0, 0, 0, 136, 0, 0,
	0, 0, 190, 238, 148, 0, 0, 0, 202, 351,
	0, 0, 0, 274, 0, 316, 192, 212, 152, 132,
	146, 162, 191, 249, 0, 294, 0, 0, 0, 0,
	0, 169, 0, 287, 257, 340, 0, 0, 264, 286,
	215, 329, 0, 338, 339, 0, 0, 348, 353, 0,
	0, 0, 308, 179, 0, 138, 0, 271, 174, 207,
	0, 0, 0, 166, 0, 0, 0, 307, 327, 154,
	323, 236, 242, 163, 165, 164, 147, 302, 326, 158,
	167, 312, 290, 317, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 297, 296, 0, 198,
	0, 0, 0, 280, 0, 203, 137, 319, 356, 153,
	209, 324, 0, 186, 248, 171, 258, 259, 183, 134,
	276, 230, 231, 229, 232, 0, 0, 341, 0, 278,
	139, 320, 1086, 159, 298, 300, 354, 285, 141, 335,
	315, 234, 204, 205, 140, 0, 283, 177, 189, 172,
	252, 0, 188, 273, 332, 333, 170, 357, 149, 347,
	143, 150, 346, 245, 0, 244, 349, 328, 336, 235,
	223, 0, 142, 334, 233, 222, 210, 182, 194, 269,
	218, 270, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 313, 343, 358, 156, 0, 301, 325, 0, 0,
	157, 187, 181, 268, 243, 151, 197, 310, 208, 216,
	282, 355, 256, 288, 160, 342, 309, 0, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 211, 299, 281, 168, 219, 217,
	0, 0, 0, 260, 321, 0, 0, 0, 0, 214,
	0, 0, 0, 311, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 144, 213, 0,
	279, 185, 344, 491, 176, 0, 0, 0, 0, 0,
	133, 145, 155, 161, 175, 180, 184, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 250, 251, 254, 255, 261, 262, 263, 265, 266,
	267, 272, 275, 277, 284, 289, 291, 292, 293, 295,
	303, 304, 305, 306, 314, 318, 330, 331, 350, 352,
	0, 0, 0, 136, 0, 0, 0, 0, 190, 238,
	148, 0, 0, 0, 202, 351, 0, 0, 0, 274,
	0, 316, 192, 212, 152, 132, 146, 162, 191, 249,
	0, 294, 0, 0, 0, 0, 0, 169, 0, 287,
	257, 340, 0, 0, 264, 286, 215, 329, 0, 338,
	339, 0, 0, 348, 353, 0, 0, 0, 308, 179,
	0, 138, 0, 271, 174, 207, 0, 0, 0, 166,
	0, 0, 0, 307, 327, 154, 323, 236, 242, 163,
	165, 164, 147, 302, 326, 158, 167, 312, 290, 317,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 297, 296, 0, 198, 0, 0, 0, 280,
	0, 203, 137, 319, 356, 153, 209, 324, 0, 186,
	248, 171, 258, 259, 183, 134, 276, 230, 231, 229,
	232, 0, 0, 341, 0, 278, 139, 320, 593, 159,
	298, 300, 354, 285, 141, 335, 315, 234, 204, 205,
	140, 0, 283, 177, 189, 172, 252, 0, 188, 273,
	332, 333, 170, 357, 149, 347, 143, 606, 346, 245,
	0, 244, 349, 328, 336, 235, 223, 0, 142, 334,
	233, 222, 210, 182, 194, 269, 218, 270, 195, 240,
	239, 241, 602, 224, 0, 0, 0, 313, 343, 358,
	156, 0, 301, 325, 0, 0, 157, 187, 181, 268,
	607, 605, 596, 597, 208, 216, 282, 355, 256, 288,
	160, 342, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 144, 213, 0, 279, 185, 344, 0,
	176, 0, 0, 0, 0, 0, 133, 145, 155, 161,
	175, 180, 184, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 250, 251, 254,
	255, 261, 262, 263, 265, 603, 604, 272, 275, 277,
	284, 289, 291, 292, 293, 295, 303, 304, 305, 306,
	314, 318, 330, 331, 350, 352, 37, 0, 76, 40,
	41, 0, 0, 0, 37, 0, 76, 40, 41, 0,
	64, 0, 0, 0, 0, 0, 82, 0, 64, 0,
	42, 0, 0, 0, 82, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2440, 0, 0, 0, 0, 2594, 0, 0,
	2440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 78, 48, 47, 50, 0, 0, 0, 44,
	78, 48, 47, 50, 0, 0, 0, 2441, 0, 0,
	0, 0, 0, 0, 0, 2441, 0, 0, 0, 0,
	0, 0, 0, 51, 81, 80, 0, 0, 0, 0,
	49, 51, 81, 80, 0, 0, 0, 0, 49, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 63, 0, 2442,
	0, 0, 0, 0, 62, 63, 0, 2442, 0, 0,
	0, 0, 0, 71, 0, 72, 0, 0, 0, 0,
	0, 71, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2443, 79, 0, 55, 56,
	66, 0, 67, 2443, 79, 0, 55, 56, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 0, 0, 0, 0, 0,
	0, 0, 83,
}
var yyPact = [...]int{

	3884, -1000, -311, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1703, -1000, -1000, -1000,
	-1000, -1000, -1000, 876, 249, -1000, -1000, 241, 165, 28005,
	580, 5384, 28697, -1000, -1000, -1000, 187, 505, 28697, -1000,
	-1000, -1000, 404, 409, 1161, 1586, 1158, 56, -31, -32,
	172, 19499, 19030, -1000, 1759, 1761, -1000, -1000, 514, 62,
	-1000, -1000, -1000, 23243, 178, -1000, -1000, 1679, 1701, 1495,
	-1000, 13881, 507, 507, 27659, 30081, -1000, 1757, 28697, 12475,
	-1000, 576, 28697, -142, 500, 500, 305, 500, 500, 579,
	-1000, 796, -1000, -1000, -1000, -1000, 28697, 22775, 501, 28351,
	501, 501, 501, 501, 501, 501, 501, 28697, -1000, 661,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28697,
	1157, 1605, 794, 268, 9178, 9178, -1000, 860, -1000, 287,
	281, 284, 278, 93, 803, 1676, -1000, 1369, 1679, 1679,
	9178, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 339, 562,
	206, 178, 787, -1000, -1000, -1000, -1000, -1000, 1604, 1602,
	1052, 1601, 458, 1600, 1416, -13, -1000, 1156, 28697, -1000,
	-1000, 1027, 1026, 1457, 1318, 626, 1456, -1000, -1000, 1415,
	1415, 1415, 1415, 1166, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 364, 1309,
	1366, 1453, -1000, 1437, 1666, 572, 28697, -1000, -79, 1367,
	-1000, 1419, -1000, -1000, -1000, 1178, 1607, 1005, 16689, 1557,
	-1000, -1000, 900, 1744, -1000, 20903, 660, -1000, 16689, 3089,
	1369, -1000, -1000, 1369, -1000, -1000, -1000, 594, -1000, -1000,
	18561, 18561, 18561, 18561, 18561, 18561, 18561, 18561, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	-1000, -1000, 1369, -1000, 13413, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 16689, 1369, 1369,
	1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1369,
	1369, 1369, 1369, 1369, 27313, 25685, 28697, 1296, 1292, -1000,
	-1000, 657, 1362, -116, 29735, -1000, -1000, -1000, -1000, 29043,
	25339, 786, -1000, -1000, -1000, -1000, 1599, -1000, -1000, 650,
	-1000, 1703, -1000, -1000, 1271, 354, -1000, 4050, 4992, -1000,
	-1000, -1000, 1409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28351,
	1663, 564, 1154, 846, 1150, 1148, 1144, 22775, 22775, 500,
	1143, 1361, 560, 1360, 558, 1102, 28697, 1632, 1452, 28697,
	1142, 1140, 1137, 1136, 22775, 22775, -1000, 12004, -1000, 9178,
	794, -1000, 1062, 16689, 500, 500, 9178, 9178, 9178, 28697,
	28697, 28697, -1000, -1000, -1000, -1000, 28697, -1000, -1000, 794,
	794, 9178, 794, 789, 1741, 789, -1000, 789, -1000, -1000,
	16689, -1000, 18561, 22307, 677, -1000, -1000, -1000, -1000, 1135,
	338, -1000, -1000, -1000, -1000, -1000, -1000, 1133, 458, 458,
	-1000, 1061, 458, 1348, -1000, 742, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 458, -1000,
	16221, -309, -1000, -1000, 1359, -1000, 269, -1000, -1000, 297,
	297, 622, 22775, 22775, 22775, -1000, 28351, -1000, -1000, -1000,
	22775, 297, 143, 1356, 297, 22775, 22775, 1495, -1000, -1000,
	178, -1000, -1000, 28697, 9178, -106, 23243, 1369, 10591, -1000,
	-1000, -1000, 1752, 686, 1353, -1000, -1000, 1354, -1000, 897,
	648, 1017, 1517, -1000, -1000, -1000, 28697, -1000, 16689, 16689,
	1002, -1000, 23711, -1000, -1000, -1000, -1000, 10120, 690, 18561,
	933, 813, 18561, 18561, 18561, 18561, 18561, 18561, 18561, 18561,
	18561, 18561, 18561, 18561, 18561, 18561, 18561, 999, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1132, -1000, 178, 1101,
	1101, 659, 659, 659, 659, 659, 659, 659, 24647, 1647,
	14817, 14817, 14817, 1647, 1178, 1178, 14817, 14817, 14817, 14817,
	14817, 14817, 1647, 1647, 14817, 1178, 1178, 1178, 1178, 14817,
	14817, 14817, 14817, 1647, 14817, 14817, 14817, 1647, 1178, 1268,
	802, 13413, 14817, 14817, 14817, 1178, 16689, 16689, 15753, 15285,
	17157, 14817, 14817, 1647, 716, 802, 29043, -1000, -1000, 18093,
	-1000, -1000, -1000, -1000, -1000, 1178, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 28351, 28351, 14817, 14817, 14817, 14817,
	323, 28697, -1000, 1346, 1399, -1000, -1000, -1000, 1660, 24993,
	20435, -1000, 323, 1301, 25685, 28697, -1000, -1000, 25685, 28697,
	9649, 29389, 1328, -1000, -77, -108, -116, -1000, -1000, 635,
	-1000, -1000, -1000, 12944, -1000, 11062, 1679, 1495, 6823, 11533,
	-1000, 4992, 1409, -1000, -24, -1000, -1000, -1000, 1383, -1000,
	1383, 302, 17, 1383, 1383, 1383, 1383, 1383, 21, 21,
	21, 21, 20, -1000, -1000, -1000, -1000, -1000, 1408, 1407,
	-1000, 1383, 1383, 1383, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1397, 316, 1392, 1392, 1392, 1392, 1392, 347,
	347, -1000, 16689, 1400, -1000, 28697, 9178, 1628, 9178, 273,
	1406, 1345, -1000, 147, 1310, 28697, -1000, 28697, 28697, 22775,
	22775, 22775, 557, -1000, 28697, 1352, -1000, -1000, -1000, -1000,
	-1000, 1321, -1000, 1310, -1000, -1000, -1000, -1000, -1000, -1000,
	802, 1131, 1129, -1000, -1000, -1000, -1000, -1000, -1000, 797,
	-1000, -1000, -1000, -1000, 794, 28697, 28697, 28697, 1659, 794,
	802, 571, 1418, 1369, 1178, -1000, -1000, 1124, -1000, 1348,
	1348, -1000, 1348, 458, 1101, 1348, -1000, 1264, 1624, 1060,
	28697, -1000, 23243, -17, -1000, -91, 26967, -1000, -1000, -1000,
	26967, -1000, 179, -1000, 555, 1262, -1000, -1000, 26967, 102,
	141, 26967, 1321, 1740, 1647, 1178, 189, -1000, -1000, -1000,
	-1000, -1000, 176, 1241, 647, -1000, 1512, 1005, 1005, 16689,
	-1000, -1000, -1000, 11062, 1682, -1000, 1526, 1525, 1390, -1000,
	-1000, 690, 826, -1000, -1000, 993, -1000, -1000, -1000, -1000,
	640, 1369, -1000, 711, -1000, -1000, -1000, -1000, 933, 18561,
	18561, 18561, 571, 711, 3122, 1486, 1036, 659, 911, 911,
	670, 670, 670, 670, 670, 874, 874, -1000, -1000, -1000,
	1178, -1000, -1000, -1000, 14817, 1256, -1000, -1000, 802, 639,
	1256, 1256, 14817, -158, -158, 1178, 1256, 1256, 1256, 1178,
	1256, 14817, 14817, 1256, -158, -158, -158, -158, 1256, 1256,
	1256, 1256, 14817, 1256, 1256, 1256, 14817, -1000, 16689, -1000,
	1178, 1256, 1256, 1256, -1000, 829, 890, 762, 1738, 1256,
	758, 1733, 1256, 763, 18561, 18561, 18561, 1256, 1256, 14817,
	862, -1000, 16689, 1178, -1000, 732, 1344, 1337, 1256, 1178,
	1332, 1256, 1256, 175, 1369, -1000, 11062, 25685, 25685, 25685,
	25685, 25685, -1000, 1481, 1480, -1000, 1483, 1477, 1503, 23243,
	1258, 1178, 251, 24993, -1000, 1369, -1000, 21839, 591, 574,
	573, 569, 1710, 25685, 1331, -1000, 1331, -1000, 631, -1000,
	-1000, 29043, -116, -80, -1000, -1000, 1328, -1000, 1025, -1000,
	-1000, 802, -1000, 629, 1607, 1647, 1327, 6352, -1000, -1000,
	-1000, -1000, 354, -1000, -1000, -1000, 1404, 3592, -1000, 1549,
	665, 674, 1091, 1537, -1000, -1000, 286, -26, -1000, -1000,
	1019, 21, 21, 1383, 1383, 250, 1383, -1000, 21, -1000,
	-1000, -1000, 635, 1597, 635, 635, 635, 635, 21, 1059,
	1059, -1000, -1000, -1000, -1000, 1015, -1000, 1397, -1000, 1006,
	-1000, -1000, -1000, -1000, -1000, -1000, 979, 1445, 28351, 178,
	1643, -1000, -1000, -1000, 1715, -1000, -1000, 566, 71, 22775,
	142, 272, 184, -1000, 554, -1000, 553, -1000, -1000, -1000,
	-1000, -1000, 9178, 28697, 22775, 9178, 9178, 1710, 1123, 1120,
	-1000, -1000, -1000, 789, 794, 1589, -1000, -1000, 18561, 22775,
	-1000, 267, -1000, -1000, -1000, -1000, 323, 561, -1000, -1000,
	-68, -1000, -1000, 552, 624, 620, 551, -1000, 81, 22775,
	-1000, 28351, 1732, 1731, 100, 1727, 22775, 1517, -1000, 1326,
	-1000, -1000, 630, 607, 656, 356, 356, -1000, 706, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 322, 1642,
	10591, 10591, 1505, -1000, -1000, -1000, 28697, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8707, 14817, -1000, 571,
	711, 2947, -1000, 18561, -1000, 1256, 14817, -158, 8236, -158,
	-158, 1256, -1000, 26499, -1000, -158, -158, -158, -158, -158,
	-158, 1256, 1256, -158, -1000, -1000, -1000, -1000, -158, -158,
	-158, -158, 1256, -158, -158, -158, 1178, 802, -1000, -1000,
	-1000, -1000, 195, 999, 195, 18561, 18561, -1000, 18561, 18561,
	-1000, -1000, 18561, 2878, 2841, 2805, -208, -1000, 1349, 805,
	-1000, 16689, 969, -1000, -1000, 18561, 18561, -1000, -1000, -1000,
	-1000, 1444, 11062, 1369, 7294, -1000, 28351, 1350, -1000, 739,
	737, 1399, 1403, 1443, 1238, -1000, -1000, -1000, -1000, 1469,
	-1000, 1468, -1000, -1000, 1378, -1000, -1000, 1325, 1369, 28351,
	18561, 591, -1000, 1369, 1369, 1369, 1703, 16689, 1331, -1000,
	-1000, 676, -1000, -1000, -87, -125, -1000, -1000, -1000, 10591,
	-1000, 6823, -1000, 6823, -1000, 24179, 488, 665, 346, -1000,
	1091, -1000, -1000, 1091, -1000, -1000, -1000, 1395, -1000, 892,
	-1000, -1000, -1000, -1000, -1000, 18561, 1749, -1000, 1547, -1000,
	1546, 1058, -1000, -1000, 1274, 635, 635, 21, -1000, -1000,
	1383, -1000, 635, -1000, 712, -1000, -1000, -1000, -1000, 635,
	1254, -1000, 1252, 1324, -1000, 1248, 87, 28697, -1000, -1000,
	-1000, 1442, -1000, -1000, -1000, 1272, 1322, -1000, 4050, 1119,
	1115, 1113, -213, 211, -1000, 22775, 108, 147, 386, 1109,
	28697, 22775, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	794, -1000, 18561, 711, 1310, -1000, -1000, 21, 28697, -1000,
	22775, 638, 26153, 22775, 99, 140, -1000, 22775, 22775, 1717,
	22775, 1321, 1390, 189, -1000, 4456, -1000, 1091, 600, -1000,
	-1000, 368, -1000, 1537, -1000, 4091, 1108, -1000, 5396, 5263,
	28351, 1545, 1540, 1098, 28697, 28351, -1000, -1000, 2693, 1096,
	16689, -1000, 28351, 28351, 1369, 598, -1000, -1000, -1000, 1304,
	13881, -1000, -1000, 1178, -1000, 18561, 711, -158, -1000, -1000,
	-1000, -1000, 597, -1000, -1000, -158, -1000, 456, -1000, -1000,
	-1000, -1000, -1000, -1000, -158, -158, -1000, -1000, -1000, -1000,
	-1000, -158, -1000, -1000, -1000, -1000, 1178, 1383, 1383, -1000,
	1383, 1392, -1000, 1383, 46, 1383, 42, 1178, 1178, 2657,
	2248, 1885, 1379, 732, 18561, 18561, 18561, 1369, -153, -1000,
	802, 16689, 1237, 1169, -1000, 1619, 1300, 1319, -1000, -1000,
	14349, 1178, 1524, 1241, -1000, 23243, 1239, -1000, 1703, 11062,
	16689, 16689, -1000, -1000, 16689, 1385, -1000, 16689, -1000, -1000,
	-1000, -1000, 28351, 248, -1000, 16689, 1239, 747, -1000, 28351,
	28351, 28351, 1679, 802, -1000, -1000, -1000, -1000, 6352, -1000,
	1221, -1000, 1383, 1383, 1538, -1000, 1537, 1091, -1000, -1000,
	-1000, 28351, -1000, 711, -124, -1000, -1000, -1000, -1000, -1000,
	-1000, 635, -1000, -1000, -1000, -1000, -1000, 21, 1051, 21,
	989, -1000, 985, -1000, -1000, -253, 1382, -1000, 178, 28697,
	98, 566, -1000, 4050, 4050, 4050, 94, 88, -1000, 881,
	-1000, -1000, -1000, 1049, 1047, 1046, 1310, 150, 866, 125,
	-1000, 1641, -1000, -1000, -1000, 711, -60, -1000, 140, -1000,
	-1000, -1000, 140, -1000, -1000, 138, 1321, 1321, 22775, 1321,
	-1000, -1000, 2693, 336, 4050, 4050, -1000, 1400, 665, 1531,
	346, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1094, -1000,
	654, -1000, 512, 336, 2693, 802, 735, 1609, -1000, 10591,
	1708, 25685, -1000, -1000, -1000, 711, -1000, 7765, -1000, 1178,
	1700, -1000, -1000, -1000, -1000, -1000, 300, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18561, 18561, 18561, 18561, -1000,
	732, 732, 732, 18561, 1178, 1045, 802, 18561, 18561, 1530,
	-1000, 1369, -1000, -1000, 1369, 174, -1000, 28351, 1679, -1000,
	802, 802, 802, 28351, 802, 1205, -1000, 1369, 19967, -1000,
	23243, 1202, 1202, 1202, -1000, 625, 24179, 1623, 1623, -1000,
	-1000, 1198, -1000, -1000, 635, -1000, 635, 1229, 1223, -1000,
	24179, -1000, 1675, -1000, 98, -1000, 1043, 212, 217, -1000,
	205, 204, 200, 194, 188, -1000, -1000, -1000, -1000, 380,
	94, -1000, -57, 983, 345, 1593, 88, -1000, 970, 965,
	958, 945, 173, -1000, -1000, -1000, -1000, 183, 147, -1000,
	375, 1042, 1579, 1576, 1639, 1639, 97, 1321, 1347, 1206,
	-1000, -1000, 1093, -1000, -1000, 1381, 1091, -1000, 1380, -1000,
	1088, -1000, -1000, 28351, -1000, 336, 1616, 1614, 1369, -1000,
	1706, 1699, 1331, 13881, -1000, -1000, -1000, 16689, -1000, -1000,
	732, 732, 732, 732, -1000, -1000, -1000, 171, -1000, -1000,
	732, 732, 1748, -1000, 1319, 1369, -1000, 178, -1000, -1000,
	1194, -1000, 28351, -1000, -1000, 591, -1000, -1000, -1000, 625,
	-1000, 1071, 706, 1041, -1000, -1000, -1000, 314, -1000, -1000,
	-1000, -1000, 1191, -1000, 253, 30558, -1000, -1000, -1000, -1000,
	-1000, -1000, 1585, 1584, 228, -1000, 1039, 1035, -1000, 374,
	1023, 627, -166, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 264, 1068, -1000, 120, -1000, -1000,
	503, 1552, 1566, 1698, -1000, 22775, -1000, -1000, 25685, -1000,
	-1000, 286, 286, 24179, 1400, 24179, -1000, -1000, -1000, 18561,
	-1000, 319, -1000, 16689, 16689, 1708, -1000, 1314, -1000, -1000,
	-1000, -1000, 1178, 182, -227, -1000, -1000, 11062, 1319, 1178,
	-1000, -1000, -1000, -1000, -1000, 941, -1000, 28697, 625, 247,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16689, 16689, 5881, 30558, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 925, -1000, -1000, 1018, 359, 118, -1000, 1637,
	-1000, 1378, 908, 1576, 1695, 1574, 1569, -1000, 1034, -224,
	1331, 1189, 1377, 1176, 711, 1174, -1000, 28351, -1000, 802,
	1316, -1000, 802, 1706, -1000, -173, -1000, 1504, -211, -231,
	1311, -1000, -1000, 1373, -1000, 625, 232, -1000, 840, 967,
	166, 160, 3267, -1000, -1000, -1000, -1000, -312, -1000, 106,
	-1000, 89, -1000, -1000, -1000, 1033, -1000, 1578, -1000, 1032,
	-1000, 1692, 1690, -1000, 137, 1708, 625, 24179, 625, -1000,
	319, 1523, 16689, -1000, 1178, 135, 135, -1000, 1500, -1000,
	28351, -1000, 1067, 1066, 913, -1000, 16689, 30558, 1673, 1672,
	1670, 1608, 10591, 30550, -1000, -1000, -1000, -1000, -1000, 1031,
	931, 21371, 1706, -1000, 1172, -1000, -1000, 294, -1000, -1000,
	-1000, 136, -1000, -258, 237, -259, -1000, 1101, -1000, -225,
	1170, 243, -1000, -1000, 850, 30558, -1000, 930, -313, 400,
	178, 415, 18561, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	84, 1310, -1000, 625, 291, 855, -1000, -1000, -1000, -1000,
	-1000, 28351, -229, 1441, -1000, -1000, -1000, -1000, -1000, -1000,
	30558, -1000, -314, 30558, 4651, -1000, -1000, -1000, 5466, -1000,
	-1000, -1000, -1000, 157, -1000, -1000, 711, 22775, -1000, 1369,
	136, -1000, -233, 1440, 1434, 1721, -1000, -315, 5272, -316,
	499, 30558, 843, -1000, 16689, -1000, 415, -1000, 1310, 17625,
	-1000, -1000, -1000, 1747, -1000, 1716, 479, 479, 5197, 844,
	30558, -1000, -317, 485, 30558, -1000, 927, -1000, 732, 1178,
	-1000, -1000, -1000, 335, 982, -1000, -1000, -1000, 5050, -1000,
	-320, 30558, -1000, -1000, -1000, -1000, -1000, 373, 4898, -321,
	-1000, 372, 30558, -1000,
}
var yyPgo = [...]int{

	0, 2125, 2124, 40, 2121, 171, 2119, 2118, 2117, 16,
	13, 11, 20, 2116, 1871, 1869, 1856, 1847, 2114, 1843,
	2113, 19, 2111, 2110, 1839, 2109, 2108, 1837, 1831, 1824,
	1820, 2107, 2106, 2105, 1816, 1814, 2, 2103, 22, 2102,
	5, 133, 144, 2101, 3, 2099, 2098, 10, 2097, 2095,
	1811, 2092, 2090, 2078, 2077, 95, 2076, 1806, 1802, 2075,
	2072, 1799, 1797, 2068, 2066, 1791, 1787, 1785, 2065, 153,
	2064, 2062, 2060, 168, 92, 138, 2059, 2058, 2056, 107,
	72, 2437, 104, 48, 103, 172, 2055, 30, 39, 2054,
	2052, 140, 122, 2051, 142, 2050, 78, 118, 89, 2048,
	2046, 152, 2044, 2043, 2042, 126, 2036, 2030, 2695, 2028,
	2026, 137, 2021, 56, 49, 45, 2018, 2014, 2012, 2011,
	2010, 18, 1580, 2009, 2007, 124, 2006, 1992, 68, 1989,
	1988, 170, 1987, 1984, 1982, 123, 43, 1981, 46, 1980,
	90, 67, 1979, 59, 1978, 121, 1976, 1975, 29, 26,
	1974, 38, 1972, 50, 1971, 127, 159, 1247, 1970, 31,
	15, 42, 35, 70, 64, 119, 96, 23, 32, 117,
	97, 86, 36, 1969, 134, 1968, 77, 143, 114, 120,
	141, 1967, 1966, 1964, 950, 1963, 136, 69, 1962, 99,
	838, 151, 115, 1961, 88, 1960, 1951, 1950, 1948, 76,
	113, 1946, 1944, 87, 312, 61, 853, 1943, 2566, 28,
	139, 1942, 37, 1941, 1939, 3594, 102, 93, 100, 1938,
	101, 75, 47, 1937, 1936, 1935, 1931, 1927, 1926, 1277,
	1925, 1922, 1921, 1920, 129, 91, 1919, 1918, 111, 98,
	1916, 1914, 1913, 1912, 112, 58, 135, 1911, 105, 106,
	83, 1907, 1906, 1905, 1903, 62, 33, 1902, 1901, 1900,
	94, 82, 1899, 60, 44, 27, 63, 24, 71, 109,
	1898, 34, 1897, 108, 4, 6, 9, 1896, 1893, 1892,
	1890, 1889, 1888, 1887, 84, 1886, 1885, 65, 1881, 1879,
	1876, 25, 1875, 1867, 1865, 131, 110, 51, 145, 132,
	8, 1854, 1851, 7, 1845, 116, 1835, 54, 1829, 52,
	1822, 1818, 55, 1795, 1793, 57, 1789, 1783, 150, 1137,
	178, 1779, 146, 130, 53, 66, 1777, 1773, 0, 854,
	154, 158, 1771, 1769,
}
var yyR1 = [...]int{

	0, 327, 327, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 68, 3, 3,
	8, 4, 4, 4, 5, 5, 89, 90, 90, 94,
	94, 6, 6, 7, 7, 9, 9, 72, 72, 10,
	11, 11, 11, 11, 330, 330, 103, 103, 101, 101,
	102, 102, 169, 169, 12, 12, 12, 174, 174, 179,
	179, 179, 182, 182, 182, 182, 161, 162, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	301, 301, 310, 310, 310, 311, 311, 309, 309, 309,
	309, 309, 313, 313, 314, 314, 312, 312, 312, 312,
	316, 316, 317, 317, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 304, 304,
	304, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 318, 318, 318, 318, 319, 319, 320, 320, 321,
	321, 322, 322, 322, 322, 323, 323, 323, 323, 323,
	324, 324, 324, 324, 324, 324, 324, 325, 325, 326,
	326, 2, 282, 282, 283, 283, 284, 284, 284, 284,
	285, 285, 286, 286, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 25, 202, 202, 303, 303, 303,
	303, 297, 297, 297, 299, 299, 298, 298, 298, 300,
	300, 305, 305, 305, 305, 305, 307, 307, 307, 307,
	307, 307, 308, 308, 308, 306, 306, 48, 48, 49,
	49, 49, 154, 154, 154, 13, 13, 13, 13, 13,
	20, 22, 22, 37, 37, 38, 23, 23, 23, 23,
	39, 39, 40, 26, 26, 26, 26, 26, 26, 46,
	46, 46, 45, 45, 44, 44, 44, 44, 44, 44,
	24, 24, 24, 24, 47, 47, 42, 42, 41, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 27, 27, 27, 27, 27, 27, 19, 281, 281,
	281, 36, 36, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 53, 257, 258, 258, 258, 258, 258, 258,
	258, 258, 245, 245, 246, 222, 222, 222, 222, 222,
	222, 222, 222, 221, 221, 221, 221, 225, 225, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 224, 224,
	224, 224, 224, 224, 224, 224, 226, 226, 226, 226,
	226, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 228, 228, 228, 228,
	228, 228, 228, 228, 244, 244, 229, 229, 238, 238,
	239, 239, 239, 236, 236, 237, 237, 232, 233, 240,
	234, 234, 234, 235, 235, 235, 243, 243, 243, 243,
	230, 247, 247, 267, 267, 266, 266, 265, 265, 265,
	256, 256, 262, 262, 262, 262, 262, 262, 262, 251,
	251, 251, 250, 250, 252, 252, 255, 255, 264, 264,
	263, 263, 248, 248, 248, 268, 268, 268, 268, 268,
	249, 249, 249, 249, 269, 253, 253, 254, 254, 254,
	275, 276, 274, 274, 274, 274, 274, 118, 118, 118,
	259, 259, 259, 260, 260, 260, 261, 261, 261, 279,
	279, 278, 278, 50, 50, 51, 56, 56, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 153, 153, 153, 52, 200,
	200, 273, 273, 272, 270, 270, 271, 271, 15, 15,
	54, 54, 302, 302, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 277, 277, 277, 17, 17, 57, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 86, 188, 188,
	187, 187, 186, 186, 186, 189, 189, 189, 219, 219,
	219, 59, 59, 64, 64, 67, 67, 67, 65, 66,
	28, 29, 29, 29, 29, 30, 201, 201, 62, 62,
	63, 63, 63, 63, 78, 78, 332, 332, 61, 61,
	60, 60, 18, 333, 69, 70, 70, 71, 71, 71,
	192, 192, 75, 75, 75, 73, 73, 73, 74, 74,
	80, 80, 84, 84, 84, 84, 83, 83, 83, 83,
	156, 156, 156, 157, 157, 158, 158, 158, 159, 159,
	160, 160, 160, 160, 160, 126, 126, 211, 211, 211,
	210, 210, 210, 210, 88, 88, 91, 91, 92, 92,
	92, 92, 95, 139, 139, 112, 112, 113, 113, 113,
	113, 113, 124, 124, 168, 168, 167, 167, 170, 170,
	93, 93, 93, 93, 98, 98, 99, 99, 100, 100,
	199, 199, 217, 217, 217, 104, 104, 104, 106, 105,
	105, 105, 105, 107, 107, 109, 110, 110, 108, 108,
	111, 114, 114, 114, 114, 115, 115, 85, 85, 85,
	85, 85, 85, 85, 185, 185, 117, 117, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 134, 134,
	134, 134, 134, 134, 119, 119, 119, 119, 119, 119,
	119, 79, 79, 135, 135, 135, 97, 96, 96, 82,
	82, 81, 81, 136, 136, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	129, 129, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 331, 331,
	131, 130, 130, 130, 130, 130, 130, 76, 76, 76,
	76, 76, 218, 218, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 146, 146, 77,
	77, 144, 144, 145, 147, 147, 143, 143, 143, 121,
	121, 121, 121, 121, 121, 121, 121, 123, 123, 123,
	148, 148, 137, 137, 87, 149, 149, 150, 151, 151,
	152, 152, 155, 163, 163, 163, 164, 164, 164, 164,
	125, 125, 165, 165, 165, 120, 120, 120, 120, 120,
	120, 120, 166, 166, 166, 166, 171, 171, 138, 138,
	141, 141, 140, 142, 172, 172, 176, 176, 173, 173,
	177, 177, 177, 177, 180, 180, 181, 181, 181, 178,
	178, 178, 175, 175, 175, 214, 214, 214, 183, 183,
	193, 193, 190, 190, 191, 191, 184, 184, 231, 231,
	196, 196, 196, 196, 196, 196, 196, 196, 198, 198,
	197, 197, 197, 194, 194, 194, 195, 195, 212, 212,
	208, 208, 213, 213, 209, 209, 215, 215, 216, 216,
	280, 280, 241, 241, 290, 290, 242, 242, 291, 291,
	293, 293, 288, 288, 289, 289, 292, 292, 31, 294,
	294, 295, 295, 296, 296, 296, 296, 32, 33, 33,
	33, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 328, 329, 203, 204, 204, 204,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 11, 4, 7,
	5, 1, 13, 3, 10, 12, 2, 1, 3, 3,
	6, 1, 3, 1, 3, 7, 8, 1, 1, 9,
	8, 7, 6, 6, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 2, 3,
	3, 11, 7, 9, 5, 5, 15, 11, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 2, 2, 2, 1, 3, 0, 3, 1,
	3, 0, 1, 1, 1, 1, 3, 1, 3, 3,
	0, 2, 5, 5, 5, 7, 5, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 4, 0, 3, 1, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 6,
	5, 5, 4, 3, 5, 1, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 3, 5, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	2, 4, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 4, 1, 1, 2, 3, 4, 3,
	3, 3, 3, 3, 3, 0, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 2, 3, 1,
	0, 3, 3, 0, 2, 2, 2, 1, 2, 1,
	2, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 2, 4, 3, 4, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 0, 2, 1, 1, 5, 1, 3, 2, 5,
	4, 3, 3, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 3, 8, 0, 1, 2, 4, 0,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	3, 5, 3, 5, 5, 6, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 4,
	4, 3, 6, 6, 4, 4, 4, 4, 4, 4,
	3, 3, 2, 6, 2, 4, 4, 4, 5, 7,
	6, 3, 5, 4, 2, 4, 3, 2, 4, 5,
	6, 2, 6, 6, 3, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 1,
	1, 2, 1, 1, 1, 2, 4, 4, 1, 1,
	2, 3, 4, 4, 5, 3, 1, 1, 3, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 2, 2,
	2, 2, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 4, 8, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 3, 1,
	3, 2, 4, 1, 2, 1, 2, 2, 2, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -327, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -57, -58, -59, -64, -65, -66,
	-62, -61, -60, -18, -24, -27, -19, -68, -28, -29,
	-30, -31, -32, -33, -34, -35, -4, 6, 7, -72,
	9, 10, 30, -53, 131, -51, -52, 134, 133, 170,
	135, 163, 64, 265, -67, 268, 269, -332, -201, 168,
	169, 137, 216, 217, 20, 37, 270, 272, 31, 32,
	185, 233, 235, -5, -89, -6, 8, 362, 132, 266,
	165, 164, 26, 414, -328, 68, 477, -151, 15, -69,
	-333, -69, -69, -69, -69, -69, -257, -199, 106, 68,
	23, -195, 144, 87, 353, 140, -202, 229, 231, -193,
	-194, 193, 203, 44, 151, 150, 141, 229, 141, 142,
	144, 353, 140, 178, 177, 229, 231, 141, -108, -215,
	72, -206, 154, 425, 254, 411, 132, 241, 190, 265,
	279, 273, 307, 295, 412, 426, 155, 211, 139, 293,
	296, 340, 153, 244, 204, 427, 329, 335, 214, 268,
	349, 428, 156, 208, 210, 209, 198, 215, 36, 166,
	291, 250, 284, 219, 193, 429, 419, 282, 28, 188,
	430, 337, 312, 253, 431, 416, 248, 336, 287, 283,
	137, 157, 151, 433, 313, 317, 434, 341, 234, 435,
	436, 437, 143, 240, 277, 278, 438, 194, 343, 245,
	311, 33, 152, 413, 48, 175, 344, 38, 315, 37,
	321, 439, 310, 305, 322, 440, 441, 442, 443, 258,
	256, 257, 259, 309, 276, 304, 206, 53, 138, 319,
	318, 320, 207, 339, 300, 298, 444, 445, 249, 158,
	446, 447, 285, 18, 448, 449, 347, 169, 251, 252,
	42, 450, 451, 452, 173, 453, 454, 455, 338, 314,
	316, 192, 456, 288, 148, 457, 255, 458, 264, 415,
	238, 381, 345, 281, 459, 272, 174, 168, 348, 460,
	217, 461, 462, 463, 160, 464, 232, 231, 269, 380,
	270, 331, 212, 465, 466, 467, 468, 202, 187, 351,
	342, 52, 216, 326, 469, 275, 150, 218, 470, 242,
	266, 43, 7, 205, 246, 332, 213, 203, 302, 176,
	471, 472, 289, 290, 308, 274, 303, 267, 178, 179,
	170, 262, 350, 327, 417, 229, 297, 294, 182, 301,
	473, 144, 474, 183, 271, 346, 243, 292, 328, 141,
	124, 296, 340, 131, 330, 331, 337, -251, 338, 177,
	180, -219, 141, -188, 329, 234, 255, 386, 183, 184,
	72, 142, 143, 33, 342, 341, 333, -215, 145, 271,
	-78, 135, 171, -108, -203, -203, -203, -203, -47, 72,
	218, -47, 30, 72, 72, 36, 72, 270, 332, 332,
	75, 415, 186, 21, -319, -300, 264, -318, -298, 8,
	159, 6, 9, -303, 74, 72, -206, -207, 382, 383,
	384, 385, 386, 399, 400, 401, 387, 388, 402, 403,
	404, 389, 390, 405, 406, 408, 409, 407, 181, 393,
	392, 391, 394, 395, 51, 397, 396, 398, 21, -319,
	-300, 264, 6, -71, 5, -184, 144, 146, 267, -90,
	-94, -217, -215, -207, 74, -3, -164, 17, 16, -75,
	54, 55, -70, -83, 115, -85, -215, -116, 89, -122,
	29, 72, -206, 24, -121, -207, -117, -143, -142, -97,
	124, 125, 126, 113, 114, 121, 90, 127, -129, -127,
	-128, -130, -132, -133, 74, 73, 82, 75, 76, 77,
	78, 83, 382, 383, 384, 385, 386, 399, 400, 401,
	387, 388, 402, 403, 404, 389, 390, 405, 406, 408,
	409, 407, 393, 392, 391, 394, 395, 397, 396, 398,
	84, 85, -208, -140, -328, 58, 59, 171, 140, 363,
	364, 365, 366, 367, 410, 161, 371, 92, 47, 352,
	361, 360, 359, 357, 358, 354, 356, 355, 373, 374,
	147, 353, 119, 362, -184, -184, 11, -101, -102, -108,
	-111, -215, -173, 267, -180, -177, 341, 342, -178, -181,
	-175, -143, 321, 454, 455, 340, 296, 339, -208, -215,
	-2, -5, 6, -108, -258, -246, -249, -209, 156, -269,
	-208, -205, 153, 72, -206, 247, 136, 162, 88, 418,
	23, 25, 237, 324, 382, 91, 124, 383, 384, 385,
	16, 20, 92, 123, 81, 363, 186, 386, 131, 62,
	379, 354, 356, 352, 353, 330, 29, 10, 26, 164,
	197, 22, 117, 133, 95, 96, 97, 167, 24, 165,
	260, 85, 161, 432, 19, 65, 11, 180, 233, 13,
	377, 378, 14, 230, 147, 146, 108, 195, 142, 60,
	8, 127, 27, 105, 56, 387, 388, 421, 45, 185,
	422, 58, 106, 17, 357, 358, 31, 410, 389, 172,
	423, 390, 119, 200, 63, 50, 236, 89, 83, 34,
	86, 66, 87, 15, 196, 61, 375, 239, 261, 177,
	199, 424, 159, 107, 134, 362, 263, 235, 59, 140,
	6, 372, 30, 163, 393, 392, 391, 394, 201, 57,
	365, 366, 395, 475, 141, 94, 373, 374, 145, 84,
	5, 44, 32, 9, 64, 67, 359, 360, 361, 47,
	51, 397, 396, 398, 93, 12, 376, 414, 181, 142,
	-108, 362, -191, 147, -191, 178, 177, -191, -191, 141,
	98, -54, -108, -302, -297, -303, -190, 147, -208, -190,
	-190, -190, -190, -190, -190, -190, -108, 128, -108, 72,
	30, -189, 106, 12, 353, 140, 72, 177, 180, 141,
	178, 144, -204, -328, -209, -204, -253, 11, 108, 181,
	181, 181, 182, 181, -187, 332, 334, 179, 335, 336,
	12, -86, 106, 19, -328, -164, -164, -204, 72, 270,
	145, -63, -3, -11, -9, -10, -3, 98, 30, 30,
	74, 51, 30, -42, -41, -43, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 30, -281,
	68, -241, 321, 72, -294, -295, -108, 75, 75, 66,
	66, 69, 145, 69, 66, -320, 68, -320, -320, -320,
	71, 66, 69, 255, 66, 11, 66, -69, -7, -5,
	-328, 21, 22, 141, -108, 345, 69, 23, -328, -329,
	70, -165, 19, 31, -125, 75, 78, -152, -155, -85,
	-215, 50, -73, 21, 22, 80, 11, -211, 88, 87,
	105, -210, 23, 72, -206, -207, 74, 128, -85, -119,
	108, 89, 106, 107, 91, 110, 109, 120, 113, 114,
	115, 116, 117, 118, 119, 111, 112, 123, 98, 99,
	100, 101, 102, 103, 104, -185, -328, -97, -328, 129,
	130, -122, -122, -122, -122, -122, -122, -122, -122, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -3, -136,
	-85, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -146, -85, -328, -331, -131, -328,
	-331, -131, -331, -131, -331, -328, -331, -131, -331, -131,
	-331, -331, -131, -331, -328, -328, -328, -328, -328, -328,
	-110, 27, -108, -88, -91, -92, -93, -112, -96, -328,
	-108, -97, -108, -101, -330, 69, 11, 67, -330, 69,
	128, 69, -174, -179, 343, 345, 267, -178, -178, -214,
	-208, 74, 29, 98, 30, 128, -151, -69, 70, 69,
	-249, 156, 153, -221, -225, -227, -226, -228, -223, -224,
	293, 296, 300, 298, 294, 299, 124, 297, 302, 303,
	304, 305, 306, 307, 308, 309, 310, 311, 312, 30,
	166, 289, 290, 291, 292, 313, 314, 315, 316, 317,
	318, 319, 320, 273, 295, 412, 274, 275, 276, 277,
	278, 279, 281, 282, 283, 284, 285, 286, 287, 72,
	-207, -269, 68, -208, 23, 144, 72, 89, 72, 72,
	72, -306, -305, -297, -300, -191, 72, 69, 145, 69,
	145, 71, -101, 24, 66, -103, -108, 72, 72, 72,
	72, -299, -297, -300, -216, -215, -205, -204, -189, 74,
	-85, -191, -191, -204, -204, -204, -108, -108, -108, -108,
	-189, -189, -204, -189, -186, 11, 108, 11, -186, -186,
	-85, -122, -297, 355, 115, 72, 72, 270, 72, -42,
	-42, 74, -42, 69, 98, -42, 70, -136, -280, 476,
	69, -296, 23, 345, 346, 322, -322, 141, 180, 177,
	-322, -318, -299, -298, -297, -321, -208, -303, -322, 233,
	69, -322, -299, -297, -75, -3, -108, -204, 346, 347,
	-94, -96, -328, -166, -209, 9, 108, 69, 18, 69,
	-163, 25, 26, 128, -123, 51, 75, 78, -192, 49,
	-108, -85, -85, -134, 83, 89, 84, 85, -210, 115,
	-216, -209, -205, -122, -135, -140, -97, 79, 108, 106,
	107, 91, -122, -122, -122, -122, -122, -122, -122, -122,
	-122, -122, -122, -122, -122, -122, -122, -218, 72, 74,
	72, -121, -121, -208, -73, -81, -84, 115, -85, -215,
	-81, -81, -73, -329, -329, -84, -81, -81, -81, -84,
	-81, -73, -73, -81, -329, -329, -329, -329, -81, -81,
	-81, -81, -73, -81, -81, -81, -73, -329, 69, -329,
	-3, -81, -81, -81, -329, -85, -85, -143, 74, -81,
	-143, 74, -81, -122, 368, 369, 370, -81, -81, -73,
	-144, -145, 93, -143, -329, -122, -208, -208, -81, -82,
	-81, -81, -81, -169, 173, -108, 30, 69, -104, -106,
	-105, -107, 56, 60, 62, 57, 58, 59, 63, -199,
	-88, -95, 47, -328, -113, 173, -114, 23, -217, 64,
	146, 65, -169, 67, -88, -108, -88, -111, -215, 115,
	-177, -180, 69, 344, 346, 347, -174, -235, 123, 66,
	86, -85, -209, -216, -164, -75, -259, -260, -261, -209,
	74, 75, -246, -247, -248, -249, -262, 156, -268, 148,
	150, 44, -250, 157, 142, 45, -222, -236, 327, -229,
	68, -229, -229, 301, 293, 296, 294, -229, -229, -229,
	-229, -229, -234, 296, -234, -234, -234, -234, 294, 68,
	68, -229, -229, -229, -238, 68, -238, 288, -239, 68,
	-239, -239, -239, -239, -269, -269, -85, -212, 67, -161,
	-108, -204, 24, -204, -48, 190, 162, 68, -301, 69,
	29, -307, 230, -108, -108, -108, -297, -297, -303, -277,
	160, 155, -108, 69, 69, 72, 72, -254, 11, 108,
	-189, -215, -215, -108, -124, 23, -189, -79, 167, 67,
	-331, -329, 72, -41, -121, 70, -109, 27, 74, -295,
	-217, 321, 346, -323, 115, -208, -323, -326, 414, 145,
	70, 69, -323, 251, 233, -323, 11, -73, -329, -56,
	-55, -196, 136, 133, 134, 138, 139, -272, 324, 132,
	296, 81, 29, 15, 363, 173, 417, 72, 174, -329,
	69, 128, 52, -125, -125, -155, -183, 19, 11, 47,
	47, -74, 57, 83, 84, 85, 128, -328, -135, -122,
	-122, -122, -79, 88, -329, -81, 69, -329, 128, -329,
	-329, -81, -156, 375, -156, -329, -329, -329, -329, -329,
	-329, -81, -81, -329, -156, -156, -156, -156, -329, -329,
	-329, -329, -81, -329, -329, -329, -82, -85, -329, -329,
	-329, -329, 69, 67, 23, 11, 11, -329, 11, 11,
	-329, -329, 11, -122, -122, -122, -329, -329, -81, -147,
	-145, 95, -85, -329, -329, 69, 69, -329, -329, -329,
	-329, -120, 30, 47, -328, -3, -328, -172, -176, -143,
	-205, -91, -92, -92, -91, -92, 56, 56, 56, 61,
	56, 61, 56, -105, -217, -329, -329, -139, 189, -328,
	34, -217, -114, 142, 142, 142, -115, 12, -88, -115,
	-115, 128, -179, -182, 348, 345, 351, 72, 74, 128,
	-165, 69, -261, 98, -249, 68, 72, 44, -207, 45,
	-250, 142, 45, -250, -255, 72, -255, 45, 83, 89,
	-232, -233, -240, -243, -230, 29, 66, 324, 148, 45,
	44, 81, -237, 328, 75, -234, -234, -229, -229, -229,
	301, -229, -234, -235, 30, -235, -235, -235, -235, -234,
	-244, 74, -244, 75, -238, 75, 70, 66, -208, -3,
	23, -49, 8, 9, 10, -282, -283, -284, 72, 108,
	195, 196, -310, 263, -305, 231, 240, 88, 16, 414,
	145, 145, -204, -108, -297, -204, -204, -115, 72, 72,
	-186, -189, 34, -122, -300, 183, 184, -169, 141, -296,
	145, 128, 128, 145, 254, -299, -208, 11, 11, 251,
	11, -299, -192, 69, -203, -200, -273, -250, -279, -248,
	-249, -278, 149, 157, 173, 156, -200, -273, 156, 153,
	-250, 157, 148, 149, -197, -250, 145, 23, -200, -200,
	-256, 98, -200, 173, 23, -209, -209, 53, -108, -80,
	-162, 115, -209, -82, -79, 88, -122, -329, -84, -157,
	-156, 115, -216, -157, -157, -329, -208, -328, -156, -157,
	-157, -156, -156, -156, -329, -329, -156, -157, -157, -157,
	-157, -329, -157, -157, -157, -329, -220, 124, 293, 166,
	291, 284, 311, 298, 326, 289, 327, -218, -220, -122,
	-122, -122, -122, -122, 11, 11, 11, 411, -151, 97,
	-85, 94, -122, -122, -171, 66, -172, -138, -141, -140,
	-328, -3, -329, -166, 6, 414, -170, -208, -115, 69,
	98, 98, -99, -98, 66, 67, -100, 66, -98, 56,
	56, -168, 68, 69, -140, -328, -170, -122, -114, -328,
	-328, -328, -151, -85, -115, 345, 349, 350, -260, -261,
	-264, -263, -208, -207, 148, -268, 157, -250, -268, -255,
	-255, 68, 83, -122, 9, 45, 45, 74, 70, -235,
	-235, -234, -229, -235, 72, 124, -235, 70, 69, 70,
	69, 70, 69, -118, 430, 89, -108, -161, -161, 66,
	70, 69, -221, 72, 72, 72, -313, 414, 236, -311,
	-309, 242, 243, 244, 245, 246, -300, 241, -307, 238,
	74, 72, -108, -297, -189, -122, -234, -108, -299, 115,
	115, -208, -299, 251, -325, 414, -299, -299, 11, -299,
	-74, -55, 68, -245, 72, -207, -203, -255, -194, 148,
	72, 72, -203, 72, -207, 72, -207, -208, 45, 45,
	72, -108, -208, -245, 72, -85, -208, -208, -96, 128,
	-115, 11, 69, -83, -329, -122, -157, 128, -157, -151,
	173, -157, -157, -157, -329, -229, -229, -229, -239, -229,
	278, -229, 278, -329, -329, 19, 19, 19, 19, -329,
	-122, -122, -122, -328, -77, 372, -85, 69, 69, 28,
	-171, 69, -329, -329, 47, -329, -329, 69, -151, -176,
	-85, -85, -85, 68, -85, -167, -208, 189, -329, -114,
	-199, -167, -167, -167, -164, 70, 69, -229, -229, 45,
	-255, -167, -128, -235, -234, 74, -234, 75, 75, 430,
	68, -3, -108, -285, -286, -287, 81, 413, 89, 197,
	198, 158, 199, 200, 201, -284, -221, -221, -221, -316,
	-317, -315, 239, 260, 261, 247, -314, -312, 256, 257,
	258, 259, 88, 74, 74, 74, -308, 230, 88, 239,
	16, 23, -288, -187, -325, -325, 233, -299, -80, -245,
	-153, 161, 162, -221, -221, -212, -252, -250, 45, 72,
	-198, 145, 23, 145, -153, -245, 30, 133, 27, -209,
	-148, 13, -88, -162, -162, 115, -329, 16, -234, 72,
	-122, -122, -122, -122, -329, -329, -329, -122, -329, 74,
	-122, -122, 45, -141, -138, 47, -3, -328, -208, -164,
	-167, 70, 69, -140, -113, -217, -329, -329, -329, -266,
	-265, 67, 152, 81, -263, -163, -163, 70, -235, -235,
	70, 70, -264, -161, 19, -161, -287, 74, 201, 197,
	201, 201, 201, 201, 202, -304, 81, 237, -315, 248,
	436, 232, 263, 75, 75, 262, 31, 32, -312, 75,
	75, 75, 75, -309, 16, 414, -307, 238, 74, 74,
	-289, 38, -291, 39, -324, 23, -324, 251, 11, 70,
	72, -222, -222, 68, -255, 68, 72, -208, -153, 29,
	29, -328, -149, 14, 16, -115, -83, -136, -329, -329,
	-329, -329, -76, 108, 414, -329, -329, 9, -138, -3,
	70, -208, -114, -265, 72, -256, 74, 159, 70, 188,
	-21, -3, -9, -10, -11, -12, -14, -50, -15, -16,
	-22, -23, -17, -57, -58, -67, -65, -66, -62, -61,
	-26, -24, -27, -19, -28, -29, -30, -34, -35, -25,
	92, 147, 219, 265, 36, 36, 193, 194, 74, 74,
	29, 249, 127, 29, 75, 127, 379, 238, 74, 72,
	239, -231, 146, -292, 43, -290, -242, 42, 16, -297,
	-88, -264, -212, -264, -122, -270, -271, 173, -150, -85,
	-137, -87, -85, -148, -162, -151, -329, 412, 63, 415,
	-172, -329, 75, -108, -267, -266, 189, -161, -85, -85,
	72, -46, -213, 222, 223, 224, -209, -36, -21, 75,
	29, 75, 29, 252, 239, 23, -168, 75, -291, 16,
	-293, 40, 41, 74, 414, -115, 70, 68, 70, -329,
	69, -208, 69, -149, -158, 380, 381, 53, 413, 416,
	68, -154, 191, 192, -37, -38, 93, 94, 220, 221,
	225, -221, 69, 477, 250, 250, 74, 38, 74, 16,
	16, 231, -148, -267, -264, -267, -271, 47, -87, -329,
	-159, 91, -160, 262, 379, -126, 75, 127, -159, 53,
	-167, -161, 72, 72, 97, 95, -38, -85, -36, 19,
	19, 19, 29, -209, 97, -21, 74, 74, 29, 236,
	21, -300, -149, 70, 175, -160, 456, 432, 189, 456,
	432, -121, 414, 70, -13, -20, -12, -9, -10, -11,
	265, 92, -36, 94, 477, -47, 75, -3, -45, -44,
	75, -47, 227, 89, 228, 72, -122, 253, -267, 176,
	88, -208, 415, -275, -276, 66, -161, -36, 477, -36,
	97, 95, -39, -40, 96, -21, 69, 226, -300, -328,
	-160, 416, -276, 66, -275, 66, 10, 9, 477, 97,
	477, 147, -36, 97, 95, -40, -85, -44, -122, 172,
	-274, 160, 155, 158, 30, -274, 97, 92, 477, 147,
	-36, 94, -329, -329, 154, 29, 83, 97, 477, -36,
	147, 97, 477, 147,
}
var yyDef = [...]int{

	36, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, -2, 673, 673, 673,
	673, 673, 673, 760, -2, 523, 524, 0, 0, 0,
	0, -2, 642, 643, 644, 648, 649, 664, -2, 1544,
	1544, 1544, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 0, 0, 57, 58, 1066, 0,
	667, 656, 657, 0, 0, 1542, 2, 1006, 0, 682,
	675, 0, 1066, 1066, 0, 0, 88, 0, 0, 0,
	761, 0, 0, 0, 1064, 1064, 0, 1064, 1064, 0,
	1087, 0, 1061, 1083, 1084, 1085, 0, 0, 1062, 0,
	1062, 1062, 1062, 1062, 1062, 1062, 1062, 0, 587, 778,
	1096, 1097, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 0,
	0, 0, 635, 0, 1545, 1545, 602, 0, 604, 0,
	0, 0, 0, 0, 614, 617, 621, 0, 1006, 1006,
	1545, 469, 470, 471, 639, 640, 629, 641, 0, 0,
	0, 0, 0, 668, 669, 670, 671, 672, 280, 282,
	0, 302, 0, 305, 308, 1102, 650, 0, 0, 1127,
	1128, 0, 0, 0, 0, 0, 1431, 155, 219, 157,
	157, 157, 157, 218, 207, 208, 209, 210, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 0, 0,
	0, 1431, 673, 0, 677, 0, 0, 1067, 645, 46,
	47, 0, 762, 763, 764, 0, 1012, 0, 0, 685,
	683, 684, 674, 0, 696, 717, 0, 787, 0, 792,
	794, -2, -2, 0, 835, 836, 837, 838, 839, 840,
	0, 0, 0, 0, 0, 0, 0, 0, 864, 865,
	866, 867, 868, 869, 979, 980, 981, 982, 983, 984,
	985, 986, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541,
	796, 797, 976, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 938,
	938, 938, 938, 938, 938, 938, 938, 938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	70, 778, 74, 1490, 0, 1038, -2, -2, 1040, 0,
	0, 0, -2, -2, -2, -2, 1303, -2, 976, 0,
	89, 998, 673, 90, 0, 344, 345, 0, 1315, 493,
	1094, 1095, 1305, 1090, 1091, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 568, 0, 569, 0, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 588, 1545,
	635, 591, 0, 0, 1064, 1064, 1545, 1545, 1545, 0,
	0, 0, 600, 1546, 1547, 601, 0, 495, 496, 635,
	635, 1545, 635, 632, 0, 632, 611, 632, 630, 631,
	0, 616, 0, 0, 0, 624, 625, 626, 651, 0,
	0, 658, 660, 661, 662, 663, 659, 0, 0, 0,
	284, 0, 0, 304, 286, 0, 289, 290, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 0, 307,
	0, 1100, 1103, 655, 1118, 1119, 0, 1129, 1130, 161,
	161, 0, 0, 0, 0, 151, 0, 152, 153, 154,
	217, 161, 0, 0, 161, 0, 0, 682, 43, 53,
	0, 678, 679, 0, 1545, 0, 0, 0, 0, 52,
	1543, 38, 0, 0, 1007, 1010, 1011, 999, 1000, 1003,
	0, 0, 680, 686, 687, 676, 0, 697, 0, 0,
	0, 718, 0, 720, 721, 722, 723, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 814, 815,
	816, 817, 818, 819, 820, 793, 0, 807, 0, 0,
	0, 856, 857, 858, 859, 860, 861, 862, 0, 685,
	0, 0, 0, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 685, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 0, 968, 0, 921, 930, 0,
	922, 931, 923, 932, 924, 0, 925, 933, 926, 934,
	927, 928, 935, 929, 0, 0, 0, 829, 0, 0,
	72, 0, 777, 0, 724, 726, 727, 728, -2, 0,
	781, 827, -2, 0, 0, 0, 64, 65, 0, 0,
	0, 0, 75, 77, 0, 0, 1490, 1041, 1042, 443,
	1055, 1056, 1057, 0, 1053, 0, 1006, 682, 510, 0,
	346, 0, 0, 355, 433, 364, 365, 366, 426, 368,
	426, 426, 0, 426, 426, 426, 426, 426, 440, 440,
	440, 440, 440, 409, 410, 411, 412, 413, 0, 0,
	386, 426, 426, 426, 390, 416, 417, 418, 419, 420,
	421, 422, 423, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 428, 428, 430, 430, 430, 430, 430, 0,
	0, 492, 0, 1088, 86, 0, 1545, 0, 1545, 0,
	0, 100, 235, 221, 99, 0, 206, 0, 0, 0,
	0, 212, 583, 1063, 0, 576, 66, 577, 578, 579,
	580, 581, 214, 582, 779, 1098, 1099, 589, 590, 636,
	637, 0, 0, 594, 595, 596, 597, 598, 599, 497,
	605, 606, 607, 613, 635, 0, 0, 0, 742, 635,
	615, 821, 618, 938, 0, 653, 652, 0, 665, 281,
	283, 285, 303, 0, 0, 306, 309, 0, 0, 0,
	0, 1121, 0, 1123, 1125, 0, 0, 162, 163, 164,
	0, 156, 179, 220, 0, 0, 159, 216, 0, 0,
	0, 0, 149, 0, 685, 0, 0, 558, 646, 647,
	48, 49, 0, 0, 1022, 1013, 0, 0, 0, 0,
	1002, 1004, 1005, 0, 0, 987, 0, 0, 688, 681,
	40, 788, 789, 791, 808, 0, 810, 812, 719, 698,
	0, 977, -2, 798, 799, 823, 824, 825, 0, 0,
	0, 0, 821, 803, 0, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 855, 952, 953,
	0, 853, 854, 863, 0, 0, 831, 692, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 829, 826, 0, 1032,
	0, 0, 0, 0, 903, 0, 0, 838, 979, 0,
	838, 979, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 971, 0, 0, 939, 0, 0, 0, 0, 0,
	830, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	0, 0, 765, 0, 0, 768, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 1417, 737, 0, 781, 0,
	0, 0, 785, 0, 785, 69, 785, 71, 0, 780,
	1039, 0, 0, 0, 80, 81, 76, 1043, 0, 1049,
	1050, 1051, 977, 0, 1012, 685, 343, 511, 513, 516,
	517, 518, 347, 349, 350, 351, 0, 1315, 484, 1427,
	1469, -2, 476, 1344, -2, -2, 354, 435, 434, 367,
	0, 440, 440, 426, 426, 426, 426, 395, 440, 398,
	401, 402, 443, 0, 443, 443, 443, 443, 440, 0,
	0, 387, 388, 389, 378, 0, 379, 428, 381, 0,
	382, 383, 384, 385, 490, 491, 0, 0, 0, 0,
	0, 94, 1065, 95, 0, 237, 238, 182, 102, 0,
	0, 222, 0, 342, 0, 570, 0, 572, 211, 574,
	584, 585, 1545, 0, 0, 1545, 1545, 785, 0, 0,
	608, 633, 634, 632, 635, 0, 612, 627, 0, 0,
	619, 0, 654, 287, 288, 310, 72, 0, 1101, 1120,
	0, 1124, 1126, 0, 165, 167, 0, 143, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 680, 54, 525,
	526, 1544, -2, 559, 1080, 559, 559, 546, 460, 559,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 0, 0,
	0, 0, 0, 1008, 1009, 1001, 0, 1058, 1059, 988,
	989, 87, 689, 809, 811, 813, 0, 829, 800, 821,
	804, 0, 801, 0, 795, 0, 0, 703, 0, 703,
	703, 0, 889, 0, 890, 0, 703, 703, 0, 0,
	0, 0, 0, 0, 896, 897, 898, 899, 703, 703,
	703, 703, 0, 703, 703, 703, 0, 834, -2, 900,
	901, 902, 0, 0, 0, 0, 0, 945, 0, 0,
	946, 911, 0, 0, 0, 0, 0, 917, 998, 0,
	972, 0, 0, 920, 940, 0, 0, 941, 942, 943,
	944, 1026, 0, 0, 0, 1017, 0, 785, 1034, 0,
	0, 725, 756, 758, 0, 753, 766, 767, 769, 0,
	771, 0, 773, 774, 744, 731, 828, 732, 0, 0,
	0, 781, 741, 0, 0, 0, 998, 0, 785, 62,
	63, 0, 78, 79, 0, 0, 85, 444, 445, 0,
	181, 0, 514, 0, 348, 0, 0, 0, 0, 462,
	476, 472, 473, 476, 467, 477, 468, 0, 356, 0,
	358, 359, 360, 361, 362, 0, 0, 439, 0, 447,
	449, 0, 363, 436, 0, 443, 443, 440, 393, 394,
	426, 399, 443, 403, 0, 404, 405, 406, 407, 443,
	0, 424, 0, 0, 380, 0, 507, 0, 1089, 86,
	86, 0, 239, 240, 241, 0, 183, 184, 0, 0,
	0, 0, 112, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 575, 67, 215, 592, 593, 603, 498, 499,
	635, 610, 0, 822, 620, 622, 623, 440, 0, 1122,
	0, 0, 0, 0, 0, 177, 160, 0, 0, 0,
	0, 150, 688, 0, 528, 0, 1544, 476, 0, 547,
	548, 0, 560, 561, 562, 0, 0, 1544, 0, 0,
	0, 561, 0, 0, 0, 0, 1081, 1082, 0, 0,
	0, 461, 0, 0, 0, 1024, 1023, 1014, 39, 785,
	0, 699, 978, 0, 802, 0, 805, 703, 832, 874,
	704, 694, 0, 875, 876, 703, 700, 998, 891, 878,
	879, 892, 893, 894, 703, 703, 895, 883, 882, 881,
	884, 703, 887, 886, 888, 870, 0, 426, 426, 957,
	426, 430, 960, 426, 962, 426, 965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 919,
	975, 0, 0, 0, 55, 0, 1026, 1015, 1028, 1030,
	0, 0, 0, 0, -2, 1283, 0, 748, 998, 0,
	0, 0, 750, 757, 0, 0, 751, 0, 752, 770,
	772, 729, 0, 0, 733, 0, 0, -2, 740, 0,
	0, 0, 1006, 786, 61, 82, 83, 84, 512, 515,
	0, 478, 426, 426, 0, 482, 0, 476, 483, 464,
	466, 0, 357, 437, 0, 446, 448, 450, 427, 391,
	392, 443, 400, 396, 441, 442, 408, 440, 0, 440,
	0, 431, 0, 494, 508, 0, 0, 92, 0, 0,
	190, 0, 186, 0, 0, 0, 120, 0, 103, 104,
	105, 107, 108, 0, 0, 0, 101, 0, 224, 0,
	227, 228, 571, 573, 609, 743, 1112, 775, 177, 166,
	168, 169, 177, 180, 144, 0, 145, 147, 0, 146,
	87, 527, 0, 555, 0, 0, 531, 1088, 474, 0,
	-2, 532, 533, 538, 539, 540, 541, 542, 0, 553,
	0, 535, 0, 555, 0, 550, 0, 0, 50, 0,
	990, 0, 87, 87, 871, 806, 873, 0, 877, 0,
	0, 872, 880, 885, 904, 954, 440, 958, 959, 961,
	963, 964, 966, 906, 905, 0, 0, 0, 0, 912,
	0, 0, 0, 0, 0, 0, 973, 0, 0, 0,
	56, 0, 1031, -2, 0, 0, 73, 0, 1006, 1035,
	1036, 1037, 754, 0, 759, 0, 746, 0, 781, 738,
	0, 0, 0, 0, 60, 452, 0, 1003, 1003, 463,
	465, 0, 438, 397, 443, 425, 443, 0, 0, 509,
	0, 86, 0, 86, 191, 192, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 185, 187, 188, 189, 138,
	121, 122, 0, 0, 0, 0, 113, 114, 0, 0,
	0, 0, 0, 109, 110, 111, 223, 0, 0, 226,
	0, 0, 1114, 1108, 170, 170, 0, 148, 0, 0,
	530, 556, 0, 355, 355, 0, 476, 475, 0, 549,
	0, 1078, 1079, 0, 544, 555, 0, 0, 0, 1025,
	995, 0, 785, 0, 690, 695, 701, 0, 955, 956,
	0, 0, 0, 0, 913, 914, 915, 947, 918, 970,
	0, 0, 0, 1029, 1016, 0, 1020, 0, 749, 59,
	0, 745, 0, 734, 736, 781, 782, 783, 784, 451,
	455, 0, 460, 0, 479, 480, 481, 0, 414, 415,
	429, 432, 0, 93, 0, 0, 193, 194, 195, 196,
	198, 199, 0, 0, 0, 98, 0, 0, 123, 0,
	0, 0, 0, 133, 134, 135, 136, 137, 115, 116,
	117, 118, 119, 106, 0, 0, 225, 0, 230, 231,
	1068, 1116, -2, 0, 141, 0, 142, 178, 0, 529,
	557, 352, 353, 0, 1088, 0, 534, 543, 545, 0,
	552, 0, 44, 0, 0, 990, 87, 998, 907, 909,
	908, 910, 0, 0, 0, 936, 937, 0, 1019, 0,
	755, 747, 739, 456, 457, 0, 459, 0, 453, 0,
	86, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
	332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
	0, 0, 0, 0, 200, 201, 202, 203, 139, 140,
	124, 125, 0, 127, 128, 0, 0, 0, 233, 0,
	229, 744, 0, 1108, 0, 1110, 0, 1107, 0, 171,
	785, 0, 0, 0, 551, 0, 564, 0, 996, 997,
	991, 992, 994, 995, 691, 705, 916, 0, 0, 0,
	1027, -2, 458, 0, 91, 454, 242, 97, 0, 0,
	1090, 0, 0, 269, 270, 271, 1092, 0, 311, 0,
	129, 0, 131, 132, 232, 0, 37, 0, 1115, 0,
	1113, 0, 0, 1109, 0, 990, 453, 0, 453, 563,
	0, 0, 0, 45, 0, 0, 0, 948, 0, 951,
	0, 86, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 267, 0, 0, 126, 130, 234, 1069, 1117, 0,
	0, 0, 995, 536, 0, 554, 565, 0, 993, 702,
	706, 0, 709, 0, 0, 0, 715, 0, 707, 949,
	0, 0, 243, 244, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 1093, 204, 312, 1111, 1105, 172, 173,
	174, 176, 42, 453, 0, 0, 710, 711, 712, 713,
	714, 0, 0, 485, 86, 245, 246, 247, 248, 249,
	0, 251, 0, 0, 0, 263, 264, 265, 0, 272,
	274, 275, 276, 0, 278, 279, 268, 0, 537, 0,
	0, 716, 0, 486, 487, 0, 96, 0, 0, 0,
	0, 0, 0, 260, 0, 266, 0, 277, 175, 0,
	708, 950, 488, 0, 489, 0, 0, 0, 0, 0,
	255, 256, 0, 0, 0, 261, 0, 273, 0, 0,
	500, 502, 503, 0, 0, 501, 250, 252, 0, 258,
	0, 0, 566, 567, 504, 505, 506, 0, 0, 0,
	257, 0, 262, 259,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 477,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:483
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, nil)
		}
	case 37:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:532
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 38:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:538
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:551
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:582
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:591
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:637
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:649
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.str = InsertStr
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.str = ReplaceStr
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:681
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:685
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:689
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:713
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:728
		{
			yyVAL.partitions = nil
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:732
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:742
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:749
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:758
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:790
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:804
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:810
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:829
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:841
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:849
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 96:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:857
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:865
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:893
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:902
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:906
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:961
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:971
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:984
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1020
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1024
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1076
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1081
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1085
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1095
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1104
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1108
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1116
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1126
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1149
		{
			yyVAL.strs = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantAssumption = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1236
		{
			yyVAL.boolean = false
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.boolean = true
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1245
		{
			yyVAL.boolean = false
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yyVAL.boolean = true
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1256
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1264
		{
			yyVAL.procedureParams = nil
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1301
		{
			yyVAL.characteristics = nil
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1333
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1468
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1472
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 225:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1476
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1482
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1486
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1490
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1494
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1498
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1502
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1508
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1516
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = BeforeStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = AfterStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = InsertStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = UpdateStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = DeleteStr
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1555
		{
			yyVAL.triggerOrder = nil
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1579
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1585
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 252:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1589
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1605
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1611
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 257:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1616
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 258:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1621
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 259:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1627
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1655
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1659
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1663
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1671
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1732
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1740
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Resignal{}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1848
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1853
		{
			yyVAL.exprs = nil
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.exprs = nil
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1911
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1928
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1955
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1960
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1968
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2014
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2349
		{
			yyVAL.sqlVal = nil
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2353
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2358
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2362
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2370
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2380
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2388
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2397
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2401
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = ""
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2455
		{
			yyVAL.colKeyOpt = colKey
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2475
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2479
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2484
		{
			yyVAL.indexOptions = nil
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2504
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2513
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2533
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2541
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2545
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.str = yyDollar[1].str
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2605
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2611
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 485:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2635
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 486:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2639
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 487:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2643
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 488:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2647
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 489:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2651
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2675
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2737
		{
			yyVAL.boolean = true
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.boolean = true
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.boolean = false
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = yyDollar[1].str
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = string("")
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2816
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2833
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2843
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2850
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2869
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2878
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 537:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2882
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2891
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2910
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2914
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2921
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2943
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2948
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2952
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2956
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2964
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2971
		{
			yyVAL.columnOrder = nil
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2985
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2991
		{
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
		}
	case 563:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3001
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 566:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3017
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3021
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3041
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3059
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3067
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3071
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3079
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3087
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3095
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3103
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3111
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3119
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3128
		{

		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3142
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3157
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3162
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3166
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3170
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3174
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3179
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3183
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3187
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3191
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3195
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3199
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3215
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3223
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3227
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3231
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3235
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3239
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3244
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3249
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3253
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3257
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3265
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3283
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3288
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3292
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3301
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3305
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3335
		{
			yyVAL.boolean = false
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3339
		{
			yyVAL.boolean = true
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = ""
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3369
		{
			yyVAL.showFilter = nil
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = ""
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = SessionStr
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = GlobalStr
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.statement = &Begin{}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.statement = &Begin{}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3421
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3425
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.statement = &Commit{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.statement = &Rollback{}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3449
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3453
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3457
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3461
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3472
		{
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3477
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3487
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = ""
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3510
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3514
		{
			yyVAL.statement = &OtherRead{}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3520
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3530
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3534
		{
			setAllowComments(yylex, true)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3538
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3544
		{
			yyVAL.bytes2 = nil
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3554
		{
			yyVAL.str = UnionStr
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3558
		{
			yyVAL.str = UnionAllStr
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = UnionDistinctStr
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3567
		{
			yyVAL.byt = 0
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.byt = 1
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = ""
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = SQLCacheStr
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3589
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = DistinctStr
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = ""
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = StraightJoinHint
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3612
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3620
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3643
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3661
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3671
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 702:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3675
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3681
		{
			yyVAL.over = nil
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.over = yyDollar[1].over
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3690
		{
			yyVAL.frame = nil
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3704
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3746
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3779
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3801
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3815
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3829
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3845
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3851
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3861
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3867
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3872
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3887
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3891
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.expr = nil
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3919
		{
			yyVAL.columns = nil
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3960
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3964
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3976
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3980
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3986
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3991
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.str = JoinStr
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4012
		{
			yyVAL.str = JoinStr
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = JoinStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = StraightJoinStr
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = LeftJoinStr
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.str = LeftJoinStr
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = RightJoinStr
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = RightJoinStr
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = NaturalJoinStr
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4091
		{
			yyVAL.indexHints = nil
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4095
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4099
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4103
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4108
		{
			yyVAL.expr = nil
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4122
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4126
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4130
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4134
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4176
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4180
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4184
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4188
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4192
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4196
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4200
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4204
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = IsNullStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = IsNotNullStr
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = IsTrueStr
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = IsNotTrueStr
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = IsFalseStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.str = IsNotFalseStr
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = EqualStr
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = LessThanStr
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = GreaterThanStr
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = LessEqualStr
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.str = GreaterEqualStr
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = NotEqualStr
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
			yyVAL.expr = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4289
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.selectExprs = nil
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4356
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4368
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4396
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4412
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4416
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4420
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4436
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4454
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4478
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4482
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4504
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4508
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4512
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4516
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4520
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4524
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4528
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4597
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4601
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4605
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 909:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4660
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4664
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 913:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4668
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 914:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4672
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 915:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4676
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 916:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4680
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 918:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4688
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4692
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4696
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4776
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4805
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = BooleanModeStr
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 950:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = QueryExpansionStr
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4853
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4867
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4875
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4879
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4889
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4905
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4909
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = nil
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = string("")
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4937
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4943
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = nil
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4962
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4966
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4996
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5000
		{
			yyVAL.expr = &NullVal{}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5019
		{
			yyVAL.exprs = nil
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = nil
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.orderBy = nil
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5063
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5073
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5084
		{
			yyVAL.str = AscScr
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.str = AscScr
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.str = DescScr
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5097
		{
			yyVAL.limit = nil
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5101
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5105
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5109
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5124
		{
			yyVAL.str = ""
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5128
		{
			yyVAL.str = ForUpdateStr
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5132
		{
			yyVAL.str = ShareModeStr
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5145
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5149
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5162
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5166
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5170
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5177
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5185
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5189
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5194
		{
			yyVAL.assignExprs = nil
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5198
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5204
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5208
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5214
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5224
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5230
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5240
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5244
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5253
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5263
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5280
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5293
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5336
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5340
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5344
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5351
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5366
		{
			yyVAL.expr = &Default{}
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5375
		{
			yyVAL.byt = 0
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.byt = 1
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5380
		{
			yyVAL.byt = 0
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yyVAL.byt = 1
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5385
		{
			yyVAL.byt = 0
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5387
		{
			yyVAL.byt = 1
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.str = IgnoreStr
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5395
		{
			yyVAL.sqlVal = nil
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5397
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.empty = struct{}{}
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.empty = struct{}{}
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.empty = struct{}{}
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.empty = struct{}{}
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			yyVAL.empty = struct{}{}
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.empty = struct{}{}
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.empty = struct{}{}
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.empty = struct{}{}
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.empty = struct{}{}
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.empty = struct{}{}
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5424
		{
			yyVAL.empty = struct{}{}
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.empty = struct{}{}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
			yyVAL.empty = struct{}{}
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
			yyVAL.str = UniqueStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = FulltextStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5436
		{
			yyVAL.str = SpatialStr
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5444
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5446
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5464
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5488
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = string("")
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5495
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5498
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5500
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5503
		{
			yyVAL.EnclosedBy = nil
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5507
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5512
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5521
		{
			yyVAL.sqlVal = nil
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5525
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5530
		{
			yyVAL.sqlVal = nil
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5534
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5539
		{
			yyVAL.Fields = nil
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5543
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5548
		{
			yyVAL.Lines = nil
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5557
		{
			yyVAL.sqlVal = nil
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5561
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5577
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5583
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5587
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.lockType = LockRead
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5597
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5601
		{
			yyVAL.lockType = LockWrite
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5605
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5611
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5617
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5621
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5625
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			decNesting(yylex)
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6080
		{
			skipToEnd(yylex)
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6085
		{
			skipToEnd(yylex)
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			skipToEnd(yylex)
		}
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6093
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
