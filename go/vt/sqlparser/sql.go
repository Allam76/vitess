// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const LOCAL = 57606
const LOW_PRIORITY = 57607
const NULLX = 57608
const AUTO_INCREMENT = 57609
const APPROXNUM = 57610
const SIGNED = 57611
const UNSIGNED = 57612
const ZEROFILL = 57613
const COLLATION = 57614
const DATABASES = 57615
const SCHEMAS = 57616
const TABLES = 57617
const FULL = 57618
const PROCESSLIST = 57619
const COLUMNS = 57620
const FIELDS = 57621
const ENGINES = 57622
const PLUGINS = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_USER = 57640
const CURRENT_TIME = 57641
const LOCALTIME = 57642
const LOCALTIMESTAMP = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const TRIM = 57652
const LEADING = 57653
const TRAILING = 57654
const BOTH = 57655
const GROUP_CONCAT = 57656
const SEPARATOR = 57657
const TIMESTAMPADD = 57658
const TIMESTAMPDIFF = 57659
const OVER = 57660
const WINDOW = 57661
const GROUPING = 57662
const GROUPS = 57663
const AVG = 57664
const BIT_AND = 57665
const BIT_OR = 57666
const BIT_XOR = 57667
const COUNT = 57668
const JSON_ARRAYAGG = 57669
const JSON_OBJECTAGG = 57670
const MAX = 57671
const MIN = 57672
const STDDEV_POP = 57673
const STDDEV = 57674
const STD = 57675
const STDDEV_SAMP = 57676
const SUM = 57677
const VAR_POP = 57678
const VARIANCE = 57679
const VAR_SAMP = 57680
const CUME_DIST = 57681
const DENSE_RANK = 57682
const FIRST_VALUE = 57683
const LAG = 57684
const LAST_VALUE = 57685
const LEAD = 57686
const NTH_VALUE = 57687
const NTILE = 57688
const ROW_NUMBER = 57689
const PERCENT_RANK = 57690
const RANK = 57691
const MATCH = 57692
const AGAINST = 57693
const BOOLEAN = 57694
const LANGUAGE = 57695
const WITH = 57696
const QUERY = 57697
const EXPANSION = 57698
const UNUSED = 57699
const ARRAY = 57700
const DESCRIPTION = 57701
const EMPTY = 57702
const EXCEPT = 57703
const JSON_TABLE = 57704
const LATERAL = 57705
const MEMBER = 57706
const RECURSIVE = 57707
const ACTIVE = 57708
const ADMIN = 57709
const BUCKETS = 57710
const CLONE = 57711
const COMPONENT = 57712
const DEFINITION = 57713
const ENFORCED = 57714
const EXCLUDE = 57715
const FOLLOWING = 57716
const GEOMCOLLECTION = 57717
const GET_MASTER_PUBLIC_KEY = 57718
const HISTOGRAM = 57719
const HISTORY = 57720
const INACTIVE = 57721
const INVISIBLE = 57722
const LOCKED = 57723
const MASTER_COMPRESSION_ALGORITHMS = 57724
const MASTER_PUBLIC_KEY_PATH = 57725
const MASTER_TLS_CIPHERSUITES = 57726
const MASTER_ZSTD_COMPRESSION_LEVEL = 57727
const NESTED = 57728
const NETWORK_NAMESPACE = 57729
const NOWAIT = 57730
const NULLS = 57731
const OJ = 57732
const OLD = 57733
const OPTIONAL = 57734
const ORDINALITY = 57735
const ORGANIZATION = 57736
const OTHERS = 57737
const PATH = 57738
const PERSIST = 57739
const PERSIST_ONLY = 57740
const PRECEDING = 57741
const PRIVILEGE_CHECKS_USER = 57742
const PROCESS = 57743
const RANDOM = 57744
const REFERENCE = 57745
const REQUIRE_ROW_FORMAT = 57746
const RESOURCE = 57747
const RESPECT = 57748
const RESTART = 57749
const RETAIN = 57750
const REUSE = 57751
const ROLE = 57752
const SECONDARY = 57753
const SECONDARY_ENGINE = 57754
const SECONDARY_LOAD = 57755
const SECONDARY_UNLOAD = 57756
const SKIP = 57757
const SRID = 57758
const THREAD_PRIORITY = 57759
const TIES = 57760
const UNBOUNDED = 57761
const VCPU = 57762
const VISIBLE = 57763
const SYSTEM = 57764
const INFILE = 57765

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 48,
	-2, 856,
	-1, 41,
	140, 918,
	141, 944,
	-2, 119,
	-1, 48,
	180, 508,
	181, 508,
	-2, 498,
	-1, 55,
	1, 1364,
	441, 1364,
	-2, 536,
	-1, 437,
	127, 954,
	-2, 948,
	-1, 438,
	127, 955,
	-2, 949,
	-1, 542,
	97, 1185,
	127, 1185,
	-2, 902,
	-1, 543,
	97, 1287,
	127, 1287,
	-2, 903,
	-1, 548,
	97, 1205,
	127, 1205,
	-2, 904,
	-1, 549,
	97, 1245,
	127, 1245,
	-2, 905,
	-1, 550,
	97, 1246,
	127, 1246,
	-2, 906,
	-1, 551,
	97, 1140,
	127, 1140,
	-2, 910,
	-1, 553,
	97, 1224,
	127, 1224,
	-2, 912,
	-1, 966,
	1, 588,
	5, 588,
	12, 588,
	13, 588,
	14, 588,
	15, 588,
	17, 588,
	19, 588,
	30, 588,
	31, 588,
	56, 588,
	57, 588,
	58, 588,
	59, 588,
	60, 588,
	62, 588,
	63, 588,
	66, 588,
	67, 588,
	69, 588,
	70, 588,
	441, 588,
	-2, 618,
	-1, 970,
	67, 65,
	69, 65,
	-2, 69,
	-1, 1169,
	127, 957,
	-2, 953,
	-1, 1338,
	68, 358,
	-2, 1104,
	-1, 1341,
	68, 354,
	71, 354,
	-2, 1039,
	-1, 1342,
	68, 355,
	71, 355,
	-2, 1049,
	-1, 1433,
	44, 401,
	147, 403,
	149, 401,
	150, 401,
	-2, 441,
	-1, 1509,
	5, 49,
	-2, 684,
	-1, 1790,
	69, 1083,
	70, 1083,
	127, 1083,
	-2, 543,
	-1, 1813,
	1, 639,
	5, 639,
	12, 639,
	13, 639,
	14, 639,
	15, 639,
	17, 639,
	19, 639,
	30, 639,
	31, 639,
	56, 639,
	57, 639,
	58, 639,
	59, 639,
	60, 639,
	62, 639,
	63, 639,
	66, 639,
	67, 639,
	69, 639,
	70, 639,
	441, 639,
	-2, 618,
	-1, 1887,
	147, 404,
	-2, 402,
	-1, 1950,
	5, 49,
	-2, 876,
	-1, 2097,
	41, 964,
	-2, 962,
	-1, 2206,
	5, 49,
	-2, 879,
}

const yyPrivate = 57344

const yyLast = 26236

var yyAct = [...]int{

	500, 78, 2222, 2309, 2355, 2330, 2320, 2223, 2209, 2321,
	2311, 2250, 2196, 2191, 745, 2145, 7, 2144, 6, 2113,
	1386, 2146, 8, 2143, 5, 2030, 2097, 1826, 1962, 1807,
	567, 1716, 2070, 1384, 1548, 1706, 1783, 81, 2142, 3,
	429, 1147, 1577, 917, 2010, 1343, 1992, 1827, 1784, 2210,
	565, 755, 1605, 1001, 1291, 1293, 422, 1287, 1359, 1880,
	1658, 1339, 91, 1335, 456, 1715, 966, 1549, 1780, 1325,
	366, 369, 1431, 1324, 102, 1462, 1375, 1799, 1792, 78,
	1752, 499, 1194, 1140, 1203, 1415, 1266, 387, 732, 1314,
	362, 562, 1082, 1331, 1682, 1155, 1102, 1641, 1681, 1258,
	1126, 819, 1371, 544, 1277, 1171, 981, 963, 563, 1261,
	822, 826, 1270, 962, 803, 440, 425, 421, 782, 561,
	980, 540, 541, 839, 386, 533, 781, 710, 536, 972,
	2377, 2373, 2363, 2345, 936, 443, 2343, 2325, 2304, 2258,
	80, 1124, 1861, 1986, 2336, 2244, 2319, 363, 364, 365,
	935, 2204, 2292, 2243, 83, 1444, 2124, 854, 853, 863,
	864, 856, 857, 858, 859, 860, 861, 862, 855, 1443,
	67, 865, 34, 34, 1773, 34, 1484, 1942, 1993, 709,
	1427, 34, 1586, 1127, 435, 1585, 1995, 982, 1587, 983,
	85, 86, 87, 88, 89, 1821, 1543, 1822, 1823, 1311,
	1312, 813, 830, 113, 109, 110, 1310, 111, 1726, 1135,
	1136, 1448, 377, 1544, 2055, 757, 1289, 758, 759, 34,
	1442, 70, 37, 38, 376, 547, 1130, 712, 34, 35,
	70, 37, 38, 1624, 79, 79, 2203, 79, 1725, 445,
	115, 114, 61, 79, 1345, 1426, 800, 2039, 76, 1128,
	1129, 1347, 39, 65, 66, 1998, 1347, 1351, 1353, 62,
	1352, 515, 557, 521, 523, 522, 519, 520, 518, 517,
	516, 1440, 1434, 1435, 1365, 1433, 1360, 1436, 1437, 1360,
	1372, 79, 524, 525, 1929, 1927, 49, 1111, 375, 384,
	79, 1996, 1997, 1999, 2000, 2001, 356, 766, 2334, 2255,
	105, 2253, 2254, 737, 2094, 2093, 2092, 2091, 2090, 2088,
	367, 2089, 1446, 1449, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 70, 37, 38, 760,
	2140, 761, 758, 759, 2175, 2176, 2211, 744, 744, 1393,
	2247, 2248, 97, 1964, 1569, 752, 753, 2318, 39, 744,
	754, 751, 41, 72, 45, 44, 47, 2306, 58, 78,
	78, 750, 2192, 370, 1392, 714, 713, 2291, 1709, 1271,
	2369, 736, 740, 2138, 771, 742, 773, 112, 359, 82,
	808, 1000, 772, 357, 48, 75, 74, 1886, 816, 56,
	57, 46, 2378, 2011, 2012, 99, 1441, 770, 774, 96,
	1000, 1688, 2178, 999, 371, 107, 106, 1830, 738, 741,
	2375, 739, 1000, 743, 360, 2364, 1832, 1000, 2346, 2315,
	2125, 1832, 2310, 711, 1439, 720, 383, 382, 1659, 383,
	2022, 2359, 1360, 2023, 59, 60, 2313, 874, 1663, 1072,
	876, 768, 1130, 1860, 1631, 103, 1112, 50, 73, 1350,
	52, 53, 63, 368, 64, 104, 767, 1063, 1603, 1676,
	1374, 1576, 1575, 1445, 1660, 1128, 1129, 1574, 1994, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 368, 811, 915,
	973, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 1447, 934, 937, 937, 937, 943,
	937, 937, 943, 937, 943, 952, 953, 954, 955, 956,
	957, 817, 967, 805, 707, 71, 1917, 77, 77, 916,
	77, 1616, 2202, 2300, 71, 735, 77, 368, 1661, 1662,
	807, 2021, 715, 1914, 1602, 2357, 1621, 1620, 2358, 331,
	2356, 108, 368, 34, 2026, 70, 37, 38, 1906, 98,
	1590, 2312, 2314, 1582, 1703, 1296, 1298, 61, 1617, 1753,
	105, 877, 878, 76, 77, 1400, 1479, 39, 1467, 961,
	1399, 1452, 1622, 77, 1609, 994, 1603, 1603, 1519, 1150,
	1610, 1603, 854, 853, 863, 864, 856, 857, 858, 859,
	860, 861, 862, 855, 2071, 1059, 865, 1516, 993, 978,
	845, 1755, 1603, 1606, 728, 79, 2333, 2073, 1315, 865,
	1850, 879, 880, 881, 882, 883, 884, 885, 886, 855,
	71, 1306, 865, 734, 985, 1103, 1647, 1143, 2169, 986,
	838, 939, 941, 998, 945, 947, 1297, 950, 971, 1619,
	1416, 1406, 837, 836, 976, 748, 2027, 938, 940, 942,
	944, 946, 948, 949, 951, 762, 547, 1707, 719, 875,
	838, 547, 1851, 837, 836, 107, 106, 41, 72, 45,
	44, 47, 1602, 1602, 1205, 1702, 1797, 1602, 2072, 1699,
	1757, 838, 1796, 2170, 1688, 1761, 836, 1756, 1000, 1754,
	1119, 1691, 1689, 995, 1759, 877, 878, 991, 1602, 48,
	75, 74, 775, 838, 1698, 1688, 46, 1758, 1690, 1695,
	1178, 744, 1694, 1697, 877, 878, 733, 1775, 744, 744,
	744, 1104, 1760, 1762, 716, 1176, 1177, 1175, 1259, 1690,
	94, 746, 2362, 744, 744, 1515, 2301, 1407, 1945, 1084,
	1065, 749, 765, 2349, 2331, 2348, 1838, 833, 764, 59,
	60, 969, 2171, 858, 859, 860, 861, 862, 855, 2225,
	431, 865, 2172, 73, 2207, 52, 53, 63, 2370, 64,
	722, 723, 724, 725, 726, 93, 1618, 854, 853, 863,
	864, 856, 857, 858, 859, 860, 861, 862, 855, 78,
	1985, 865, 441, 744, 1984, 1259, 1139, 1532, 837, 836,
	1086, 863, 864, 856, 857, 858, 859, 860, 861, 862,
	855, 1141, 92, 865, 1646, 1644, 838, 837, 836, 1098,
	1099, 2371, 1122, 1069, 2366, 1073, 79, 1132, 1148, 1149,
	1625, 2274, 1944, 1106, 1107, 838, 1174, 2251, 779, 2276,
	1168, 2275, 2288, 1089, 1090, 853, 863, 864, 856, 857,
	858, 859, 860, 861, 862, 855, 1169, 78, 865, 71,
	778, 2287, 1138, 1161, 1163, 1164, 2260, 2231, 381, 1162,
	389, 854, 853, 863, 864, 856, 857, 858, 859, 860,
	861, 862, 855, 1114, 1115, 865, 1195, 1117, 1196, 837,
	836, 837, 836, 2137, 1514, 916, 1513, 1588, 2303, 1589,
	919, 2087, 1131, 1120, 1464, 1465, 1466, 838, 77, 838,
	1172, 2273, 823, 837, 836, 824, 2049, 1982, 1167, 1137,
	856, 857, 858, 859, 860, 861, 862, 855, 1843, 1109,
	865, 838, 837, 836, 837, 836, 837, 836, 1237, 2252,
	2251, 1642, 1423, 1777, 1165, 1116, 1087, 2135, 1290, 2107,
	838, 1606, 838, 967, 838, 530, 531, 967, 1152, 1212,
	2062, 2293, 818, 1216, 1973, 2290, 461, 460, 463, 464,
	465, 466, 2101, 1198, 1199, 462, 467, 2237, 818, 1973,
	2235, 1153, 1210, 1211, 1154, 2019, 916, 1901, 1319, 1084,
	1897, 1326, 563, 1221, 1222, 1223, 1224, 1973, 2233, 1973,
	2139, 2062, 2131, 2100, 1169, 1888, 1234, 1236, 1871, 1286,
	1301, 1870, 1170, 1241, 1303, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1059, 1321, 2062, 2077, 2081, 969, 1295, 2062, 818, 2062,
	2061, 2080, 1244, 1247, 1869, 744, 1670, 744, 1973, 1972,
	1260, 1954, 818, 1451, 818, 1866, 1361, 1362, 1363, 1364,
	1858, 1857, 1844, 1299, 1854, 1855, 1320, 1669, 1173, 1332,
	1201, 1908, 1578, 1417, 1209, 1854, 1853, 1477, 818, 1274,
	818, 1308, 1307, 1218, 1219, 1313, 1304, 1404, 1381, 1382,
	1235, 1420, 1322, 1250, 1229, 547, 1403, 1329, 1233, 827,
	1235, 818, 1262, 1197, 1113, 1110, 1081, 1080, 1079, 846,
	1377, 1378, 1379, 1380, 1256, 1279, 1282, 1283, 1284, 1280,
	78, 1281, 1285, 1078, 1085, 1800, 1801, 1070, 1068, 1909,
	82, 1091, 1092, 1093, 1373, 1067, 1066, 1064, 997, 996,
	82, 974, 974, 801, 730, 1168, 1100, 1101, 374, 1468,
	372, 1578, 2099, 1781, 1578, 1300, 1795, 973, 916, 1795,
	2239, 1169, 1273, 1145, 1948, 1867, 1856, 1809, 1679, 1592,
	1309, 1408, 1477, 1537, 1536, 918, 1414, 1118, 1402, 1279,
	1282, 1283, 1284, 1280, 1235, 1281, 1285, 969, 933, 1146,
	1125, 1071, 969, 979, 1477, 1425, 969, 975, 975, 977,
	973, 1274, 815, 814, 558, 79, 1134, 1385, 1274, 2340,
	1909, 1795, 2245, 2338, 1144, 1419, 2234, 1418, 1808, 2106,
	1424, 2104, 1429, 1320, 843, 1987, 1347, 1960, 1376, 1837,
	1450, 1800, 1801, 2322, 1372, 1454, 1455, 1172, 1456, 1596,
	1394, 1367, 1366, 1060, 798, 1473, 1865, 79, 1803, 1781,
	1648, 1545, 1547, 1075, 1463, 967, 967, 967, 967, 967,
	1561, 1469, 1559, 1806, 1805, 1562, 79, 1560, 1558, 1557,
	2270, 1290, 1563, 1570, 1283, 1284, 426, 427, 2242, 1713,
	1453, 967, 831, 832, 1551, 1156, 2268, 1475, 1951, 1546,
	1461, 1460, 1478, 2052, 2018, 1608, 1976, 1480, 1481, 1896,
	1507, 1895, 1486, 1487, 1488, 1489, 1490, 1491, 1842, 1237,
	1494, 829, 1841, 1600, 1428, 1499, 1500, 1501, 1502, 1326,
	1504, 1505, 1506, 2180, 1580, 2183, 1581, 1509, 1510, 1511,
	1512, 1573, 2230, 2229, 2098, 2259, 1518, 1531, 1579, 1521,
	1522, 1470, 1471, 1472, 1527, 1528, 2096, 2174, 2173, 373,
	1534, 1673, 1535, 1635, 1565, 1538, 1539, 1058, 1540, 1541,
	992, 820, 1572, 1553, 1554, 1059, 1556, 78, 1552, 796,
	1564, 1555, 1607, 821, 1593, 780, 777, 1566, 1567, 1601,
	1604, 776, 744, 731, 744, 744, 2283, 1626, 1627, 1550,
	2111, 2110, 985, 1946, 1633, 1173, 1583, 1148, 1149, 1483,
	1485, 1595, 2028, 1591, 1640, 1650, 1422, 1389, 1074, 1088,
	1495, 1496, 1497, 1498, 1710, 1651, 1524, 1525, 1526, 831,
	832, 423, 1413, 94, 547, 1062, 809, 810, 1668, 1634,
	1459, 1636, 1637, 1638, 1639, 2282, 2281, 1108, 1458, 2280,
	2084, 2262, 2261, 2227, 2184, 1643, 1711, 1712, 2115, 2037,
	424, 82, 438, 2114, 2031, 1578, 1520, 1645, 1388, 1517,
	1390, 1105, 1718, 2342, 2341, 1733, 1653, 1654, 1655, 2342,
	834, 2341, 2128, 918, 1168, 1683, 1696, 1701, 1840, 1142,
	558, 1672, 378, 380, 2156, 51, 2158, 19, 1671, 84,
	1169, 2157, 18, 54, 969, 969, 969, 969, 969, 120,
	2159, 20, 120, 1680, 1678, 1686, 1677, 1685, 120, 1693,
	969, 1158, 1159, 1692, 1675, 1704, 1705, 2160, 21, 1708,
	969, 2155, 15, 2154, 14, 1786, 78, 2148, 10, 1,
	120, 2167, 30, 2166, 29, 1719, 1720, 2165, 28, 1346,
	1141, 120, 1724, 2163, 25, 120, 570, 1774, 802, 120,
	1811, 2228, 1728, 2179, 1551, 1815, 1816, 1817, 1782, 2162,
	24, 120, 2181, 570, 1787, 2095, 1723, 2164, 26, 120,
	2006, 1794, 1731, 2153, 13, 1991, 1764, 1763, 2150, 12,
	1990, 1674, 1740, 1741, 1657, 1718, 1656, 1326, 797, 1326,
	2149, 11, 1123, 1747, 918, 1818, 1684, 1751, 1687, 1242,
	1243, 1398, 1820, 2147, 9, 1438, 1785, 389, 1814, 1789,
	2190, 1333, 1323, 1804, 560, 90, 1405, 747, 2016, 339,
	1330, 1614, 2182, 799, 1613, 1623, 1344, 1612, 1381, 1812,
	1382, 1810, 1611, 843, 1835, 1788, 2177, 1836, 1615, 1722,
	1833, 1831, 1005, 1834, 1825, 1003, 1824, 1004, 1002, 1007,
	1006, 1863, 1864, 343, 987, 2217, 498, 835, 100, 1550,
	55, 2020, 1700, 1432, 95, 101, 1318, 1847, 756, 345,
	873, 1523, 1457, 1584, 545, 1734, 546, 538, 1737, 1738,
	1739, 1765, 1766, 1742, 1767, 1768, 2246, 825, 1769, 2193,
	1530, 1139, 932, 1868, 1257, 444, 1845, 1846, 1568, 1729,
	1730, 1778, 1779, 1849, 2195, 1160, 1735, 1736, 459, 458,
	1852, 457, 454, 455, 1875, 1412, 1884, 1151, 1743, 1744,
	1745, 1746, 1059, 1748, 1749, 1750, 1542, 847, 1859, 442,
	818, 433, 1878, 965, 1877, 1383, 1813, 1910, 1907, 1885,
	1873, 958, 1421, 1278, 1900, 1276, 554, 1275, 1076, 534,
	566, 1916, 1802, 1883, 1940, 1798, 1288, 1905, 964, 385,
	68, 389, 763, 358, 1889, 1941, 2123, 721, 854, 853,
	863, 864, 856, 857, 858, 859, 860, 861, 862, 855,
	36, 1839, 865, 379, 120, 428, 27, 17, 769, 570,
	570, 22, 1058, 16, 1430, 1664, 717, 1666, 1667, 40,
	43, 570, 42, 1652, 1391, 2216, 1551, 2308, 783, 1911,
	2329, 2249, 1955, 32, 1925, 31, 2161, 2168, 2152, 1326,
	2151, 827, 2295, 23, 1968, 1969, 1970, 2294, 4, 120,
	806, 1947, 69, 33, 556, 120, 2, 0, 1874, 0,
	0, 0, 1921, 1956, 0, 78, 1978, 0, 0, 1966,
	0, 0, 0, 1930, 1931, 1971, 1967, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 1593, 0, 1949, 1950, 0, 1952,
	0, 0, 1953, 1988, 842, 1979, 1912, 0, 0, 967,
	0, 0, 1981, 0, 1983, 1267, 0, 0, 2015, 0,
	0, 2029, 1965, 2003, 2004, 2005, 0, 2007, 2002, 1718,
	1508, 1550, 0, 0, 0, 2013, 2014, 1980, 1381, 2009,
	389, 2033, 2034, 2008, 0, 2024, 0, 2017, 0, 1786,
	969, 1831, 1786, 2057, 1533, 1937, 1938, 1939, 0, 0,
	0, 2025, 1913, 0, 0, 1811, 2032, 0, 0, 0,
	1915, 0, 0, 0, 0, 0, 0, 0, 0, 1918,
	1919, 0, 2038, 0, 0, 0, 1920, 0, 2054, 2060,
	0, 2056, 0, 0, 0, 0, 0, 2053, 0, 0,
	0, 0, 0, 120, 120, 120, 0, 0, 0, 2083,
	0, 2085, 2059, 566, 566, 2082, 2075, 2076, 0, 570,
	2064, 2074, 2069, 0, 0, 566, 2036, 0, 0, 2112,
	1785, 0, 0, 1785, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 2063, 2044, 2045, 2046,
	0, 2048, 0, 1295, 0, 2065, 1786, 0, 78, 2102,
	2103, 0, 0, 0, 0, 0, 0, 0, 0, 2105,
	2109, 2078, 0, 2079, 2117, 2116, 0, 0, 2066, 2067,
	2068, 2118, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 2129, 2141, 0, 0, 2130, 0, 0, 389,
	967, 0, 2134, 0, 0, 0, 0, 389, 2136, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 2041, 2042,
	2043, 2133, 0, 0, 0, 2047, 0, 0, 0, 2050,
	2051, 0, 2186, 0, 2188, 0, 0, 1785, 0, 2187,
	0, 0, 2198, 0, 0, 0, 0, 1599, 969, 2199,
	2119, 2120, 2121, 2122, 0, 0, 2200, 2185, 0, 1551,
	2126, 2127, 2212, 2205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 0, 0, 0, 2221, 0, 0, 0,
	0, 0, 120, 0, 0, 120, 0, 0, 0, 0,
	0, 120, 0, 570, 0, 0, 2226, 2224, 0, 0,
	570, 570, 570, 120, 120, 120, 0, 554, 2240, 0,
	120, 0, 554, 988, 0, 570, 570, 1776, 2232, 0,
	0, 0, 0, 2201, 0, 0, 0, 0, 0, 0,
	2206, 0, 2264, 2134, 2266, 0, 0, 0, 0, 0,
	0, 2267, 2269, 78, 0, 2279, 0, 0, 2263, 78,
	0, 2277, 2265, 0, 1550, 0, 2286, 2272, 0, 0,
	0, 2256, 2284, 1819, 2271, 0, 0, 78, 0, 2302,
	0, 0, 78, 2289, 120, 570, 0, 120, 2299, 570,
	2298, 2305, 0, 0, 2296, 2189, 2297, 0, 0, 2317,
	2236, 78, 0, 2324, 78, 78, 2326, 120, 0, 78,
	2241, 0, 2286, 842, 0, 2323, 2332, 0, 0, 2335,
	2307, 0, 0, 0, 0, 0, 78, 0, 2339, 78,
	2337, 2347, 0, 2286, 0, 2350, 0, 2352, 0, 969,
	0, 0, 0, 0, 78, 0, 78, 2360, 818, 0,
	78, 2286, 2365, 2286, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 0, 78, 0, 0, 78, 0, 2374,
	0, 2286, 0, 0, 78, 0, 0, 0, 78, 0,
	0, 2286, 0, 0, 1061, 2286, 854, 853, 863, 864,
	856, 857, 858, 859, 860, 861, 862, 855, 0, 0,
	865, 1902, 0, 0, 0, 0, 0, 566, 0, 1829,
	0, 431, 0, 0, 566, 566, 566, 0, 0, 0,
	0, 351, 0, 0, 0, 570, 570, 0, 0, 566,
	566, 0, 120, 0, 0, 0, 0, 0, 0, 0,
	120, 120, 0, 0, 0, 120, 120, 0, 0, 120,
	120, 120, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 1935, 2367, 2368, 0, 0, 0, 2316, 570,
	570, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 918, 0, 0, 0, 0, 0, 0, 0, 566,
	0, 1957, 1958, 566, 1882, 1959, 0, 0, 1961, 0,
	0, 0, 0, 0, 1599, 0, 918, 1891, 1893, 0,
	0, 332, 0, 0, 0, 0, 0, 1882, 335, 0,
	2353, 0, 566, 0, 1934, 0, 0, 0, 344, 349,
	350, 0, 0, 0, 0, 0, 120, 570, 0, 570,
	0, 0, 120, 0, 120, 120, 94, 0, 120, 0,
	0, 854, 853, 863, 864, 856, 857, 858, 859, 860,
	861, 862, 855, 1200, 341, 865, 0, 342, 1348, 1349,
	347, 1354, 1355, 1356, 1357, 1358, 120, 120, 120, 0,
	0, 0, 0, 0, 0, 1598, 0, 1296, 1298, 1368,
	1369, 1370, 417, 0, 0, 0, 0, 0, 120, 0,
	120, 0, 0, 0, 389, 0, 968, 0, 0, 0,
	0, 554, 1597, 854, 853, 863, 864, 856, 857, 858,
	859, 860, 861, 862, 855, 0, 0, 865, 0, 1263,
	1264, 854, 853, 863, 864, 856, 857, 858, 859, 860,
	861, 862, 855, 0, 333, 865, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 554, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 1297, 0,
	566, 0, 0, 566, 566, 0, 0, 346, 336, 337,
	0, 354, 0, 0, 0, 338, 340, 0, 334, 353,
	352, 0, 1882, 1000, 0, 535, 0, 0, 0, 559,
	0, 0, 0, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 718, 0, 0, 0, 0,
	0, 411, 0, 727, 0, 0, 0, 0, 431, 0,
	0, 0, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 566, 0, 566, 0, 0, 0, 120, 120, 120,
	120, 120, 0, 0, 0, 0, 0, 0, 0, 120,
	0, 0, 0, 120, 0, 0, 0, 120, 0, 0,
	0, 0, 0, 120, 0, 0, 0, 0, 389, 0,
	389, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 0, 0,
	1829, 0, 0, 0, 1202, 1207, 1208, 0, 0, 2194,
	2197, 1213, 1214, 1215, 0, 1217, 0, 0, 1220, 0,
	0, 0, 0, 1225, 1226, 1227, 1228, 566, 1230, 1231,
	1232, 0, 0, 0, 0, 0, 1238, 1239, 1240, 0,
	0, 0, 1246, 1249, 0, 1254, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 0,
	0, 0, 0, 0, 2213, 2214, 0, 0, 0, 1933,
	1265, 0, 1268, 1269, 570, 120, 570, 570, 0, 0,
	391, 392, 393, 394, 395, 399, 400, 404, 405, 414,
	413, 412, 415, 416, 419, 418, 420, 396, 397, 398,
	401, 402, 403, 406, 407, 410, 408, 409, 0, 0,
	1628, 1629, 1630, 1632, 1932, 0, 0, 1829, 0, 1829,
	0, 0, 0, 0, 570, 570, 0, 0, 0, 0,
	120, 0, 0, 0, 2197, 0, 0, 0, 729, 0,
	570, 0, 0, 0, 0, 0, 2278, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 570, 854, 853,
	863, 864, 856, 857, 858, 859, 860, 861, 862, 855,
	0, 0, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 554, 828, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 566, 0, 854, 853, 863, 864, 856, 857, 858,
	859, 860, 861, 862, 855, 0, 0, 865, 570, 0,
	570, 0, 0, 0, 0, 0, 2351, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 355, 0, 0, 0,
	0, 0, 118, 570, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 570, 388, 570, 0, 570, 0, 570,
	0, 0, 432, 0, 0, 537, 555, 0, 566, 118,
	566, 566, 0, 118, 0, 34, 0, 70, 37, 38,
	0, 0, 0, 0, 0, 118, 1772, 0, 0, 61,
	0, 0, 0, 118, 0, 76, 0, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 1476, 0, 0,
	0, 120, 0, 0, 0, 1482, 0, 0, 566, 566,
	0, 0, 0, 0, 1492, 1493, 120, 960, 0, 970,
	0, 0, 0, 0, 566, 1503, 0, 79, 0, 120,
	0, 0, 1771, 0, 0, 0, 566, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 570,
	2169, 0, 1529, 120, 570, 2376, 0, 0, 0, 0,
	0, 570, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 854, 853, 863, 864, 856, 857, 858,
	859, 860, 861, 862, 855, 1721, 0, 865, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 0, 0,
	554, 0, 566, 0, 1793, 2170, 854, 853, 863, 864,
	856, 857, 858, 859, 860, 861, 862, 855, 0, 0,
	865, 48, 75, 74, 0, 0, 0, 1793, 46, 854,
	853, 863, 864, 856, 857, 858, 859, 860, 861, 862,
	855, 0, 0, 865, 120, 0, 0, 566, 0, 566,
	0, 566, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 570, 0, 0, 0, 0, 0, 0, 570, 570,
	570, 59, 60, 0, 2171, 0, 0, 570, 0, 0,
	0, 0, 0, 0, 2172, 73, 0, 52, 53, 63,
	570, 64, 0, 1922, 1923, 0, 1924, 0, 118, 1926,
	0, 1928, 0, 0, 0, 0, 535, 0, 0, 1077,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 1095, 1096,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 1894, 0, 0, 1770, 0, 1899, 570,
	34, 120, 70, 37, 38, 1903, 1904, 570, 1974, 1975,
	0, 0, 0, 0, 61, 0, 0, 0, 0, 0,
	76, 71, 0, 0, 39, 854, 853, 863, 864, 856,
	857, 858, 859, 860, 861, 862, 855, 0, 1133, 865,
	0, 0, 0, 0, 0, 0, 0, 570, 0, 0,
	0, 0, 0, 570, 0, 0, 0, 0, 120, 0,
	120, 1157, 79, 0, 0, 0, 570, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 0, 0, 2169, 0, 0, 2328, 2331,
	2327, 0, 554, 854, 853, 863, 864, 856, 857, 858,
	859, 860, 861, 862, 855, 1963, 0, 865, 0, 0,
	0, 0, 1963, 1963, 1963, 0, 570, 0, 0, 0,
	0, 566, 0, 0, 41, 72, 45, 44, 47, 0,
	0, 0, 0, 0, 1963, 0, 0, 118, 118, 118,
	2170, 0, 0, 1474, 0, 0, 0, 555, 0, 0,
	0, 0, 555, 0, 0, 570, 48, 75, 74, 0,
	0, 0, 0, 46, 854, 853, 863, 864, 856, 857,
	858, 859, 860, 861, 862, 855, 0, 0, 865, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 120, 0, 0, 0, 0, 570, 0, 570,
	1302, 0, 0, 566, 0, 0, 59, 60, 0, 2171,
	0, 566, 0, 0, 0, 0, 0, 0, 0, 2172,
	73, 0, 52, 53, 63, 0, 64, 0, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 34, 0, 70, 37, 38, 1963, 0, 0,
	0, 0, 0, 0, 570, 0, 61, 0, 0, 0,
	1828, 0, 76, 0, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 1828, 570, 0, 0, 0, 0,
	1387, 0, 0, 0, 0, 0, 1395, 0, 1396, 1397,
	0, 0, 1401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 71, 0, 0, 0,
	2108, 0, 0, 0, 0, 0, 118, 570, 0, 118,
	0, 0, 1411, 0, 0, 1083, 0, 2169, 570, 0,
	0, 0, 2372, 0, 0, 0, 0, 118, 118, 118,
	570, 0, 804, 417, 118, 0, 0, 0, 0, 2132,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 1887, 0, 0, 41, 72, 45, 44,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 1828, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 118, 0,
	0, 388, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 1000, 0, 0, 0, 59, 60,
	0, 2171, 0, 0, 0, 0, 0, 0, 566, 0,
	0, 2172, 73, 0, 52, 53, 63, 0, 64, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 1206, 1206, 1206, 0, 0,
	0, 1206, 1206, 1206, 1206, 1206, 1206, 0, 0, 1206,
	0, 0, 0, 0, 1206, 1206, 1206, 1206, 0, 1206,
	1206, 1206, 0, 0, 0, 0, 0, 1206, 1206, 1206,
	0, 1828, 0, 1206, 1206, 0, 1206, 1206, 0, 1027,
	0, 555, 1963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 566, 0, 0, 0, 0, 0,
	0, 1206, 1206, 1206, 1206, 0, 118, 0, 71, 0,
	0, 0, 0, 0, 118, 388, 0, 0, 2257, 118,
	118, 0, 0, 118, 1305, 1083, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 393, 394, 395, 399, 400, 404, 405,
	414, 413, 412, 415, 416, 419, 418, 420, 396, 397,
	398, 401, 402, 403, 406, 407, 410, 408, 409, 0,
	118, 0, 0, 0, 1028, 0, 118, 0, 118, 118,
	0, 0, 118, 0, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 1410, 118, 0, 0, 0, 0, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 388, 0, 0, 0, 0, 0,
	0, 0, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 0,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1083, 1029, 1030,
	1031, 1032, 1008, 1012, 1042, 1009, 1015, 1011, 1013, 1010,
	0, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 0,
	1014, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 1206, 1206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1206, 0, 0, 0,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 1043, 0,
	555, 118, 118, 118, 118, 118, 0, 0, 0, 0,
	1872, 0, 0, 388, 0, 0, 0, 118, 0, 0,
	0, 388, 0, 1876, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 0, 555, 0, 0, 0, 0,
	1041, 1044, 1045, 1046, 1047, 1048, 1049, 1898, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 0, 1029, 1030, 1031, 1032,
	1008, 1012, 1042, 1009, 1015, 1011, 1013, 1010, 0, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 0, 34,
	0, 70, 37, 38, 0, 0, 0, 34, 0, 70,
	37, 38, 0, 61, 0, 0, 0, 0, 0, 76,
	0, 61, 0, 39, 0, 0, 0, 76, 0, 0,
	0, 39, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2169, 0, 1043, 0, 0, 2361,
	0, 0, 2169, 0, 118, 0, 0, 2344, 0, 0,
	0, 0, 0, 0, 0, 1206, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 1083, 0, 0, 0,
	0, 0, 1989, 41, 72, 45, 44, 47, 0, 0,
	0, 41, 72, 45, 44, 47, 0, 0, 0, 2170,
	0, 0, 0, 0, 0, 0, 0, 2170, 0, 0,
	0, 0, 0, 0, 0, 48, 75, 74, 0, 0,
	0, 0, 46, 48, 75, 74, 0, 0, 0, 0,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1881, 0, 0, 0, 59, 60, 0, 2171, 0,
	0, 0, 0, 59, 60, 417, 2171, 0, 2172, 73,
	0, 52, 53, 63, 0, 64, 2172, 73, 0, 52,
	53, 63, 0, 64, 34, 1057, 70, 37, 38, 0,
	0, 0, 34, 0, 70, 37, 38, 0, 61, 0,
	0, 0, 0, 0, 76, 0, 61, 0, 39, 0,
	0, 0, 76, 0, 0, 0, 39, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 79, 0, 0, 0,
	118, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	411, 0, 0, 118, 0, 71, 1000, 0, 0, 2169,
	0, 417, 0, 71, 2285, 0, 0, 2169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 1892, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 41, 72,
	45, 44, 47, 0, 77, 0, 41, 72, 45, 44,
	47, 0, 77, 0, 2170, 0, 0, 0, 0, 0,
	0, 0, 2170, 0, 0, 0, 0, 0, 0, 0,
	48, 75, 74, 0, 0, 2208, 0, 46, 48, 75,
	74, 411, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	59, 60, 0, 2171, 0, 0, 0, 0, 59, 60,
	411, 2171, 0, 2172, 73, 0, 52, 53, 63, 0,
	64, 2172, 73, 0, 52, 53, 63, 0, 64, 391,
	392, 393, 394, 395, 399, 400, 404, 405, 414, 413,
	412, 415, 416, 419, 418, 420, 396, 397, 398, 401,
	402, 403, 406, 407, 410, 408, 409, 0, 0, 0,
	0, 0, 118, 391, 392, 393, 394, 395, 399, 400,
	404, 405, 414, 413, 412, 415, 416, 419, 418, 420,
	396, 397, 398, 401, 402, 403, 406, 407, 410, 408,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	391, 392, 393, 394, 395, 399, 400, 404, 405, 414,
	413, 412, 415, 416, 419, 418, 420, 396, 397, 398,
	401, 402, 403, 406, 407, 410, 408, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 388, 0, 388, 0, 0, 77, 0, 391,
	392, 393, 394, 395, 399, 400, 404, 405, 414, 413,
	412, 415, 416, 419, 418, 420, 396, 397, 398, 401,
	402, 403, 406, 407, 410, 408, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	432, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 118, 2215, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 555, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 118, 0, 0, 0, 0,
	0, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 2218, 2219, 2220, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 668, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 0,
	0, 0, 569, 0, 1327, 1328, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 1594, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 705, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 569, 0, 1327,
	1328, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 1790, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 79,
	0, 818, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 1791, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	2035, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 668, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 1727, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 705, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	1717, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 668, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 79,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 705, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	1306, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 668, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 1166, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 705, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 668, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 705, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	1338, 1342, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 1341, 188, 324,
	686, 621, 620, 1336, 0, 1337, 178, 196, 568, 122,
	134, 1334, 1340, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 688, 668, 297, 626,
	691, 598, 615, 703, 616, 619, 657, 584, 638, 232,
	613, 585, 0, 602, 575, 609, 576, 599, 628, 165,
	597, 670, 641, 690, 195, 653, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 689, 634, 0, 697, 198,
	0, 650, 698, 287, 217, 0, 0, 630, 677, 636,
	666, 625, 659, 591, 649, 692, 614, 655, 693, 0,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 652, 687, 611, 654, 656, 573, 651,
	0, 579, 586, 702, 683, 605, 606, 607, 0, 0,
	0, 0, 0, 0, 0, 629, 637, 663, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 647,
	0, 0, 0, 587, 580, 0, 0, 627, 0, 0,
	0, 590, 125, 604, 664, 0, 571, 175, 218, 136,
	667, 682, 624, 188, 324, 686, 621, 620, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 612, 572, 671, 600, 610, 157, 608, 264, 236,
	314, 0, 644, 242, 263, 199, 303, 254, 312, 313,
	179, 706, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 623, 658, 601, 154, 661, 648, 676, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 577, 0, 289, 317, 330,
	143, 596, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 594, 595, 592, 0, 593, 639, 640,
	694, 695, 696, 665, 588, 0, 678, 679, 0, 0,
	0, 0, 0, 669, 684, 685, 660, 704, 617, 618,
	578, 581, 582, 583, 589, 631, 632, 643, 646, 674,
	673, 672, 675, 680, 700, 699, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 642, 121,
	132, 197, 705, 256, 171, 318, 574, 163, 0, 0,
	633, 635, 645, 662, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	681, 688, 668, 297, 626, 691, 598, 615, 703, 616,
	619, 657, 584, 638, 232, 613, 585, 0, 602, 575,
	609, 576, 599, 628, 165, 597, 670, 641, 690, 195,
	653, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	689, 634, 0, 697, 198, 0, 650, 698, 287, 217,
	0, 0, 630, 677, 636, 666, 625, 659, 591, 649,
	692, 614, 655, 693, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 652, 687,
	611, 654, 656, 573, 651, 0, 579, 586, 702, 683,
	605, 606, 607, 0, 0, 0, 0, 0, 0, 0,
	629, 637, 663, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 647, 0, 0, 0, 587, 580,
	0, 0, 627, 0, 0, 0, 590, 125, 604, 664,
	0, 571, 175, 218, 136, 667, 682, 624, 188, 324,
	686, 621, 620, 252, 0, 292, 178, 196, 568, 122,
	134, 564, 177, 228, 261, 271, 612, 572, 671, 600,
	610, 157, 608, 264, 236, 314, 0, 644, 242, 263,
	199, 303, 254, 312, 313, 179, 706, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 623, 658, 601,
	154, 661, 648, 676, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	577, 0, 289, 317, 330, 143, 596, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 594, 595,
	592, 0, 593, 639, 640, 694, 695, 696, 665, 588,
	0, 678, 679, 0, 0, 0, 0, 0, 669, 684,
	685, 660, 704, 617, 618, 578, 581, 582, 583, 589,
	631, 632, 643, 646, 674, 673, 672, 675, 680, 700,
	699, 701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 121, 132, 197, 705, 256, 171,
	318, 574, 163, 0, 0, 633, 635, 645, 662, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 681, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 439, 0, 0, 0, 165, 436, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 514, 198, 0, 0,
	417, 287, 217, 0, 0, 0, 0, 501, 502, 0,
	0, 0, 0, 0, 0, 1316, 0, 79, 0, 0,
	437, 461, 460, 463, 464, 465, 466, 0, 0, 146,
	462, 467, 496, 497, 1317, 0, 0, 434, 452, 0,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 450, 0, 0, 0, 0, 528, 0, 451,
	0, 0, 446, 447, 448, 453, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 504, 0,
	0, 188, 324, 0, 0, 526, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 511,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 503,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 411,
	321, 326, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 515, 527, 521, 523, 522, 519, 520, 518, 517,
	516, 529, 505, 506, 507, 508, 509, 0, 0, 0,
	512, 0, 524, 525, 0, 0, 0, 0, 468, 469,
	470, 471, 472, 476, 477, 481, 482, 490, 489, 488,
	491, 492, 494, 493, 495, 473, 474, 475, 478, 479,
	480, 483, 484, 487, 485, 486, 510, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 34, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 439, 0, 0, 0,
	165, 436, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 514,
	198, 0, 0, 417, 287, 217, 0, 0, 0, 0,
	501, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 437, 461, 460, 463, 464, 465, 466,
	0, 0, 146, 462, 467, 496, 497, 0, 0, 0,
	434, 452, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 450, 0, 0, 0, 0,
	528, 0, 451, 0, 0, 446, 447, 448, 453, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 504, 0, 0, 188, 324, 0, 0, 526, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 511, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 503, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 411, 321, 326, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 515, 527, 521, 523, 522, 519,
	520, 518, 517, 516, 529, 505, 506, 507, 508, 509,
	0, 0, 0, 512, 0, 524, 525, 0, 0, 0,
	0, 468, 469, 470, 471, 472, 476, 477, 481, 482,
	490, 489, 488, 491, 492, 494, 493, 495, 473, 474,
	475, 478, 479, 480, 483, 484, 487, 485, 486, 510,
	121, 132, 197, 77, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 439, 0,
	0, 0, 165, 436, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 514, 198, 0, 0, 417, 287, 217, 0, 0,
	0, 0, 501, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 437, 461, 460, 463, 464,
	465, 466, 0, 0, 146, 462, 467, 496, 497, 0,
	0, 0, 434, 452, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 450, 430, 0,
	0, 0, 528, 0, 451, 0, 0, 446, 447, 448,
	453, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 504, 0, 0, 188, 324, 0, 0,
	526, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 511, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 503, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 411, 321, 326, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 515, 527, 521, 523,
	522, 519, 520, 518, 517, 516, 529, 505, 506, 507,
	508, 509, 0, 0, 0, 512, 0, 524, 525, 0,
	0, 0, 0, 468, 469, 470, 471, 472, 476, 477,
	481, 482, 490, 489, 488, 491, 492, 494, 493, 495,
	473, 474, 475, 478, 479, 480, 483, 484, 487, 485,
	486, 510, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	439, 0, 0, 0, 165, 436, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 514, 198, 0, 0, 417, 287, 217,
	0, 0, 0, 0, 501, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 818, 437, 461, 460,
	463, 464, 465, 466, 0, 0, 146, 462, 467, 496,
	497, 0, 0, 0, 434, 452, 0, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 450,
	0, 0, 0, 0, 528, 0, 451, 0, 0, 446,
	447, 448, 453, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 504, 0, 0, 188, 324,
	0, 0, 526, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 511, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 503, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 411, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 515, 527,
	521, 523, 522, 519, 520, 518, 517, 516, 529, 505,
	506, 507, 508, 509, 0, 0, 0, 512, 0, 524,
	525, 0, 0, 0, 0, 468, 469, 470, 471, 472,
	476, 477, 481, 482, 490, 489, 488, 491, 492, 494,
	493, 495, 473, 474, 475, 478, 479, 480, 483, 484,
	487, 485, 486, 510, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 439, 0, 0, 0, 165, 436, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 514, 198, 0, 0, 417,
	287, 217, 0, 0, 0, 0, 501, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 437,
	461, 460, 463, 464, 465, 466, 0, 0, 146, 462,
	467, 496, 497, 0, 0, 0, 434, 452, 0, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 450, 1204, 0, 0, 0, 528, 0, 451, 0,
	0, 446, 447, 448, 453, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 504, 0, 0,
	188, 324, 0, 0, 526, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 511, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 503, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 411, 321,
	326, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	515, 527, 521, 523, 522, 519, 520, 518, 517, 516,
	529, 505, 506, 507, 508, 509, 0, 0, 0, 512,
	0, 524, 525, 0, 0, 0, 0, 468, 469, 470,
	471, 472, 476, 477, 481, 482, 490, 489, 488, 491,
	492, 494, 493, 495, 473, 474, 475, 478, 479, 480,
	483, 484, 487, 485, 486, 510, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 439, 0, 0, 0, 165, 436,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 514, 198, 0,
	0, 417, 287, 217, 0, 0, 0, 0, 501, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 437, 461, 1248, 463, 464, 465, 466, 0, 0,
	146, 462, 467, 496, 497, 0, 0, 0, 434, 452,
	0, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 450, 1204, 0, 0, 0, 528, 0,
	451, 0, 0, 446, 447, 448, 453, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 504,
	0, 0, 188, 324, 0, 0, 526, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	511, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	503, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	411, 321, 326, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 515, 527, 521, 523, 522, 519, 520, 518,
	517, 516, 529, 505, 506, 507, 508, 509, 0, 0,
	0, 512, 0, 524, 525, 0, 0, 0, 0, 468,
	469, 470, 471, 472, 476, 477, 481, 482, 490, 489,
	488, 491, 492, 494, 493, 495, 473, 474, 475, 478,
	479, 480, 483, 484, 487, 485, 486, 510, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 439, 0, 0, 0,
	165, 436, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 514,
	198, 0, 0, 417, 287, 217, 0, 0, 0, 0,
	501, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 437, 461, 1245, 463, 464, 465, 466,
	0, 0, 146, 462, 467, 496, 497, 0, 0, 0,
	434, 452, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 450, 1204, 0, 0, 0,
	528, 0, 451, 0, 0, 446, 447, 448, 453, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 504, 0, 0, 188, 324, 0, 0, 526, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 511, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 503, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 411, 321, 326, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 515, 527, 521, 523, 522, 519,
	520, 518, 517, 516, 529, 505, 506, 507, 508, 509,
	0, 0, 0, 512, 0, 524, 525, 0, 0, 0,
	0, 468, 469, 470, 471, 472, 476, 477, 481, 482,
	490, 489, 488, 491, 492, 494, 493, 495, 473, 474,
	475, 478, 479, 480, 483, 484, 487, 485, 486, 510,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 439, 0,
	0, 0, 165, 436, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 514, 198, 0, 0, 417, 287, 217, 0, 0,
	0, 0, 501, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 1121, 437, 461, 460, 463, 464,
	465, 466, 0, 0, 146, 462, 467, 496, 497, 0,
	0, 0, 434, 452, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 450, 0, 0,
	0, 0, 528, 0, 451, 0, 0, 446, 447, 448,
	453, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 504, 0, 0, 188, 324, 0, 0,
	526, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 511, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 503, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 411, 321, 326, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 515, 527, 521, 523,
	522, 519, 520, 518, 517, 516, 529, 505, 506, 507,
	508, 509, 0, 0, 0, 512, 0, 524, 525, 0,
	0, 0, 0, 468, 469, 470, 471, 472, 476, 477,
	481, 482, 490, 489, 488, 491, 492, 494, 493, 495,
	473, 474, 475, 478, 479, 480, 483, 484, 487, 485,
	486, 510, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	439, 0, 0, 0, 165, 436, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 514, 198, 0, 0, 417, 287, 217,
	0, 0, 0, 0, 501, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 437, 461, 460,
	463, 464, 465, 466, 0, 0, 146, 462, 467, 496,
	497, 0, 0, 0, 434, 452, 0, 513, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 450,
	0, 0, 0, 0, 528, 0, 451, 0, 0, 446,
	447, 448, 453, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 504, 0, 0, 188, 324,
	0, 0, 526, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 511, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 503, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 411, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 515, 527,
	521, 523, 522, 519, 520, 518, 517, 516, 529, 505,
	506, 507, 508, 509, 0, 0, 0, 512, 0, 524,
	525, 0, 0, 0, 0, 468, 469, 470, 471, 472,
	476, 477, 481, 482, 490, 489, 488, 491, 492, 494,
	493, 495, 473, 474, 475, 478, 479, 480, 483, 484,
	487, 485, 486, 510, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 514, 198, 0, 0, 417,
	287, 217, 0, 0, 0, 0, 501, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 437,
	461, 460, 463, 464, 465, 466, 0, 0, 146, 462,
	467, 496, 497, 0, 0, 0, 0, 452, 0, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 450, 0, 0, 0, 0, 528, 0, 451, 0,
	0, 446, 447, 448, 453, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 504, 0, 0,
	188, 324, 0, 0, 526, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 511, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 503, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 411, 321,
	326, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	515, 527, 521, 523, 522, 519, 520, 518, 517, 516,
	529, 505, 506, 507, 508, 509, 1251, 1252, 1253, 512,
	0, 524, 525, 0, 0, 0, 0, 468, 469, 470,
	471, 472, 476, 477, 481, 482, 490, 489, 488, 491,
	492, 494, 493, 495, 473, 474, 475, 478, 479, 480,
	483, 484, 487, 485, 486, 510, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 514, 198, 0,
	0, 417, 287, 217, 0, 0, 0, 0, 501, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 437, 461, 460, 463, 464, 465, 466, 0, 0,
	146, 462, 467, 496, 497, 0, 0, 0, 0, 452,
	0, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 450, 0, 0, 0, 0, 528, 0,
	451, 0, 0, 446, 447, 448, 453, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 504,
	0, 0, 188, 324, 0, 0, 526, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	511, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	503, 2354, 242, 263, 199, 303, 254, 312, 313, 179,
	411, 321, 326, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 515, 527, 521, 523, 522, 519, 520, 518,
	517, 516, 529, 505, 506, 507, 508, 509, 0, 0,
	0, 512, 0, 524, 525, 0, 0, 0, 0, 468,
	469, 470, 471, 472, 476, 477, 481, 482, 490, 489,
	488, 491, 492, 494, 493, 495, 473, 474, 475, 478,
	479, 480, 483, 484, 487, 485, 486, 510, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 514,
	198, 0, 0, 417, 287, 217, 0, 0, 0, 0,
	501, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 818, 437, 461, 460, 463, 464, 465, 466,
	0, 0, 146, 462, 467, 496, 497, 0, 0, 0,
	0, 452, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 450, 0, 0, 0, 0,
	528, 0, 451, 0, 0, 446, 447, 448, 453, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 504, 0, 0, 188, 324, 0, 0, 526, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 511, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 503, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 411, 321, 326, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 515, 527, 521, 523, 522, 519,
	520, 518, 517, 516, 529, 505, 506, 507, 508, 509,
	0, 0, 0, 512, 0, 524, 525, 0, 0, 0,
	0, 468, 469, 470, 471, 472, 476, 477, 481, 482,
	490, 489, 488, 491, 492, 494, 493, 495, 473, 474,
	475, 478, 479, 480, 483, 484, 487, 485, 486, 510,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 514, 198, 0, 0, 417, 287, 217, 0, 0,
	0, 0, 501, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 437, 461, 460, 463, 464,
	465, 466, 0, 0, 146, 462, 467, 496, 497, 0,
	0, 0, 0, 452, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 450, 0, 0,
	0, 0, 528, 0, 451, 0, 0, 446, 447, 448,
	453, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 504, 0, 0, 188, 324, 0, 0,
	526, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 511, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 503, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 411, 321, 326, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	417, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	1890, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 515, 527, 521, 523,
	522, 519, 520, 518, 517, 516, 529, 505, 506, 507,
	508, 509, 0, 0, 0, 512, 0, 524, 525, 0,
	0, 0, 0, 468, 469, 470, 471, 472, 476, 477,
	481, 482, 490, 489, 488, 491, 492, 494, 493, 495,
	473, 474, 475, 478, 479, 480, 483, 484, 487, 485,
	486, 510, 121, 132, 197, 0, 256, 171, 318, 411,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 1294,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 0, 198, 0, 0, 417, 287, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 1298, 0, 0, 0, 0, 0, 119, 0, 390,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	393, 394, 395, 399, 400, 404, 405, 414, 413, 412,
	415, 416, 419, 418, 420, 396, 397, 398, 401, 402,
	403, 406, 407, 410, 408, 409, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 0, 0, 0, 188, 324,
	0, 1297, 0, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 0, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 0, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 411, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 393, 394, 395,
	399, 400, 404, 405, 414, 413, 412, 415, 416, 419,
	418, 420, 396, 397, 398, 401, 402, 403, 406, 407,
	410, 408, 409, 0, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 1294, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 417,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1298, 0, 0, 0, 0, 0, 119,
	849, 390, 852, 0, 0, 0, 0, 0, 146, 866,
	867, 868, 869, 870, 871, 872, 0, 850, 851, 848,
	854, 853, 863, 864, 856, 857, 858, 859, 860, 861,
	862, 855, 0, 0, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 1297, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	1292, 263, 199, 303, 254, 312, 313, 179, 411, 321,
	326, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 393,
	394, 395, 399, 400, 404, 405, 414, 413, 412, 415,
	416, 419, 418, 420, 396, 397, 398, 401, 402, 403,
	406, 407, 410, 408, 409, 0, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 840, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 0, 198, 0,
	0, 417, 287, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 844, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 837, 836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 0,
	0, 0, 188, 324, 0, 0, 0, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	0, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	0, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	411, 321, 326, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 393, 394, 395, 399, 400, 404, 405, 414, 413,
	412, 415, 416, 419, 418, 420, 396, 397, 398, 401,
	402, 403, 406, 407, 410, 408, 409, 0, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 195, 1571, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 0,
	198, 0, 0, 417, 287, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 390, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 0, 0, 0, 188, 324, 0, 0, 0, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 0, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 0, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 411, 321, 326, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 392, 393, 394, 395, 399, 400, 404, 405,
	414, 413, 412, 415, 416, 419, 418, 420, 396, 397,
	398, 401, 402, 403, 406, 407, 410, 408, 409, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 0, 198, 0, 0, 417, 287, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 390, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 0, 0, 0, 188, 324, 0, 0,
	0, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 0, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 0, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 411, 321, 326, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 393, 394, 395, 399, 400,
	404, 405, 414, 413, 412, 415, 416, 419, 418, 420,
	396, 397, 398, 401, 402, 403, 406, 407, 410, 408,
	409, 0, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 0, 198, 0, 0, 417, 287, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 844,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 0, 0, 0, 188, 324,
	0, 0, 0, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 0, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 0, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 411, 321, 326, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 393, 394, 395,
	399, 400, 404, 405, 414, 413, 412, 415, 416, 419,
	418, 420, 396, 397, 398, 401, 402, 403, 406, 407,
	410, 408, 409, 0, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 417,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 411, 321,
	326, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 393,
	394, 395, 399, 400, 404, 405, 414, 413, 412, 415,
	416, 419, 418, 420, 396, 397, 398, 401, 402, 403,
	406, 407, 410, 408, 409, 0, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 0, 198, 0,
	0, 0, 287, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 853,
	863, 864, 856, 857, 858, 859, 860, 861, 862, 855,
	0, 0, 865, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 0,
	0, 0, 188, 324, 0, 0, 0, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	0, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	0, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	0, 321, 326, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 34,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	1289, 198, 0, 0, 0, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 0, 0, 188, 324, 0, 0, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 0, 321, 326, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 132, 197, 77, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 990, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 989, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 0, 198, 0, 0, 0, 287,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 0, 0, 0, 188,
	324, 0, 0, 0, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 0, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 0, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 0, 321, 326,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 0, 198, 0, 0,
	0, 287, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 0, 0,
	0, 188, 324, 0, 0, 0, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 0,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 0,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 0,
	321, 326, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 532, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	0, 198, 0, 0, 0, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 0, 0, 188, 324, 0, 0, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 0, 321, 326, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 116, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 0, 198, 0, 0, 0, 287,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 0, 0, 0, 188,
	324, 0, 0, 0, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 0, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 0, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 0, 321, 326,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 0, 198, 0, 0,
	0, 287, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 0, 0,
	0, 188, 324, 0, 0, 0, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 0,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 0,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 0,
	321, 326, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	0, 198, 0, 0, 0, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 0, 0, 188, 324, 0, 0, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 0, 321, 326, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 552,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 548, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 553, 551, 542, 543, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 549, 550, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 984, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 0, 198, 0, 0, 0, 287,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 0, 0, 0, 188,
	324, 0, 0, 0, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 0, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 0, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 0, 321, 326,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 539, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 552, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 548, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 553, 551, 542, 543,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 549, 550, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325,
}
var yyPact = [...]int{

	222, -1000, -301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1456, -1000, -1000, -1000, -1000, -1000, -1000,
	727, 256, -1000, -1000, 421, 64, 23205, 419, 2388, 24069,
	-1000, -1000, -1000, 152, 244, 24069, -1000, -1000, -1000, 239,
	333, 1099, 1333, 1097, 58, -68, -80, -1000, 1496, 1498,
	-1000, -1000, 284, 62, -1000, -1000, -1000, 18884, 175, -1000,
	-1000, 1424, 1454, 1242, -1000, 12404, 281, 281, 22773, 25797,
	-1000, 1494, 24069, 11106, -1000, 393, 24069, -143, 277, 277,
	189, 412, -1000, 647, -1000, -1000, -1000, -1000, 24069, 279,
	23637, 279, 279, 279, 279, 279, 24069, -1000, 497, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 24069, 1093, 1373, 631, 232, 8061, 8061, -1000, 654,
	-1000, 181, 171, 165, 170, 37, 663, -1000, 8061, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 226, 297, 213, 175,
	625, -1000, -1000, -1000, -1000, -1000, 1371, 1366, 807, 1365,
	114, 1359, 1196, -35, -1000, 1092, 24069, -1000, -1000, 1218,
	1425, 358, 24069, -1000, -104, 1154, -1000, 1199, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 912, 1362, 858, 14996, 1281, -1000, -1000, 688, 1479,
	-1000, 18020, 493, -1000, 14996, 17572, 1157, -1000, -1000, 1157,
	-1000, -1000, -1000, 453, -1000, -1000, 16724, 16724, 16724, 16724,
	16724, 16724, 16724, 16724, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, -1000, -1000, 1157, -1000,
	11972, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 14996, 1157, 1157, 1157, 1157, 1157, 1157,
	1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
	22341, 21477, 24069, 1151, 1150, -1000, -1000, 492, 1144, -116,
	25365, -1000, -1000, -1000, -1000, 24501, 21045, 620, -1000, -1000,
	-1000, -1000, 1350, -1000, -1000, 491, -1000, 1456, -1000, -1000,
	1089, 248, -1000, 4067, 4514, -1000, -1000, -1000, 1195, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23637, 1422, 314,
	1086, 672, 1085, 1084, 1077, 277, 1076, 1142, 295, 24069,
	1404, 1207, 24069, 1072, 1057, 1056, 1055, -1000, 10671, -1000,
	8061, 631, -1000, 893, 14996, 277, 277, 8061, 8061, 8061,
	24069, 24069, 24069, -1000, -1000, -1000, -1000, 24069, -1000, -1000,
	631, 631, 8061, 8061, 634, 1470, 634, 634, -1000, -1000,
	-1000, -1000, 14996, -1000, 16724, -1000, -1000, 1054, 216, -1000,
	-1000, -1000, -1000, -1000, -1000, 1053, 114, 114, -1000, 892,
	114, 1128, -1000, 613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 114, -1000, 14564, -299,
	-1000, -1000, 1141, -1000, 160, 1242, -1000, -1000, 175, -1000,
	-1000, 24069, 8061, -97, 18884, 1157, 9366, -1000, -1000, -1000,
	1490, 540, 1165, -1000, -1000, 1140, -1000, 823, 472, 927,
	1256, -1000, -1000, -1000, 24069, -1000, 14996, 14996, 801, -1000,
	19316, -1000, -1000, -1000, -1000, 8931, 546, 16724, 778, 640,
	16724, 16724, 16724, 16724, 16724, 16724, 16724, 16724, 16724, 16724,
	16724, 16724, 16724, 16724, 16724, 835, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1052, -1000, 175, 914, 914, 507,
	507, 507, 507, 507, 507, 507, 20180, 1418, 13268, 13268,
	13268, 1418, 912, 912, 13268, 13268, 13268, 13268, 13268, 13268,
	1418, 1418, 13268, 912, 912, 912, 912, 13268, 13268, 13268,
	13268, 1418, 13268, 13268, 13268, 1418, 912, 1051, 597, 11972,
	13268, 13268, 13268, 912, 14996, 14996, 14132, 13700, 15428, 13268,
	13268, 1418, 656, 597, 24501, -1000, -1000, 16292, -1000, -1000,
	-1000, -1000, -1000, 912, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 23637, 23637, 13268, 13268, 13268, 13268, 197, 24069,
	-1000, 1152, 1143, -1000, -1000, -1000, 1420, 20613, 17588, -1000,
	197, 1108, 21477, 24069, -1000, -1000, 21477, 24069, 8496, 24933,
	1121, -1000, -98, -107, -116, -1000, -1000, 506, -1000, -1000,
	-1000, 11539, -1000, 9801, 1424, 1242, 5886, 10236, -1000, 4514,
	1195, -1000, -43, -1000, -1000, -1000, 1178, -1000, 1178, 188,
	4, 1178, 1178, 1178, 1178, 1178, 23, 23, 23, 23,
	20, -1000, -1000, -1000, -1000, -1000, 1194, 1193, -1000, 1178,
	1178, 1178, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1186, 212, 1180, 1180, 1180, 1180, 1180, 229, 229, -1000,
	14996, 1160, -1000, 24069, 8061, 1403, 8061, 178, 1192, 24069,
	-1000, 24069, 24069, 431, -1000, 24069, 1129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 597, 1045,
	1036, -1000, -1000, -1000, -1000, -1000, -1000, 650, -1000, -1000,
	-1000, -1000, 631, 24069, 24069, 24069, 1419, 631, 597, 494,
	-1000, -1000, 1022, -1000, 1128, 1128, -1000, 1128, 114, 914,
	1128, -1000, 1041, 1399, 889, 24069, -1000, 18884, -36, -1000,
	-126, 1418, 912, 140, -1000, -1000, -1000, -1000, -1000, 169,
	1004, 464, -1000, 1248, 858, 858, 14996, -1000, -1000, -1000,
	9801, 1439, -1000, 1264, 1263, 1217, -1000, -1000, 546, 619,
	-1000, -1000, 842, -1000, -1000, -1000, -1000, 461, 1157, -1000,
	3297, -1000, -1000, -1000, -1000, 778, 16724, 16724, 16724, 494,
	3297, 3436, 711, 756, 507, 659, 659, 520, 520, 520,
	520, 520, 828, 828, -1000, -1000, -1000, 912, -1000, -1000,
	-1000, 13268, 1028, -1000, -1000, 597, 459, 1028, 1028, 13268,
	-159, -159, 912, 1028, 1028, 1028, 912, 1028, 13268, 13268,
	1028, -159, -159, -159, -159, 1028, 1028, 1028, 1028, 13268,
	1028, 1028, 1028, 13268, -1000, 14996, -1000, 912, 1028, 1028,
	1028, -1000, 847, 732, 606, 1468, 1028, 587, 1465, 1028,
	1680, 16724, 16724, 16724, 1028, 1028, 13268, 723, -1000, 14996,
	912, -1000, 2278, 1125, 1124, 1028, 912, 1123, 1028, 1028,
	166, 1157, -1000, 9801, 21477, 21477, 21477, 21477, 21477, -1000,
	1233, 1232, -1000, 1226, 1224, 1236, 18884, 1030, 912, 159,
	20613, -1000, 1157, -1000, 18452, 511, 326, 321, 320, 1463,
	21477, 1159, -1000, 1159, -1000, 446, -1000, -1000, 24501, -116,
	-123, -1000, -1000, 1121, -1000, 846, -1000, -1000, 597, -1000,
	443, 1362, 1418, 1120, 5451, -1000, -1000, -1000, -1000, 248,
	-1000, -1000, -1000, 1191, 2541, -1000, 1288, 413, 552, 900,
	1270, -1000, -1000, 512, -55, -1000, -1000, 776, 23, 23,
	1178, 1178, 183, 1178, -1000, 23, -1000, -1000, -1000, 506,
	1343, 506, 506, 506, 506, 23, 888, 888, -1000, -1000,
	-1000, -1000, 761, -1000, 1186, -1000, 760, -1000, -1000, -1000,
	-1000, -1000, -1000, 576, 1204, 23637, 175, 1412, -1000, -1000,
	-1000, 1478, -1000, -1000, 357, -1000, 294, -1000, -1000, -1000,
	-1000, 8061, 24069, 8061, 8061, 1463, 1016, 995, -1000, -1000,
	-1000, 634, 631, 1337, -1000, -1000, 16724, -1000, -1000, -1000,
	-1000, 197, 319, -1000, -1000, -56, -1000, -1000, 1256, -1000,
	1119, -1000, -1000, 556, 577, 551, 253, 253, -1000, 580,
	253, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 196,
	1411, 9366, 9366, 1246, -1000, -1000, -1000, 24069, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7626, 13268, -1000,
	494, 3297, 3118, -1000, 16724, -1000, 1028, 13268, -159, 7191,
	-159, -159, 1028, -1000, 21909, -1000, -159, -159, -159, -159,
	-159, -159, 1028, 1028, -159, -1000, -1000, -1000, -1000, -159,
	-159, -159, -159, 1028, -159, -159, -159, 912, 597, -1000,
	-1000, -1000, -1000, 456, 835, 456, 16724, 16724, -1000, 16724,
	16724, -1000, -1000, 16724, 3365, 3141, 3085, -194, -1000, 1145,
	641, -1000, 14996, 870, -1000, -1000, 16724, 16724, -1000, -1000,
	-1000, -1000, 1203, 9801, 1157, 6321, -1000, 23637, 1162, -1000,
	605, 599, 1143, 1185, 1202, 1079, -1000, -1000, -1000, -1000,
	1228, -1000, 1227, -1000, -1000, 1170, -1000, -1000, 1118, 1157,
	23637, 16724, 511, -1000, 1157, 1157, 1157, 1456, 14996, 1159,
	-1000, -1000, 527, -1000, -1000, -110, -112, -1000, -1000, -1000,
	9366, -1000, 5886, -1000, 5886, -1000, 19748, 260, 413, 265,
	-1000, 900, -1000, -1000, 900, -1000, -1000, -1000, 1181, -1000,
	684, -1000, -1000, -1000, -1000, -1000, 16724, 1489, -1000, 1287,
	-1000, 1283, 875, -1000, -1000, 1012, 506, 506, 23, -1000,
	-1000, 1178, -1000, 506, -1000, 559, -1000, -1000, -1000, -1000,
	506, 1026, -1000, 1015, 1117, -1000, 1011, 54, 24069, -1000,
	-1000, -1000, 1200, -1000, -1000, -1000, 1005, 1116, -1000, 4067,
	993, 960, 957, 24069, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 631, -1000, 16724, 3297, 23, 24069, -1000, 1217, 140,
	-1000, 4480, -1000, 900, 536, -1000, -1000, 240, -1000, 1270,
	-1000, 3682, 954, -1000, 16919, 4620, 23637, 1276, 1274, 939,
	24069, 23637, -1000, -1000, 4571, 936, 14996, -1000, 23637, 23637,
	1157, 441, -1000, -1000, -1000, 1080, 12404, -1000, -1000, 912,
	-1000, 16724, 3297, -159, -1000, -1000, -1000, -1000, 426, -1000,
	-1000, -159, -1000, 364, -1000, -1000, -1000, -1000, -1000, -1000,
	-159, -159, -1000, -1000, -1000, -1000, -1000, -159, -1000, -1000,
	-1000, -1000, 912, 1178, 1178, -1000, 1178, 1180, -1000, 1178,
	47, 1178, 46, 912, 912, 2895, 2850, 2505, 2443, 2278,
	16724, 16724, 16724, 1157, -155, -1000, 597, 14996, 783, 689,
	-1000, 1385, 1107, 1115, -1000, -1000, 12836, 912, 1261, 1004,
	-1000, 18884, 1002, -1000, 1456, 9801, 14996, 14996, -1000, -1000,
	14996, 1179, -1000, 14996, -1000, -1000, -1000, -1000, 23637, 158,
	-1000, 14996, 1002, 2523, -1000, 23637, 23637, 23637, 1424, 597,
	-1000, -1000, -1000, -1000, 5451, -1000, 999, -1000, 1178, 1178,
	1271, -1000, 1270, 900, -1000, -1000, -1000, 23637, -1000, 3297,
	-51, -1000, -1000, -1000, -1000, -1000, -1000, 506, -1000, -1000,
	-1000, -1000, -1000, 23, 864, 23, 740, -1000, 736, -1000,
	-1000, -246, 1177, -1000, 175, 24069, 98, 357, -1000, 4067,
	4067, 4067, -1000, -1000, 3297, -78, -1000, -1000, -1000, 4571,
	233, 4067, 4067, -1000, 1160, 413, 1269, 265, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 934, -1000, 407, -1000, 289,
	233, 4571, 597, 534, 1395, -1000, 9366, 1461, 21477, -1000,
	-1000, -1000, 3297, -1000, 6756, -1000, 912, 1453, -1000, -1000,
	-1000, -1000, -1000, 176, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16724, 16724, 16724, 16724, -1000, 2278, 2278, 2278,
	16724, 912, 863, 597, 16724, 16724, 1268, -1000, 1157, -1000,
	-1000, 1157, 167, -1000, 23637, 1424, -1000, 597, 597, 597,
	23637, 597, 990, -1000, 1157, 17156, -1000, 18884, 988, 988,
	988, -1000, 547, 19748, 1392, 1392, -1000, -1000, 983, -1000,
	-1000, 506, -1000, 506, 991, 984, -1000, 19748, -1000, 1441,
	-1000, 98, -1000, 848, 112, 118, -1000, 111, 110, 109,
	108, 106, -1000, -1000, -1000, -1000, 1328, 1315, 1161, 953,
	-1000, -1000, 921, -1000, -1000, 1173, 900, -1000, 1171, -1000,
	898, -1000, -1000, 23637, -1000, 233, 1382, 1381, 1157, -1000,
	1459, 1452, 1159, 12404, -1000, -1000, -1000, 14996, -1000, -1000,
	2278, 2278, 2278, 2278, -1000, -1000, -1000, 49, -1000, -1000,
	2278, 2278, 1483, -1000, 1115, 1157, -1000, 175, -1000, -1000,
	952, -1000, 23637, -1000, -1000, 511, -1000, -1000, -1000, 547,
	-1000, 896, 580, 840, -1000, -1000, -1000, 215, -1000, -1000,
	-1000, -1000, 950, -1000, 146, 4586, -1000, -1000, -1000, -1000,
	-1000, -1000, 1332, 1331, 145, 257, 1300, 1303, 1448, 21477,
	-1000, -1000, 512, 512, 19748, 1160, 19748, -1000, -1000, -1000,
	16724, -1000, 190, -1000, 14996, 14996, 1461, -1000, 1135, -1000,
	-1000, -1000, -1000, 912, 173, -221, -1000, -1000, 9801, 1115,
	912, -1000, -1000, -1000, -1000, -1000, 710, -1000, 24069, 547,
	151, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14996,
	14996, 5016, 4586, -1000, -1000, -1000, -1000, 1170, 705, 1315,
	1447, 1313, 1311, -1000, 814, 1159, 948, 1168, 930, 3297,
	928, -1000, 23637, -1000, 597, 1111, -1000, 597, 1459, -1000,
	912, -1000, 1245, -217, -228, 1110, -1000, -1000, 1164, -1000,
	547, 153, -1000, 868, 866, 85, 78, 3889, -1000, -1000,
	-1000, -1000, -302, -1000, -1000, 1317, -1000, 813, -1000, 1446,
	1445, -1000, 1461, 547, 19748, 547, -1000, 190, 1259, 14996,
	-1000, -1000, -1000, 1237, -1000, 23637, -1000, 860, 780, 765,
	-1000, 14996, 4586, 1440, 1437, 1436, 1377, 9366, 4578, -1000,
	-1000, 808, 789, 1459, -1000, 915, -1000, -1000, 193, -1000,
	-219, 911, 318, -1000, -1000, 665, 4586, -1000, 825, -303,
	283, 175, 348, 16724, -1000, -1000, -1000, -1000, -1000, -1000,
	547, 172, -226, 1187, -1000, -1000, -1000, -1000, -1000, -1000,
	4586, -1000, -304, 4586, 3374, -1000, -1000, -1000, 557, -1000,
	-1000, -1000, -1000, 76, -1000, -1000, 3297, -1000, 1157, -229,
	1167, 1163, 1474, -1000, -305, 4351, -308, 272, 4586, 669,
	-1000, 14996, -1000, 348, -1000, 15860, -1000, -1000, 1480, -1000,
	1481, 401, 401, 4343, 661, 4586, -1000, -309, 269, 4586,
	-1000, 751, -1000, 2278, 912, -1000, -1000, -1000, 217, 759,
	-1000, -1000, -1000, 3626, -1000, -310, 4586, -1000, -1000, -1000,
	-1000, -1000, 264, 3079, -311, -1000, 246, 4586, -1000,
}
var yyPgo = [...]int{

	0, 1856, 1854, 38, 1853, 170, 1852, 1850, 1848, 23,
	17, 15, 21, 1847, 1623, 1610, 1598, 1593, 1843, 1587,
	1842, 7, 1840, 1838, 1579, 1837, 1836, 1563, 1557, 1553,
	1551, 1835, 1833, 2, 1831, 11, 1830, 5, 118, 126,
	1828, 3, 1827, 1825, 10, 1824, 1823, 1547, 1822, 1820,
	1819, 1816, 72, 1814, 1543, 1541, 1813, 1811, 1537, 1520,
	1808, 1807, 1511, 1506, 1504, 1806, 154, 1805, 1803, 1800,
	202, 75, 116, 1786, 1785, 1783, 85, 65, 1915, 86,
	40, 84, 694, 1782, 12, 57, 1780, 1779, 113, 107,
	1778, 124, 1776, 66, 239, 77, 1775, 1772, 125, 1769,
	1768, 1767, 104, 1765, 1763, 2606, 1762, 1761, 128, 1753,
	54, 55, 42, 1751, 1749, 1748, 1747, 1746, 115, 184,
	1737, 1735, 110, 1733, 64, 1732, 1731, 134, 1729, 1728,
	1725, 105, 43, 1724, 36, 1718, 81, 48, 1715, 135,
	1714, 99, 1712, 1710, 25, 19, 1709, 37, 1707, 44,
	1706, 111, 208, 238, 20, 31, 41, 56, 101, 83,
	28, 29, 112, 78, 68, 34, 1697, 120, 1696, 67,
	122, 103, 106, 121, 1694, 1693, 1692, 888, 1690, 1689,
	96, 1688, 51, 88, 678, 127, 95, 1685, 74, 1684,
	1683, 1682, 1681, 62, 98, 1680, 1678, 90, 413, 30,
	1472, 812, 1676, 14, 123, 1677, 33, 1675, 1674, 2986,
	92, 87, 82, 1673, 80, 53, 45, 1670, 1669, 1668,
	1667, 1665, 1662, 1559, 1658, 1656, 1652, 1647, 58, 89,
	1646, 1645, 102, 76, 1644, 1643, 1642, 1641, 97, 59,
	119, 1640, 93, 91, 61, 1639, 1638, 1637, 1636, 52,
	35, 1635, 1634, 1632, 73, 69, 1631, 47, 27, 32,
	49, 8, 63, 50, 1630, 13, 1625, 94, 4, 6,
	9, 1621, 1618, 1616, 1612, 1608, 1606, 1604, 60, 1600,
	1595, 46, 1590, 1585, 1582, 26, 1573, 1571, 1568, 114,
	100, 1549, 0, 109, 129, 1513, 1509, 150,
}
var yyR1 = [...]int{

	0, 291, 291, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 65, 3, 3, 8, 4, 4,
	4, 5, 5, 86, 87, 87, 91, 91, 6, 6,
	7, 7, 9, 9, 69, 69, 10, 11, 11, 11,
	11, 294, 294, 100, 100, 98, 98, 99, 99, 162,
	162, 12, 12, 12, 167, 167, 172, 172, 172, 175,
	175, 175, 175, 154, 155, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 2, 276, 276, 277, 277,
	278, 278, 278, 278, 279, 279, 280, 280, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 25, 196,
	196, 45, 45, 46, 46, 46, 150, 150, 150, 13,
	13, 13, 13, 13, 20, 22, 22, 34, 34, 35,
	23, 23, 23, 23, 36, 36, 37, 26, 26, 26,
	26, 26, 26, 43, 43, 43, 42, 42, 41, 41,
	41, 41, 41, 41, 24, 24, 24, 24, 44, 44,
	39, 39, 38, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 27, 27, 27, 27, 27,
	27, 19, 275, 275, 275, 33, 33, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 50, 251, 252, 252, 252, 252,
	252, 252, 252, 252, 239, 239, 240, 216, 216, 216,
	216, 216, 216, 216, 216, 215, 215, 215, 215, 219,
	219, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	218, 218, 218, 218, 218, 218, 218, 218, 220, 220,
	220, 220, 220, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 222, 222,
	222, 222, 222, 222, 222, 222, 238, 238, 223, 223,
	232, 232, 233, 233, 233, 230, 230, 231, 231, 226,
	227, 234, 228, 228, 228, 229, 229, 229, 237, 237,
	237, 237, 224, 241, 241, 261, 261, 260, 260, 259,
	259, 259, 250, 250, 256, 256, 256, 256, 256, 256,
	256, 245, 245, 245, 244, 244, 246, 246, 249, 249,
	258, 258, 257, 257, 242, 242, 242, 262, 262, 262,
	262, 262, 243, 243, 243, 243, 263, 247, 247, 248,
	248, 248, 269, 270, 268, 268, 268, 268, 268, 115,
	115, 115, 253, 253, 253, 254, 254, 254, 255, 255,
	255, 273, 273, 272, 272, 47, 47, 48, 53, 53,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 149, 149, 149,
	49, 194, 194, 267, 267, 266, 264, 264, 265, 265,
	15, 51, 51, 16, 16, 16, 16, 16, 16, 16,
	271, 271, 271, 17, 17, 54, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 83, 181, 181, 179, 179,
	182, 182, 180, 180, 180, 183, 183, 183, 213, 213,
	213, 56, 56, 61, 61, 64, 64, 64, 62, 63,
	28, 29, 29, 29, 29, 30, 195, 195, 59, 59,
	60, 60, 60, 60, 75, 75, 295, 295, 58, 58,
	57, 57, 18, 296, 66, 67, 67, 68, 68, 68,
	186, 186, 72, 72, 72, 70, 70, 70, 71, 71,
	77, 77, 81, 81, 81, 81, 80, 80, 80, 80,
	152, 152, 152, 153, 153, 205, 205, 205, 204, 204,
	204, 204, 85, 85, 88, 88, 89, 89, 89, 89,
	92, 135, 135, 109, 109, 110, 110, 110, 110, 110,
	121, 121, 161, 161, 160, 160, 163, 163, 90, 90,
	90, 90, 95, 95, 96, 96, 97, 97, 193, 193,
	211, 211, 211, 101, 101, 101, 103, 102, 102, 102,
	102, 104, 104, 106, 107, 107, 105, 105, 108, 111,
	111, 111, 111, 112, 112, 82, 82, 82, 82, 82,
	82, 82, 178, 178, 114, 114, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 130, 130, 130, 130,
	130, 130, 116, 116, 116, 116, 116, 116, 116, 76,
	76, 131, 131, 131, 94, 93, 93, 79, 79, 78,
	78, 132, 132, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 125, 125,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 297, 297, 127, 126,
	126, 126, 126, 126, 126, 73, 73, 73, 73, 73,
	212, 212, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 142, 142, 74, 74, 140,
	140, 141, 143, 143, 139, 139, 139, 118, 118, 118,
	118, 118, 118, 118, 118, 120, 120, 120, 144, 144,
	133, 133, 84, 145, 145, 146, 147, 147, 148, 148,
	151, 156, 156, 156, 157, 157, 157, 157, 122, 122,
	158, 158, 158, 117, 117, 117, 117, 117, 117, 117,
	159, 159, 159, 159, 164, 164, 134, 134, 137, 137,
	136, 138, 165, 165, 169, 169, 166, 166, 170, 170,
	170, 170, 173, 173, 174, 174, 174, 171, 171, 171,
	168, 168, 168, 208, 208, 208, 176, 176, 187, 187,
	184, 184, 185, 185, 177, 177, 225, 225, 190, 190,
	190, 190, 190, 190, 190, 190, 192, 192, 191, 191,
	191, 188, 188, 188, 189, 189, 206, 206, 202, 202,
	207, 207, 203, 203, 209, 209, 210, 210, 274, 274,
	235, 235, 284, 284, 236, 236, 285, 285, 287, 287,
	282, 282, 283, 283, 286, 286, 31, 288, 288, 289,
	289, 290, 290, 290, 290, 32, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 292, 293, 197, 198, 198, 198,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 11, 4, 7, 5, 1, 13,
	3, 10, 12, 2, 1, 3, 3, 6, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 2, 3, 3, 11, 7,
	9, 5, 5, 15, 11, 4, 0, 1, 1, 3,
	2, 3, 3, 3, 0, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 3, 3, 3, 3, 4, 0,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 4, 1, 1, 2, 3,
	4, 3, 3, 3, 3, 3, 3, 0, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 3, 3, 2, 4, 5,
	2, 3, 4, 2, 2, 3, 3, 3, 3, 3,
	4, 1, 1, 1, 1, 1, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 2, 1,
	2, 1, 2, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 2, 4, 3, 4, 3, 2,
	2, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 3, 3, 3, 3, 3, 1, 10, 11, 11,
	12, 12, 3, 3, 2, 1, 5, 1, 1, 0,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 0, 2, 0, 2, 1, 1, 5, 1, 3,
	2, 5, 4, 3, 3, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	4, 0, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 5, 6, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 5, 4,
	2, 4, 3, 2, 3, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 1,
	1, 2, 1, 1, 1, 2, 4, 4, 1, 1,
	2, 3, 4, 4, 5, 3, 1, 1, 3, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 2, 2,
	2, 2, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 4, 7, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	2, 2, 4, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 3, 2, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -291, -1, -3, -8, -9, -10, -11, -12, -14,
	-47, -15, -16, -17, -54, -55, -56, -61, -62, -63,
	-59, -58, -57, -18, -24, -27, -19, -65, -28, -29,
	-30, -31, -32, -4, 6, 7, -69, 9, 10, 30,
	-50, 130, -48, -49, 133, 132, 169, 134, 162, 64,
	225, -64, 228, 229, -295, -195, 167, 168, 136, 212,
	213, 20, 37, 230, 232, 31, 32, -5, -86, -6,
	8, 322, 131, 226, 164, 163, 26, 371, -292, 68,
	441, -147, 15, -66, -296, -66, -66, -66, -66, -66,
	-251, -193, 105, 68, 23, -189, 143, 86, 313, 139,
	-196, -187, -188, 189, 199, 44, 150, 149, 140, 140,
	141, 143, 313, 139, 177, 176, 140, -105, -209, 71,
	-200, 368, 153, 383, 384, 131, 186, 225, 239, 233,
	267, 255, 369, 385, 154, 207, 138, 253, 256, 300,
	152, 200, 386, 289, 295, 210, 80, 228, 309, 387,
	155, 204, 206, 205, 194, 211, 36, 165, 251, 244,
	215, 189, 388, 376, 242, 28, 184, 389, 297, 272,
	390, 373, 296, 247, 243, 136, 391, 156, 150, 179,
	392, 273, 277, 393, 301, 394, 395, 396, 142, 237,
	238, 397, 190, 303, 271, 33, 151, 370, 48, 174,
	304, 38, 275, 37, 281, 398, 270, 265, 282, 399,
	400, 401, 402, 269, 236, 264, 202, 53, 137, 279,
	278, 280, 203, 299, 260, 258, 403, 404, 157, 405,
	406, 245, 18, 407, 408, 307, 168, 409, 42, 410,
	411, 412, 172, 413, 414, 415, 298, 274, 276, 188,
	416, 248, 147, 417, 176, 418, 372, 419, 305, 241,
	420, 158, 232, 173, 167, 308, 421, 213, 422, 423,
	424, 159, 425, 426, 427, 229, 230, 291, 208, 428,
	429, 430, 431, 198, 183, 311, 302, 52, 212, 286,
	432, 235, 149, 214, 433, 226, 43, 7, 201, 292,
	209, 199, 262, 175, 434, 435, 249, 250, 268, 234,
	263, 227, 177, 178, 169, 436, 310, 287, 374, 257,
	254, 181, 261, 437, 143, 438, 182, 231, 306, 252,
	288, 140, 123, 256, 300, 130, 290, 291, 297, -245,
	298, 176, 179, -213, 140, -179, 289, 182, 71, 141,
	142, 33, 302, 301, 293, -209, 144, 231, -75, 134,
	170, -105, -197, -197, -197, -197, -44, 71, 214, -44,
	30, 71, 71, 36, 71, 230, 292, 292, 6, -68,
	5, -177, 143, 145, 227, -87, -91, -211, -209, -201,
	73, 339, 340, 341, 342, 343, 356, 357, 358, 344,
	345, 359, 360, 361, 346, 347, 362, 363, 365, 366,
	364, 180, 350, 349, 348, 351, 352, 51, 354, 353,
	355, -3, -157, 17, 16, -72, 54, 55, -67, -80,
	114, -82, -209, -113, 88, -119, 29, 71, -200, 24,
	-118, -201, -114, -139, -138, -94, 123, 124, 125, 112,
	113, 120, 89, 126, -125, -123, -124, -126, -128, -129,
	73, 72, 81, 74, 75, 76, 77, 82, 339, 340,
	341, 342, 343, 356, 357, 358, 344, 345, 359, 360,
	361, 346, 347, 362, 363, 365, 366, 364, 350, 349,
	348, 351, 352, 354, 353, 355, 83, 84, -202, -136,
	-292, 58, 59, 170, 139, 323, 324, 325, 326, 327,
	367, 160, 331, 91, 47, 312, 321, 320, 319, 317,
	318, 314, 316, 315, 333, 334, 146, 313, 118, 322,
	-177, -177, 11, -98, -99, -105, -108, -209, -166, 227,
	-173, -170, 301, 302, -171, -174, -168, -139, 281, 414,
	415, 300, 256, 299, -202, -209, -2, -5, 6, -105,
	-252, -240, -243, -203, 155, -263, -202, -199, 152, 71,
	-200, 135, 161, 87, 375, 23, 25, 284, 339, 90,
	123, 340, 341, 342, 16, 20, 91, 122, 323, 343,
	130, 62, 314, 316, 312, 313, 290, 29, 10, 26,
	163, 193, 22, 116, 132, 94, 95, 96, 166, 24,
	164, 84, 160, 19, 65, 11, 13, 337, 338, 14,
	146, 145, 107, 191, 141, 60, 8, 126, 27, 104,
	56, 344, 345, 379, 45, 380, 58, 105, 17, 317,
	318, 31, 367, 346, 171, 381, 347, 118, 196, 63,
	50, 88, 82, 34, 85, 66, 86, 15, 192, 61,
	335, 195, 382, 106, 133, 322, 59, 139, 6, 332,
	30, 162, 350, 349, 348, 351, 197, 57, 325, 326,
	352, 439, 140, 93, 333, 334, 144, 83, 5, 44,
	32, 9, 64, 67, 319, 320, 321, 47, 51, 354,
	353, 355, 92, 12, 336, 371, 180, 141, -105, 322,
	-185, 146, -185, 177, 176, 140, 97, -51, -105, -184,
	146, -202, -184, -184, -184, -184, -184, -105, 127, -105,
	71, 30, -183, 105, 12, 313, 139, 71, 176, 179,
	140, 177, 143, -198, -292, -203, -198, -247, 11, 107,
	180, 180, 180, 181, 180, -182, -181, 178, 295, 296,
	292, 294, 12, -83, 105, -198, 71, 230, 144, -60,
	-3, -11, -9, -10, -3, 97, 30, 30, 73, 51,
	30, -39, -38, -40, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 30, -275, 68, -235,
	281, 71, -288, -289, -105, -66, -7, -5, -292, 21,
	22, 140, -105, 305, 69, 23, -292, -293, 70, -158,
	19, 31, -122, 74, 77, -148, -151, -82, -209, 50,
	-70, 21, 22, 79, 11, -205, 87, 86, 104, -204,
	23, 71, -200, -201, 73, 127, -82, -116, 107, 88,
	105, 106, 90, 109, 108, 119, 112, 113, 114, 115,
	116, 117, 118, 110, 111, 122, 97, 98, 99, 100,
	101, 102, 103, -178, -292, -94, -292, 128, 129, -119,
	-119, -119, -119, -119, -119, -119, -119, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -3, -132, -82, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -292, -142, -82, -292, -297, -127, -292, -297, -127,
	-297, -127, -297, -292, -297, -127, -297, -127, -297, -297,
	-127, -297, -292, -292, -292, -292, -292, -292, -107, 27,
	-105, -85, -88, -89, -90, -109, -93, -292, -105, -94,
	-105, -98, -294, 69, 11, 67, -294, 69, 127, 69,
	-167, -172, 303, 305, 227, -171, -171, -208, -202, 73,
	29, 97, 30, 127, -147, -66, 70, 69, -243, 155,
	152, -215, -219, -221, -220, -222, -217, -218, 253, 256,
	260, 258, 254, 259, 123, 257, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 30, 165, 249,
	250, 251, 252, 273, 274, 275, 276, 277, 278, 279,
	280, 233, 255, 369, 234, 235, 236, 237, 238, 239,
	241, 242, 243, 244, 245, 246, 247, 71, -201, -263,
	68, -202, 23, 143, 71, 88, 71, 71, 71, -185,
	71, 69, 144, -98, 24, 66, -100, -105, 71, 71,
	71, 71, -210, -209, -199, -198, -183, 73, -82, -185,
	-185, -198, -198, -198, -105, -105, -105, -105, -183, -183,
	-198, -198, -180, 11, 107, 11, -180, -180, -82, -119,
	71, 71, 230, 71, -39, -39, 73, -39, 69, 97,
	-39, 70, -132, -274, 440, 69, -290, 23, 305, 306,
	282, -72, -3, -105, -198, 306, 307, -91, -93, -292,
	-159, -203, 9, 107, 69, 18, 69, -156, 25, 26,
	127, -120, 51, 74, 77, -186, 49, -105, -82, -82,
	-130, 82, 88, 83, 84, -204, 114, -210, -203, -199,
	-119, -131, -136, -94, 78, 107, 105, 106, 90, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -212, 71, 73, 71, -118, -118,
	-202, -70, -78, -81, 114, -82, -209, -78, -78, -70,
	-293, -293, -81, -78, -78, -78, -81, -78, -70, -70,
	-78, -293, -293, -293, -293, -78, -78, -78, -78, -70,
	-78, -78, -78, -70, -293, 69, -293, -3, -78, -78,
	-78, -293, -82, -82, -139, 73, -78, -139, 73, -78,
	-119, 328, 329, 330, -78, -78, -70, -140, -141, 92,
	-139, -293, -119, -202, -202, -78, -79, -78, -78, -78,
	-162, 172, -105, 30, 69, -101, -103, -102, -104, 56,
	60, 62, 57, 58, 59, 63, -193, -85, -92, 47,
	-292, -110, 172, -111, 23, -211, 64, 145, 65, -162,
	67, -85, -105, -85, -108, -209, 114, -170, -173, 69,
	304, 306, 307, -167, -229, 122, 66, 85, -82, -203,
	-210, -157, -72, -253, -254, -255, -203, 73, 74, -240,
	-241, -242, -243, -256, 155, -262, 147, 149, 44, -244,
	156, 141, 45, -216, -230, 287, -223, 68, -223, -223,
	261, 253, 256, 254, -223, -223, -223, -223, -223, -228,
	256, -228, -228, -228, -228, 254, 68, 68, -223, -223,
	-223, -232, 68, -232, 248, -233, 68, -233, -233, -233,
	-233, -263, -263, -82, -206, 67, -154, -105, -198, 24,
	-198, -45, 186, 161, 68, -105, -105, -105, -271, 159,
	154, -105, 69, 71, 71, -248, 11, 107, -183, -209,
	-209, -105, -121, 23, -183, -76, 166, 71, -38, -118,
	70, -106, 27, 73, -289, -211, 281, 306, -70, -293,
	-53, -52, -190, 135, 132, 133, 137, 138, -266, 284,
	131, 256, 80, 29, 15, 323, 172, 374, 71, 173,
	-293, 69, 127, 52, -122, -122, -151, -176, 19, 11,
	47, 47, -71, 57, 82, 83, 84, 127, -292, -131,
	-119, -119, -119, -76, 87, -293, -78, 69, -293, 127,
	-293, -293, -78, -152, 335, -152, -293, -293, -293, -293,
	-293, -293, -78, -78, -293, -152, -152, -152, -152, -293,
	-293, -293, -293, -78, -293, -293, -293, -79, -82, -293,
	-293, -293, -293, 69, 67, 23, 11, 11, -293, 11,
	11, -293, -293, 11, -119, -119, -119, -293, -293, -78,
	-143, -141, 94, -82, -293, -293, 69, 69, -293, -293,
	-293, -293, -117, 30, 47, -292, -3, -292, -165, -169,
	-139, -199, -88, -89, -89, -88, -89, 56, 56, 56,
	61, 56, 61, 56, -102, -211, -293, -293, -135, 185,
	-292, 34, -211, -111, 141, 141, 141, -112, 12, -85,
	-112, -112, 127, -172, -175, 308, 305, 311, 71, 73,
	127, -158, 69, -255, 97, -243, 68, 71, 44, -201,
	45, -244, 141, 45, -244, -249, 71, -249, 45, 82,
	88, -226, -227, -234, -237, -224, 29, 66, 284, 147,
	45, 44, 80, -231, 288, 74, -228, -228, -223, -223,
	-223, 261, -223, -228, -229, 30, -229, -229, -229, -229,
	-228, -238, 73, -238, 74, -232, 74, 70, 66, -202,
	-3, 23, -46, 8, 9, 10, -276, -277, -278, 71,
	107, 191, 192, 144, -198, -105, -198, -198, -112, 71,
	71, -180, -183, 34, -119, -162, 140, -290, -186, 69,
	-197, -194, -267, -244, -273, -242, -243, -272, 148, 156,
	172, 155, -194, -267, 155, 152, -244, 156, 147, 148,
	-191, -244, 144, 23, -194, -194, -250, 97, -194, 172,
	23, -203, -203, 53, -105, -77, -155, 114, -203, -79,
	-76, 87, -119, -293, -81, -153, -152, 114, -210, -153,
	-153, -293, -202, -292, -152, -153, -153, -152, -152, -152,
	-293, -293, -152, -153, -153, -153, -153, -293, -153, -153,
	-153, -293, -214, 123, 253, 165, 251, 244, 271, 258,
	286, 249, 287, -212, -214, -119, -119, -119, -119, -119,
	11, 11, 11, 368, -147, 96, -82, 93, -119, -119,
	-164, 66, -165, -134, -137, -136, -292, -3, -293, -159,
	6, 371, -163, -202, -112, 69, 97, 97, -96, -95,
	66, 67, -97, 66, -95, 56, 56, -161, 68, 69,
	-136, -292, -163, -119, -111, -292, -292, -292, -147, -82,
	-112, 305, 309, 310, -254, -255, -258, -257, -202, -201,
	147, -262, 156, -244, -262, -249, -249, 68, 82, -119,
	9, 45, 45, 73, 70, -229, -229, -228, -223, -229,
	71, 123, -229, 70, 69, 70, 69, 70, 69, -115,
	389, 88, -105, -154, -154, 66, 70, 69, -215, 71,
	71, 71, -105, -183, -119, -228, -105, -71, -52, 68,
	-239, 71, -201, -197, -249, -188, 147, 71, 71, -197,
	71, -201, 71, -201, -202, 45, 45, 71, -105, -202,
	-239, 71, -82, -202, -202, -93, 127, -112, 11, 69,
	-80, -293, -119, -153, 127, -153, -147, 172, -153, -153,
	-153, -293, -223, -223, -223, -233, -223, 238, -223, 238,
	-293, -293, 19, 19, 19, 19, -293, -119, -119, -119,
	-292, -74, 332, -82, 69, 69, 28, -164, 69, -293,
	-293, 47, -293, -293, 69, -147, -169, -82, -82, -82,
	68, -82, -160, -202, 185, -293, -111, -193, -160, -160,
	-160, -157, 70, 69, -223, -223, 45, -249, -160, -124,
	-229, -228, 73, -228, 74, 74, 389, 68, -3, -105,
	-279, -280, -281, 80, 370, 88, 193, 194, 157, 195,
	196, 197, -278, -215, -215, -215, -282, -182, -77, -239,
	-149, 160, 161, -215, -215, -206, -246, -244, 45, 71,
	-192, 144, 23, 144, -149, -239, 30, 132, 27, -203,
	-144, 13, -85, -155, -155, 114, -293, 16, -228, 71,
	-119, -119, -119, -119, -293, -293, -293, -119, -293, 73,
	-119, -119, 45, -137, -134, 47, -3, -292, -202, -157,
	-160, 70, 69, -136, -110, -211, -293, -293, -293, -260,
	-259, 67, 151, 80, -257, -156, -156, 70, -229, -229,
	70, 70, -258, -154, 19, -154, -281, 73, 197, 193,
	197, 197, 197, 197, 198, -283, 38, -285, 39, 11,
	70, 71, -216, -216, 68, -249, 68, 71, -202, -149,
	29, 29, -292, -145, 14, 16, -112, -80, -132, -293,
	-293, -293, -293, -73, 107, 371, -293, -293, 9, -134,
	-3, 70, -202, -111, -259, 71, -250, 73, 158, 70,
	184, -21, -3, -9, -10, -11, -12, -14, -47, -15,
	-16, -22, -23, -17, -54, -55, -64, -62, -63, -59,
	-58, -26, -24, -27, -19, -28, -29, -30, -25, 91,
	146, 215, 225, 36, 36, 189, 190, -225, 145, -286,
	43, -284, -236, 42, 16, -85, -258, -206, -258, -119,
	-264, -265, 172, -146, -82, -133, -84, -82, -144, -155,
	-147, -293, 369, 63, 372, -165, -293, 74, -105, -261,
	-260, 185, -154, -82, -82, 71, -43, -207, 218, 219,
	220, -203, -33, -21, -161, 74, -285, 16, -287, 40,
	41, 73, -112, 70, 68, 70, -293, 69, -202, 69,
	-145, -293, 53, 370, 373, 68, -150, 187, 188, -34,
	-35, 92, 93, 216, 217, 221, -215, 69, 441, 38,
	73, 16, 16, -144, -261, -258, -261, -265, 47, -84,
	53, -160, -154, 71, 71, 96, 94, -35, -82, -33,
	19, 19, 19, 29, -203, 96, -21, 73, 73, -145,
	70, 174, 371, 70, -13, -20, -12, -9, -10, -11,
	225, 91, -33, 93, 441, -44, 74, -3, -42, -41,
	74, -44, 223, 88, 224, 71, -119, -261, 175, 372,
	-269, -270, 66, -154, -33, 441, -33, 96, 94, -36,
	-37, 95, -21, 69, 222, -292, 373, -270, 66, -269,
	66, 10, 9, 441, 96, 441, 146, -33, 96, 94,
	-37, -82, -41, -119, 171, -268, 159, 154, 157, 30,
	-268, 96, 91, 441, 146, -33, 93, -293, -293, 153,
	29, 82, 96, 441, -33, 146, 96, 441, 146,
}
var yyDef = [...]int{

	33, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, -2, 543, 543, 543, 543, 543, 543,
	618, -2, 405, 406, 0, 0, 0, 0, -2, 512,
	513, 514, 518, 519, 534, -2, 1364, 1364, 1364, 0,
	185, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	54, 55, 924, 0, 537, 526, 527, 0, 0, 1362,
	2, 864, 0, 552, 545, 0, 924, 924, 0, 0,
	85, 0, 0, 0, 619, 0, 0, 0, 922, 922,
	0, 0, 945, 0, 919, 941, 942, 943, 0, 920,
	0, 920, 920, 920, 920, 920, 0, 464, 636, 954,
	955, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 0, 0, 0, 505, 0, 1365, 1365, 479, 0,
	481, 0, 0, 0, 0, 0, 490, 493, 1365, 351,
	352, 353, 509, 510, 499, 511, 0, 0, 0, 0,
	0, 538, 539, 540, 541, 542, 164, 166, 0, 186,
	0, 189, 192, 960, 520, 0, 0, 985, 543, 0,
	547, 0, 0, 925, 515, 43, 44, 0, 620, 621,
	622, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 0, 870, 0, 0, 555, 553, 554, 544, 0,
	566, 575, 0, 645, 0, 650, 652, -2, -2, 0,
	693, 694, 695, 696, 697, 698, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 723, 724, 725, 726, 727,
	837, 838, 839, 840, 841, 842, 843, 844, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354,
	1355, 1356, 1357, 1359, 1360, 1361, 654, 655, 834, 891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 0, 796, 796, 796, 796, 796,
	796, 796, 796, 796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 65, 67, 636, 71, 1312,
	0, 896, -2, -2, 898, 0, 0, 0, -2, -2,
	-2, -2, 1139, -2, 834, 0, 86, 856, 543, 87,
	0, 226, 227, 0, 1151, 375, 952, 953, 1141, 948,
	949, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 922, 0, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 465,
	1365, 505, 468, 0, 0, 922, 922, 1365, 1365, 1365,
	0, 0, 0, 477, 1366, 1367, 478, 0, 377, 378,
	505, 505, 1365, 1365, 502, 0, 502, 502, 500, 501,
	496, 497, 0, 492, 0, 494, 521, 0, 0, 528,
	530, 531, 532, 533, 529, 0, 0, 0, 168, 0,
	0, 188, 170, 0, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 0, 191, 0, 958,
	961, 525, 976, 977, 0, 552, 40, 50, 0, 548,
	549, 0, 1365, 0, 0, 0, 0, 49, 1363, 35,
	0, 0, 865, 868, 869, 857, 858, 861, 0, 0,
	550, 556, 557, 546, 0, 567, 0, 0, 0, 576,
	0, 578, 579, 580, 581, 0, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 673, 674, 675,
	676, 677, 678, 651, 0, 665, 0, 0, 0, 714,
	715, 716, 717, 718, 719, 720, 0, 555, 0, 0,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 0, 0, 0, 555, 0, 0, 691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 0, 826, 0, 779, 788, 0, 780, 789,
	781, 790, 782, 0, 783, 791, 784, 792, 785, 786,
	793, 787, 0, 0, 0, 687, 0, 0, 69, 0,
	635, 0, 582, 584, 585, 586, -2, 0, 639, 685,
	-2, 0, 0, 0, 61, 62, 0, 0, 0, 0,
	72, 74, 0, 0, 1312, 899, 900, 325, 913, 914,
	915, 0, 911, 0, 864, 552, 392, 0, 228, 0,
	0, 237, 315, 246, 247, 248, 308, 250, 308, 308,
	0, 308, 308, 308, 308, 308, 322, 322, 322, 322,
	322, 291, 292, 293, 294, 295, 0, 0, 268, 308,
	308, 308, 272, 298, 299, 300, 301, 302, 303, 304,
	305, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	310, 310, 312, 312, 312, 312, 312, 0, 0, 374,
	0, 946, 83, 0, 1365, 0, 1365, 0, 0, 0,
	120, 0, 0, 460, 921, 0, 455, 63, 456, 457,
	458, 459, 637, 956, 957, 466, 467, 506, 507, 0,
	0, 471, 472, 473, 474, 475, 476, 379, 482, 483,
	484, 489, 505, 0, 0, 0, 600, 505, 491, 679,
	523, 522, 0, 535, 165, 167, 169, 187, 0, 0,
	190, 193, 0, 0, 0, 0, 979, 0, 981, 983,
	0, 555, 0, 0, 440, 516, 517, 45, 46, 0,
	0, 880, 871, 0, 0, 0, 0, 860, 862, 863,
	0, 0, 845, 0, 0, 558, 551, 37, 646, 647,
	649, 666, 0, 668, 670, 577, 568, 0, 835, -2,
	656, 657, 681, 682, 683, 0, 0, 0, 0, 679,
	661, 0, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 713, 810, 811, 0, 711, 712,
	721, 0, 0, 689, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 684, 0, 890, 0, 0, 0,
	0, 761, 0, 0, 696, 837, 0, 696, 837, 0,
	0, 0, 0, 0, 0, 0, 0, 832, 829, 0,
	0, 797, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 1243, 595, 0, 639, 0, 0, 0, 643,
	0, 643, 66, 643, 68, 0, 638, 897, 0, 0,
	0, 77, 78, 73, 901, 0, 907, 908, 909, 835,
	0, 870, 555, 225, 393, 395, 398, 399, 400, 229,
	231, 232, 233, 0, 1151, 366, 1253, 1293, -2, 358,
	1178, -2, -2, 236, 317, 316, 249, 0, 322, 322,
	308, 308, 308, 308, 277, 322, 280, 283, 284, 325,
	0, 325, 325, 325, 325, 322, 0, 0, 269, 270,
	271, 260, 0, 261, 310, 263, 0, 264, 265, 266,
	267, 372, 373, 0, 0, 0, 0, 0, 91, 923,
	92, 0, 121, 122, 96, 224, 0, 451, 453, 461,
	462, 1365, 0, 1365, 1365, 643, 0, 0, 485, 503,
	504, 502, 505, 0, 488, 495, 0, 524, 171, 172,
	194, 69, 0, 959, 978, 0, 982, 984, 550, 51,
	407, 408, 1364, -2, 441, 938, 441, 441, 428, 342,
	441, 928, 929, 930, 931, 932, 933, 934, 935, 0,
	0, 0, 0, 0, 866, 867, 859, 0, 916, 917,
	846, 847, 84, 559, 667, 669, 671, 0, 687, 658,
	679, 662, 0, 659, 0, 653, 0, 0, 573, 0,
	573, 573, 0, 747, 0, 748, 0, 573, 573, 0,
	0, 0, 0, 0, 0, 754, 755, 756, 757, 573,
	573, 573, 573, 0, 573, 573, 573, 0, 692, -2,
	758, 759, 760, 0, 0, 0, 0, 0, 803, 0,
	0, 804, 769, 0, 0, 0, 0, 0, 775, 856,
	0, 830, 0, 0, 778, 798, 0, 0, 799, 800,
	801, 802, 884, 0, 0, 0, 875, 0, 643, 892,
	0, 0, 583, 614, 616, 0, 611, 624, 625, 627,
	0, 629, 0, 631, 632, 602, 589, 686, 590, 0,
	0, 0, 639, 599, 0, 0, 0, 856, 0, 643,
	59, 60, 0, 75, 76, 0, 0, 82, 326, 327,
	0, 95, 0, 396, 0, 230, 0, 0, 0, 0,
	344, 358, 354, 355, 358, 349, 359, 350, 0, 238,
	0, 240, 241, 242, 243, 244, 0, 0, 321, 0,
	329, 331, 0, 245, 318, 0, 325, 325, 322, 275,
	276, 308, 281, 325, 285, 0, 286, 287, 288, 289,
	325, 0, 306, 0, 0, 262, 0, 389, 0, 947,
	83, 83, 0, 123, 124, 125, 0, 97, 98, 0,
	0, 0, 0, 0, 454, 64, 469, 470, 480, 380,
	381, 505, 487, 0, 680, 322, 0, 980, 558, 0,
	410, 0, 1364, 358, 0, 429, 430, 0, 442, 443,
	444, 0, 0, 1364, 0, 0, 0, 443, 0, 0,
	0, 0, 939, 940, 0, 0, 0, 343, 0, 0,
	0, 882, 881, 872, 36, 643, 0, 569, 836, 0,
	660, 0, 663, 573, 690, 732, 574, 564, 0, 733,
	734, 573, 570, 856, 749, 736, 737, 750, 751, 752,
	573, 573, 753, 741, 740, 739, 742, 573, 745, 744,
	746, 728, 0, 308, 308, 815, 308, 312, 818, 308,
	820, 308, 823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 777, 833, 0, 0, 0,
	52, 0, 884, 873, 886, 888, 0, 0, 0, 0,
	-2, 1120, 0, 606, 856, 0, 0, 0, 608, 615,
	0, 0, 609, 0, 610, 628, 630, 587, 0, 0,
	591, 0, 0, -2, 598, 0, 0, 0, 864, 644,
	58, 79, 80, 81, 394, 397, 0, 360, 308, 308,
	0, 364, 0, 358, 365, 346, 348, 0, 239, 319,
	0, 328, 330, 332, 309, 273, 274, 325, 282, 278,
	323, 324, 290, 322, 0, 322, 0, 313, 0, 376,
	390, 0, 0, 89, 0, 0, 104, 0, 100, 0,
	0, 0, 452, 486, 601, 970, 633, 84, 409, 0,
	437, 0, 0, 413, 946, 356, 0, -2, 414, 415,
	420, 421, 422, 423, 424, 0, 435, 0, 417, 0,
	437, 0, 432, 0, 0, 47, 0, 848, 0, 84,
	84, 729, 664, 731, 0, 735, 0, 0, 730, 738,
	743, 762, 812, 322, 816, 817, 819, 821, 822, 824,
	764, 763, 0, 0, 0, 0, 770, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 0, 53, 0, 889,
	-2, 0, 0, 70, 0, 864, 893, 894, 895, 612,
	0, 617, 0, 604, 0, 639, 596, 0, 0, 0,
	0, 57, 334, 0, 861, 861, 345, 347, 0, 320,
	279, 325, 307, 325, 0, 0, 391, 0, 83, 0,
	83, 105, 106, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 99, 101, 102, 103, 972, 966, 0, 0,
	412, 438, 0, 237, 237, 0, 358, 357, 0, 431,
	0, 936, 937, 0, 426, 437, 0, 0, 0, 883,
	853, 0, 643, 0, 560, 565, 571, 0, 813, 814,
	0, 0, 0, 0, 771, 772, 773, 805, 776, 828,
	0, 0, 0, 887, 874, 0, 878, 0, 607, 56,
	0, 603, 0, 592, 594, 639, 640, 641, 642, 333,
	337, 0, 342, 0, 361, 362, 363, 0, 296, 297,
	311, 314, 0, 90, 0, 0, 107, 108, 109, 110,
	112, 113, 0, 0, 0, 926, 974, -2, 0, 0,
	411, 439, 234, 235, 0, 946, 0, 416, 425, 427,
	0, 434, 0, 41, 0, 0, 848, 84, 856, 765,
	767, 766, 768, 0, 0, 0, 794, 795, 0, 877,
	0, 613, 605, 597, 338, 339, 0, 341, 0, 335,
	0, 83, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 0,
	0, 0, 0, 114, 115, 116, 117, 602, 0, 966,
	0, 968, 0, 965, 0, 643, 0, 0, 0, 433,
	0, 446, 0, 854, 855, 849, 850, 852, 853, 561,
	0, 774, 0, 0, 0, 885, -2, 340, 0, 88,
	336, 126, 94, 0, 0, 948, 0, 0, 153, 154,
	155, 950, 0, 195, 34, 0, 973, 0, 971, 0,
	0, 967, 848, 335, 0, 335, 445, 0, 0, 0,
	42, 572, 806, 0, 809, 0, 83, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 151, 0, 0, 927,
	975, 0, 0, 853, 418, 0, 436, 447, 0, 851,
	807, 0, 0, 127, 128, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 951, 118, 196, 969, 963, 39,
	335, 0, 0, 367, 83, 129, 130, 131, 132, 133,
	0, 135, 0, 0, 0, 147, 148, 149, 0, 156,
	158, 159, 160, 0, 162, 163, 152, 419, 0, 0,
	368, 369, 0, 93, 0, 0, 0, 0, 0, 0,
	144, 0, 150, 0, 161, 0, 808, 370, 0, 371,
	0, 0, 0, 0, 0, 139, 140, 0, 0, 0,
	145, 0, 157, 0, 0, 382, 384, 385, 0, 0,
	383, 134, 136, 0, 142, 0, 0, 448, 449, 386,
	387, 388, 0, 0, 0, 141, 0, 146, 143,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 441,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:428
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:432
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:472
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:478
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:484
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:491
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:497
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:515
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:521
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:553
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:557
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:577
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:583
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:595
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.str = InsertStr
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.str = ReplaceStr
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:623
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:627
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:631
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:635
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:669
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:678
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:695
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:728
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:732
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:745
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:750
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:756
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:765
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:770
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:775
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:779
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:787
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:795
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:814
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:822
		{
			yyVAL.procedureParams = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:842
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:854
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:859
		{
			yyVAL.characteristics = nil
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:873
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:883
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:887
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:921
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:926
		{
			yyVAL.str = ""
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.str = BeforeStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.str = AfterStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = InsertStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.str = UpdateStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.str = DeleteStr
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:959
		{
			yyVAL.triggerOrder = nil
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:963
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:989
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:993
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1009
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 140:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1015
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 141:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1020
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1025
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 143:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1031
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1049
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1055
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1059
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1063
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1067
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1075
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1144
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1204
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1208
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1212
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1216
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1220
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &Resignal{}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1246
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1257
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.exprs = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1313
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1330
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1337
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1342
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1403
		{
			yyVAL.columnType = ColumnType{}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1407
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1425
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1452
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1751
		{
			yyVAL.sqlVal = nil
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1760
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1772
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1790
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1799
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.colKeyOpt = colKey
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1881
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1886
		{
			yyVAL.indexOptions = nil
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1910
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1935
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1943
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.str = yyDollar[1].str
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 367:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2037
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 368:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2041
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 369:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2045
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 370:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2049
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 371:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2053
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2059
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2077
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.boolean = true
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.boolean = true
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.boolean = false
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2152
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = yyDollar[1].str
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = string("")
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2218
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2245
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2252
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2271
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2280
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 419:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2284
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2312
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2323
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2345
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2354
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2358
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2366
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnOrder = nil
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2393
		{
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
		}
	case 445:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2403
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 448:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2419
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2423
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2439
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2447
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2459
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2467
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2475
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2483
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2491
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2500
		{

		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2529
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2542
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2546
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2551
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2555
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2563
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2567
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2571
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2587
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2595
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2599
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2603
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2607
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 486:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2611
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2616
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2630
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2638
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2662
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = "full "
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2704
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.showFilter = nil
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = ""
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = SessionStr
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = GlobalStr
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.statement = &Begin{}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.statement = &Begin{}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2770
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2774
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.statement = &Commit{}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2786
		{
			yyVAL.statement = &Rollback{}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2802
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2806
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2810
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2816
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = ""
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2863
		{
			yyVAL.statement = &OtherRead{}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2883
		{
			setAllowComments(yylex, true)
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2887
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			yyVAL.bytes2 = nil
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = UnionStr
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = UnionAllStr
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = UnionDistinctStr
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2916
		{
			yyVAL.byt = 0
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.byt = 1
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = SQLCacheStr
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = DistinctStr
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = StraightJoinHint
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2969
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2992
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3010
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3021
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3025
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3030
		{
			yyVAL.over = nil
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.over = yyDollar[1].over
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3039
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3089
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3121
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3132
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3147
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3151
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = nil
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3174
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3179
		{
			yyVAL.columns = nil
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3216
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3220
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3224
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3234
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3236
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3240
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3242
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3246
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3251
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3253
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.str = JoinStr
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.str = JoinStr
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.str = JoinStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = StraightJoinStr
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = LeftJoinStr
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = LeftJoinStr
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = RightJoinStr
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = RightJoinStr
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.str = NaturalJoinStr
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3326
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3351
		{
			yyVAL.indexHints = nil
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3355
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3359
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3363
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3368
		{
			yyVAL.expr = nil
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3412
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3444
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3448
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3452
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 664:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3460
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.str = IsNullStr
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = IsNotNullStr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			yyVAL.str = IsTrueStr
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = IsNotTrueStr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = IsFalseStr
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = IsNotFalseStr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = EqualStr
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = LessThanStr
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = GreaterThanStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = LessEqualStr
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = GreaterEqualStr
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = NotEqualStr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3525
		{
			yyVAL.expr = nil
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3535
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3549
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3555
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3565
		{
			yyVAL.selectExprs = nil
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3644
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3718
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3764
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3780
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3784
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3792
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3796
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3800
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 743:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3808
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3833
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3841
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3857
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3861
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3865
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 765:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 766:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3908
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 767:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3912
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 768:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3916
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3920
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 770:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3924
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3928
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 772:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3932
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 773:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 774:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 776:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3970
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4009
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4013
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4017
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 794:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4036
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 795:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4040
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = ""
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = BooleanModeStr
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 808:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4099
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = QueryExpansionStr
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4127
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4157
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4174
		{
			yyVAL.expr = nil
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = string("")
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4197
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4208
		{
			yyVAL.expr = nil
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4222
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4226
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &NullVal{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4279
		{
			yyVAL.exprs = nil
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4283
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = nil
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.orderBy = nil
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = AscScr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = AscScr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = DescScr
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.limit = nil
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4365
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4369
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = ForUpdateStr
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = ShareModeStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4409
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4422
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4426
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4430
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4441
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4449
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			yyVAL.assignExprs = nil
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4458
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4478
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4490
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4504
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4513
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4540
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4553
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.setScope = SetScope_Global
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.setScope = SetScope_Session
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
			yyVAL.setScope = SetScope_Session
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4600
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4604
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.bytes = []byte("charset")
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.expr = &Default{}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4635
		{
			yyVAL.byt = 0
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.byt = 1
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4640
		{
			yyVAL.byt = 0
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4642
		{
			yyVAL.byt = 1
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4645
		{
			yyVAL.byt = 0
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.byt = 1
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = IgnoreStr
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.sqlVal = nil
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.empty = struct{}{}
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.empty = struct{}{}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.empty = struct{}{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.empty = struct{}{}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.empty = struct{}{}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4684
		{
			yyVAL.empty = struct{}{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.empty = struct{}{}
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.empty = struct{}{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = UniqueStr
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = FulltextStr
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = SpatialStr
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = ""
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = yyDollar[1].str
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4704
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4706
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = string("")
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4758
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4763
		{
			yyVAL.EnclosedBy = nil
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4767
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4772
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4776
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.sqlVal = nil
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4785
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4790
		{
			yyVAL.sqlVal = nil
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4799
		{
			yyVAL.Fields = nil
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4803
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4808
		{
			yyVAL.Lines = nil
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4812
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4817
		{
			yyVAL.sqlVal = nil
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4843
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4847
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4853
		{
			yyVAL.lockType = LockRead
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4857
		{
			yyVAL.lockType = LockReadLocal
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.lockType = LockWrite
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4871
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			decNesting(yylex)
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5291
		{
			skipToEnd(yylex)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5296
		{
			skipToEnd(yylex)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5300
		{
			skipToEnd(yylex)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5304
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
