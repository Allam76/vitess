// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	boolean               bool
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const AT_ID = 57410
const AT_AT_ID = 57411
const HEX = 57412
const STRING = 57413
const INTEGRAL = 57414
const FLOAT = 57415
const HEXNUM = 57416
const VALUE_ARG = 57417
const LIST_ARG = 57418
const COMMENT = 57419
const COMMENT_KEYWORD = 57420
const BIT_LITERAL = 57421
const NULL = 57422
const TRUE = 57423
const FALSE = 57424
const OFF = 57425
const OR = 57426
const AND = 57427
const NOT = 57428
const BETWEEN = 57429
const CASE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const ELSEIF = 57434
const END = 57435
const LE = 57436
const GE = 57437
const NE = 57438
const NULL_SAFE_EQUAL = 57439
const IS = 57440
const LIKE = 57441
const REGEXP = 57442
const IN = 57443
const SHIFT_LEFT = 57444
const SHIFT_RIGHT = 57445
const DIV = 57446
const MOD = 57447
const UNARY = 57448
const COLLATE = 57449
const BINARY = 57450
const UNDERSCORE_BINARY = 57451
const UNDERSCORE_UTF8MB4 = 57452
const INTERVAL = 57453
const JSON_EXTRACT_OP = 57454
const JSON_UNQUOTE_EXTRACT_OP = 57455
const CREATE = 57456
const ALTER = 57457
const DROP = 57458
const RENAME = 57459
const ANALYZE = 57460
const ADD = 57461
const FLUSH = 57462
const MODIFY = 57463
const CHANGE = 57464
const SCHEMA = 57465
const TABLE = 57466
const INDEX = 57467
const INDEXES = 57468
const VIEW = 57469
const TO = 57470
const IGNORE = 57471
const IF = 57472
const PRIMARY = 57473
const COLUMN = 57474
const SPATIAL = 57475
const FULLTEXT = 57476
const KEY_BLOCK_SIZE = 57477
const CHECK = 57478
const ACTION = 57479
const CASCADE = 57480
const CONSTRAINT = 57481
const FOREIGN = 57482
const NO = 57483
const REFERENCES = 57484
const RESTRICT = 57485
const FIRST = 57486
const AFTER = 57487
const SHOW = 57488
const DESCRIBE = 57489
const EXPLAIN = 57490
const DATE = 57491
const ESCAPE = 57492
const REPAIR = 57493
const OPTIMIZE = 57494
const TRUNCATE = 57495
const FORMAT = 57496
const MAXVALUE = 57497
const PARTITION = 57498
const REORGANIZE = 57499
const LESS = 57500
const THAN = 57501
const PROCEDURE = 57502
const TRIGGER = 57503
const TRIGGERS = 57504
const FUNCTION = 57505
const VINDEX = 57506
const VINDEXES = 57507
const STATUS = 57508
const VARIABLES = 57509
const WARNINGS = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const CLASS_ORIGIN = 57527
const SUBCLASS_ORIGIN = 57528
const MESSAGE_TEXT = 57529
const MYSQL_ERRNO = 57530
const CONSTRAINT_CATALOG = 57531
const CONSTRAINT_SCHEMA = 57532
const CONSTRAINT_NAME = 57533
const CATALOG_NAME = 57534
const SCHEMA_NAME = 57535
const TABLE_NAME = 57536
const COLUMN_NAME = 57537
const CURSOR_NAME = 57538
const SIGNAL = 57539
const SQLSTATE = 57540
const BEGIN = 57541
const START = 57542
const TRANSACTION = 57543
const COMMIT = 57544
const ROLLBACK = 57545
const BIT = 57546
const TINYINT = 57547
const SMALLINT = 57548
const MEDIUMINT = 57549
const INT = 57550
const INTEGER = 57551
const BIGINT = 57552
const INTNUM = 57553
const REAL = 57554
const DOUBLE = 57555
const FLOAT_TYPE = 57556
const DECIMAL = 57557
const NUMERIC = 57558
const DEC = 57559
const FIXED = 57560
const PRECISION = 57561
const TIME = 57562
const TIMESTAMP = 57563
const DATETIME = 57564
const YEAR = 57565
const CHAR = 57566
const VARCHAR = 57567
const BOOL = 57568
const CHARACTER = 57569
const VARBINARY = 57570
const NCHAR = 57571
const NVARCHAR = 57572
const NATIONAL = 57573
const VARYING = 57574
const TEXT = 57575
const TINYTEXT = 57576
const MEDIUMTEXT = 57577
const LONGTEXT = 57578
const LONG = 57579
const BLOB = 57580
const TINYBLOB = 57581
const MEDIUMBLOB = 57582
const LONGBLOB = 57583
const JSON = 57584
const ENUM = 57585
const GEOMETRY = 57586
const POINT = 57587
const LINESTRING = 57588
const POLYGON = 57589
const GEOMETRYCOLLECTION = 57590
const MULTIPOINT = 57591
const MULTILINESTRING = 57592
const MULTIPOLYGON = 57593
const NULLX = 57594
const AUTO_INCREMENT = 57595
const APPROXNUM = 57596
const SIGNED = 57597
const UNSIGNED = 57598
const ZEROFILL = 57599
const LOCAL = 57600
const COLLATION = 57601
const DATABASES = 57602
const SCHEMAS = 57603
const TABLES = 57604
const VITESS_METADATA = 57605
const VSCHEMA = 57606
const FULL = 57607
const PROCESSLIST = 57608
const COLUMNS = 57609
const FIELDS = 57610
const ENGINES = 57611
const PLUGINS = 57612
const NAMES = 57613
const CHARSET = 57614
const GLOBAL = 57615
const SESSION = 57616
const ISOLATION = 57617
const LEVEL = 57618
const READ = 57619
const WRITE = 57620
const ONLY = 57621
const REPEATABLE = 57622
const COMMITTED = 57623
const UNCOMMITTED = 57624
const SERIALIZABLE = 57625
const CURRENT_TIMESTAMP = 57626
const DATABASE = 57627
const CURRENT_DATE = 57628
const CURRENT_USER = 57629
const CURRENT_TIME = 57630
const LOCALTIME = 57631
const LOCALTIMESTAMP = 57632
const UTC_DATE = 57633
const UTC_TIME = 57634
const UTC_TIMESTAMP = 57635
const REPLACE = 57636
const CONVERT = 57637
const CAST = 57638
const SUBSTR = 57639
const SUBSTRING = 57640
const GROUP_CONCAT = 57641
const SEPARATOR = 57642
const TIMESTAMPADD = 57643
const TIMESTAMPDIFF = 57644
const OVER = 57645
const WINDOW = 57646
const GROUPING = 57647
const GROUPS = 57648
const AVG = 57649
const BIT_AND = 57650
const BIT_OR = 57651
const BIT_XOR = 57652
const COUNT = 57653
const JSON_ARRAYAGG = 57654
const JSON_OBJECTAGG = 57655
const MAX = 57656
const MIN = 57657
const STDDEV_POP = 57658
const STDDEV = 57659
const STD = 57660
const STDDEV_SAMP = 57661
const SUM = 57662
const VAR_POP = 57663
const VARIANCE = 57664
const VAR_SAMP = 57665
const CUME_DIST = 57666
const DENSE_RANK = 57667
const FIRST_VALUE = 57668
const LAG = 57669
const LAST_VALUE = 57670
const LEAD = 57671
const NTH_VALUE = 57672
const NTILE = 57673
const ROW_NUMBER = 57674
const PERCENT_RANK = 57675
const RANK = 57676
const MATCH = 57677
const AGAINST = 57678
const BOOLEAN = 57679
const LANGUAGE = 57680
const WITH = 57681
const QUERY = 57682
const EXPANSION = 57683
const UNUSED = 57684
const ARRAY = 57685
const DESCRIPTION = 57686
const EMPTY = 57687
const EXCEPT = 57688
const JSON_TABLE = 57689
const LATERAL = 57690
const MEMBER = 57691
const RECURSIVE = 57692
const ACTIVE = 57693
const ADMIN = 57694
const BUCKETS = 57695
const CLONE = 57696
const COMPONENT = 57697
const DEFINITION = 57698
const ENFORCED = 57699
const EXCLUDE = 57700
const FOLLOWING = 57701
const GEOMCOLLECTION = 57702
const GET_MASTER_PUBLIC_KEY = 57703
const HISTOGRAM = 57704
const HISTORY = 57705
const INACTIVE = 57706
const INVISIBLE = 57707
const LOCKED = 57708
const MASTER_COMPRESSION_ALGORITHMS = 57709
const MASTER_PUBLIC_KEY_PATH = 57710
const MASTER_TLS_CIPHERSUITES = 57711
const MASTER_ZSTD_COMPRESSION_LEVEL = 57712
const NESTED = 57713
const NETWORK_NAMESPACE = 57714
const NOWAIT = 57715
const NULLS = 57716
const OJ = 57717
const OLD = 57718
const OPTIONAL = 57719
const ORDINALITY = 57720
const ORGANIZATION = 57721
const OTHERS = 57722
const PATH = 57723
const PERSIST = 57724
const PERSIST_ONLY = 57725
const PRECEDING = 57726
const PRIVILEGE_CHECKS_USER = 57727
const PROCESS = 57728
const RANDOM = 57729
const REFERENCE = 57730
const REQUIRE_ROW_FORMAT = 57731
const RESOURCE = 57732
const RESPECT = 57733
const RESTART = 57734
const RETAIN = 57735
const REUSE = 57736
const ROLE = 57737
const SECONDARY = 57738
const SECONDARY_ENGINE = 57739
const SECONDARY_LOAD = 57740
const SECONDARY_UNLOAD = 57741
const SKIP = 57742
const SRID = 57743
const THREAD_PRIORITY = 57744
const TIES = 57745
const UNBOUNDED = 57746
const VCPU = 57747
const VISIBLE = 57748
const SYSTEM = 57749
const INFILE = 57750

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 40,
	-2, 4,
	-1, 36,
	142, 883,
	-2, 135,
	-1, 44,
	183, 484,
	184, 484,
	-2, 472,
	-1, 51,
	1, 1286,
	426, 1286,
	-2, 504,
	-1, 388,
	128, 891,
	-2, 887,
	-1, 389,
	128, 892,
	-2, 888,
	-1, 490,
	98, 1206,
	128, 1206,
	-2, 76,
	-1, 491,
	98, 1108,
	128, 1108,
	-2, 77,
	-1, 496,
	98, 1064,
	128, 1064,
	-2, 850,
	-1, 498,
	98, 1146,
	128, 1146,
	-2, 852,
	-1, 504,
	153, 32,
	-2, 1075,
	-1, 705,
	5, 40,
	-2, 498,
	-1, 709,
	5, 40,
	-2, 497,
	-1, 931,
	1, 556,
	5, 556,
	12, 556,
	13, 556,
	14, 556,
	15, 556,
	17, 556,
	19, 556,
	30, 556,
	31, 556,
	55, 556,
	56, 556,
	57, 556,
	58, 556,
	59, 556,
	61, 556,
	62, 556,
	65, 556,
	66, 556,
	68, 556,
	69, 556,
	426, 556,
	-2, 583,
	-1, 934,
	66, 57,
	68, 57,
	-2, 61,
	-1, 1132,
	128, 894,
	-2, 890,
	-1, 1288,
	153, 32,
	-2, 1075,
	-1, 1292,
	67, 336,
	-2, 1031,
	-1, 1295,
	67, 332,
	70, 332,
	-2, 966,
	-1, 1296,
	67, 333,
	70, 333,
	-2, 976,
	-1, 1377,
	67, 411,
	70, 411,
	-2, 375,
	-1, 1426,
	5, 41,
	-2, 649,
	-1, 1486,
	5, 40,
	-2, 827,
	-1, 1584,
	5, 40,
	-2, 78,
	-1, 1729,
	1, 604,
	5, 604,
	12, 604,
	13, 604,
	14, 604,
	15, 604,
	17, 604,
	19, 604,
	30, 604,
	31, 604,
	55, 604,
	56, 604,
	57, 604,
	58, 604,
	59, 604,
	61, 604,
	62, 604,
	65, 604,
	66, 604,
	68, 604,
	69, 604,
	426, 604,
	-2, 583,
	-1, 1851,
	5, 41,
	-2, 828,
	-1, 1882,
	5, 40,
	-2, 78,
	-1, 1941,
	5, 40,
	-2, 830,
	-1, 1981,
	41, 901,
	-2, 899,
	-1, 2026,
	5, 40,
	-2, 110,
	-1, 2086,
	5, 41,
	-2, 831,
	-1, 2149,
	426, 188,
	-2, 40,
}

const yyPrivate = 57344

const yyLast = 22859

var yyAct = [...]int{

	422, 60, 2148, 2214, 2182, 2192, 2090, 2157, 2147, 2183,
	2077, 2156, 24, 1340, 2152, 7, 2151, 6, 2068, 2025,
	1254, 2123, 2155, 1864, 1955, 1981, 1808, 2150, 5, 1640,
	393, 1742, 486, 1919, 421, 1637, 71, 1338, 351, 1709,
	1279, 1903, 2153, 8, 1297, 2154, 1247, 1886, 1107, 1245,
	856, 1743, 1249, 2091, 1710, 1289, 367, 1538, 671, 1790,
	690, 60, 1592, 1706, 406, 1241, 1329, 92, 1243, 1278,
	1716, 1720, 1657, 1170, 372, 1691, 1366, 1193, 1615, 1074,
	1285, 1293, 1157, 391, 1056, 1325, 1614, 959, 1225, 1575,
	1313, 352, 353, 1063, 1232, 356, 502, 1134, 728, 928,
	1185, 947, 1042, 507, 734, 505, 484, 946, 376, 778,
	489, 501, 492, 936, 872, 647, 1512, 481, 2235, 2231,
	2221, 2204, 873, 927, 2194, 769, 2186, 2177, 2126, 386,
	70, 1092, 1773, 1880, 1887, 75, 2196, 2116, 2181, 2083,
	2166, 1809, 1889, 503, 2115, 1674, 1188, 1455, 1836, 646,
	1737, 380, 2149, 3, 948, 1521, 949, 674, 1520, 1267,
	702, 1522, 1738, 1739, 669, 355, 77, 78, 79, 80,
	81, 2006, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 1268, 1269, 832, 2082, 692, 354,
	1273, 435, 719, 441, 443, 442, 439, 440, 438, 437,
	436, 1558, 61, 32, 33, 649, 395, 652, 444, 445,
	1299, 1892, 29, 361, 61, 32, 33, 693, 694, 29,
	1642, 61, 32, 33, 34, 1926, 1314, 673, 677, 1326,
	363, 679, 365, 102, 98, 99, 34, 100, 1305, 1307,
	1319, 1306, 1314, 1827, 1825, 366, 358, 1978, 1977, 1890,
	1891, 1893, 1894, 1895, 1976, 1975, 1974, 701, 1972, 1347,
	1973, 2053, 2054, 94, 675, 678, 2024, 676, 2120, 2121,
	104, 103, 1593, 68, 1098, 29, 2092, 61, 32, 33,
	68, 1550, 687, 688, 700, 686, 1346, 685, 695, 1097,
	1644, 1095, 696, 693, 694, 2180, 1555, 1554, 2048, 34,
	1301, 2189, 2193, 2188, 1301, 2069, 87, 651, 650, 1643,
	1594, 2165, 1639, 1226, 348, 1904, 1905, 1551, 2022, 1099,
	1746, 2227, 1336, 72, 670, 1530, 670, 670, 1956, 1096,
	1336, 1619, 2236, 1556, 670, 1548, 68, 2233, 2222, 2205,
	670, 1549, 648, 1958, 657, 2056, 365, 1023, 60, 60,
	349, 1250, 1252, 2049, 1914, 1597, 1032, 1511, 1510, 89,
	91, 2048, 706, 86, 708, 1913, 2234, 364, 1509, 96,
	95, 644, 1612, 60, 1436, 707, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 841, 672,
	736, 843, 1536, 711, 712, 101, 1595, 1596, 1328, 1314,
	1553, 722, 320, 782, 94, 97, 2014, 765, 1888, 985,
	2158, 93, 2218, 1854, 1957, 1400, 2049, 1772, 1399, 2007,
	57, 854, 2158, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 1251, 871, 874, 874, 874, 880,
	874, 874, 880, 874, 880, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 2081,
	932, 1841, 1565, 57, 1525, 2158, 1304, 1912, 1536, 1535,
	680, 681, 844, 845, 844, 845, 1517, 1415, 689, 1105,
	705, 709, 955, 972, 703, 62, 942, 1762, 720, 767,
	96, 95, 812, 1539, 665, 1274, 727, 62, 492, 832,
	944, 88, 1552, 1263, 62, 766, 846, 847, 848, 849,
	850, 851, 852, 853, 1102, 822, 1433, 2216, 832, 1070,
	2217, 777, 2215, 1638, 1658, 986, 776, 775, 926, 1186,
	1995, 875, 877, 879, 881, 883, 885, 886, 888, 876,
	878, 1763, 882, 884, 777, 887, 1064, 29, 1356, 61,
	32, 33, 1634, 1141, 683, 855, 1058, 776, 775, 697,
	62, 1371, 724, 2124, 725, 1535, 1660, 726, 1139, 1140,
	1138, 34, 950, 1536, 1536, 777, 940, 842, 935, 710,
	999, 1002, 1003, 1004, 1005, 1006, 1007, 382, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 653, 987, 988, 989, 990,
	966, 970, 1000, 967, 973, 969, 971, 968, 68, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	991, 992, 993, 994, 995, 996, 997, 998, 1676, 776,
	775, 2220, 1662, 2048, 844, 845, 2224, 1666, 2230, 1661,
	1431, 1659, 1430, 1065, 84, 1357, 1664, 777, 670, 670,
	1057, 684, 1186, 699, 1444, 670, 670, 670, 775, 1663,
	1025, 776, 775, 2208, 2193, 2207, 931, 1536, 670, 670,
	1535, 1535, 1665, 1667, 1633, 777, 1623, 1619, 1630, 777,
	2174, 1620, 1750, 83, 1627, 1629, 772, 2100, 2049, 821,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 1624, 68, 832, 670, 823, 824, 825, 826, 827,
	828, 829, 822, 1001, 1137, 832, 2088, 1879, 907, 908,
	909, 910, 911, 895, 896, 897, 912, 913, 898, 899,
	900, 906, 914, 901, 902, 903, 904, 905, 917, 916,
	915, 918, 919, 921, 920, 922, 2228, 1367, 1090, 1044,
	1690, 1059, 1878, 1580, 1033, 57, 1158, 2158, 1581, 1578,
	1159, 1653, 1559, 1523, 1535, 1110, 1066, 1524, 1047, 1048,
	1623, 1619, 1432, 2163, 2162, 1620, 776, 775, 1621, 1622,
	782, 2129, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 777, 1624, 832, 1412, 1413, 1414,
	2229, 656, 1111, 825, 826, 827, 828, 829, 822, 1068,
	715, 832, 1045, 1046, 2106, 2021, 1971, 1108, 1109, 1049,
	1050, 1051, 1933, 2142, 60, 2124, 1876, 2144, 1755, 2143,
	1135, 1104, 1060, 1061, 714, 362, 776, 775, 1576, 858,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 1131, 62, 832, 777, 1375, 1113, 1368, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 1094, 1128,
	832, 776, 775, 1358, 1088, 1175, 1178, 2141, 2176, 776,
	775, 1103, 1187, 721, 1124, 1126, 1127, 1950, 2167, 777,
	1125, 1115, 2019, 1112, 1989, 1130, 1132, 777, 1870, 2164,
	776, 775, 659, 660, 661, 662, 663, 1539, 1161, 1162,
	1017, 1018, 1019, 1244, 478, 479, 1116, 932, 777, 1117,
	1839, 932, 1983, 1789, 1133, 27, 1791, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1156, 1532, 1018, 1019, 1388, 1950, 2161, 2110, 721,
	1965, 1199, 1985, 1201, 492, 1791, 731, 735, 1910, 1387,
	1164, 821, 820, 830, 831, 823, 824, 825, 826, 827,
	828, 829, 822, 813, 1183, 832, 855, 1870, 2107, 1964,
	776, 775, 1165, 1167, 1189, 1258, 1811, 2125, 1172, 1260,
	1805, 1168, 1950, 2072, 1275, 1801, 1280, 503, 777, 371,
	1392, 1798, 1136, 1256, 1796, 670, 1795, 670, 1870, 2023,
	857, 1386, 1208, 1209, 1950, 2015, 1778, 1213, 1950, 1961,
	1216, 870, 1197, 1198, 1783, 1221, 1044, 1782, 1261, 1204,
	1205, 1206, 1207, 1265, 1264, 1286, 776, 775, 1276, 1132,
	1950, 721, 1756, 1678, 1781, 389, 1315, 1316, 1317, 1318,
	1283, 1870, 1869, 943, 777, 1856, 721, 2113, 1331, 1332,
	1333, 1334, 1384, 1378, 1379, 855, 1377, 1604, 1380, 1381,
	1853, 721, 1770, 1769, 1849, 1327, 29, 1603, 61, 32,
	33, 1766, 1767, 1234, 1237, 1238, 1239, 1235, 109, 1236,
	1240, 109, 1354, 1721, 1722, 1766, 1765, 109, 1427, 721,
	34, 1335, 1353, 1390, 1393, 1229, 721, 736, 1160, 29,
	1166, 1372, 1416, 1166, 721, 72, 1072, 1041, 1040, 931,
	1039, 1038, 1030, 931, 1028, 1027, 109, 931, 1026, 109,
	510, 1365, 109, 1484, 1024, 958, 957, 68, 938, 938,
	29, 667, 359, 109, 1131, 510, 1228, 1513, 1513, 1707,
	1485, 109, 943, 1135, 411, 410, 413, 414, 415, 416,
	29, 1994, 2048, 412, 417, 72, 1648, 2211, 1166, 1342,
	68, 1344, 1229, 1257, 1385, 937, 1779, 1768, 1526, 1266,
	1427, 1940, 1449, 1448, 1229, 1370, 1352, 937, 1276, 1132,
	1405, 1404, 1106, 939, 939, 941, 937, 1031, 373, 1421,
	1383, 68, 2200, 1229, 943, 68, 1487, 1488, 2118, 2108,
	932, 932, 932, 932, 932, 2099, 1417, 2049, 1427, 1987,
	1921, 68, 1424, 1427, 1881, 1244, 1301, 1505, 1234, 1237,
	1238, 1239, 1235, 1859, 1236, 1240, 1330, 1749, 932, 492,
	1641, 1489, 1389, 1721, 1722, 1401, 1020, 1326, 1531, 1418,
	1419, 1420, 1348, 1454, 1456, 1321, 1320, 717, 2198, 68,
	1462, 1463, 1464, 1465, 1339, 1443, 1922, 2184, 1777, 1724,
	1707, 1582, 1071, 1300, 1503, 1035, 1508, 1499, 1497, 2138,
	1119, 1507, 1500, 1498, 57, 1067, 2158, 1423, 1501, 1391,
	1238, 1239, 1727, 1726, 1496, 1426, 1428, 1495, 1429, 1527,
	377, 378, 2114, 1645, 1435, 857, 1514, 1438, 1439, 1440,
	1491, 1492, 2135, 1494, 1446, 1502, 1447, 1280, 1410, 1450,
	1451, 60, 1452, 1453, 1409, 1136, 1457, 1458, 1459, 1460,
	1461, 1540, 670, 1490, 670, 670, 1493, 1468, 1469, 1470,
	1938, 1472, 1473, 1541, 1475, 1476, 1477, 1478, 1518, 1480,
	1481, 1482, 1800, 1534, 1537, 1515, 721, 1516, 1486, 1754,
	1529, 770, 771, 1121, 1122, 1753, 109, 1533, 2058, 510,
	1504, 510, 510, 1560, 1561, 2061, 2105, 1168, 2104, 510,
	1567, 62, 1982, 2128, 1980, 510, 2052, 2051, 360, 768,
	1574, 1577, 1607, 1569, 1579, 1613, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 956, 109,
	832, 729, 713, 668, 1847, 1917, 931, 931, 931, 931,
	931, 1108, 1109, 730, 1374, 1343, 1606, 1034, 781, 1585,
	1609, 931, 770, 771, 1605, 1610, 1682, 1626, 1618, 1616,
	1628, 1632, 1611, 1362, 931, 1625, 857, 1635, 1636, 1242,
	1173, 1174, 1602, 1022, 1650, 374, 375, 1408, 1675, 1968,
	368, 2131, 1924, 2130, 2102, 1407, 1712, 2062, 60, 2000,
	1937, 369, 72, 1584, 1651, 1652, 1999, 1608, 1513, 2202,
	2201, 1656, 1437, 1434, 1568, 1669, 1570, 1571, 1572, 1573,
	1731, 1732, 1733, 1062, 1668, 492, 1598, 1708, 1600, 1601,
	1711, 1587, 1588, 1589, 2202, 773, 2201, 2011, 1752, 1101,
	74, 2040, 47, 1683, 1684, 1685, 1686, 1687, 2042, 19,
	2041, 18, 2043, 20, 109, 109, 109, 2044, 21, 1734,
	2039, 15, 1654, 76, 1730, 2038, 14, 50, 1272, 510,
	2032, 10, 69, 1670, 1671, 1725, 1672, 1673, 1, 1741,
	2059, 1655, 2046, 25, 2037, 13, 1728, 1979, 1679, 1680,
	2034, 12, 2033, 11, 1650, 1280, 1900, 1280, 1745, 2031,
	9, 1885, 1747, 1884, 1591, 1748, 1740, 1590, 1775, 1776,
	716, 2103, 2057, 1091, 1617, 1810, 1718, 1015, 1016, 1918,
	1382, 2067, 1287, 1688, 1689, 1277, 500, 82, 1694, 1355,
	682, 1697, 1908, 328, 1284, 1546, 1702, 2060, 1337, 718,
	1545, 1736, 1542, 1557, 1298, 1544, 1729, 1543, 2055, 1547,
	1713, 963, 961, 962, 29, 960, 61, 32, 33, 932,
	965, 964, 332, 1759, 1792, 487, 951, 774, 90, 51,
	1911, 1631, 1376, 85, 1069, 1797, 1359, 691, 34, 334,
	840, 1406, 1519, 493, 1793, 1834, 2098, 1714, 2119, 733,
	1751, 1780, 2073, 1998, 1923, 1794, 1442, 869, 1184, 29,
	1785, 61, 32, 33, 394, 1804, 2076, 1123, 409, 408,
	407, 404, 1787, 405, 1361, 68, 1114, 1483, 814, 1771,
	510, 1402, 1403, 34, 735, 392, 384, 1816, 109, 1840,
	930, 923, 109, 1373, 1233, 109, 1231, 1230, 1833, 1823,
	2048, 109, 1036, 510, 510, 2203, 482, 1786, 1723, 1719,
	510, 510, 510, 109, 109, 109, 929, 1647, 109, 698,
	68, 1757, 1758, 510, 510, 1857, 1866, 1867, 1761, 347,
	1835, 2005, 1118, 31, 1815, 1764, 73, 379, 26, 17,
	704, 22, 1848, 1872, 1425, 2048, 1862, 60, 16, 654,
	35, 1527, 39, 1818, 38, 2049, 37, 1586, 109, 510,
	1345, 1868, 357, 109, 1445, 1863, 1075, 1073, 1817, 1280,
	2190, 2122, 2096, 2047, 1819, 23, 2168, 4, 370, 28,
	2, 0, 0, 0, 0, 1828, 1829, 1873, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	2049, 1907, 832, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 1896, 0, 0, 781, 1915, 0, 1901, 1902,
	1712, 1745, 57, 1942, 2158, 931, 1875, 0, 1877, 1850,
	1851, 1852, 0, 1855, 0, 1916, 0, 0, 1920, 1897,
	1898, 1899, 0, 1194, 0, 1861, 1909, 0, 0, 1906,
	0, 0, 0, 1947, 1711, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 1967, 57, 1969, 2158,
	0, 0, 0, 0, 1939, 0, 0, 0, 0, 0,
	0, 1948, 1925, 1966, 1946, 0, 1949, 0, 1993, 510,
	1960, 0, 1959, 1954, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 1712, 1984, 60, 0, 1996, 0, 0, 0, 62,
	1874, 1986, 0, 0, 1991, 510, 510, 0, 1992, 0,
	1927, 1928, 1929, 1930, 1931, 0, 1988, 0, 1934, 1935,
	60, 494, 0, 0, 506, 1711, 0, 0, 0, 2018,
	2012, 2045, 1932, 0, 2029, 0, 2028, 1936, 2010, 658,
	109, 0, 2036, 2020, 62, 0, 2016, 2027, 109, 109,
	0, 0, 109, 109, 0, 1941, 109, 109, 109, 0,
	0, 1951, 2030, 1952, 1953, 2035, 0, 0, 0, 2064,
	2075, 2079, 2063, 510, 510, 0, 2065, 0, 2070, 0,
	0, 2066, 0, 0, 0, 0, 2071, 0, 0, 2093,
	0, 0, 492, 0, 2085, 0, 0, 2084, 0, 0,
	0, 60, 1677, 1920, 1280, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 2029, 1962, 2028, 1963, 0,
	2097, 0, 0, 2036, 2001, 2002, 2003, 2004, 2027, 0,
	0, 2008, 2009, 2101, 0, 0, 0, 0, 0, 109,
	510, 0, 510, 2030, 0, 2013, 2035, 109, 109, 0,
	0, 109, 2112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2132, 0, 2018, 0, 0, 0,
	0, 1735, 2026, 2127, 2137, 0, 60, 60, 109, 2134,
	109, 109, 0, 2140, 2079, 0, 0, 109, 2045, 2136,
	2133, 2029, 2139, 2028, 2145, 60, 2160, 0, 2169, 2036,
	0, 0, 2080, 2175, 2027, 2173, 0, 2172, 0, 60,
	2086, 109, 109, 109, 109, 109, 0, 2178, 2171, 2030,
	0, 2179, 2035, 0, 0, 0, 0, 60, 60, 0,
	2191, 2195, 2185, 2170, 0, 2187, 0, 60, 2199, 2191,
	60, 0, 2197, 342, 0, 60, 2209, 2191, 2206, 0,
	0, 0, 0, 2026, 0, 60, 2219, 2191, 0, 60,
	0, 0, 0, 506, 2109, 506, 506, 2223, 0, 0,
	0, 0, 60, 506, 2191, 60, 0, 0, 0, 506,
	339, 2117, 60, 2232, 2191, 0, 60, 0, 2191, 0,
	1692, 1693, 0, 1695, 1696, 1806, 1698, 1699, 1700, 1701,
	0, 1703, 1704, 1705, 0, 0, 0, 0, 0, 0,
	1302, 1303, 0, 1308, 1309, 1310, 1311, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 1322, 1323, 1324, 321, 0, 1837, 0, 0, 0,
	0, 324, 0, 0, 0, 109, 109, 109, 109, 109,
	0, 333, 340, 341, 0, 0, 0, 109, 0, 0,
	109, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	857, 0, 0, 109, 0, 2212, 0, 0, 0, 1858,
	0, 0, 1860, 0, 0, 0, 0, 330, 0, 0,
	331, 0, 0, 0, 510, 338, 0, 933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2225,
	2226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 29, 0, 61, 32, 33, 0, 494, 0, 0,
	0, 0, 0, 952, 0, 58, 0, 0, 0, 0,
	106, 67, 0, 0, 0, 34, 0, 0, 0, 350,
	0, 0, 0, 0, 322, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 109, 510,
	510, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 499, 68, 0, 645, 0, 335, 325, 326, 0,
	336, 337, 345, 0, 0, 655, 327, 329, 0, 323,
	344, 343, 0, 664, 0, 0, 0, 2048, 0, 1842,
	1843, 0, 2159, 0, 0, 1844, 0, 0, 1845, 0,
	0, 0, 109, 1846, 0, 0, 0, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 63, 41, 40,
	43, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 44, 66,
	65, 0, 0, 0, 1021, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 1242, 0, 0,
	0, 0, 0, 510, 510, 0, 0, 506, 506, 0,
	0, 0, 0, 0, 506, 506, 506, 0, 732, 0,
	0, 510, 0, 0, 0, 0, 0, 506, 506, 57,
	0, 2050, 64, 0, 48, 49, 0, 1250, 1252, 1832,
	0, 510, 510, 0, 510, 0, 0, 510, 1562, 1563,
	1564, 1566, 0, 0, 0, 0, 0, 2074, 2078, 0,
	0, 107, 0, 506, 346, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 820, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 0, 383, 832, 109, 485,
	495, 0, 107, 0, 0, 107, 2094, 2095, 0, 0,
	0, 0, 0, 109, 0, 0, 107, 0, 666, 0,
	1251, 0, 0, 0, 107, 0, 62, 0, 109, 821,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 0, 0, 832, 510, 0, 0, 109, 510, 0,
	0, 0, 506, 1838, 0, 510, 0, 0, 510, 510,
	510, 723, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2146, 1169, 1171, 0, 0, 0, 1177, 1180,
	1181, 1182, 0, 1163, 821, 820, 830, 831, 823, 824,
	825, 826, 827, 828, 829, 822, 0, 0, 832, 0,
	0, 494, 0, 0, 0, 1192, 0, 1195, 1196, 0,
	1831, 0, 1200, 0, 1202, 1203, 0, 0, 0, 1190,
	1191, 0, 1210, 1211, 1212, 0, 1214, 1215, 0, 1217,
	1218, 1219, 1220, 0, 1222, 1223, 1224, 510, 510, 510,
	0, 2210, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 925, 0, 934, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 506, 0, 506, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	821, 820, 830, 831, 823, 824, 825, 826, 827, 828,
	829, 822, 1830, 0, 832, 510, 0, 0, 0, 0,
	0, 816, 0, 819, 0, 0, 0, 0, 0, 107,
	833, 834, 835, 836, 837, 838, 839, 0, 817, 818,
	815, 821, 820, 830, 831, 823, 824, 825, 826, 827,
	828, 829, 822, 0, 506, 832, 506, 0, 0, 510,
	510, 0, 510, 0, 0, 510, 0, 109, 0, 109,
	0, 0, 107, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 0, 0,
	0, 0, 1820, 1821, 0, 1822, 0, 0, 1824, 0,
	1826, 0, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 0, 0, 832, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 510, 109, 0,
	0, 0, 1411, 0, 0, 506, 0, 0, 0, 0,
	1029, 0, 0, 0, 483, 0, 0, 1037, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 1052, 1053, 1054, 0, 0,
	1055, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 107, 107,
	0, 0, 0, 510, 0, 0, 495, 1441, 0, 0,
	510, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 0, 1100, 1422, 0, 0, 0,
	510, 0, 1466, 1467, 0, 0, 0, 1471, 109, 0,
	1474, 0, 0, 0, 0, 1479, 0, 821, 820, 830,
	831, 823, 824, 825, 826, 827, 828, 829, 822, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 29, 30, 61, 32,
	33, 0, 0, 0, 0, 0, 0, 0, 0, 29,
	58, 61, 32, 33, 0, 0, 67, 0, 0, 0,
	34, 54, 55, 58, 0, 510, 0, 59, 506, 67,
	0, 0, 0, 34, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 0, 0, 0, 68, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	68, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 107, 0, 0, 107, 1583,
	0, 0, 0, 0, 1043, 2048, 0, 0, 0, 0,
	0, 506, 0, 506, 506, 0, 107, 107, 107, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 63, 41, 40, 43, 0, 56, 0, 0,
	0, 0, 1227, 0, 36, 63, 41, 40, 43, 0,
	0, 0, 0, 0, 0, 1259, 0, 0, 0, 0,
	2049, 107, 0, 44, 66, 65, 107, 0, 52, 53,
	42, 0, 0, 0, 0, 506, 44, 66, 65, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 57, 1681, 46, 64, 0, 48,
	49, 0, 0, 0, 0, 0, 0, 57, 0, 2050,
	64, 0, 48, 49, 0, 0, 0, 0, 0, 0,
	0, 1341, 0, 0, 494, 0, 0, 1715, 1717, 1349,
	1350, 1043, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1360, 0, 0, 0, 0, 506, 506, 0, 506, 1369,
	0, 1744, 0, 0, 0, 0, 0, 0, 383, 383,
	0, 0, 0, 383, 383, 383, 383, 0, 0, 0,
	495, 62, 0, 1394, 1395, 1396, 1397, 1398, 0, 0,
	0, 0, 0, 0, 62, 0, 0, 0, 0, 0,
	383, 383, 383, 383, 0, 0, 383, 383, 383, 383,
	383, 0, 0, 0, 0, 0, 0, 383, 383, 383,
	0, 383, 383, 0, 383, 383, 383, 383, 0, 383,
	383, 383, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 107, 1253, 0, 0, 107, 107, 0, 0, 107,
	1262, 1043, 495, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 1803, 0, 1043, 0, 0, 0, 0, 1807,
	0, 0, 1812, 1813, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	107, 107, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1865, 1865, 0, 0, 0, 0, 0, 0,
	506, 107, 0, 1363, 1364, 0, 0, 0, 0, 1865,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 107, 107, 107, 107, 0,
	0, 0, 0, 0, 1043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 1944, 0, 1945, 0, 0, 1865,
	0, 0, 383, 0, 1646, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 383, 383, 0,
	0, 0, 383, 0, 0, 383, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 495, 107, 107,
	107, 107, 107, 0, 1990, 0, 0, 0, 0, 0,
	1253, 1865, 0, 107, 0, 0, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 506, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2111,
	1788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 383, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1253, 0, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 107, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	509, 0, 0, 0, 1281, 1282, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 1528, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	495, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 107, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	509, 0, 0, 0, 1281, 1282, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 1649, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 68, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 1263, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 1129, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 1292, 1296, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 1295, 176, 309, 626, 561, 560, 1290, 0,
	1291, 166, 184, 508, 111, 123, 1288, 1294, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 628, 608, 282, 566, 631,
	538, 555, 642, 556, 559, 597, 524, 578, 219, 553,
	525, 0, 542, 515, 549, 516, 539, 568, 153, 537,
	610, 581, 630, 183, 593, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 629, 574, 0, 637, 186, 590,
	303, 271, 204, 0, 0, 570, 617, 576, 606, 565,
	599, 531, 589, 632, 554, 595, 633, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 592, 627, 551, 594, 596, 513, 591,
	0, 519, 526, 641, 623, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 569, 577, 603, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 587,
	0, 0, 0, 527, 520, 0, 0, 567, 0, 0,
	0, 530, 114, 544, 604, 0, 511, 163, 205, 125,
	607, 622, 564, 176, 309, 626, 561, 560, 239, 0,
	276, 166, 184, 508, 111, 123, 504, 165, 215, 248,
	256, 552, 512, 611, 540, 550, 146, 548, 250, 223,
	298, 0, 584, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 563, 598, 541, 143, 601, 588,
	616, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	517, 0, 273, 301, 319, 192, 132, 536, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 534, 535, 532, 0, 533, 579, 580, 634, 635,
	636, 605, 528, 0, 618, 619, 0, 609, 624, 625,
	600, 643, 557, 558, 518, 521, 522, 523, 529, 571,
	572, 583, 586, 614, 613, 612, 615, 620, 639, 638,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 110, 121, 185, 316, 243, 159, 302,
	514, 151, 0, 0, 573, 575, 585, 602, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 621, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 153, 387, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 434, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 1270, 0, 68, 0, 0, 388, 0,
	0, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 1271, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 721, 388, 0, 0, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 385, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	153, 387, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 388, 0, 0, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 381, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 388,
	0, 0, 411, 1179, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 385, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 381, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 153, 387, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 388, 0, 0, 411,
	1176, 413, 414, 415, 416, 0, 0, 135, 412, 417,
	418, 419, 0, 0, 0, 385, 402, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 381, 0, 0, 0, 448, 0, 401, 0, 0,
	396, 397, 398, 403, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 425, 0, 0, 176,
	309, 0, 0, 446, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 431, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 435, 447, 441,
	443, 442, 439, 440, 438, 437, 436, 449, 426, 427,
	428, 429, 432, 0, 444, 445, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 461, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 458, 459, 430, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	29, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 0, 0, 411, 410, 413,
	414, 415, 416, 0, 0, 135, 412, 417, 418, 419,
	0, 0, 0, 385, 402, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 448, 0, 401, 0, 0, 396, 397,
	398, 403, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 425, 0, 0, 176, 309, 0,
	0, 446, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 431, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 435, 447, 441, 443, 442,
	439, 440, 438, 437, 436, 449, 426, 427, 428, 429,
	432, 0, 444, 445, 0, 0, 0, 0, 462, 463,
	464, 465, 466, 467, 468, 461, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 458, 459, 430, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 153,
	387, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	1089, 388, 0, 0, 411, 410, 413, 414, 415, 416,
	0, 0, 135, 412, 417, 418, 419, 0, 0, 0,
	385, 402, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 0, 0, 0, 0,
	448, 0, 401, 0, 0, 396, 397, 398, 403, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 425, 0, 0, 176, 309, 0, 0, 446, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 431, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 435, 447, 441, 443, 442, 439, 440, 438,
	437, 436, 449, 426, 427, 428, 429, 432, 0, 444,
	445, 0, 0, 0, 0, 462, 463, 464, 465, 466,
	467, 468, 461, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 458, 459, 430, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 153, 387, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 434, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 388, 0,
	0, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 0, 0, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 385, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 737,
	738, 739, 740, 741, 745, 746, 750, 751, 759, 758,
	757, 760, 761, 763, 762, 764, 742, 743, 744, 747,
	748, 749, 752, 753, 756, 754, 755, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 388, 0, 0, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 0, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 0, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 2213, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 721, 388,
	0, 0, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 0, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 388, 0, 0, 411,
	410, 413, 414, 415, 416, 0, 0, 135, 412, 417,
	418, 419, 0, 0, 0, 0, 402, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 0, 0, 0, 0, 448, 0, 401, 0, 0,
	396, 397, 398, 403, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 425, 0, 0, 176,
	309, 0, 0, 446, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 431, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 435, 447, 441,
	443, 442, 439, 440, 438, 437, 436, 449, 426, 427,
	428, 429, 432, 0, 444, 445, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 461, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 458, 459, 430, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 1252, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 1255, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 1251,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 784, 785, 786,
	787, 788, 792, 793, 797, 798, 806, 805, 804, 807,
	808, 810, 809, 811, 789, 790, 791, 794, 795, 796,
	799, 800, 803, 801, 802, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 1248, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 1252, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 1251, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 1246, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 784, 785, 786, 787, 788, 792,
	793, 797, 798, 806, 805, 804, 807, 808, 810, 809,
	811, 789, 790, 791, 794, 795, 796, 799, 800, 803,
	801, 802, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	779, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 0, 0,
	0, 783, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 776, 775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 784, 785, 786, 787, 788, 792, 793, 797, 798,
	806, 805, 804, 807, 808, 810, 809, 811, 789, 790,
	791, 794, 795, 796, 799, 800, 803, 801, 802, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 1506, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 1255, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	0, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	786, 787, 788, 792, 793, 797, 798, 806, 805, 804,
	807, 808, 810, 809, 811, 789, 790, 791, 794, 795,
	796, 799, 800, 803, 801, 802, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 0, 0, 0, 1255, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 784, 785, 786, 787, 788,
	792, 793, 797, 798, 806, 805, 804, 807, 808, 810,
	809, 811, 789, 790, 791, 794, 795, 796, 799, 800,
	803, 801, 802, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 780, 0,
	0, 0, 783, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 784, 785, 786, 787, 788, 792, 793, 797,
	798, 806, 805, 804, 807, 808, 810, 809, 811, 789,
	790, 791, 794, 795, 796, 799, 800, 803, 801, 802,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 821, 820, 830, 831, 823, 824,
	825, 826, 827, 828, 829, 822, 0, 0, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 29,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 29, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 954, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 953, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 0, 0, 0, 176, 309, 0, 0, 0,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 0, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 924, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 0,
	0, 0, 176, 309, 0, 0, 0, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	0, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 480, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 0, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 105, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 0, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	0, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 497, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 498, 496, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 945, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 497, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 498, 496, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 488, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 497,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 498, 496, 491, 490, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312,
}
var yyPact = [...]int{

	3130, -1000, -296, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1477, 1525, -1000,
	-1000, -1000, -1000, -1000, -1000, 597, 219, -1000, -1000, -1000,
	264, 93, 19933, 261, 2160, 20767, -1000, -1000, -1000, -1000,
	179, 20767, -1000, -1000, -90, -114, -1000, 31, 1092, 1372,
	1174, -1000, -1000, 86, 27, -1000, -1000, -1000, -1000, -1000,
	-1000, 1463, 1475, 1212, 1454, 1267, -1000, 9922, 200, 200,
	19516, 22435, -1000, 20767, 8670, 229, 20767, -162, 195, 195,
	130, 195, -1000, 517, -1000, -1000, -1000, 20767, 197, 20350,
	197, 197, 197, 197, 197, 20767, -1000, 386, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20767, 1091, 1403, 5730, 87, 5730, 5730, -1000, 563, -1000,
	104, 102, 99, 5730, 9, 567, 100, -22, -1000, 5730,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 213, 1174, 501,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1402, 780, 1210,
	-83, 834, 260, 20767, 451, -1000, -1000, 1412, 12008, 12425,
	1477, -1000, 1174, -1000, -1000, -1000, 1360, -1000, -1000, 626,
	1514, -1000, 14927, 384, -1000, 12008, 2792, 1158, -1000, -1000,
	1158, -1000, -1000, 365, -1000, -1000, 13676, 13676, 13676, 13676,
	13676, 13676, 13676, 13676, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1158, -1000, 11174, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 12008, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 19099, 18265,
	20767, 1148, 1147, -1000, -1000, 378, 1005, 22018, -138, -1000,
	-1000, -1000, 494, 17848, -1000, 374, -1000, 1398, -1000, -1000,
	1087, -1000, -1000, 379, 860, -1000, -1000, -1000, 1199, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20350, 1450, 203, 1084, 591, 1078,
	1075, 1074, 20767, 1072, 1149, 211, 20767, 1423, 1230, 20767,
	1071, 1070, 1068, 1067, -1000, 8250, -1000, 5730, 5730, -1000,
	-1000, -1000, 195, 195, 5730, 5730, 5730, 20767, 20767, 20767,
	-1000, -1000, 20767, -1000, -1000, 564, 564, 5730, 5730, -1000,
	1502, 555, 555, -1000, -1000, -1000, -1000, 12008, -1000, 13676,
	433, -1000, 1227, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1066, -1000, -1000, 174, -1000, 820, -1000, 11591, -294, -1000,
	-1000, -1000, 20767, 5730, 110, 148, 133, 20767, -1000, 1520,
	426, 833, 371, 1144, -1000, 812, 1416, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1463, 834, 1267, 861, 1244,
	-1000, -1000, -1000, 20767, -1000, 12008, 12008, 821, -1000, 16178,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6570, 436, 13676, 655, 482, 13676, 13676, 13676,
	13676, 13676, 13676, 13676, 13676, 13676, 13676, 13676, 13676, 13676,
	13676, 13676, 706, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1058, -1000, 1174, 1101, 1101, 396, 396, 396, 396,
	396, 396, 396, 16595, 1431, 834, 1065, 459, 11174, 9922,
	9922, 834, 12008, 12008, 10756, 10339, 9922, 9922, 1431, 456,
	459, 21601, -1000, -1000, 13259, -1000, -1000, -1000, -1000, -1000,
	834, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20350,
	20350, 9922, 9922, 9922, 9922, 834, 834, 9922, 9922, 9922,
	9922, 9922, 834, 834, 834, 834, 1431, 1431, 9922, 9922,
	9922, 1431, 9922, 9922, 1431, 9922, 9922, 9922, 9922, 1431,
	9922, 9922, 9922, 140, 20767, -1000, 1136, 1193, -1000, -1000,
	-1000, 1446, 17431, 14510, 140, 1127, 18265, 20767, -1000, -1000,
	18265, 20767, 6150, 21184, 1005, -138, 1131, -1000, -134, -111,
	9088, 392, -1000, -1000, -1000, 7410, -1000, 4890, 7830, -1000,
	-63, -1000, -1000, -1000, 1179, -1000, 1179, 237, -3, 1179,
	1179, 1179, 1179, 1179, -18, -18, -18, -18, -2, -1000,
	-1000, -1000, -1000, -1000, 1209, 1208, -1000, 1179, 1179, 1179,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1200, 162,
	1189, 1189, 1189, 1189, 1189, 177, -1000, -1000, -1000, -1000,
	12008, 1218, -1000, 20767, 5730, 1421, 5730, 97, 1205, -1000,
	-1000, 20767, 20767, 1139, -1000, 20767, 1138, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1052, 1042, -1000,
	-1000, -1000, -1000, -1000, -1000, 557, -1000, 819, 12008, -1000,
	-1000, -1000, 20767, 1440, 20767, 20767, 564, 459, 600, -1000,
	803, 20767, -1000, 1137, -1000, 483, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1062, 1417, 801, 950, -1000, 20767, 20767, 20767, 20767, 20767,
	282, -1000, 1214, 12008, 12008, 7410, 12425, -1000, -1000, -1000,
	-1000, 1412, -1000, 1431, 1466, -1000, 1297, 1291, 9922, -1000,
	-1000, 436, 590, -1000, -1000, 734, -1000, -1000, -1000, -1000,
	369, 1158, -1000, 3089, -1000, -1000, -1000, -1000, 655, 13676,
	13676, 13676, 600, 3089, 2988, 767, 750, 396, 708, 708,
	415, 415, 415, 415, 415, 612, 612, -1000, -1000, -1000,
	834, -1000, -1000, -1000, 9922, -1000, 12008, -1000, 834, 1050,
	-1000, 1050, -1000, 594, 769, 525, 1492, 1050, 363, 1491,
	1050, 1050, 1050, 9922, 579, -1000, 12008, 834, -1000, 1307,
	1135, 1134, 1050, 834, 1132, 1050, 1050, -173, -173, 834,
	1050, 834, 1050, 1050, -173, -173, -173, -173, 9922, 9922,
	1050, 1050, 1050, 9922, 1050, 1050, 9922, 1050, 1050, 1050,
	1050, 9922, 1050, 1050, 1050, 1123, 1158, -1000, 21184, 18265,
	18265, 18265, 18265, 18265, -1000, 1262, 1259, -1000, 1243, 1242,
	1253, 15761, -1000, 1057, 17431, -1000, 1158, -1000, 15344, 288,
	226, 216, 215, -1000, -1000, -1000, 1486, 18265, 1155, -1000,
	1155, -1000, 368, -1000, -1000, 1131, -138, -139, -1000, -1000,
	-1000, -1000, 459, -1000, 713, -1000, 356, 1130, 4470, -1000,
	-1000, -1000, -1000, 169, -1000, -1000, -1000, 1201, 892, -1000,
	1342, 347, 443, 857, 1318, -1000, -1000, 252, -73, -1000,
	-1000, 707, -18, -18, 1179, 1179, 233, 1179, -1000, -18,
	-1000, -1000, -1000, 392, 1383, 392, 392, 392, 392, -18,
	784, 784, -1000, -1000, -1000, -1000, 704, -1000, 1200, -1000,
	698, -1000, -1000, -1000, -1000, -1000, 1199, 709, 1226, 20350,
	1174, 1426, -1000, -1000, -1000, 1513, -1000, -1000, 202, 210,
	-1000, 5730, 20767, 5730, 5730, 1486, 1027, 1017, -1000, 459,
	555, 564, 1378, -1000, -1000, -1000, -1000, 13676, -1000, -1000,
	174, 1101, -1000, 140, 231, -1000, -1000, 642, 548, 549,
	182, 182, -1000, 445, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 139, 1194, -1000, -1000, -1000, -1000, 39,
	109, 1271, 459, 459, -1000, -1000, 20767, -1000, -1000, -1000,
	-1000, 1175, -1000, -1000, -1000, 5310, 9922, -1000, 600, 3089,
	693, -1000, 13676, -1000, 834, 459, -1000, 9922, -1000, -1000,
	420, 706, 420, 13676, 13676, -1000, 13676, 13676, -1000, -208,
	-1000, 1170, 551, -1000, 12008, 969, -1000, -1000, 13676, 13676,
	-1000, -1000, -1000, -1000, -1000, 18682, -1000, -173, -173, -173,
	-173, -173, -1000, -1000, -1000, -1000, 1050, 1050, -173, -173,
	-173, 1050, -173, -173, 1050, -173, -173, -173, -173, 1050,
	-173, -173, -173, 1225, 21184, 1158, -1000, 17013, 20350, 1156,
	1193, 1198, 1224, 1048, -1000, -1000, -1000, -1000, 1258, -1000,
	1257, -1000, -1000, -1000, -1000, 20350, 13676, 288, -1000, 1158,
	1158, 1158, 1477, 12008, 1155, -1000, -1000, 408, -1000, -1000,
	-144, -136, -1000, -1000, -1000, 6990, 4890, -1000, 4890, -1000,
	860, 20350, 163, -1000, 857, -1000, -1000, 857, -1000, -1000,
	-1000, 1190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 619,
	13676, 1519, -1000, 1340, -1000, 1334, 774, -1000, -1000, 993,
	392, 392, -18, -1000, -1000, 1179, -1000, 392, -1000, 437,
	-1000, -1000, -1000, -1000, 392, 1047, -1000, 1033, 1129, -1000,
	1024, 43, 20767, -1000, -1000, -1000, 1223, -1000, -1000, -1000,
	967, 1128, -1000, 379, 994, 977, 974, 20767, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 564, -1000, 13676, 3089, -1000,
	-1000, -18, 20767, -1000, 876, -1000, 857, 360, -1000, -1000,
	-1000, 956, 1318, -1000, -1000, 954, -1000, 951, 20350, 1327,
	945, 20767, 20350, -1000, -1000, 905, 940, 12008, -1000, 20350,
	-215, 936, 20350, 20350, 20350, -1000, -1000, 1486, 18265, -1000,
	-1000, 834, -1000, 13676, 3089, -1000, -1000, 834, 1179, 1179,
	-1000, 1179, 1189, -1000, 1179, 18, 1179, 17, 834, 834,
	2853, 2751, 2570, 1709, 1158, -169, -1000, 459, 12008, 2635,
	872, -1000, 308, -1000, -1000, -1000, -1000, -1000, -173, -173,
	-1000, -1000, -1000, -1000, -173, -1000, -1000, -173, -1000, -1000,
	-1000, -1000, -173, -1000, -1000, -1000, -1000, 1406, 1104, 1026,
	-1000, -1000, 9505, 834, 1022, 285, 1007, -1000, 1477, -1000,
	-1000, 12008, 1186, -1000, 12008, -1000, -1000, -1000, 1007, 2524,
	-1000, 20350, 20350, 20350, 1463, 459, -1000, -1000, -1000, -1000,
	4470, -1000, 1003, -1000, 1179, -1000, 1318, -1000, -1000, 20350,
	-1000, 3089, -110, -1000, -1000, -1000, -1000, -1000, -1000, 392,
	-1000, -1000, -1000, -1000, -1000, -18, 772, -18, 697, -1000,
	662, -1000, -1000, -241, 1177, -1000, 1174, 20767, 53, 202,
	-1000, 379, 379, 379, -1000, -1000, 3089, -67, -1000, 905,
	154, 379, -1000, 1218, 347, 163, -1000, -1000, -1000, -1000,
	908, 342, -1000, 209, 154, 905, 459, 1408, -1000, 6990,
	-1000, -1000, 1173, 1220, -1000, 1469, 1124, -1000, 3089, -1000,
	-1000, 155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13676, 13676, 13676, 13676, 13676, 834, 768, 459, 13676, 13676,
	834, 1474, -1000, -1000, -1000, -1000, -1000, 1315, -1000, 1158,
	-1000, -1000, 1154, 20350, 20350, -1000, 20350, 1463, 459, 20350,
	459, 14093, -1000, 15761, 992, -1000, 992, 992, -1000, 262,
	20350, 1416, 970, -1000, -1000, 392, -1000, 392, 930, 901,
	-1000, 20350, -1000, 1460, -1000, 53, -1000, 762, 58, 64,
	-1000, 56, 55, 54, 48, 46, -1000, -1000, -1000, -1000,
	1366, 1363, 873, -1000, -1000, 902, -1000, 1172, 857, -1000,
	-1000, 844, -1000, -1000, 20350, -1000, 154, 1158, 1113, -1000,
	452, 20350, 20767, 1482, 1473, -1000, -1000, 1307, 1307, 1307,
	1307, 63, -1000, -1000, 1307, 1307, -1000, 12008, 1518, -1000,
	1158, -1000, 1174, 278, -1000, -1000, -1000, 966, -1000, 288,
	20350, -1000, -1000, -1000, 262, -1000, 842, 445, 761, -1000,
	-1000, 159, -1000, -1000, -1000, -1000, 960, -1000, 79, 3143,
	-1000, -1000, -1000, -1000, -1000, -1000, 1371, 1370, 69, 199,
	1345, 1353, 1471, -1000, -1000, -1000, 252, 20350, 1218, -1000,
	-1000, -1000, -1000, 132, 6990, 4890, 944, -1000, -1000, 12425,
	12425, -1000, -1000, -1000, -1000, 834, 125, -218, -1000, -1000,
	1120, 21184, 1026, 834, 20350, -1000, -1000, -1000, -1000, -1000,
	661, -1000, 20767, 262, 88, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12008, 12008,
	3143, -1000, -1000, -1000, -1000, 1168, 632, 1363, 1468, 1358,
	1355, -1000, 760, -1000, 929, 1162, -1000, 900, -1000, 20350,
	-1000, -1000, 1194, -1000, 459, -1000, 1009, -1000, 459, -1000,
	-1000, 1270, -211, -221, 834, 1005, -1000, -1000, -1000, 1161,
	-1000, 262, 78, -1000, 490, 913, -298, -1000, -1000, 20350,
	1365, -1000, 727, -1000, 1467, 1465, -1000, 262, 20350, -1000,
	132, 1285, -215, 12425, -1000, 1247, -1000, -1000, 20350, -1000,
	827, 773, 752, -1000, 12008, 1683, 2365, 898, -1000, -1000,
	720, 719, -1000, 850, -1000, 136, -1000, -1000, -216, 839,
	194, -1000, -1000, 608, 1683, -1000, 804, -299, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1683, -1000,
	-1000, -1000, -1000, -1000, 262, 119, -219, 1222, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -300, 1683, 206, -302, -1000,
	1158, -222, 1213, 1157, 1490, -1000, 1638, -305, 192, 1683,
	588, -1000, -1000, 12008, 1090, 12842, -1000, -1000, 1515, -1000,
	1516, 382, 382, 559, 1683, -1000, -306, 191, 1683, -1000,
	562, -1000, 1307, 834, -1000, -1000, -1000, 167, 737, -1000,
	-1000, 561, -1000, -307, 1683, -1000, -1000, -1000, -1000, -1000,
	190, 269, -308, -1000, 185, 1683, -1000,
}
var yyPgo = [...]int{

	0, 1810, 152, 945, 1809, 1808, 1807, 27, 16, 14,
	42, 1806, 1589, 1582, 1580, 1574, 1805, 1572, 7, 2,
	45, 22, 11, 19, 1803, 8, 1802, 1801, 21, 1800,
	5, 79, 1797, 1796, 1792, 1790, 1787, 1560, 1786, 1784,
	1782, 1780, 1779, 1555, 1550, 1778, 1771, 1547, 1542, 1770,
	1769, 1540, 1538, 1531, 1768, 135, 1767, 1766, 1763, 125,
	1762, 108, 1761, 1760, 1759, 76, 1873, 77, 73, 607,
	1749, 10, 1747, 68, 123, 99, 1746, 71, 1739, 1738,
	117, 1736, 1732, 1727, 94, 1726, 1724, 2347, 1723, 1721,
	106, 1720, 49, 46, 116, 1716, 1715, 1709, 1708, 1707,
	83, 129, 1706, 1704, 1703, 64, 1701, 1700, 122, 1699,
	1698, 1697, 97, 50, 1696, 39, 34, 54, 1694, 206,
	30, 1688, 100, 1687, 1686, 1684, 1683, 1682, 36, 1679,
	41, 1678, 104, 75, 770, 13, 48, 56, 98, 1677,
	23, 1676, 88, 70, 63, 32, 107, 1673, 110, 101,
	1672, 1671, 855, 1670, 1669, 93, 1667, 60, 84, 1664,
	821, 115, 67, 1663, 1662, 1661, 1660, 65, 86, 1659,
	1658, 38, 164, 103, 1065, 20, 1889, 58, 109, 1657,
	37, 1656, 2568, 102, 52, 82, 1655, 1652, 72, 87,
	44, 1651, 1650, 1645, 1643, 1642, 1641, 1293, 1639, 1638,
	1637, 1635, 90, 190, 1634, 1633, 85, 66, 1632, 1630,
	1629, 1627, 1625, 89, 59, 111, 1624, 80, 96, 81,
	1623, 1622, 1620, 1619, 57, 35, 1617, 1616, 1615, 69,
	40, 1612, 51, 31, 24, 53, 6, 55, 105, 1611,
	18, 1610, 33, 1609, 26, 1608, 1607, 1605, 29, 78,
	3, 4, 9, 1604, 1603, 1602, 25, 1601, 1600, 1597,
	1594, 62, 1593, 1591, 47, 1586, 1577, 1570, 1568, 1562,
	0, 146, 113, 1557, 1553, 114,
}
var yyR1 = [...]int{

	0, 268, 269, 269, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 245,
	245, 245, 246, 246, 54, 2, 2, 2, 6, 3,
	4, 4, 5, 5, 7, 7, 58, 58, 8, 9,
	9, 9, 9, 272, 272, 82, 82, 80, 80, 81,
	81, 142, 142, 10, 10, 10, 10, 146, 146, 149,
	149, 149, 150, 150, 150, 150, 186, 186, 135, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 259, 259,
	260, 260, 261, 261, 261, 261, 262, 262, 263, 263,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 24, 26, 26, 170, 170, 35, 35, 36,
	36, 36, 131, 131, 131, 11, 11, 11, 11, 11,
	18, 20, 20, 27, 27, 28, 21, 21, 21, 21,
	29, 29, 30, 22, 22, 34, 34, 32, 32, 31,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 17, 258, 258, 258, 25, 25, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 248, 248, 247,
	244, 244, 243, 243, 242, 41, 226, 227, 227, 227,
	227, 227, 227, 227, 214, 215, 190, 190, 190, 190,
	190, 190, 190, 189, 189, 189, 189, 193, 193, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 192, 192,
	192, 192, 192, 192, 192, 192, 194, 194, 194, 194,
	194, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 196, 196, 196, 196,
	196, 196, 196, 196, 213, 213, 197, 197, 206, 206,
	207, 207, 207, 204, 204, 205, 205, 208, 208, 200,
	201, 209, 202, 202, 202, 203, 203, 203, 212, 212,
	212, 212, 198, 216, 216, 236, 236, 235, 235, 234,
	234, 234, 225, 225, 231, 231, 231, 231, 231, 220,
	220, 220, 219, 219, 221, 221, 224, 224, 233, 233,
	232, 217, 217, 218, 218, 237, 237, 237, 237, 237,
	238, 222, 222, 223, 223, 223, 251, 252, 250, 250,
	250, 250, 250, 97, 97, 97, 228, 228, 228, 229,
	229, 229, 230, 230, 230, 253, 253, 37, 37, 37,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 130,
	130, 130, 39, 40, 40, 40, 40, 40, 40, 40,
	40, 168, 168, 249, 249, 249, 249, 249, 241, 239,
	239, 240, 240, 13, 42, 42, 14, 14, 14, 14,
	14, 14, 14, 15, 15, 43, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 70,
	156, 156, 154, 154, 157, 157, 155, 155, 155, 158,
	158, 158, 159, 159, 187, 187, 187, 45, 45, 50,
	50, 53, 51, 52, 169, 169, 48, 48, 49, 49,
	49, 49, 64, 64, 273, 273, 47, 47, 46, 46,
	46, 46, 16, 274, 55, 56, 56, 57, 57, 57,
	61, 61, 61, 59, 59, 59, 60, 60, 67, 67,
	66, 66, 68, 68, 68, 68, 133, 133, 133, 134,
	134, 179, 179, 179, 178, 178, 178, 178, 72, 72,
	73, 73, 74, 74, 75, 75, 75, 75, 91, 91,
	92, 92, 92, 92, 92, 103, 103, 141, 141, 140,
	140, 143, 143, 76, 76, 76, 76, 77, 77, 78,
	78, 79, 79, 167, 167, 184, 184, 184, 83, 83,
	83, 85, 84, 84, 84, 84, 86, 86, 88, 89,
	89, 87, 87, 90, 93, 93, 93, 93, 94, 94,
	69, 69, 69, 69, 69, 69, 69, 153, 153, 96,
	96, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 111, 111, 111, 111, 111, 111, 98, 98, 98,
	98, 98, 98, 98, 65, 65, 112, 112, 112, 119,
	113, 113, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 106, 106, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 275, 275,
	108, 107, 107, 107, 107, 107, 107, 62, 62, 62,
	62, 62, 185, 185, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 123, 123, 63,
	63, 121, 121, 122, 124, 124, 120, 120, 120, 100,
	100, 100, 100, 100, 100, 100, 100, 102, 102, 102,
	125, 125, 114, 114, 71, 71, 126, 126, 127, 127,
	128, 128, 129, 129, 132, 132, 136, 136, 136, 137,
	137, 137, 137, 138, 138, 138, 99, 99, 99, 99,
	99, 99, 139, 139, 139, 139, 144, 144, 115, 115,
	117, 117, 116, 118, 145, 145, 148, 148, 148, 148,
	147, 147, 147, 181, 181, 181, 151, 151, 160, 160,
	161, 161, 152, 152, 199, 199, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 166, 166, 165, 165, 165,
	162, 162, 162, 163, 163, 180, 180, 176, 176, 177,
	177, 182, 182, 183, 183, 254, 254, 210, 210, 267,
	267, 211, 211, 256, 256, 257, 257, 265, 265, 266,
	266, 255, 255, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 270, 271, 171, 172, 172, 172,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 11, 4, 6, 7, 5, 10,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 0, 2,
	3, 11, 7, 9, 5, 5, 15, 11, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 1, 3, 0, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 2, 4, 2, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	0, 2, 1, 3, 3, 4, 4, 1, 1, 3,
	4, 3, 3, 3, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 1, 2, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 2, 1,
	2, 1, 2, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 2, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 10, 11, 11, 12, 12,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 1, 1, 1,
	6, 10, 9, 7, 7, 7, 9, 7, 12, 14,
	7, 7, 9, 9, 10, 5, 6, 8, 7, 0,
	1, 2, 4, 7, 5, 5, 5, 12, 7, 5,
	9, 0, 1, 1, 1, 1, 1, 1, 7, 1,
	3, 8, 8, 3, 3, 5, 4, 6, 4, 4,
	4, 4, 4, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 3, 7, 6, 5, 4,
	2, 4, 3, 4, 3, 3, 5, 2, 3, 3,
	1, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 2, 2, 2, 2,
	3, 3, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 0, 1, 0, 1,
	1, 3, 1, 2, 3, 5, 2, 4, 7, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 0, 2,
	1, 3, 1, 1, 1, 3, 1, 3, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 3, 2,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 6, 8, 8, 8, 8, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 1, 0, 2, 1, 1,
	0, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 4, 2, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -268, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -54, -3, -4, 6,
	7, -58, 9, 10, 30, -41, 131, -38, -39, -40,
	134, 133, 170, 135, 163, 63, 216, -53, 219, 220,
	-273, -169, 168, 169, 31, 32, 137, 214, 20, 37,
	-270, 8, 311, 132, 217, 165, 164, 26, 67, -269,
	426, -128, 15, -57, 5, -55, -274, -55, -55, -55,
	-55, -55, -226, 106, 67, -163, 144, 87, 302, 140,
	-170, 141, -162, 192, 44, 151, 150, 141, 141, 142,
	144, 302, 140, 178, 177, 141, -87, -182, 70, -174,
	353, 154, 368, 369, 132, 189, 216, 227, 221, 255,
	243, 354, 370, 155, 209, 139, 241, 244, 289, 153,
	202, 371, 276, 284, 212, 81, 219, 298, 372, 156,
	206, 208, 207, 197, 213, 36, 166, 239, 232, 192,
	373, 361, 230, 28, 187, 374, 286, 260, 375, 358,
	285, 235, 231, 137, 376, 157, 151, 180, 377, 261,
	265, 378, 290, 379, 380, 381, 143, 225, 226, 382,
	193, 292, 259, 33, 152, 355, 48, 175, 293, 38,
	263, 37, 275, 383, 258, 253, 384, 385, 386, 387,
	257, 224, 252, 204, 52, 138, 267, 266, 268, 205,
	288, 248, 246, 388, 389, 158, 390, 391, 233, 18,
	392, 393, 296, 169, 394, 42, 395, 396, 397, 173,
	398, 399, 400, 287, 262, 264, 191, 401, 236, 148,
	402, 177, 403, 357, 404, 294, 229, 405, 159, 174,
	168, 297, 406, 407, 408, 409, 160, 410, 411, 412,
	220, 278, 210, 413, 414, 415, 416, 201, 186, 300,
	291, 51, 214, 272, 417, 223, 150, 215, 418, 217,
	43, 183, 7, 203, 279, 211, 250, 176, 419, 420,
	237, 238, 256, 222, 251, 218, 178, 179, 170, 421,
	299, 273, 359, 50, 245, 242, 184, 249, 422, 144,
	181, 182, 423, 280, 281, 185, 356, 295, 240, 274,
	141, 124, 244, 289, 131, 277, 278, 286, -220, 287,
	177, 180, -187, 141, -154, 276, 280, 281, 185, 70,
	142, 143, 33, 291, 290, 282, -182, -64, 135, 171,
	-87, -171, -171, -171, 279, 279, -171, -34, 215, 70,
	36, -2, -152, 144, 281, 146, 218, -137, 17, 16,
	-5, -3, -270, 6, 21, 22, -61, 53, 54, -56,
	-68, 115, -69, -182, -95, 89, -101, 29, 70, -174,
	24, -100, -96, -120, -118, -119, 124, 125, 126, 113,
	114, 121, 90, 127, -106, -104, -105, -107, -109, -110,
	74, 73, 82, 75, 76, 77, 78, 83, 84, 85,
	-176, -116, -270, 57, 58, 140, 312, 313, 314, 315,
	352, 161, 316, 92, 47, 301, 310, 309, 308, 306,
	307, 303, 305, 304, 318, 319, 147, 302, 119, 311,
	341, 342, 343, 344, 345, 346, 347, 348, 350, 351,
	349, 331, 324, 325, 326, 327, 328, 329, 330, 332,
	333, 334, 335, 336, 337, 338, 339, 340, -152, -152,
	11, -80, -81, -87, -90, -182, -145, -186, 218, -148,
	291, 290, -120, -147, -176, -182, 289, 244, 288, -87,
	-227, -215, -218, -177, 156, -238, -176, -173, 153, 70,
	-174, 136, 162, 88, 360, 23, 25, 270, 324, 91,
	124, 325, 326, 327, 16, 20, 92, 123, 312, 328,
	131, 61, 303, 305, 301, 302, 277, 29, 10, 26,
	164, 196, 22, 117, 133, 95, 96, 97, 167, 24,
	165, 85, 161, 19, 64, 11, 13, 322, 323, 14,
	147, 146, 108, 194, 142, 59, 8, 127, 27, 105,
	55, 329, 330, 364, 45, 365, 57, 106, 17, 306,
	307, 31, 352, 331, 172, 366, 332, 119, 199, 62,
	49, 89, 83, 34, 86, 65, 87, 15, 195, 60,
	320, 198, 367, 107, 134, 311, 58, 140, 6, 317,
	30, 163, 335, 334, 333, 336, 200, 56, 314, 315,
	337, 424, 141, 94, 318, 319, 145, 84, 5, 44,
	32, 9, 63, 66, 308, 309, 310, 47, 339, 338,
	340, 93, 12, 321, 142, -87, 311, -161, 147, -161,
	178, 177, -161, 98, -42, -87, -160, 147, -176, -160,
	-160, -160, -160, -160, -87, 128, -87, 70, 30, -172,
	-270, -177, 302, 140, 70, 177, 180, 141, 178, 144,
	-172, -172, -222, 11, 108, 183, 183, 183, 184, -172,
	-157, -156, 179, 284, 285, 279, 283, 12, -70, 106,
	184, 279, 182, -172, -49, -2, -9, -7, -8, -2,
	98, -171, -171, 30, 74, 50, -258, 67, -210, 275,
	-271, 69, 141, -87, 131, 133, 136, 65, -138, 19,
	31, -69, -182, -129, -132, -69, -175, 324, 325, 326,
	327, 328, 341, 342, 343, 329, 330, 344, 345, 346,
	331, 332, 347, 348, 350, 351, 349, 335, 334, 333,
	336, 337, 339, 338, 340, -128, -2, -55, 49, -59,
	21, 22, 80, 11, -179, 88, 87, 105, -178, 23,
	70, -174, -175, 74, 324, 325, 326, 327, 328, 341,
	342, 343, 329, 330, 344, 345, 346, 331, 332, 347,
	348, 350, 351, 349, 335, 334, 333, 336, 337, 339,
	338, 340, 128, -69, -98, 108, 89, 106, 107, 91,
	110, 109, 120, 113, 114, 115, 116, 117, 118, 119,
	111, 112, 123, 98, 99, 100, 101, 102, 103, 104,
	-153, -270, -119, -270, 129, 130, -101, -101, -101, -101,
	-101, -101, -101, -101, -270, -2, -113, -69, -270, -270,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, -123,
	-69, -270, -275, -108, -270, -275, -108, -275, -108, -275,
	-270, -275, -108, -275, -108, -275, -275, -108, -275, -270,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, -270,
	-270, -270, -270, -89, 27, -87, -73, -74, -75, -76,
	-91, -119, -270, -87, -87, -80, -272, 68, 11, 66,
	-272, 68, 128, 68, -145, 218, -146, -149, 292, 294,
	98, -181, -176, 74, 29, 128, 30, 69, 68, -189,
	-193, -195, -194, -196, -191, -192, 241, 244, 248, 246,
	242, 247, 124, 245, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 30, 166, 237, 238, 239,
	240, 261, 262, 263, 264, 265, 266, 267, 268, 221,
	243, 354, 222, 223, 224, 225, 226, 227, 229, 230,
	231, 232, 233, 234, 235, -246, -245, 70, 71, 72,
	67, -176, 23, 144, 70, 89, 70, 70, 70, -87,
	70, 68, 145, -80, 24, 65, -82, -87, 70, 70,
	70, 70, -183, -182, -173, -172, -172, -161, -161, -172,
	-172, -172, -87, -87, -87, -87, -158, 106, 12, -158,
	-172, -172, 11, -155, 11, 108, -155, -69, -101, -159,
	106, 65, 70, -32, -31, -33, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 74, 69,
	-113, -254, 425, -87, -172, 181, 181, 141, 141, 186,
	-87, 9, 108, 68, 18, 128, 68, -136, 25, 26,
	-136, -137, -271, -61, -102, 50, 75, 78, -60, 56,
	-87, -69, -69, -111, 83, 89, 84, 85, -178, 115,
	-183, -177, -173, -101, -112, -116, -119, 79, 108, 106,
	107, 91, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -101, -101, -101, -101, -101, -101, -185, 70, 74,
	70, -100, -100, -176, -59, -271, 68, -271, -2, -66,
	-68, -66, -271, -69, -69, -120, 74, -66, -120, 74,
	-66, -66, -66, -59, -121, -122, 93, -120, -271, -101,
	-176, -176, -66, -67, -66, -66, -66, -271, -271, -68,
	-66, -68, -66, -66, -271, -271, -271, -271, -59, -59,
	-66, -66, -66, -59, -66, -66, -59, -66, -66, -66,
	-66, -59, -66, -66, -66, -142, 173, -87, 30, 68,
	-83, -85, -84, -86, 55, 59, 61, 56, 57, 58,
	62, -167, 23, -73, -270, -92, 173, -93, 23, -184,
	63, 146, 64, -182, -175, 74, -142, 66, -73, -87,
	-73, -90, -182, 115, -148, -146, 68, 293, 295, 296,
	65, 86, -69, -203, 123, -177, -183, -228, -229, -230,
	-177, 74, 75, -215, -216, -217, -218, -231, 156, -237,
	148, 150, 44, -219, 157, 142, 45, -190, -204, 273,
	-197, 67, -197, -197, 249, 241, 244, 242, -197, -197,
	-197, -197, -197, -202, 244, -202, -202, -202, -202, 242,
	67, 67, -197, -197, -197, -206, 67, -206, 236, -207,
	67, -207, -207, -207, -207, -238, 153, -69, -180, 66,
	-135, -87, -172, 24, -172, -35, 189, 162, 67, -87,
	-87, -87, 68, 70, 70, -223, 11, 108, 74, -69,
	-87, -103, 23, -182, -182, -158, -65, 167, 74, -87,
	68, 98, 69, -88, 27, 74, -164, 136, 133, 134,
	138, 139, -241, 270, 132, 244, 81, 29, 15, 312,
	173, 359, 70, 174, -87, -87, -87, -87, -87, 136,
	133, 51, -69, -69, -132, -138, -151, 19, 11, 47,
	47, -66, 83, 84, 85, 128, -270, -112, -101, -101,
	-101, -65, 88, -271, -67, -69, -271, 68, -271, -271,
	68, 66, 23, 11, 11, -271, 11, 11, -271, -271,
	-271, -66, -124, -122, 95, -69, -271, -271, 68, 68,
	-271, -271, -271, -271, -133, 320, -133, -271, -271, -271,
	-271, -271, -133, -133, -133, -133, -66, -66, -271, -271,
	-271, -66, -271, -271, -66, -271, -271, -271, -271, -66,
	-271, -271, -271, -99, 30, 47, -2, -270, -270, -145,
	-74, -75, -75, -74, -75, 55, 55, 55, 60, 55,
	60, 55, -84, -184, -271, -270, 34, -184, -93, 142,
	142, 142, -94, 12, -73, -94, -94, 128, -149, -150,
	297, 294, 300, 70, 74, 128, 68, -230, 98, -218,
	156, 67, 70, 45, -219, 142, 45, -219, -224, 70,
	-224, 45, -208, -200, -201, -209, -212, -198, 83, 89,
	29, 65, 270, 148, 45, 44, 81, -205, 274, 75,
	-202, -202, -197, -197, -197, 249, -197, -202, -203, 30,
	-203, -203, -203, -203, -202, -213, 74, -213, 75, -206,
	75, 69, 65, -176, -2, 23, -36, 8, 9, 10,
	-259, -260, -261, 70, 108, 194, 195, 145, -172, -87,
	-172, -172, -94, 70, 70, -155, -158, 34, -101, -31,
	-100, -142, 141, -171, -168, -249, -219, -253, -217, 149,
	153, 156, 157, 148, 173, -168, -249, 156, -219, 157,
	149, -165, -219, 145, 23, -168, -168, -225, 98, 173,
	-248, 66, 181, 270, 181, 52, -87, -72, 11, 115,
	-177, -67, -65, 88, -101, -271, -68, -188, 124, 241,
	166, 239, 232, 259, 246, 272, 237, 273, -185, -188,
	-101, -101, -101, -101, 353, -128, 97, -69, 94, -101,
	-101, -176, -270, -133, -133, -133, -133, -133, -271, -271,
	-134, -133, -134, -134, -271, -134, -134, -271, -134, -134,
	-134, -134, -271, -134, -134, -134, -144, 65, -145, -115,
	-117, -116, -270, -2, -139, -176, -143, -176, -94, -78,
	-77, 65, 66, -79, 65, -77, 55, 55, -143, -101,
	-93, -270, -270, -270, -128, -69, -94, 294, 298, 299,
	-229, -230, -233, -232, -176, -237, 157, -224, -224, 67,
	83, -101, 9, 45, 45, 74, 69, -203, -203, -202,
	-197, -203, 70, 124, -203, 69, 68, 69, 68, 69,
	68, -97, 374, 89, -87, -135, -135, 65, 69, 68,
	-189, 70, 70, 70, -87, -158, -101, -202, -87, 67,
	-214, 70, -171, -224, -162, 70, 70, -171, 70, -176,
	45, 70, -87, -176, -214, 70, -69, -176, -244, 356,
	-247, 70, -176, -176, -176, -94, -73, -271, -101, -271,
	-197, -197, -197, -207, -197, 226, -197, 226, -271, -271,
	19, 19, 19, 19, -270, -63, 317, -69, 68, 68,
	-128, 173, -134, -134, -134, -134, -134, 28, -144, 68,
	-271, -271, -271, 68, 128, -271, 68, -128, -69, 67,
	-69, -271, -93, -167, -140, -176, -140, -140, -137, 69,
	68, -197, -140, -105, -203, -202, 74, -202, 75, 75,
	374, 67, -2, -87, -262, -263, -264, 81, 355, 89,
	196, 197, 158, 198, 199, 200, -261, -189, -189, -189,
	-265, -157, -214, -130, 161, 162, -189, -180, -221, -219,
	70, -166, 145, 23, 145, -130, -214, 27, -243, -242,
	-177, 67, 66, -125, 13, -202, 70, -101, -101, -101,
	-101, -101, -271, 74, -101, -101, -271, 16, 45, -117,
	47, -2, -270, -176, -176, -176, -137, -140, -92, -184,
	68, -271, -271, -271, -235, -234, 66, 152, 81, -232,
	-136, 69, -203, -203, 69, 69, -233, -135, 19, -135,
	-264, 74, 200, 196, 200, 200, 200, 200, 201, -266,
	38, -256, 39, 69, -171, 70, -190, 67, -224, 70,
	-176, -171, -130, -270, 68, 98, -140, -87, -126, 14,
	16, -271, -271, -271, -271, -62, 108, 356, -271, -271,
	-113, 9, -115, -2, 128, 69, -93, -176, -234, 70,
	-225, 74, 159, 69, 187, -23, -2, -7, -8, -9,
	-10, -12, -37, -13, -14, -20, -21, -15, -43, -44,
	-53, -51, -52, -48, -47, -22, -17, -24, 92, 147,
	216, 36, 36, 192, 193, -199, 146, -255, 43, -267,
	-211, 42, 16, -171, -233, -180, -171, -239, -240, 173,
	-242, -230, 69, -127, -69, -175, -114, -71, -69, -175,
	-271, 354, 62, 357, -128, -145, -271, -176, 75, -87,
	-236, -235, 188, -135, -69, -69, -26, -23, -141, 67,
	75, -256, 16, -257, 40, 41, 74, 69, 67, -271,
	68, -176, -248, 68, 52, 355, 358, -271, 67, -131,
	190, 191, -27, -28, 93, 94, 426, -140, 38, 74,
	16, 16, -236, -233, -240, 47, -244, -71, 52, -140,
	-135, 70, 70, 97, 95, -28, -69, -25, -19, -2,
	-7, -8, -9, -10, -20, -21, -22, -18, 216, 97,
	-23, 69, 74, 74, 69, 175, 356, 69, -11, -18,
	-10, -7, -8, -9, 92, -25, 94, 426, -25, -236,
	176, 357, -251, -252, 65, -135, 426, -25, 97, 95,
	-29, -19, -30, 96, 426, -270, 358, -252, 65, -251,
	65, 10, 9, 97, 426, 147, -25, 97, 95, -30,
	-69, 97, -101, 172, -250, 160, 155, 158, 30, -250,
	92, 426, 147, -25, 94, -271, -271, 154, 29, 83,
	97, 426, -25, 147, 97, 426, 147,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 810, 0, 513,
	513, 513, 513, 513, 513, 0, -2, 377, 378, 379,
	0, 0, 0, 0, -2, 488, 489, 490, 492, 493,
	502, -2, 1286, 1286, 0, 0, 1286, 0, 0, 0,
	0, 46, 47, 862, 0, 505, 494, 495, 1284, 1,
	3, 819, 0, 0, 517, 520, 515, 0, 862, 862,
	0, 0, 79, 0, 0, 0, 0, 0, 860, 860,
	0, 860, 884, 0, 880, 881, 882, 0, 858, 0,
	858, 858, 858, 858, 858, 0, 434, 601, 891, 892,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	0, 0, 0, 1287, 0, 1287, 1287, 449, 0, 451,
	0, 0, 0, 1287, 0, 460, 0, 0, 467, 1287,
	329, 330, 331, 485, 486, 473, 487, 0, 0, 0,
	506, 507, 508, 509, 1286, 1286, 512, 163, 0, 183,
	897, 40, 0, 0, 0, 863, 491, 823, 0, 0,
	810, 42, 0, 513, 518, 519, 523, 521, 522, 514,
	0, 532, 541, 0, 610, 0, 615, 617, -2, -2,
	0, 652, 653, 654, 655, 656, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 681, 682, 683, 684, 685,
	789, 790, 791, 792, 793, 794, 795, 796, 619, 620,
	786, 843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 777, 0, 748, 748, 748, 748, 748,
	748, 748, 748, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 59, 601, 63, 0, 1231, 844,
	-2, -2, 0, 0, 786, 0, -2, 1063, -2, 80,
	0, 207, 208, 0, -2, 344, 889, 890, 1065, 887,
	888, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 0, 435, 1287, 1287, 438,
	1288, 1289, 860, 860, 1287, 1287, 1287, 0, 0, 0,
	447, 448, 0, 351, 352, 479, 479, 1287, 1287, 455,
	0, 476, 476, 474, 475, 470, 471, 0, 462, 0,
	482, 464, 465, 468, 496, -2, 499, 500, 501, -2,
	0, 510, 511, 0, 165, 0, 182, 0, 895, 898,
	41, 1285, 0, 1287, 0, 0, 0, 0, 35, 0,
	0, 820, 0, 811, 812, 816, 816, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 819, 40, 520, 0, 526,
	524, 525, 516, 0, 533, 0, 0, 0, 542, 0,
	544, 545, 546, 547, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 0, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 638, 639, 640, 641, 642, 643,
	616, 0, 630, 0, 0, 0, 672, 673, 674, 675,
	676, 677, 678, 0, 523, 40, 0, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	778, 0, 731, 740, 0, 732, 741, 733, 742, 734,
	0, 735, 743, 736, 744, 737, 738, 745, 739, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 523, 0, 0,
	0, 523, 0, 0, 523, 0, 0, 0, 0, 523,
	0, 0, 0, 61, 0, 600, 0, 550, 552, 553,
	554, -2, 0, 604, -2, 0, 0, 0, 53, 54,
	0, 0, 0, 0, 64, 1231, 66, 67, 0, 0,
	0, 305, 853, 854, 855, 0, 851, 366, 0, 216,
	293, 224, 225, 226, 286, 228, 286, 286, 0, 286,
	286, 286, 286, 286, 302, 302, 302, 302, 302, 269,
	270, 271, 272, 273, 0, 0, 246, 286, 286, 286,
	250, 276, 277, 278, 279, 280, 281, 282, 283, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 288, 288,
	290, 290, 290, 290, 290, 0, 33, 29, 30, 31,
	0, 885, 78, 0, 1287, 0, 1287, 0, 0, 205,
	136, 0, 0, 426, 859, 0, 428, 55, 429, 430,
	431, 432, 602, 893, 894, 436, 437, 0, 0, 441,
	442, 443, 444, 445, 446, 353, 452, 0, 0, 453,
	454, 459, 0, 565, 0, 0, 479, 461, 644, 463,
	0, 0, 503, 164, 167, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 166, 184,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 0, 814, 817, 818,
	815, 823, 43, 523, 0, 797, 0, 0, 0, 527,
	38, 611, 612, 614, 631, 0, 633, 635, 543, 534,
	0, 787, -2, 621, 622, 646, 647, 648, 0, 0,
	0, 0, 644, 626, 0, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 671, 762, 763,
	0, 669, 670, 679, 528, 649, 0, 842, 40, 0,
	530, 0, 718, 0, 0, 654, 789, 0, 654, 789,
	0, 0, 0, 0, 784, 781, 0, 0, 749, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 591, 0, 0,
	0, 0, 584, 0, 0, 558, 1165, 560, 0, 604,
	0, 0, 0, 585, 586, 587, 608, 0, 608, 58,
	608, 60, 0, 603, 845, 65, 0, 0, 70, 71,
	846, 847, 848, 849, 0, 787, 0, 206, 367, 369,
	372, 373, 374, 209, 211, 212, 213, 0, -2, 342,
	1175, 1212, -2, 336, 1101, -2, -2, 215, 295, 294,
	227, 0, 302, 302, 286, 286, 286, 286, 255, 302,
	258, 261, 262, 305, 0, 305, 305, 305, 305, 302,
	0, 0, 247, 248, 249, 238, 0, 239, 288, 241,
	0, 242, 243, 244, 245, 343, 0, 0, 0, 0,
	0, 0, 84, 861, 85, 0, 137, 138, 88, 0,
	424, 1287, 0, 1287, 1287, 608, 0, 0, 480, 481,
	476, 479, 0, 477, 478, 458, 469, 0, 483, 466,
	0, 0, 185, 61, 0, 896, 1286, -2, 411, 877,
	411, 411, 395, 322, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 0, 197, 404, 406, 405, 409, 0,
	0, 0, 821, 822, 813, 36, 0, 856, 857, 798,
	799, 548, 632, 634, 636, 0, 528, 623, 644, 627,
	0, 624, 0, 618, 0, 651, -2, 0, 716, 717,
	0, 0, 0, 0, 0, 755, 0, 0, 756, 0,
	727, 810, 0, 782, 0, 0, 730, 750, 0, 0,
	751, 752, 753, 754, 705, 0, 706, 0, 0, 0,
	0, 0, 712, 713, 714, 715, 0, 0, 539, 539,
	539, 0, 539, 539, 0, 539, 539, 539, 539, 0,
	539, 539, 539, 836, 0, 0, -2, 0, 0, 608,
	551, 579, 581, 0, 576, 589, 590, 592, 0, 594,
	0, 596, 597, 555, 557, 0, 0, 604, 564, 0,
	0, 0, 810, 0, 608, 51, 52, 0, 68, 69,
	0, 0, 75, 306, 307, 0, 0, 370, 0, 210,
	32, 0, 29, 324, 336, 332, 333, 336, 327, 337,
	328, 0, 217, 218, 219, 220, 221, 222, 297, 0,
	0, 0, 301, 0, 309, 311, 0, 223, 296, 0,
	305, 305, 302, 253, 254, 286, 259, 305, 263, 0,
	264, 265, 266, 267, 305, 0, 284, 0, 0, 240,
	0, 363, 0, 886, -2, 78, 0, 139, 140, 141,
	0, 89, 90, 0, 0, 0, 0, 0, 427, 56,
	439, 440, 450, 354, 355, 479, 457, 0, 645, 168,
	169, 302, 0, 380, 0, 1286, 336, 0, 396, 412,
	413, 414, 415, 416, 417, 0, 1286, 414, 0, 415,
	0, 0, 0, 878, 879, 0, 0, 0, 323, 0,
	200, 0, 0, 0, 0, 825, 37, 608, 0, 535,
	788, 0, 625, 0, 628, 686, 531, 0, 286, 286,
	767, 286, 290, 770, 286, 772, 286, 775, 0, 0,
	0, 0, 0, 0, 0, 779, 729, 785, 0, 0,
	0, 536, 810, 707, 708, 709, 710, 711, 539, 539,
	690, 540, 691, 692, 539, 694, 695, 539, 697, 698,
	699, 700, 539, 702, 703, 704, 44, 0, 836, 826,
	838, 840, 0, 40, 0, 832, 0, 571, 810, 573,
	580, 0, 0, 574, 0, 575, 593, 595, 0, -2,
	563, 0, 0, 0, 819, 609, 50, 72, 73, 74,
	368, 371, 0, 338, 286, 341, 0, 325, 326, 0,
	298, 299, 0, 308, 310, 312, 287, 251, 252, 305,
	260, 256, 303, 304, 268, 302, 0, 302, 0, 291,
	0, 350, 364, 0, 0, 82, 0, 0, 96, 0,
	92, 0, 0, 0, 425, 456, 566, 907, 598, 0,
	399, 0, 383, 885, 334, 376, 384, 385, 390, 391,
	0, 0, 387, 0, 399, 0, 398, 0, 403, 0,
	198, 199, 0, 0, 408, 800, 549, 687, 629, 719,
	764, 302, 768, 769, 771, 773, 774, 776, 721, 720,
	0, 0, 0, 0, 0, 0, 0, 783, 0, 0,
	0, 0, 688, 689, 693, 696, 701, 0, 45, 0,
	841, -2, 0, 0, 0, 62, 0, 819, 577, 0,
	582, 604, 561, 0, 0, 569, 0, 0, 49, 314,
	0, 816, 0, 300, 257, 305, 285, 305, 0, 0,
	365, 0, -2, 0, 78, 97, 98, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 91, 93, 94, 95,
	909, 903, 0, 1286, 400, 0, 216, 0, 336, 335,
	397, 0, 875, 876, 0, 1286, 399, 0, 201, 202,
	0, 0, 0, 806, 0, 765, 766, 0, 0, 0,
	0, 757, 728, 780, 0, 0, 537, 0, 0, 839,
	0, -2, 0, 834, 833, 572, 48, 0, 559, 604,
	0, 605, 606, 607, 313, 317, 0, 322, 0, 339,
	340, 0, 274, 275, 289, 292, 0, 83, 0, 0,
	99, 100, 101, 102, 104, 105, 0, 0, 0, 864,
	911, -2, 0, 1286, 382, 401, 214, 0, 885, 386,
	392, 393, 1286, 0, 0, 0, 0, 410, 39, 0,
	0, 722, 724, 723, 725, 0, 0, 0, 746, 747,
	810, 0, 829, 40, 0, 578, 562, 570, 318, 319,
	0, 321, 0, 315, 0, 78, -2, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 0, 0,
	0, 106, 107, 108, 109, 567, 0, 903, 0, 905,
	0, 902, 0, 381, 0, 0, 394, 0, 419, 0,
	203, 204, 197, 807, 808, 809, 801, 802, 804, 805,
	726, 0, 0, 0, 0, 837, -2, 835, 320, 0,
	81, 316, 142, 87, 0, 0, 0, 133, 34, 0,
	0, 910, 0, 908, 0, 0, 904, 315, 0, 418,
	0, 0, 200, 0, 758, 0, 761, 538, 0, 78,
	0, 0, 0, 153, 0, 0, 0, 0, 865, 912,
	0, 0, 388, 0, 420, 0, 407, 803, 759, 0,
	0, 143, 144, 0, 0, 154, 0, 0, 186, -2,
	189, 190, 191, 192, 193, 194, 195, 196, 0, 132,
	134, 568, 906, 900, 315, 0, 0, 345, 78, 145,
	146, 147, 148, 149, 151, 0, 0, 0, 0, 389,
	0, 0, 346, 347, 0, 86, 0, 0, 0, 0,
	0, 187, 160, 0, 0, 0, 760, 348, 0, 349,
	0, 0, 0, 0, 155, 156, 0, 0, 0, 161,
	0, 150, 0, 0, 356, 358, 359, 0, 0, 357,
	152, 0, 158, 0, 0, 421, 422, 360, 361, 362,
	0, 0, 0, 157, 0, 162, 159,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	67, 69, 115, 113, 68, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 426,
	99, 98, 100, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 89, 91, 92, 93, 94, 95,
	96, 97, 101, 102, 103, 104, 105, 106, 107, 108,
	111, 112, 117, 119, 122, 123, 124, 125, 126, 127,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:387
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:392
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:393
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:397
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:424
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:434
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:438
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:443
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:447
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 34:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:453
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:459
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 36:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:467
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:494
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:504
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:511
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:523
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.str = InsertStr
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:539
		{
			yyVAL.str = ReplaceStr
		}
	case 48:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:545
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:551
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 50:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:555
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:559
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 52:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:563
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:577
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:587
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:602
		{
			yyVAL.partitions = nil
		}
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:606
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:620
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:624
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:634
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:644
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:648
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:658
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.str = SessionStr
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.str = GlobalStr
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:681
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:695
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 81:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:700
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:704
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:708
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:712
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:720
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 86:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:728
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:732
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:737
		{
			yyVAL.procedureParams = nil
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:747
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:765
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:769
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:774
		{
			yyVAL.characteristics = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:794
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:798
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:810
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:814
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:822
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:863
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:878
		{
			yyVAL.str = ""
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.str = BeforeStr
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.str = AfterStr
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
			yyVAL.str = InsertStr
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:902
		{
			yyVAL.str = UpdateStr
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.str = DeleteStr
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:911
		{
			yyVAL.triggerOrder = nil
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:935
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:941
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:945
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:951
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:955
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:961
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:967
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 157:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:972
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:977
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 159:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:983
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 162:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1001
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1011
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1037
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1065
		{
			yyVAL.exprs = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.exprs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1102
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1117
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1156
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1177
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.columnType = ColumnType{}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1255
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1286
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.sqlVal = nil
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1563
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1567
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1575
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1585
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1593
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1602
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = ""
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.colKeyOpt = colKey
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1691
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1695
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1700
		{
			yyVAL.indexOptions = nil
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1724
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = ""
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = yyDollar[1].str
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1813
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1819
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1825
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1836
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 345:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1846
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 346:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1850
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 347:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1854
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 348:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1858
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 349:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1862
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1868
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1903
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1930
		{
			yyVAL.boolean = true
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.boolean = true
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.boolean = false
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = yyDollar[1].str
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1986
		{
			yyVAL.str = ""
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2005
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2012
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2027
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 386:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2031
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2035
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 388:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2040
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 389:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:2044
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2048
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 392:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 393:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2061
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 394:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2068
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2074
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2078
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnOrder = nil
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2108
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 403:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 407:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 410:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2184
		{
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
		}
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2197
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2213
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 422:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2217
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2233
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2241
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2249
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2261
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2269
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2277
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2285
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2323
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2327
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2392
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2397
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2407
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2411
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2419
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2433
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2438
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2446
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = "full "
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.showFilter = nil
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.showFilter = nil
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = SessionStr
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = GlobalStr
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.statement = &Begin{}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.statement = &Begin{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.statement = &Commit{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.statement = &Rollback{}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2604
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2618
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2622
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &OtherRead{}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2655
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			setAllowComments(yylex, true)
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.bytes2 = nil
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = UnionStr
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = UnionAllStr
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = UnionDistinctStr
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = SQLCacheStr
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.str = DistinctStr
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2724
		{
			yyVAL.str = ""
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = StraightJoinHint
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2733
		{
			yyVAL.selectExprs = nil
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2761
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2765
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2776
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2780
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.over = nil
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.over = yyDollar[1].over
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2825
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2839
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2874
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2889
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2893
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.expr = nil
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2916
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.columns = nil
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2925
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2958
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2962
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2966
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2978
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2982
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2988
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2993
		{
			yyVAL.empty = struct{}{}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = JoinStr
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3014
		{
			yyVAL.str = JoinStr
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.str = JoinStr
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = StraightJoinStr
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.str = LeftJoinStr
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = LeftJoinStr
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = RightJoinStr
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = RightJoinStr
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3048
		{
			yyVAL.str = NaturalJoinStr
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3062
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3068
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3093
		{
			yyVAL.indexHints = nil
		}
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3097
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3101
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3105
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = nil
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3114
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3132
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3150
		{
			yyVAL.str = ""
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3174
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3178
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3182
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3186
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3194
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3198
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3202
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.str = IsNullStr
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.str = IsNotNullStr
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.str = IsTrueStr
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = IsNotTrueStr
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.str = IsFalseStr
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3232
		{
			yyVAL.str = IsNotFalseStr
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.str = EqualStr
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3242
		{
			yyVAL.str = LessThanStr
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.str = GreaterThanStr
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.str = LessEqualStr
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.str = GreaterEqualStr
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.str = NotEqualStr
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3267
		{
			yyVAL.expr = nil
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3281
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3301
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3391
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3407
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3449
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3453
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3560
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 723:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 724:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 725:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 726:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3626
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3660
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 746:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3766
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = BooleanModeStr
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 760:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = QueryExpansionStr
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3820
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3854
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3859
		{
			yyVAL.expr = nil
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3868
		{
			yyVAL.str = string("")
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3872
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3893
		{
			yyVAL.expr = nil
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3897
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3911
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3945
		{
			yyVAL.expr = &NullVal{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.exprs = nil
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3993
		{
			yyVAL.expr = nil
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3997
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4012
		{
			yyVAL.orderBy = nil
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = AscScr
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = AscScr
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = DescScr
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4054
		{
			yyVAL.limit = nil
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4062
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4075
		{
			yyVAL.str = ForUpdateStr
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4079
		{
			yyVAL.str = ShareModeStr
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4092
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4105
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4109
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4113
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4128
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4132
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.setExprs = nil
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4141
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4167
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.bytes = []byte("charset")
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.expr = &Default{}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4236
		{
			yyVAL.byt = 0
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4238
		{
			yyVAL.byt = 1
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4241
		{
			yyVAL.byt = 0
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			yyVAL.byt = 1
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = ""
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = IgnoreStr
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			yyVAL.sqlVal = nil
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.empty = struct{}{}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.empty = struct{}{}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.empty = struct{}{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4279
		{
			yyVAL.empty = struct{}{}
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.empty = struct{}{}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.empty = struct{}{}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.empty = struct{}{}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = UniqueStr
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = FulltextStr
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = SpatialStr
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = string("")
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4351
		{
			yyVAL.EnclosedBy = nil
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4355
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: "'" + string(yyDollar[4].bytes) + "'"}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4360
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.Fields = nil
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4391
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].str, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].str}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.Lines = nil
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].str, TerminatedBy: yyDollar[3].str}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			decNesting(yylex)
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4824
		{
			skipToEnd(yylex)
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4829
		{
			skipToEnd(yylex)
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			skipToEnd(yylex)
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
